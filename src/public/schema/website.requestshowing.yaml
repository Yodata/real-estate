$id: http://realestate.yodata.me/schema/website.requestshowing.yaml
messageId: website#requestshowing
title: website#requestshowing
summary: a website visitor has requested a property showing
contentType: application/json
externalDocs: null
headers:
  type: object
  properties:
    time:
      type: string
      format: date-time
      description: date & time the event was produced
      x-faker: date.past
      x-parser-schema-id: <anonymous-schema-2>
    agent:
      type: string
      format: uri
      summary: >-
        the event provider who sent the event via a subscription authorized to
        your service.
      description: >
        if you are a multi-tenant app, then the agent is the user associated
        with the event data.

        any future events related to this message will be sent to the same
        agent/recipient
      examples:
        - https://teamsupermario.example.com/profile/card#me
        - https://bigbrandrealestate.example.com/profile/card#me
      x-parser-schema-id: <anonymous-schema-3>
    instrument:
      type: string
      format: uri
      description: the app or service that produced the event on behalf of the agent/user
      examples:
        - http://supercrm.example.com/profile/card#me
        - http://reliance.example.com/profile/card#me
        - http://moxiworks.example.com/profile/card#me
        - http://listing-manager.example.com/profile/card#me
        - http://ace.example.com/profile/card#me
        - http://roqlogic.example.com/profile/card#me
      x-parser-schema-id: <anonymous-schema-4>
    source:
      type: string
      format: uri
      description: a copy of the event was sent to the source(s).
      examples:
        - https://bigbrandrealestate.example.com/profile/card#me
      x-parser-schema-id: <anonymous-schema-5>
    originalRecipient:
      type: string
      format: uri
      summary: the original recipient of the event
      description: >
        the originalRecipient helps you determine the subscription that
        delivered the event to you.

        if the originalRecipient is the same as the agent, then the you are
        subscribed to the agent.

        if the originalRecipient is different from the agent, then you are
        subscribed to the event source
      examples:
        - http://bigbrandrealestate.example.com/profile/card#me
        - http://teamsupermario.example.com/profile/card#me
        - http://bob.example.com/profile/card#me
        - http://jane.example.com/profile/card#me
        - http://joe.example.com/profile/card#me
        - http://jill.example.com/profile/card#me
        - http://jim.example.com/profile/card#me
        - http://jennifer.example.com/profile/card#me
      x-parser-schema-id: <anonymous-schema-6>
    id:
      type: string
      format: uri
      summary: the event id - the cannonical identifier for the event
      description: >
        the Event ID (aka "Publish ID") is the immutable canonical identifier
        for the event.

        it is a URI that is unique to the event and will not change.

        all subscribers will receive the same id for the same event.
      examples:
        - http://supercrm.example.com/publish/12345
        - http://reliance.example.com/publish/23456
        - http://moxiworks.example.com/publish/34567
        - http://listing-manager.example.com/publish/45678
        - http://ace.example.com/publish/56789
        - http://roqlogic.example.com/publish/67890
      x-parser-schema-id: <anonymous-schema-7>
    '@id':
      type: string
      format: uri
      summary: the @id is the url in your inbox where you can retrieve the event
      examples:
        - http://reliance.example.com/inbox/23456
        - http://moxiworks.example.com/inbox/34567
        - http://listing-manager.example.com/inbox/45678
        - http://ace.example.com/inbox/56789
        - http://roqlogic.example.com/inbox/67890
      x-parser-schema-id: <anonymous-schema-8>
  x-parser-schema-id: <anonymous-schema-1>
payload:
  type: object
  properties:
    data:
      type: object
      properties:
        type:
          const: RequestShowingAction
          x-parser-schema-id: <anonymous-schema-571>
        agent:
          type: object
          description: a website user/visitor
          properties:
            type:
              type: string
              enum:
                - Person
                - Contact
              x-parser-schema-id: <anonymous-schema-530>
            name:
              type: string
              x-parser-schema-id: <anonymous-schema-531>
            givenName:
              type: string
              x-parser-schema-id: <anonymous-schema-532>
            familyName:
              type: string
              x-parser-schema-id: <anonymous-schema-533>
            email:
              type: string
              format: email
              x-parser-schema-id: <anonymous-schema-534>
            telephone:
              type: string
              x-parser-schema-id: <anonymous-schema-535>
            identifier:
              title: identifier
              type: object
              description: >-
                identifier assigned to a contact by the vendor who originally
                created the contact
              examples:
                - salesforceid: 0031U00002XW1QWQA1
                - vendoraid: '123456'
                - originating_system_id: '123456'
              x-parser-schema-id: <anonymous-schema-95>
            sameAs:
              title: sameAs
              type: string
              format: uri
              description: >-
                vendor specific identifier for the user can be shared with other
                vendors to identify the user
              examples:
                - amcecrmid: 1234567
                  salesForceId: parsing
                - salesForceId: ad4fa5f4as
              x-parser-schema-id: <anonymous-schema-536>
            contactPoint:
              $id: http://realestate.yodata.me/schema/ContactPoint.json
              title: ContactPoint
              description: >
                A point of contact for the entity. By convention in the real
                estate domain, ContactPoints

                are preferred over telephone, email, and faxNumber so the
                ContactPoint.name property can be used to label values

                for example, Work Telephone, Home, as named contactPoint values.
              type: object
              required:
                - type
                - name
              minProperties: 3
              properties:
                type:
                  type: string
                  const: ContactPoint
                  x-parser-schema-id: <anonymous-schema-432>
                name:
                  type: string
                  description: a label for the contactPoint, i.e. 'Work', or 'Home'
                  examples:
                    - Work
                    - Home
                    - Vacation
                    - Bob's Cell
                    - Alice's Work
                  x-parser-schema-id: <anonymous-schema-433>
                telephone:
                  type: string
                  x-faker: phone.phoneNumber
                  examples:
                    - 555-555-5555
                    - 555-555-5555 x123
                    - 555-555-5555 ext. 123
                    - +1-555-555-5555
                  x-parser-schema-id: <anonymous-schema-434>
                faxNumber:
                  type: string
                  x-faker: phone.phoneNumber
                  examples:
                    - 555-555-5555
                    - 555-555-5555 x123
                    - 555-555-5555 ext. 123
                    - +1-555-555-5555
                  x-parser-schema-id: <anonymous-schema-435>
                email:
                  description: an email address for the item.
                  type: string
                  format: email
                  x-faker: internet.email
                  examples:
                    - bob@example.com
                    - alice@example.com
                  x-parser-schema-id: <anonymous-schema-436>
                url:
                  description: primary URL for the item.
                  type: string
                  format: uri
                  example: https://www.facebook.com/hallandoates
                  x-parser-schema-id: <anonymous-schema-437>
            additionalProperties:
              type: object
              description: additional properties for the website user
              properties:
                workingWithAgent:
                  type: boolean
                  x-parser-schema-id: <anonymous-schema-538>
              x-parser-schema-id: <anonymous-schema-537>
          x-parser-schema-id: <anonymous-schema-529>
        about:
          type: object
          x-range: PropertyListing
          description: the PropertyListing
          example:
            type: PropertyListing
            originatingSystemName: GOTHAM-MLS
            originatingSystemKey: '12345'
            url: https://{company-website-url}/{path-to-listing}
            streetAddress: 1007 Mountain Gate Rd
            addressRegion: New Jersey
            addressLocality: Gotham City
            postalCode: '10010'
            addressCountry: USA
            listingPrice:
              type: PriceSpecification
              price: 7500000
              priceCurrency: USD
          x-parser-schema-id: <anonymous-schema-572>
        event:
          type: object
          title: Event
          description: An event happening at a certain time and location
          x-range: Event
          properties:
            type:
              type: string
              description: The item type (Linked-Data @type)
              example: Event
              x-parser-schema-id: <anonymous-schema-573>
            name:
              type: string
              description: name of the event
              example: Property Showing 1007 Mountain Gate Rd
              x-parser-schema-id: <anonymous-schema-574>
            description:
              type: string
              description: event message content
              example: an example meeting request for 4:00PM to 4:30PM.
              x-parser-schema-id: <anonymous-schema-575>
            about:
              type: object
              description: a subject of the meeting or event
              example:
                type: PropertyListing
                originatingSystemName: GOTHAM-MLS
                originatingSystemKey: '12345'
                url: https://{company-website-url}/{path-to-listing}
                streetAddress: 1007 Mountain Gate Rd
                addressRegion: New Jersey
                addressLocality: Gotham City
                postalCode: '10010'
                addressCountry: USA
                listingPrice:
                  type: PriceSpecification
                  price: 7500000
                  priceCurrency: USD
              x-parser-schema-id: <anonymous-schema-576>
            startDate:
              description: the start date-time (ISO 8601 formated)
              type: string
              format: date-time
              example: 2019-08-01T16:00Z
              x-parser-schema-id: <anonymous-schema-577>
            endDate:
              type: string
              description: the end date-time (ISO 8601 formated)
              format: date-time
              example: 2019-08-01T16:30Z
              x-parser-schema-id: <anonymous-schema-578>
            organizer:
              title: organizer
              description: the event organizer
              type: object
              example:
                type: RealEstateAgent
                name: Bruce Wayne
                id: https://batman.example.com/profile/card#me
              x-parser-schema-id: <anonymous-schema-579>
          x-parser-schema-id: Event
        object:
          type: object
          description: >-
            A specific question - e.g. from a user seeking answers online, or
            collected in a Frequently Asked Questions (FAQ) document.
          title: Question
          properties:
            type:
              const: Question
              x-parser-schema-id: <anonymous-schema-539>
            text:
              $id: http://realestate.yodata.me/schema/text.yaml
              title: text
              type: string
              examples:
                - Populus debet control notitia sua
                - Aspicio pinguem in his vestimentis?
                - Et id ipsum vitae.
                - Amici, Romani et cives, aures vestras mihi praebe
                - >-
                  Heus, ego iustus occurrit tibi et hoc est insanus, sed hic
                  numerus meus est, ut me vocas fortasse.
          x-parser-schema-id: Question
        recipient:
          type: object
          properties:
            type:
              type: string
              enum:
                - RealEstateAgent
                - RealEstateTeam
                - RealEstateOrganization
              x-parser-schema-id: <anonymous-schema-581>
            name:
              type: string
              x-parser-schema-id: <anonymous-schema-582>
            id:
              type: string
              format: uri
              example: https://agent.example.com/profile/card#me
              x-parser-schema-id: <anonymous-schema-583>
            identifier: true
          examples:
            - type: RealEstateAgent
              name: John Smith
              id: https://agentsmith.example.com/profile/card#me
              identifier:
                hsfid: '1234567890'
            - type: RealEstateTeam
              name: Smith & Smith
              id: https://smithandsmith.example.com/profile/card#me
            - type: RealEstateOrganization
              name: Smith & Smith Real Estate
              identifier:
                hsfid: sandsre
            - type: RealEstateOrganization
              name: Smith & Smith Real Estate
            - type: RealEstateOrganization
              id: https://smithandsmithrealestate.example.com/profile/card#me
          x-parser-schema-id: <anonymous-schema-580>
      x-parser-schema-id: <anonymous-schema-570>
    topic:
      const: realestate/website#requestshowing
      x-parser-schema-id: <anonymous-schema-569>
  x-parser-schema-id: <anonymous-schema-568>

