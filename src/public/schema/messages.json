{
  "award/create": {
    "_json": {
      "messageId": "award#create",
      "name": "realestate/award#create",
      "title": "award#create",
      "summary": "an award was created",
      "description": "An award was created. The award is described in the `object` property.\nThe award presentor is described in the `agent` property.\nThe award recipient is described in the `recipient` property.\n",
      "contentType": "application/json",
      "tags": [
        {
          "name": "action|create"
        },
        {
          "name": "topic|award"
        },
        {
          "name": "domain|realestate"
        }
      ],
      "payload": {
        "type": "object",
        "properties": {
          "topic": {
            "enum": [
              "realestate/award#create"
            ],
            "x-parser-schema-id": "<anonymous-schema-557>"
          },
          "data": {
            "x-range": [
              "CreateAction"
            ],
            "properties": {
              "agent": {
                "type": "object",
                "description": "the award presenter",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "RealEstateAgent",
                      "RealEstateOffice",
                      "RealEstateOrganization"
                    ],
                    "x-parser-schema-id": "<anonymous-schema-43>"
                  },
                  "id": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://user.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-44>"
                  },
                  "name": {
                    "type": "string",
                    "description": "the name of the award presenter",
                    "x-faker": "name.findName",
                    "x-parser-schema-id": "<anonymous-schema-45>"
                  }
                },
                "required": [
                  "type",
                  "id",
                  "name"
                ],
                "x-parser-schema-id": "<anonymous-schema-42>"
              },
              "identifier": {
                "title": "identifier",
                "type": "object",
                "description": "identifier assigned to a contact by the vendor who originally created the contact",
                "examples": [
                  {
                    "salesforceid": "0031U00002XW1QWQA1"
                  },
                  {
                    "vendoraid": "123456"
                  },
                  {
                    "originating_system_id": "123456"
                  }
                ],
                "example": {
                  "bhhsAwardId": "xxxx"
                }
              },
              "object": {
                "title": "Award",
                "type": "object",
                "description": "An honor bestowed on one or mote _recipients_ by the message _agent_",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Award"
                    ],
                    "description": "\"AwardAction\"",
                    "x-parser-schema-id": "<anonymous-schema-14>"
                  },
                  "name": {
                    "example": "Top 1%",
                    "description": "name of the award",
                    "type": "string",
                    "x-parser-schema-id": "<anonymous-schema-15>"
                  },
                  "dateAwarded": {
                    "type": "string",
                    "format": "date-time",
                    "description": "date the award was presented or announced.",
                    "x-range": "DateTime",
                    "example": "2019-11-25T04:23:32.000Z",
                    "x-parser-schema-id": "<anonymous-schema-16>"
                  },
                  "agent": {
                    "type": "string",
                    "format": "uri",
                    "description": "the agent that presented the award",
                    "x-parser-schema-id": "<anonymous-schema-17>"
                  },
                  "recipient": {
                    "type": "array",
                    "description": "recipients of the award",
                    "items": {
                      "type": "object",
                      "description": "the award recipient",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "RealEstateAgent",
                            "RealEstateOffice",
                            "RealEstateOrganization"
                          ],
                          "x-parser-schema-id": "<anonymous-schema-20>"
                        },
                        "id": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://user.example.com/profile/card#me",
                          "x-parser-schema-id": "<anonymous-schema-21>"
                        },
                        "name": {
                          "type": "string",
                          "description": "the name of the award recipient",
                          "x-faker": "name.findName",
                          "x-parser-schema-id": "<anonymous-schema-22>"
                        }
                      },
                      "required": [
                        "type",
                        "id",
                        "name"
                      ],
                      "x-parser-schema-id": "<anonymous-schema-19>"
                    },
                    "x-parser-schema-id": "<anonymous-schema-18>"
                  },
                  "identifier": {
                    "example": {
                      "hsfAwardId": "xxxx"
                    },
                    "title": "identifier",
                    "type": "object",
                    "description": "identifier assigned to a contact by the vendor who originally created the contact",
                    "examples": [
                      {
                        "salesforceid": "0031U00002XW1QWQA1"
                      },
                      {
                        "vendoraid": "123456"
                      },
                      {
                        "originating_system_id": "123456"
                      }
                    ],
                    "x-parser-schema-id": "<anonymous-schema-23>"
                  }
                },
                "x-parser-schema-id": "Award"
              },
              "recipient": {
                "type": "object",
                "description": "the award recipient",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "RealEstateAgent",
                      "RealEstateOffice",
                      "RealEstateOrganization"
                    ],
                    "x-parser-schema-id": "<anonymous-schema-20>"
                  },
                  "id": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://user.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-21>"
                  },
                  "name": {
                    "type": "string",
                    "description": "the name of the award recipient",
                    "x-faker": "name.findName",
                    "x-parser-schema-id": "<anonymous-schema-22>"
                  }
                },
                "required": [
                  "type",
                  "id",
                  "name"
                ],
                "x-parser-schema-id": "<anonymous-schema-19>"
              },
              "type": {
                "enum": [
                  "CreateAction"
                ]
              }
            },
            "x-parser-schema-id": "<anonymous-schema-558>"
          }
        },
        "x-parser-schema-id": "<anonymous-schema-556>"
      },
      "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
      "x-parser-original-payload": {
        "type": "object",
        "properties": {
          "topic": {
            "enum": [
              "realestate/award#create"
            ]
          },
          "data": {
            "x-range": [
              "CreateAction"
            ],
            "properties": {
              "type": {
                "enum": [
                  "CreateAction"
                ]
              },
              "identifier": {
                "title": "identifier",
                "type": "object",
                "description": "identifier assigned to a contact by the vendor who originally created the contact",
                "examples": [
                  {
                    "salesforceid": "0031U00002XW1QWQA1"
                  },
                  {
                    "vendoraid": "123456"
                  },
                  {
                    "originating_system_id": "123456"
                  }
                ],
                "example": {
                  "bhhsAwardId": "xxxx"
                }
              },
              "agent": {
                "type": "object",
                "description": "the award presenter",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "RealEstateAgent",
                      "RealEstateOffice",
                      "RealEstateOrganization"
                    ]
                  },
                  "id": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://user.example.com/profile/card#me"
                  },
                  "name": {
                    "type": "string",
                    "description": "the name of the award presenter",
                    "x-faker": "name.findName"
                  }
                },
                "required": [
                  "type",
                  "id",
                  "name"
                ]
              },
              "object": {
                "title": "Award",
                "type": "object",
                "description": "An honor bestowed on one or mote _recipients_ by the message _agent_",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Award"
                    ],
                    "description": "\"AwardAction\""
                  },
                  "name": {
                    "example": "Top 1%",
                    "description": "name of the award",
                    "type": "string"
                  },
                  "dateAwarded": {
                    "type": "string",
                    "format": "date-time",
                    "description": "date the award was presented or announced.",
                    "x-range": "DateTime",
                    "example": "2019-11-25T04:23:32.000Z"
                  },
                  "agent": {
                    "type": "string",
                    "format": "uri",
                    "description": "the agent that presented the award"
                  },
                  "recipient": {
                    "type": "array",
                    "description": "recipients of the award",
                    "items": {
                      "type": "object",
                      "description": "the award recipient",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "RealEstateAgent",
                            "RealEstateOffice",
                            "RealEstateOrganization"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://user.example.com/profile/card#me"
                        },
                        "name": {
                          "type": "string",
                          "description": "the name of the award recipient",
                          "x-faker": "name.findName"
                        }
                      },
                      "required": [
                        "type",
                        "id",
                        "name"
                      ]
                    }
                  },
                  "identifier": {
                    "example": {
                      "hsfAwardId": "xxxx"
                    },
                    "title": "identifier",
                    "type": "object",
                    "description": "identifier assigned to a contact by the vendor who originally created the contact",
                    "examples": [
                      {
                        "salesforceid": "0031U00002XW1QWQA1"
                      },
                      {
                        "vendoraid": "123456"
                      },
                      {
                        "originating_system_id": "123456"
                      }
                    ]
                  }
                }
              },
              "recipient": {
                "type": "object",
                "description": "the award recipient",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "RealEstateAgent",
                      "RealEstateOffice",
                      "RealEstateOrganization"
                    ]
                  },
                  "id": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://user.example.com/profile/card#me"
                  },
                  "name": {
                    "type": "string",
                    "description": "the name of the award recipient",
                    "x-faker": "name.findName"
                  }
                },
                "required": [
                  "type",
                  "id",
                  "name"
                ]
              }
            }
          }
        }
      },
      "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
      "x-parser-message-parsed": true
    }
  },
  "award/delete": {
    "_json": {
      "messageId": "award#delete",
      "name": "realestate/award#delete",
      "title": "award#delete",
      "summary": "award deleted",
      "contentType": "application/json",
      "tags": [
        {
          "name": "action|delete"
        },
        {
          "name": "topic|award"
        },
        {
          "name": "domain|realestate"
        }
      ],
      "headers": {
        "type": "object",
        "properties": {
          "time": {
            "type": "string",
            "format": "date-time",
            "description": "date & time the event was produced",
            "x-faker": "date.past",
            "x-parser-schema-id": "<anonymous-schema-31>"
          },
          "agent": {
            "type": "string",
            "format": "uri",
            "summary": "the event provider who sent the event via a subscription authorized to your service.",
            "description": "if you are a multi-tenant app, then the agent is the user associated with the event data.\nany future events related to this message will be sent to the same agent/recipient\n",
            "examples": [
              "https://teamsupermario.example.com/profile/card#me",
              "https://bigbrandrealestate.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-32>"
          },
          "instrument": {
            "type": "string",
            "format": "uri",
            "description": "the app or service that produced the event on behalf of the agent/user",
            "examples": [
              "http://supercrm.example.com/profile/card#me",
              "http://reliance.example.com/profile/card#me",
              "http://moxiworks.example.com/profile/card#me",
              "http://listing-manager.example.com/profile/card#me",
              "http://ace.example.com/profile/card#me",
              "http://roqlogic.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-33>"
          },
          "source": {
            "type": "string",
            "format": "uri",
            "description": "a copy of the event was sent to the source(s).",
            "examples": [
              "https://bigbrandrealestate.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-34>"
          },
          "originalRecipient": {
            "type": "string",
            "format": "uri",
            "summary": "the original recipient of the event",
            "description": "the originalRecipient helps you determine the subscription that delivered the event to you.\nif the originalRecipient is the same as the agent, then the you are subscribed to the agent.\nif the originalRecipient is different from the agent, then you are subscribed to the event source\n",
            "example": [
              "http://bigbrandrealestate.example.com/profile/card#me",
              "http://teamsupermario.example.com/profile/card#me",
              "http://bob.example.com/profile/card#me",
              "http://jane.example.com/profile/card#me",
              "http://joe.example.com/profile/card#me",
              "http://jill.example.com/profile/card#me",
              "http://jim.example.com/profile/card#me",
              "http://jennifer.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-35>"
          },
          "id": {
            "type": "string",
            "format": "uri",
            "summary": "the event id - the cannonical identifier for the event",
            "description": "the Event ID (aka \"Publish ID\") is the immutable canonical identifier for the event.\nit is a URI that is unique to the event and will not change.\nall subscribers will receive the same id for the same event.\n",
            "examples": [
              "http://supercrm.example.com/publish/12345",
              "http://reliance.example.com/publish/23456",
              "http://moxiworks.example.com/publish/34567",
              "http://listing-manager.example.com/publish/45678",
              "http://ace.example.com/publish/56789",
              "http://roqlogic.example.com/publish/67890"
            ],
            "x-parser-schema-id": "<anonymous-schema-36>"
          },
          "@id": {
            "type": "string",
            "format": "uri",
            "summary": "the @id is the url in your inbox where you can retrieve the event",
            "examples": [
              "http://reliance.example.com/inbox/23456",
              "http://moxiworks.example.com/inbox/34567",
              "http://listing-manager.example.com/inbox/45678",
              "http://ace.example.com/inbox/56789",
              "http://roqlogic.example.com/inbox/67890"
            ],
            "x-parser-schema-id": "<anonymous-schema-37>"
          }
        },
        "x-parser-schema-id": "<anonymous-schema-30>"
      },
      "payload": {
        "type": "object",
        "properties": {
          "topic": {
            "type": "string",
            "const": "realestate/award#delete",
            "x-parser-schema-id": "<anonymous-schema-39>"
          },
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "const": "DeleteAction",
                "x-parser-schema-id": "<anonymous-schema-41>"
              },
              "agent": {
                "type": "object",
                "description": "the award presenter",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "RealEstateAgent",
                      "RealEstateOffice",
                      "RealEstateOrganization"
                    ],
                    "x-parser-schema-id": "<anonymous-schema-43>"
                  },
                  "id": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://user.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-44>"
                  },
                  "name": {
                    "type": "string",
                    "description": "the name of the award presenter",
                    "x-faker": "name.findName",
                    "x-parser-schema-id": "<anonymous-schema-45>"
                  }
                },
                "required": [
                  "type",
                  "id",
                  "name"
                ],
                "x-parser-schema-id": "<anonymous-schema-42>"
              },
              "identifier": {
                "title": "identifier",
                "type": "object",
                "description": "identifier assigned to a contact by the vendor who originally created the contact",
                "examples": [
                  {
                    "salesforceid": "0031U00002XW1QWQA1"
                  },
                  {
                    "vendoraid": "123456"
                  },
                  {
                    "originating_system_id": "123456"
                  }
                ],
                "example": {
                  "bhhsAwardId": "xxxx"
                },
                "x-parser-schema-id": "<anonymous-schema-46>"
              }
            },
            "x-parser-schema-id": "<anonymous-schema-40>"
          }
        },
        "x-parser-schema-id": "<anonymous-schema-38>"
      },
      "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
      "x-parser-original-payload": {
        "type": "object",
        "properties": {
          "topic": {
            "type": "string",
            "const": "realestate/award#delete"
          },
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "const": "DeleteAction"
              },
              "agent": {
                "type": "object",
                "description": "the award presenter",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "RealEstateAgent",
                      "RealEstateOffice",
                      "RealEstateOrganization"
                    ]
                  },
                  "id": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://user.example.com/profile/card#me"
                  },
                  "name": {
                    "type": "string",
                    "description": "the name of the award presenter",
                    "x-faker": "name.findName"
                  }
                },
                "required": [
                  "type",
                  "id",
                  "name"
                ]
              },
              "identifier": {
                "title": "identifier",
                "type": "object",
                "description": "identifier assigned to a contact by the vendor who originally created the contact",
                "examples": [
                  {
                    "salesforceid": "0031U00002XW1QWQA1"
                  },
                  {
                    "vendoraid": "123456"
                  },
                  {
                    "originating_system_id": "123456"
                  }
                ],
                "example": {
                  "bhhsAwardId": "xxxx"
                }
              }
            }
          }
        }
      },
      "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
      "x-parser-message-parsed": true
    }
  },
  "award/seriescreate": {
    "_json": {
      "messageId": "award#seriescreate",
      "name": "realestate/award#seriescreate",
      "summary": "a new award series was created",
      "headers": {
        "type": "object",
        "properties": {
          "time": {
            "type": "string",
            "format": "date-time",
            "description": "date & time the event was produced",
            "x-faker": "date.past",
            "x-parser-schema-id": "<anonymous-schema-31>"
          },
          "agent": {
            "type": "string",
            "format": "uri",
            "summary": "the event provider who sent the event via a subscription authorized to your service.",
            "description": "if you are a multi-tenant app, then the agent is the user associated with the event data.\nany future events related to this message will be sent to the same agent/recipient\n",
            "examples": [
              "https://teamsupermario.example.com/profile/card#me",
              "https://bigbrandrealestate.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-32>"
          },
          "instrument": {
            "type": "string",
            "format": "uri",
            "description": "the app or service that produced the event on behalf of the agent/user",
            "examples": [
              "http://supercrm.example.com/profile/card#me",
              "http://reliance.example.com/profile/card#me",
              "http://moxiworks.example.com/profile/card#me",
              "http://listing-manager.example.com/profile/card#me",
              "http://ace.example.com/profile/card#me",
              "http://roqlogic.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-33>"
          },
          "source": {
            "type": "string",
            "format": "uri",
            "description": "a copy of the event was sent to the source(s).",
            "examples": [
              "https://bigbrandrealestate.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-34>"
          },
          "originalRecipient": {
            "type": "string",
            "format": "uri",
            "summary": "the original recipient of the event",
            "description": "the originalRecipient helps you determine the subscription that delivered the event to you.\nif the originalRecipient is the same as the agent, then the you are subscribed to the agent.\nif the originalRecipient is different from the agent, then you are subscribed to the event source\n",
            "example": [
              "http://bigbrandrealestate.example.com/profile/card#me",
              "http://teamsupermario.example.com/profile/card#me",
              "http://bob.example.com/profile/card#me",
              "http://jane.example.com/profile/card#me",
              "http://joe.example.com/profile/card#me",
              "http://jill.example.com/profile/card#me",
              "http://jim.example.com/profile/card#me",
              "http://jennifer.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-35>"
          },
          "id": {
            "type": "string",
            "format": "uri",
            "summary": "the event id - the cannonical identifier for the event",
            "description": "the Event ID (aka \"Publish ID\") is the immutable canonical identifier for the event.\nit is a URI that is unique to the event and will not change.\nall subscribers will receive the same id for the same event.\n",
            "examples": [
              "http://supercrm.example.com/publish/12345",
              "http://reliance.example.com/publish/23456",
              "http://moxiworks.example.com/publish/34567",
              "http://listing-manager.example.com/publish/45678",
              "http://ace.example.com/publish/56789",
              "http://roqlogic.example.com/publish/67890"
            ],
            "x-parser-schema-id": "<anonymous-schema-36>"
          },
          "@id": {
            "type": "string",
            "format": "uri",
            "summary": "the @id is the url in your inbox where you can retrieve the event",
            "examples": [
              "http://reliance.example.com/inbox/23456",
              "http://moxiworks.example.com/inbox/34567",
              "http://listing-manager.example.com/inbox/45678",
              "http://ace.example.com/inbox/56789",
              "http://roqlogic.example.com/inbox/67890"
            ],
            "x-parser-schema-id": "<anonymous-schema-37>"
          }
        },
        "x-parser-schema-id": "<anonymous-schema-30>"
      },
      "payload": {
        "type": "object",
        "properties": {
          "topic": {
            "type": "string",
            "const": "realestate/award#seriescreate",
            "x-parser-schema-id": "<anonymous-schema-48>"
          },
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "const": "CreateAction",
                "x-parser-schema-id": "<anonymous-schema-50>"
              },
              "object": {
                "title": "AwardSeries",
                "type": "object",
                "x-range": [
                  "AwardSeries"
                ],
                "description": "an award bestowed at regular intervals",
                "properties": {
                  "type": {
                    "const": "AwardSeries",
                    "x-parser-schema-id": "<anonymous-schema-6>"
                  },
                  "name": {
                    "example": "Top 1% Club",
                    "description": "name of the series",
                    "type": "string",
                    "x-parser-schema-id": "<anonymous-schema-7>"
                  },
                  "description": {
                    "example": "Annual",
                    "type": "string",
                    "description": "description of the item.",
                    "x-parser-schema-id": "<anonymous-schema-8>"
                  },
                  "duration": {
                    "title": "duration",
                    "type": "string",
                    "format": "duration",
                    "description": "The duration of the item in ISO 8601 date format.",
                    "example": "R/P1Y",
                    "x-parser-schema-id": "<anonymous-schema-9>"
                  },
                  "startDate": {
                    "description": "the start date-time (ISO 8601 formated)",
                    "type": "string",
                    "format": "date-time",
                    "x-parser-schema-id": "<anonymous-schema-10>"
                  },
                  "endDate": {
                    "type": "string",
                    "description": "the end date-time (ISO 8601 formated)",
                    "format": "date-time",
                    "x-parser-schema-id": "<anonymous-schema-11>"
                  },
                  "id": {
                    "type": "string",
                    "format": "uri",
                    "x-parser-schema-id": "<anonymous-schema-12>"
                  },
                  "identifier": {
                    "example": {
                      "hsfAwardSeriesID": "xxxx"
                    },
                    "title": "identifier",
                    "type": "object",
                    "description": "identifier assigned to a contact by the vendor who originally created the contact",
                    "examples": [
                      {
                        "salesforceid": "0031U00002XW1QWQA1"
                      },
                      {
                        "vendoraid": "123456"
                      },
                      {
                        "originating_system_id": "123456"
                      }
                    ],
                    "x-parser-schema-id": "<anonymous-schema-13>"
                  }
                },
                "x-parser-schema-id": "AwardSeries"
              }
            },
            "x-parser-schema-id": "<anonymous-schema-49>"
          }
        },
        "x-parser-schema-id": "<anonymous-schema-47>"
      },
      "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
      "x-parser-original-payload": {
        "type": "object",
        "properties": {
          "topic": {
            "type": "string",
            "const": "realestate/award#seriescreate"
          },
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "const": "CreateAction"
              },
              "object": {
                "title": "AwardSeries",
                "type": "object",
                "x-range": [
                  "AwardSeries"
                ],
                "description": "an award bestowed at regular intervals",
                "properties": {
                  "type": {
                    "const": "AwardSeries"
                  },
                  "name": {
                    "example": "Top 1% Club",
                    "description": "name of the series",
                    "type": "string"
                  },
                  "description": {
                    "example": "Annual",
                    "type": "string",
                    "description": "description of the item."
                  },
                  "duration": {
                    "title": "duration",
                    "type": "string",
                    "format": "duration",
                    "description": "The duration of the item in ISO 8601 date format.",
                    "example": "R/P1Y"
                  },
                  "startDate": {
                    "description": "the start date-time (ISO 8601 formated)",
                    "type": "string",
                    "format": "date-time"
                  },
                  "endDate": {
                    "type": "string",
                    "description": "the end date-time (ISO 8601 formated)",
                    "format": "date-time"
                  },
                  "id": {
                    "type": "string",
                    "format": "uri"
                  },
                  "identifier": {
                    "example": {
                      "hsfAwardSeriesID": "xxxx"
                    },
                    "title": "identifier",
                    "type": "object",
                    "description": "identifier assigned to a contact by the vendor who originally created the contact",
                    "examples": [
                      {
                        "salesforceid": "0031U00002XW1QWQA1"
                      },
                      {
                        "vendoraid": "123456"
                      },
                      {
                        "originating_system_id": "123456"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
      "x-parser-message-parsed": true
    }
  },
  "award/seriesdelete": {
    "_json": {
      "messageId": "award#seriesdelete",
      "name": "realestate/award#seriesdelete",
      "summary": "an award series was deleted",
      "headers": {
        "type": "object",
        "properties": {
          "time": {
            "type": "string",
            "format": "date-time",
            "description": "date & time the event was produced",
            "x-faker": "date.past",
            "x-parser-schema-id": "<anonymous-schema-31>"
          },
          "agent": {
            "type": "string",
            "format": "uri",
            "summary": "the event provider who sent the event via a subscription authorized to your service.",
            "description": "if you are a multi-tenant app, then the agent is the user associated with the event data.\nany future events related to this message will be sent to the same agent/recipient\n",
            "examples": [
              "https://teamsupermario.example.com/profile/card#me",
              "https://bigbrandrealestate.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-32>"
          },
          "instrument": {
            "type": "string",
            "format": "uri",
            "description": "the app or service that produced the event on behalf of the agent/user",
            "examples": [
              "http://supercrm.example.com/profile/card#me",
              "http://reliance.example.com/profile/card#me",
              "http://moxiworks.example.com/profile/card#me",
              "http://listing-manager.example.com/profile/card#me",
              "http://ace.example.com/profile/card#me",
              "http://roqlogic.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-33>"
          },
          "source": {
            "type": "string",
            "format": "uri",
            "description": "a copy of the event was sent to the source(s).",
            "examples": [
              "https://bigbrandrealestate.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-34>"
          },
          "originalRecipient": {
            "type": "string",
            "format": "uri",
            "summary": "the original recipient of the event",
            "description": "the originalRecipient helps you determine the subscription that delivered the event to you.\nif the originalRecipient is the same as the agent, then the you are subscribed to the agent.\nif the originalRecipient is different from the agent, then you are subscribed to the event source\n",
            "example": [
              "http://bigbrandrealestate.example.com/profile/card#me",
              "http://teamsupermario.example.com/profile/card#me",
              "http://bob.example.com/profile/card#me",
              "http://jane.example.com/profile/card#me",
              "http://joe.example.com/profile/card#me",
              "http://jill.example.com/profile/card#me",
              "http://jim.example.com/profile/card#me",
              "http://jennifer.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-35>"
          },
          "id": {
            "type": "string",
            "format": "uri",
            "summary": "the event id - the cannonical identifier for the event",
            "description": "the Event ID (aka \"Publish ID\") is the immutable canonical identifier for the event.\nit is a URI that is unique to the event and will not change.\nall subscribers will receive the same id for the same event.\n",
            "examples": [
              "http://supercrm.example.com/publish/12345",
              "http://reliance.example.com/publish/23456",
              "http://moxiworks.example.com/publish/34567",
              "http://listing-manager.example.com/publish/45678",
              "http://ace.example.com/publish/56789",
              "http://roqlogic.example.com/publish/67890"
            ],
            "x-parser-schema-id": "<anonymous-schema-36>"
          },
          "@id": {
            "type": "string",
            "format": "uri",
            "summary": "the @id is the url in your inbox where you can retrieve the event",
            "examples": [
              "http://reliance.example.com/inbox/23456",
              "http://moxiworks.example.com/inbox/34567",
              "http://listing-manager.example.com/inbox/45678",
              "http://ace.example.com/inbox/56789",
              "http://roqlogic.example.com/inbox/67890"
            ],
            "x-parser-schema-id": "<anonymous-schema-37>"
          }
        },
        "x-parser-schema-id": "<anonymous-schema-30>"
      },
      "payload": {
        "type": "object",
        "properties": {
          "topic": {
            "type": "string",
            "const": "realestate/award#seriesdelete",
            "x-parser-schema-id": "<anonymous-schema-52>"
          },
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "const": "DeleteAction",
                "x-parser-schema-id": "<anonymous-schema-54>"
              },
              "object": {
                "title": "AwardSeries",
                "type": "object",
                "x-range": [
                  "AwardSeries"
                ],
                "description": "an award bestowed at regular intervals",
                "properties": {
                  "type": {
                    "const": "AwardSeries",
                    "x-parser-schema-id": "<anonymous-schema-6>"
                  },
                  "name": {
                    "example": "Top 1% Club",
                    "description": "name of the series",
                    "type": "string",
                    "x-parser-schema-id": "<anonymous-schema-7>"
                  },
                  "description": {
                    "example": "Annual",
                    "type": "string",
                    "description": "description of the item.",
                    "x-parser-schema-id": "<anonymous-schema-8>"
                  },
                  "duration": {
                    "title": "duration",
                    "type": "string",
                    "format": "duration",
                    "description": "The duration of the item in ISO 8601 date format.",
                    "example": "R/P1Y",
                    "x-parser-schema-id": "<anonymous-schema-9>"
                  },
                  "startDate": {
                    "description": "the start date-time (ISO 8601 formated)",
                    "type": "string",
                    "format": "date-time",
                    "x-parser-schema-id": "<anonymous-schema-10>"
                  },
                  "endDate": {
                    "type": "string",
                    "description": "the end date-time (ISO 8601 formated)",
                    "format": "date-time",
                    "x-parser-schema-id": "<anonymous-schema-11>"
                  },
                  "id": {
                    "type": "string",
                    "format": "uri",
                    "x-parser-schema-id": "<anonymous-schema-12>"
                  },
                  "identifier": {
                    "example": {
                      "hsfAwardSeriesID": "xxxx"
                    },
                    "title": "identifier",
                    "type": "object",
                    "description": "identifier assigned to a contact by the vendor who originally created the contact",
                    "examples": [
                      {
                        "salesforceid": "0031U00002XW1QWQA1"
                      },
                      {
                        "vendoraid": "123456"
                      },
                      {
                        "originating_system_id": "123456"
                      }
                    ],
                    "x-parser-schema-id": "<anonymous-schema-13>"
                  }
                },
                "x-parser-schema-id": "AwardSeries"
              }
            },
            "x-parser-schema-id": "<anonymous-schema-53>"
          }
        },
        "x-parser-schema-id": "<anonymous-schema-51>"
      },
      "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
      "x-parser-original-payload": {
        "type": "object",
        "properties": {
          "topic": {
            "type": "string",
            "const": "realestate/award#seriesdelete"
          },
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "const": "DeleteAction"
              },
              "object": {
                "title": "AwardSeries",
                "type": "object",
                "x-range": [
                  "AwardSeries"
                ],
                "description": "an award bestowed at regular intervals",
                "properties": {
                  "type": {
                    "const": "AwardSeries"
                  },
                  "name": {
                    "example": "Top 1% Club",
                    "description": "name of the series",
                    "type": "string"
                  },
                  "description": {
                    "example": "Annual",
                    "type": "string",
                    "description": "description of the item."
                  },
                  "duration": {
                    "title": "duration",
                    "type": "string",
                    "format": "duration",
                    "description": "The duration of the item in ISO 8601 date format.",
                    "example": "R/P1Y"
                  },
                  "startDate": {
                    "description": "the start date-time (ISO 8601 formated)",
                    "type": "string",
                    "format": "date-time"
                  },
                  "endDate": {
                    "type": "string",
                    "description": "the end date-time (ISO 8601 formated)",
                    "format": "date-time"
                  },
                  "id": {
                    "type": "string",
                    "format": "uri"
                  },
                  "identifier": {
                    "example": {
                      "hsfAwardSeriesID": "xxxx"
                    },
                    "title": "identifier",
                    "type": "object",
                    "description": "identifier assigned to a contact by the vendor who originally created the contact",
                    "examples": [
                      {
                        "salesforceid": "0031U00002XW1QWQA1"
                      },
                      {
                        "vendoraid": "123456"
                      },
                      {
                        "originating_system_id": "123456"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
      "x-parser-message-parsed": true
    }
  },
  "award/seriesupdate": {
    "_json": {
      "messageId": "award#seriesupdate",
      "name": "realestate/award#seriesupdate",
      "title": "award#seriesupdate",
      "summary": "an award series was updated",
      "contentType": "application/json",
      "tags": [
        {
          "name": "action|update"
        },
        {
          "name": "topic|award"
        },
        {
          "name": "domain|realestate"
        }
      ],
      "headers": {
        "type": "object",
        "properties": {
          "time": {
            "type": "string",
            "format": "date-time",
            "description": "date & time the event was produced",
            "x-faker": "date.past",
            "x-parser-schema-id": "<anonymous-schema-31>"
          },
          "agent": {
            "type": "string",
            "format": "uri",
            "summary": "the event provider who sent the event via a subscription authorized to your service.",
            "description": "if you are a multi-tenant app, then the agent is the user associated with the event data.\nany future events related to this message will be sent to the same agent/recipient\n",
            "examples": [
              "https://teamsupermario.example.com/profile/card#me",
              "https://bigbrandrealestate.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-32>"
          },
          "instrument": {
            "type": "string",
            "format": "uri",
            "description": "the app or service that produced the event on behalf of the agent/user",
            "examples": [
              "http://supercrm.example.com/profile/card#me",
              "http://reliance.example.com/profile/card#me",
              "http://moxiworks.example.com/profile/card#me",
              "http://listing-manager.example.com/profile/card#me",
              "http://ace.example.com/profile/card#me",
              "http://roqlogic.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-33>"
          },
          "source": {
            "type": "string",
            "format": "uri",
            "description": "a copy of the event was sent to the source(s).",
            "examples": [
              "https://bigbrandrealestate.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-34>"
          },
          "originalRecipient": {
            "type": "string",
            "format": "uri",
            "summary": "the original recipient of the event",
            "description": "the originalRecipient helps you determine the subscription that delivered the event to you.\nif the originalRecipient is the same as the agent, then the you are subscribed to the agent.\nif the originalRecipient is different from the agent, then you are subscribed to the event source\n",
            "example": [
              "http://bigbrandrealestate.example.com/profile/card#me",
              "http://teamsupermario.example.com/profile/card#me",
              "http://bob.example.com/profile/card#me",
              "http://jane.example.com/profile/card#me",
              "http://joe.example.com/profile/card#me",
              "http://jill.example.com/profile/card#me",
              "http://jim.example.com/profile/card#me",
              "http://jennifer.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-35>"
          },
          "id": {
            "type": "string",
            "format": "uri",
            "summary": "the event id - the cannonical identifier for the event",
            "description": "the Event ID (aka \"Publish ID\") is the immutable canonical identifier for the event.\nit is a URI that is unique to the event and will not change.\nall subscribers will receive the same id for the same event.\n",
            "examples": [
              "http://supercrm.example.com/publish/12345",
              "http://reliance.example.com/publish/23456",
              "http://moxiworks.example.com/publish/34567",
              "http://listing-manager.example.com/publish/45678",
              "http://ace.example.com/publish/56789",
              "http://roqlogic.example.com/publish/67890"
            ],
            "x-parser-schema-id": "<anonymous-schema-36>"
          },
          "@id": {
            "type": "string",
            "format": "uri",
            "summary": "the @id is the url in your inbox where you can retrieve the event",
            "examples": [
              "http://reliance.example.com/inbox/23456",
              "http://moxiworks.example.com/inbox/34567",
              "http://listing-manager.example.com/inbox/45678",
              "http://ace.example.com/inbox/56789",
              "http://roqlogic.example.com/inbox/67890"
            ],
            "x-parser-schema-id": "<anonymous-schema-37>"
          }
        },
        "x-parser-schema-id": "<anonymous-schema-30>"
      },
      "payload": {
        "type": "object",
        "properties": {
          "topic": {
            "type": "string",
            "const": "realestate/award#seriesupdate",
            "x-parser-schema-id": "<anonymous-schema-56>"
          },
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "const": "UpdateAction",
                "x-parser-schema-id": "<anonymous-schema-58>"
              },
              "object": {
                "title": "AwardSeries",
                "type": "object",
                "x-range": [
                  "AwardSeries"
                ],
                "description": "an award bestowed at regular intervals",
                "properties": {
                  "type": {
                    "const": "AwardSeries",
                    "x-parser-schema-id": "<anonymous-schema-6>"
                  },
                  "name": {
                    "example": "Top 1% Club",
                    "description": "name of the series",
                    "type": "string",
                    "x-parser-schema-id": "<anonymous-schema-7>"
                  },
                  "description": {
                    "example": "Annual",
                    "type": "string",
                    "description": "description of the item.",
                    "x-parser-schema-id": "<anonymous-schema-8>"
                  },
                  "duration": {
                    "title": "duration",
                    "type": "string",
                    "format": "duration",
                    "description": "The duration of the item in ISO 8601 date format.",
                    "example": "R/P1Y",
                    "x-parser-schema-id": "<anonymous-schema-9>"
                  },
                  "startDate": {
                    "description": "the start date-time (ISO 8601 formated)",
                    "type": "string",
                    "format": "date-time",
                    "x-parser-schema-id": "<anonymous-schema-10>"
                  },
                  "endDate": {
                    "type": "string",
                    "description": "the end date-time (ISO 8601 formated)",
                    "format": "date-time",
                    "x-parser-schema-id": "<anonymous-schema-11>"
                  },
                  "id": {
                    "type": "string",
                    "format": "uri",
                    "x-parser-schema-id": "<anonymous-schema-12>"
                  },
                  "identifier": {
                    "example": {
                      "hsfAwardSeriesID": "xxxx"
                    },
                    "title": "identifier",
                    "type": "object",
                    "description": "identifier assigned to a contact by the vendor who originally created the contact",
                    "examples": [
                      {
                        "salesforceid": "0031U00002XW1QWQA1"
                      },
                      {
                        "vendoraid": "123456"
                      },
                      {
                        "originating_system_id": "123456"
                      }
                    ],
                    "x-parser-schema-id": "<anonymous-schema-13>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-59>"
              }
            },
            "x-parser-schema-id": "<anonymous-schema-57>"
          }
        },
        "x-parser-schema-id": "<anonymous-schema-55>"
      },
      "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
      "x-parser-original-payload": {
        "type": "object",
        "properties": {
          "topic": {
            "type": "string",
            "const": "realestate/award#seriesupdate"
          },
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "const": "UpdateAction"
              },
              "object": {
                "title": "AwardSeries",
                "type": "object",
                "x-range": [
                  "AwardSeries"
                ],
                "description": "an award bestowed at regular intervals",
                "properties": {
                  "type": {
                    "const": "AwardSeries"
                  },
                  "name": {
                    "example": "Top 1% Club",
                    "description": "name of the series",
                    "type": "string"
                  },
                  "description": {
                    "example": "Annual",
                    "type": "string",
                    "description": "description of the item."
                  },
                  "duration": {
                    "title": "duration",
                    "type": "string",
                    "format": "duration",
                    "description": "The duration of the item in ISO 8601 date format.",
                    "example": "R/P1Y"
                  },
                  "startDate": {
                    "description": "the start date-time (ISO 8601 formated)",
                    "type": "string",
                    "format": "date-time"
                  },
                  "endDate": {
                    "type": "string",
                    "description": "the end date-time (ISO 8601 formated)",
                    "format": "date-time"
                  },
                  "id": {
                    "type": "string",
                    "format": "uri"
                  },
                  "identifier": {
                    "example": {
                      "hsfAwardSeriesID": "xxxx"
                    },
                    "title": "identifier",
                    "type": "object",
                    "description": "identifier assigned to a contact by the vendor who originally created the contact",
                    "examples": [
                      {
                        "salesforceid": "0031U00002XW1QWQA1"
                      },
                      {
                        "vendoraid": "123456"
                      },
                      {
                        "originating_system_id": "123456"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
      "x-parser-message-parsed": true
    }
  },
  "award/teamcreate": {
    "_json": {
      "messageId": "award#teamcreate",
      "name": "realestate/award#teamcreate",
      "title": "award#teamcreate",
      "summary": "an award team was created",
      "contentType": "application/json",
      "tags": [
        {
          "name": "action|create"
        },
        {
          "name": "topic|award"
        },
        {
          "name": "domain|realestate"
        }
      ],
      "headers": {
        "type": "object",
        "properties": {
          "time": {
            "type": "string",
            "format": "date-time",
            "description": "date & time the event was produced",
            "x-faker": "date.past",
            "x-parser-schema-id": "<anonymous-schema-31>"
          },
          "agent": {
            "type": "string",
            "format": "uri",
            "summary": "the event provider who sent the event via a subscription authorized to your service.",
            "description": "if you are a multi-tenant app, then the agent is the user associated with the event data.\nany future events related to this message will be sent to the same agent/recipient\n",
            "examples": [
              "https://teamsupermario.example.com/profile/card#me",
              "https://bigbrandrealestate.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-32>"
          },
          "instrument": {
            "type": "string",
            "format": "uri",
            "description": "the app or service that produced the event on behalf of the agent/user",
            "examples": [
              "http://supercrm.example.com/profile/card#me",
              "http://reliance.example.com/profile/card#me",
              "http://moxiworks.example.com/profile/card#me",
              "http://listing-manager.example.com/profile/card#me",
              "http://ace.example.com/profile/card#me",
              "http://roqlogic.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-33>"
          },
          "source": {
            "type": "string",
            "format": "uri",
            "description": "a copy of the event was sent to the source(s).",
            "examples": [
              "https://bigbrandrealestate.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-34>"
          },
          "originalRecipient": {
            "type": "string",
            "format": "uri",
            "summary": "the original recipient of the event",
            "description": "the originalRecipient helps you determine the subscription that delivered the event to you.\nif the originalRecipient is the same as the agent, then the you are subscribed to the agent.\nif the originalRecipient is different from the agent, then you are subscribed to the event source\n",
            "example": [
              "http://bigbrandrealestate.example.com/profile/card#me",
              "http://teamsupermario.example.com/profile/card#me",
              "http://bob.example.com/profile/card#me",
              "http://jane.example.com/profile/card#me",
              "http://joe.example.com/profile/card#me",
              "http://jill.example.com/profile/card#me",
              "http://jim.example.com/profile/card#me",
              "http://jennifer.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-35>"
          },
          "id": {
            "type": "string",
            "format": "uri",
            "summary": "the event id - the cannonical identifier for the event",
            "description": "the Event ID (aka \"Publish ID\") is the immutable canonical identifier for the event.\nit is a URI that is unique to the event and will not change.\nall subscribers will receive the same id for the same event.\n",
            "examples": [
              "http://supercrm.example.com/publish/12345",
              "http://reliance.example.com/publish/23456",
              "http://moxiworks.example.com/publish/34567",
              "http://listing-manager.example.com/publish/45678",
              "http://ace.example.com/publish/56789",
              "http://roqlogic.example.com/publish/67890"
            ],
            "x-parser-schema-id": "<anonymous-schema-36>"
          },
          "@id": {
            "type": "string",
            "format": "uri",
            "summary": "the @id is the url in your inbox where you can retrieve the event",
            "examples": [
              "http://reliance.example.com/inbox/23456",
              "http://moxiworks.example.com/inbox/34567",
              "http://listing-manager.example.com/inbox/45678",
              "http://ace.example.com/inbox/56789",
              "http://roqlogic.example.com/inbox/67890"
            ],
            "x-parser-schema-id": "<anonymous-schema-37>"
          }
        },
        "x-parser-schema-id": "<anonymous-schema-30>"
      },
      "payload": {
        "type": "object",
        "properties": {
          "topic": {
            "type": "string",
            "const": "realestate/award#teamcreate",
            "x-parser-schema-id": "<anonymous-schema-61>"
          },
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "const": "CreateAction",
                "x-parser-schema-id": "<anonymous-schema-63>"
              },
              "object": {
                "title": "AwardTeam",
                "type": "object",
                "x-range": "AwardTeam",
                "description": "a Collection",
                "required": [
                  "type",
                  "identifier"
                ],
                "properties": {
                  "type": {
                    "const": "AwardTeam",
                    "x-parser-schema-id": "<anonymous-schema-24>"
                  },
                  "name": {
                    "example": "Top Producer by Volume",
                    "type": "string",
                    "description": "the name of the item",
                    "x-parser-schema-id": "<anonymous-schema-25>"
                  },
                  "identifier": {
                    "example": {
                      "hsfTeamId": "xxxxx"
                    },
                    "title": "identifier",
                    "type": "object",
                    "description": "identifier assigned to a contact by the vendor who originally created the contact",
                    "examples": [
                      {
                        "salesforceid": "0031U00002XW1QWQA1"
                      },
                      {
                        "vendoraid": "123456"
                      },
                      {
                        "originating_system_id": "123456"
                      }
                    ],
                    "x-parser-schema-id": "<anonymous-schema-26>"
                  },
                  "member": {
                    "description": "members of the AwardTeam",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uri",
                      "examples": [
                        "http://12345.example.com/profile/card#me",
                        "http://ma302-001.example.com/profile/card#me",
                        "http://ma302.example.com/profile/card#me"
                      ],
                      "x-parser-schema-id": "<anonymous-schema-28>"
                    },
                    "x-parser-schema-id": "<anonymous-schema-27>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-64>"
              }
            },
            "x-parser-schema-id": "<anonymous-schema-62>"
          }
        },
        "x-parser-schema-id": "<anonymous-schema-60>"
      },
      "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
      "x-parser-original-payload": {
        "type": "object",
        "properties": {
          "topic": {
            "type": "string",
            "const": "realestate/award#teamcreate"
          },
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "const": "CreateAction"
              },
              "object": {
                "title": "AwardTeam",
                "type": "object",
                "x-range": "AwardTeam",
                "description": "a Collection",
                "required": [
                  "type",
                  "identifier"
                ],
                "properties": {
                  "type": {
                    "const": "AwardTeam"
                  },
                  "name": {
                    "example": "Top Producer by Volume",
                    "type": "string",
                    "description": "the name of the item"
                  },
                  "identifier": {
                    "example": {
                      "hsfTeamId": "xxxxx"
                    },
                    "title": "identifier",
                    "type": "object",
                    "description": "identifier assigned to a contact by the vendor who originally created the contact",
                    "examples": [
                      {
                        "salesforceid": "0031U00002XW1QWQA1"
                      },
                      {
                        "vendoraid": "123456"
                      },
                      {
                        "originating_system_id": "123456"
                      }
                    ]
                  },
                  "member": {
                    "description": "members of the AwardTeam",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uri",
                      "examples": [
                        "http://12345.example.com/profile/card#me",
                        "http://ma302-001.example.com/profile/card#me",
                        "http://ma302.example.com/profile/card#me"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
      "x-parser-message-parsed": true
    }
  },
  "award/teammemberadd": {
    "_json": {
      "messageId": "award#teammemberadd",
      "name": "realestate/award#teammemberadd",
      "title": "award#teammemberadd",
      "summary": "a new team member (data.object) was added to an award team (data.targetCollection)",
      "contentType": "application/json",
      "tags": [
        {
          "name": "action|add"
        },
        {
          "name": "topic|award"
        },
        {
          "name": "domain|realestate"
        }
      ],
      "headers": {
        "type": "object",
        "properties": {
          "time": {
            "type": "string",
            "format": "date-time",
            "description": "date & time the event was produced",
            "x-faker": "date.past",
            "x-parser-schema-id": "<anonymous-schema-31>"
          },
          "agent": {
            "type": "string",
            "format": "uri",
            "summary": "the event provider who sent the event via a subscription authorized to your service.",
            "description": "if you are a multi-tenant app, then the agent is the user associated with the event data.\nany future events related to this message will be sent to the same agent/recipient\n",
            "examples": [
              "https://teamsupermario.example.com/profile/card#me",
              "https://bigbrandrealestate.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-32>"
          },
          "instrument": {
            "type": "string",
            "format": "uri",
            "description": "the app or service that produced the event on behalf of the agent/user",
            "examples": [
              "http://supercrm.example.com/profile/card#me",
              "http://reliance.example.com/profile/card#me",
              "http://moxiworks.example.com/profile/card#me",
              "http://listing-manager.example.com/profile/card#me",
              "http://ace.example.com/profile/card#me",
              "http://roqlogic.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-33>"
          },
          "source": {
            "type": "string",
            "format": "uri",
            "description": "a copy of the event was sent to the source(s).",
            "examples": [
              "https://bigbrandrealestate.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-34>"
          },
          "originalRecipient": {
            "type": "string",
            "format": "uri",
            "summary": "the original recipient of the event",
            "description": "the originalRecipient helps you determine the subscription that delivered the event to you.\nif the originalRecipient is the same as the agent, then the you are subscribed to the agent.\nif the originalRecipient is different from the agent, then you are subscribed to the event source\n",
            "example": [
              "http://bigbrandrealestate.example.com/profile/card#me",
              "http://teamsupermario.example.com/profile/card#me",
              "http://bob.example.com/profile/card#me",
              "http://jane.example.com/profile/card#me",
              "http://joe.example.com/profile/card#me",
              "http://jill.example.com/profile/card#me",
              "http://jim.example.com/profile/card#me",
              "http://jennifer.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-35>"
          },
          "id": {
            "type": "string",
            "format": "uri",
            "summary": "the event id - the cannonical identifier for the event",
            "description": "the Event ID (aka \"Publish ID\") is the immutable canonical identifier for the event.\nit is a URI that is unique to the event and will not change.\nall subscribers will receive the same id for the same event.\n",
            "examples": [
              "http://supercrm.example.com/publish/12345",
              "http://reliance.example.com/publish/23456",
              "http://moxiworks.example.com/publish/34567",
              "http://listing-manager.example.com/publish/45678",
              "http://ace.example.com/publish/56789",
              "http://roqlogic.example.com/publish/67890"
            ],
            "x-parser-schema-id": "<anonymous-schema-36>"
          },
          "@id": {
            "type": "string",
            "format": "uri",
            "summary": "the @id is the url in your inbox where you can retrieve the event",
            "examples": [
              "http://reliance.example.com/inbox/23456",
              "http://moxiworks.example.com/inbox/34567",
              "http://listing-manager.example.com/inbox/45678",
              "http://ace.example.com/inbox/56789",
              "http://roqlogic.example.com/inbox/67890"
            ],
            "x-parser-schema-id": "<anonymous-schema-37>"
          }
        },
        "x-parser-schema-id": "<anonymous-schema-30>"
      },
      "payload": {
        "type": "object",
        "properties": {
          "topic": {
            "type": "string",
            "const": "realestate/award#teammemberadd",
            "x-parser-schema-id": "<anonymous-schema-66>"
          },
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "const": "AddAction",
                "x-parser-schema-id": "<anonymous-schema-68>"
              },
              "object": {
                "description": "the profile uri of the team member being added",
                "type": "string",
                "format": "uri",
                "x-parser-schema-id": "<anonymous-schema-69>"
              },
              "targetCollection": {
                "title": "AwardTeam",
                "type": "object",
                "x-range": "AwardTeam",
                "description": "a Collection",
                "required": [
                  "type",
                  "identifier"
                ],
                "properties": {
                  "type": {
                    "const": "AwardTeam",
                    "x-parser-schema-id": "<anonymous-schema-24>"
                  },
                  "name": {
                    "example": "Top Producer by Volume",
                    "type": "string",
                    "description": "the name of the item",
                    "x-parser-schema-id": "<anonymous-schema-25>"
                  },
                  "identifier": {
                    "example": {
                      "hsfTeamId": "xxxxx"
                    },
                    "title": "identifier",
                    "type": "object",
                    "description": "identifier assigned to a contact by the vendor who originally created the contact",
                    "examples": [
                      {
                        "salesforceid": "0031U00002XW1QWQA1"
                      },
                      {
                        "vendoraid": "123456"
                      },
                      {
                        "originating_system_id": "123456"
                      }
                    ],
                    "x-parser-schema-id": "<anonymous-schema-26>"
                  },
                  "member": {
                    "description": "members of the AwardTeam",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uri",
                      "examples": [
                        "http://12345.example.com/profile/card#me",
                        "http://ma302-001.example.com/profile/card#me",
                        "http://ma302.example.com/profile/card#me"
                      ],
                      "x-parser-schema-id": "<anonymous-schema-28>"
                    },
                    "x-parser-schema-id": "<anonymous-schema-27>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-70>"
              }
            },
            "x-parser-schema-id": "<anonymous-schema-67>"
          }
        },
        "x-parser-schema-id": "<anonymous-schema-65>"
      },
      "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
      "x-parser-original-payload": {
        "type": "object",
        "properties": {
          "topic": {
            "type": "string",
            "const": "realestate/award#teammemberadd"
          },
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "const": "AddAction"
              },
              "object": {
                "description": "the profile uri of the team member being added",
                "type": "string",
                "format": "uri"
              },
              "targetCollection": {
                "title": "AwardTeam",
                "type": "object",
                "x-range": "AwardTeam",
                "description": "a Collection",
                "required": [
                  "type",
                  "identifier"
                ],
                "properties": {
                  "type": {
                    "const": "AwardTeam"
                  },
                  "name": {
                    "example": "Top Producer by Volume",
                    "type": "string",
                    "description": "the name of the item"
                  },
                  "identifier": {
                    "example": {
                      "hsfTeamId": "xxxxx"
                    },
                    "title": "identifier",
                    "type": "object",
                    "description": "identifier assigned to a contact by the vendor who originally created the contact",
                    "examples": [
                      {
                        "salesforceid": "0031U00002XW1QWQA1"
                      },
                      {
                        "vendoraid": "123456"
                      },
                      {
                        "originating_system_id": "123456"
                      }
                    ]
                  },
                  "member": {
                    "description": "members of the AwardTeam",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uri",
                      "examples": [
                        "http://12345.example.com/profile/card#me",
                        "http://ma302-001.example.com/profile/card#me",
                        "http://ma302.example.com/profile/card#me"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
      "x-parser-message-parsed": true
    }
  },
  "award/teammemberremove": {
    "_json": {
      "messageId": "award#teammemberremove",
      "name": "realestate/award#teammemberremove",
      "title": "award#teammemberremove",
      "summary": "an award team member was removed",
      "contentType": "application/json",
      "tags": [
        {
          "name": "action|add"
        },
        {
          "name": "topic|award"
        },
        {
          "name": "domain|realestate"
        }
      ],
      "headers": {
        "type": "object",
        "properties": {
          "time": {
            "type": "string",
            "format": "date-time",
            "description": "date & time the event was produced",
            "x-faker": "date.past",
            "x-parser-schema-id": "<anonymous-schema-31>"
          },
          "agent": {
            "type": "string",
            "format": "uri",
            "summary": "the event provider who sent the event via a subscription authorized to your service.",
            "description": "if you are a multi-tenant app, then the agent is the user associated with the event data.\nany future events related to this message will be sent to the same agent/recipient\n",
            "examples": [
              "https://teamsupermario.example.com/profile/card#me",
              "https://bigbrandrealestate.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-32>"
          },
          "instrument": {
            "type": "string",
            "format": "uri",
            "description": "the app or service that produced the event on behalf of the agent/user",
            "examples": [
              "http://supercrm.example.com/profile/card#me",
              "http://reliance.example.com/profile/card#me",
              "http://moxiworks.example.com/profile/card#me",
              "http://listing-manager.example.com/profile/card#me",
              "http://ace.example.com/profile/card#me",
              "http://roqlogic.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-33>"
          },
          "source": {
            "type": "string",
            "format": "uri",
            "description": "a copy of the event was sent to the source(s).",
            "examples": [
              "https://bigbrandrealestate.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-34>"
          },
          "originalRecipient": {
            "type": "string",
            "format": "uri",
            "summary": "the original recipient of the event",
            "description": "the originalRecipient helps you determine the subscription that delivered the event to you.\nif the originalRecipient is the same as the agent, then the you are subscribed to the agent.\nif the originalRecipient is different from the agent, then you are subscribed to the event source\n",
            "example": [
              "http://bigbrandrealestate.example.com/profile/card#me",
              "http://teamsupermario.example.com/profile/card#me",
              "http://bob.example.com/profile/card#me",
              "http://jane.example.com/profile/card#me",
              "http://joe.example.com/profile/card#me",
              "http://jill.example.com/profile/card#me",
              "http://jim.example.com/profile/card#me",
              "http://jennifer.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-35>"
          },
          "id": {
            "type": "string",
            "format": "uri",
            "summary": "the event id - the cannonical identifier for the event",
            "description": "the Event ID (aka \"Publish ID\") is the immutable canonical identifier for the event.\nit is a URI that is unique to the event and will not change.\nall subscribers will receive the same id for the same event.\n",
            "examples": [
              "http://supercrm.example.com/publish/12345",
              "http://reliance.example.com/publish/23456",
              "http://moxiworks.example.com/publish/34567",
              "http://listing-manager.example.com/publish/45678",
              "http://ace.example.com/publish/56789",
              "http://roqlogic.example.com/publish/67890"
            ],
            "x-parser-schema-id": "<anonymous-schema-36>"
          },
          "@id": {
            "type": "string",
            "format": "uri",
            "summary": "the @id is the url in your inbox where you can retrieve the event",
            "examples": [
              "http://reliance.example.com/inbox/23456",
              "http://moxiworks.example.com/inbox/34567",
              "http://listing-manager.example.com/inbox/45678",
              "http://ace.example.com/inbox/56789",
              "http://roqlogic.example.com/inbox/67890"
            ],
            "x-parser-schema-id": "<anonymous-schema-37>"
          }
        },
        "x-parser-schema-id": "<anonymous-schema-30>"
      },
      "payload": {
        "type": "object",
        "properties": {
          "topic": {
            "type": "string",
            "const": "realestate/award#teammemberremove",
            "x-parser-schema-id": "<anonymous-schema-72>"
          },
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "const": "AddAction",
                "x-parser-schema-id": "<anonymous-schema-74>"
              },
              "object": {
                "description": "the profile uri of the team member being added",
                "type": "string",
                "format": "uri",
                "x-parser-schema-id": "<anonymous-schema-75>"
              },
              "targetCollection": {
                "title": "AwardTeam",
                "type": "object",
                "x-range": "AwardTeam",
                "description": "a Collection",
                "required": [
                  "type",
                  "identifier"
                ],
                "properties": {
                  "type": {
                    "const": "AwardTeam",
                    "x-parser-schema-id": "<anonymous-schema-24>"
                  },
                  "name": {
                    "example": "Top Producer by Volume",
                    "type": "string",
                    "description": "the name of the item",
                    "x-parser-schema-id": "<anonymous-schema-25>"
                  },
                  "identifier": {
                    "example": {
                      "hsfTeamId": "xxxxx"
                    },
                    "title": "identifier",
                    "type": "object",
                    "description": "identifier assigned to a contact by the vendor who originally created the contact",
                    "examples": [
                      {
                        "salesforceid": "0031U00002XW1QWQA1"
                      },
                      {
                        "vendoraid": "123456"
                      },
                      {
                        "originating_system_id": "123456"
                      }
                    ],
                    "x-parser-schema-id": "<anonymous-schema-26>"
                  },
                  "member": {
                    "description": "members of the AwardTeam",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uri",
                      "examples": [
                        "http://12345.example.com/profile/card#me",
                        "http://ma302-001.example.com/profile/card#me",
                        "http://ma302.example.com/profile/card#me"
                      ],
                      "x-parser-schema-id": "<anonymous-schema-28>"
                    },
                    "x-parser-schema-id": "<anonymous-schema-27>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-76>"
              }
            },
            "x-parser-schema-id": "<anonymous-schema-73>"
          }
        },
        "x-parser-schema-id": "<anonymous-schema-71>"
      },
      "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
      "x-parser-original-payload": {
        "type": "object",
        "properties": {
          "topic": {
            "type": "string",
            "const": "realestate/award#teammemberremove"
          },
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "const": "AddAction"
              },
              "object": {
                "description": "the profile uri of the team member being added",
                "type": "string",
                "format": "uri"
              },
              "targetCollection": {
                "title": "AwardTeam",
                "type": "object",
                "x-range": "AwardTeam",
                "description": "a Collection",
                "required": [
                  "type",
                  "identifier"
                ],
                "properties": {
                  "type": {
                    "const": "AwardTeam"
                  },
                  "name": {
                    "example": "Top Producer by Volume",
                    "type": "string",
                    "description": "the name of the item"
                  },
                  "identifier": {
                    "example": {
                      "hsfTeamId": "xxxxx"
                    },
                    "title": "identifier",
                    "type": "object",
                    "description": "identifier assigned to a contact by the vendor who originally created the contact",
                    "examples": [
                      {
                        "salesforceid": "0031U00002XW1QWQA1"
                      },
                      {
                        "vendoraid": "123456"
                      },
                      {
                        "originating_system_id": "123456"
                      }
                    ]
                  },
                  "member": {
                    "description": "members of the AwardTeam",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uri",
                      "examples": [
                        "http://12345.example.com/profile/card#me",
                        "http://ma302-001.example.com/profile/card#me",
                        "http://ma302.example.com/profile/card#me"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
      "x-parser-message-parsed": true
    }
  },
  "award/teamupdate": {
    "_json": {
      "messageId": "award#teamupdate",
      "name": "realestate/award#teamupdate",
      "title": "award#teamupdate",
      "summary": "an award team was updated",
      "contentType": "application/json",
      "tags": [
        {
          "name": "action|update"
        },
        {
          "name": "topic|award"
        },
        {
          "name": "domain|realestate"
        }
      ],
      "headers": {
        "type": "object",
        "properties": {
          "time": {
            "type": "string",
            "format": "date-time",
            "description": "date & time the event was produced",
            "x-faker": "date.past",
            "x-parser-schema-id": "<anonymous-schema-31>"
          },
          "agent": {
            "type": "string",
            "format": "uri",
            "summary": "the event provider who sent the event via a subscription authorized to your service.",
            "description": "if you are a multi-tenant app, then the agent is the user associated with the event data.\nany future events related to this message will be sent to the same agent/recipient\n",
            "examples": [
              "https://teamsupermario.example.com/profile/card#me",
              "https://bigbrandrealestate.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-32>"
          },
          "instrument": {
            "type": "string",
            "format": "uri",
            "description": "the app or service that produced the event on behalf of the agent/user",
            "examples": [
              "http://supercrm.example.com/profile/card#me",
              "http://reliance.example.com/profile/card#me",
              "http://moxiworks.example.com/profile/card#me",
              "http://listing-manager.example.com/profile/card#me",
              "http://ace.example.com/profile/card#me",
              "http://roqlogic.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-33>"
          },
          "source": {
            "type": "string",
            "format": "uri",
            "description": "a copy of the event was sent to the source(s).",
            "examples": [
              "https://bigbrandrealestate.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-34>"
          },
          "originalRecipient": {
            "type": "string",
            "format": "uri",
            "summary": "the original recipient of the event",
            "description": "the originalRecipient helps you determine the subscription that delivered the event to you.\nif the originalRecipient is the same as the agent, then the you are subscribed to the agent.\nif the originalRecipient is different from the agent, then you are subscribed to the event source\n",
            "example": [
              "http://bigbrandrealestate.example.com/profile/card#me",
              "http://teamsupermario.example.com/profile/card#me",
              "http://bob.example.com/profile/card#me",
              "http://jane.example.com/profile/card#me",
              "http://joe.example.com/profile/card#me",
              "http://jill.example.com/profile/card#me",
              "http://jim.example.com/profile/card#me",
              "http://jennifer.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-35>"
          },
          "id": {
            "type": "string",
            "format": "uri",
            "summary": "the event id - the cannonical identifier for the event",
            "description": "the Event ID (aka \"Publish ID\") is the immutable canonical identifier for the event.\nit is a URI that is unique to the event and will not change.\nall subscribers will receive the same id for the same event.\n",
            "examples": [
              "http://supercrm.example.com/publish/12345",
              "http://reliance.example.com/publish/23456",
              "http://moxiworks.example.com/publish/34567",
              "http://listing-manager.example.com/publish/45678",
              "http://ace.example.com/publish/56789",
              "http://roqlogic.example.com/publish/67890"
            ],
            "x-parser-schema-id": "<anonymous-schema-36>"
          },
          "@id": {
            "type": "string",
            "format": "uri",
            "summary": "the @id is the url in your inbox where you can retrieve the event",
            "examples": [
              "http://reliance.example.com/inbox/23456",
              "http://moxiworks.example.com/inbox/34567",
              "http://listing-manager.example.com/inbox/45678",
              "http://ace.example.com/inbox/56789",
              "http://roqlogic.example.com/inbox/67890"
            ],
            "x-parser-schema-id": "<anonymous-schema-37>"
          }
        },
        "x-parser-schema-id": "<anonymous-schema-30>"
      },
      "payload": {
        "type": "object",
        "properties": {
          "topic": {
            "type": "string",
            "const": "realestate/award#teamupdate",
            "x-parser-schema-id": "<anonymous-schema-78>"
          },
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "const": "UpdateAction",
                "x-parser-schema-id": "<anonymous-schema-80>"
              },
              "object": {
                "title": "AwardTeam",
                "type": "object",
                "x-range": "AwardTeam",
                "description": "a Collection",
                "required": [
                  "type",
                  "identifier"
                ],
                "properties": {
                  "type": {
                    "const": "AwardTeam",
                    "x-parser-schema-id": "<anonymous-schema-24>"
                  },
                  "name": {
                    "example": "Top Producer by Volume",
                    "type": "string",
                    "description": "the name of the item",
                    "x-parser-schema-id": "<anonymous-schema-25>"
                  },
                  "identifier": {
                    "example": {
                      "hsfTeamId": "xxxxx"
                    },
                    "title": "identifier",
                    "type": "object",
                    "description": "identifier assigned to a contact by the vendor who originally created the contact",
                    "examples": [
                      {
                        "salesforceid": "0031U00002XW1QWQA1"
                      },
                      {
                        "vendoraid": "123456"
                      },
                      {
                        "originating_system_id": "123456"
                      }
                    ],
                    "x-parser-schema-id": "<anonymous-schema-26>"
                  },
                  "member": {
                    "description": "members of the AwardTeam",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uri",
                      "examples": [
                        "http://12345.example.com/profile/card#me",
                        "http://ma302-001.example.com/profile/card#me",
                        "http://ma302.example.com/profile/card#me"
                      ],
                      "x-parser-schema-id": "<anonymous-schema-28>"
                    },
                    "x-parser-schema-id": "<anonymous-schema-27>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-81>"
              }
            },
            "x-parser-schema-id": "<anonymous-schema-79>"
          }
        },
        "x-parser-schema-id": "<anonymous-schema-77>"
      },
      "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
      "x-parser-original-payload": {
        "type": "object",
        "properties": {
          "topic": {
            "type": "string",
            "const": "realestate/award#teamupdate"
          },
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "const": "UpdateAction"
              },
              "object": {
                "title": "AwardTeam",
                "type": "object",
                "x-range": "AwardTeam",
                "description": "a Collection",
                "required": [
                  "type",
                  "identifier"
                ],
                "properties": {
                  "type": {
                    "const": "AwardTeam"
                  },
                  "name": {
                    "example": "Top Producer by Volume",
                    "type": "string",
                    "description": "the name of the item"
                  },
                  "identifier": {
                    "example": {
                      "hsfTeamId": "xxxxx"
                    },
                    "title": "identifier",
                    "type": "object",
                    "description": "identifier assigned to a contact by the vendor who originally created the contact",
                    "examples": [
                      {
                        "salesforceid": "0031U00002XW1QWQA1"
                      },
                      {
                        "vendoraid": "123456"
                      },
                      {
                        "originating_system_id": "123456"
                      }
                    ]
                  },
                  "member": {
                    "description": "members of the AwardTeam",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uri",
                      "examples": [
                        "http://12345.example.com/profile/card#me",
                        "http://ma302-001.example.com/profile/card#me",
                        "http://ma302.example.com/profile/card#me"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
      "x-parser-message-parsed": true
    }
  },
  "contact/add": {
    "_json": {
      "messageId": "contact#add",
      "name": "realestate/contact#add",
      "summary": "a contact (data.object) is added by a user (data.agent), optionally to a specific targetCollection",
      "headers": {
        "type": "object",
        "properties": {
          "time": {
            "type": "string",
            "format": "date-time",
            "description": "date & time the event was produced",
            "x-faker": "date.past",
            "x-parser-schema-id": "<anonymous-schema-31>"
          },
          "agent": {
            "type": "string",
            "format": "uri",
            "summary": "the event provider who sent the event via a subscription authorized to your service.",
            "description": "if you are a multi-tenant app, then the agent is the user associated with the event data.\nany future events related to this message will be sent to the same agent/recipient\n",
            "examples": [
              "https://teamsupermario.example.com/profile/card#me",
              "https://bigbrandrealestate.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-32>"
          },
          "instrument": {
            "type": "string",
            "format": "uri",
            "description": "the app or service that produced the event on behalf of the agent/user",
            "examples": [
              "http://supercrm.example.com/profile/card#me",
              "http://reliance.example.com/profile/card#me",
              "http://moxiworks.example.com/profile/card#me",
              "http://listing-manager.example.com/profile/card#me",
              "http://ace.example.com/profile/card#me",
              "http://roqlogic.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-33>"
          },
          "source": {
            "type": "string",
            "format": "uri",
            "description": "a copy of the event was sent to the source(s).",
            "examples": [
              "https://bigbrandrealestate.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-34>"
          },
          "originalRecipient": {
            "type": "string",
            "format": "uri",
            "summary": "the original recipient of the event",
            "description": "the originalRecipient helps you determine the subscription that delivered the event to you.\nif the originalRecipient is the same as the agent, then the you are subscribed to the agent.\nif the originalRecipient is different from the agent, then you are subscribed to the event source\n",
            "example": [
              "http://bigbrandrealestate.example.com/profile/card#me",
              "http://teamsupermario.example.com/profile/card#me",
              "http://bob.example.com/profile/card#me",
              "http://jane.example.com/profile/card#me",
              "http://joe.example.com/profile/card#me",
              "http://jill.example.com/profile/card#me",
              "http://jim.example.com/profile/card#me",
              "http://jennifer.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-35>"
          },
          "id": {
            "type": "string",
            "format": "uri",
            "summary": "the event id - the cannonical identifier for the event",
            "description": "the Event ID (aka \"Publish ID\") is the immutable canonical identifier for the event.\nit is a URI that is unique to the event and will not change.\nall subscribers will receive the same id for the same event.\n",
            "examples": [
              "http://supercrm.example.com/publish/12345",
              "http://reliance.example.com/publish/23456",
              "http://moxiworks.example.com/publish/34567",
              "http://listing-manager.example.com/publish/45678",
              "http://ace.example.com/publish/56789",
              "http://roqlogic.example.com/publish/67890"
            ],
            "x-parser-schema-id": "<anonymous-schema-36>"
          },
          "@id": {
            "type": "string",
            "format": "uri",
            "summary": "the @id is the url in your inbox where you can retrieve the event",
            "examples": [
              "http://reliance.example.com/inbox/23456",
              "http://moxiworks.example.com/inbox/34567",
              "http://listing-manager.example.com/inbox/45678",
              "http://ace.example.com/inbox/56789",
              "http://roqlogic.example.com/inbox/67890"
            ],
            "x-parser-schema-id": "<anonymous-schema-37>"
          }
        },
        "x-parser-schema-id": "<anonymous-schema-30>"
      },
      "payload": {
        "type": "object",
        "required": [
          "topic",
          "data"
        ],
        "properties": {
          "topic": {
            "const": "realestate/contact#add",
            "x-parser-schema-id": "<anonymous-schema-88>"
          },
          "data": {
            "type": "object",
            "required": [
              "object"
            ],
            "properties": {
              "type": {
                "const": "AddAction",
                "x-parser-schema-id": "<anonymous-schema-90>"
              },
              "agent": {
                "type": "object",
                "properties": {
                  "type": {
                    "const": "Person",
                    "x-parser-schema-id": "<anonymous-schema-92>"
                  },
                  "name": {
                    "type": "string",
                    "description": "the name of the item",
                    "x-parser-schema-id": "<anonymous-schema-93>"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "x-faker": "internet.email",
                    "x-parser-schema-id": "<anonymous-schema-94>"
                  },
                  "identifier": {
                    "title": "identifier",
                    "type": "object",
                    "description": "identifier assigned to a contact by the vendor who originally created the contact",
                    "examples": [
                      {
                        "salesforceid": "0031U00002XW1QWQA1"
                      },
                      {
                        "vendoraid": "123456"
                      },
                      {
                        "originating_system_id": "123456"
                      }
                    ],
                    "x-parser-schema-id": "<anonymous-schema-95>"
                  }
                },
                "required": [
                  "type"
                ],
                "minProperties": 2,
                "x-parser-schema-id": "<anonymous-schema-91>"
              },
              "object": {
                "allOf": [
                  {
                    "title": "Person",
                    "type": "object",
                    "required": [
                      "type",
                      "name"
                    ],
                    "properties": {
                      "type": {
                        "type": "string",
                        "x-parser-schema-id": "<anonymous-schema-96>"
                      },
                      "affiliation": {
                        "description": "An organization that this person is affiliated with",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://example.com/profile/card#me",
                          "x-parser-schema-id": "<anonymous-schema-98>"
                        },
                        "x-parser-schema-id": "<anonymous-schema-97>"
                      },
                      "address": {
                        "type": "array",
                        "items": {
                          "$id": "http://realestate.yodata.me/schemas/PostalAddress.yaml",
                          "title": "PostalAddress",
                          "type": "object",
                          "description": "A physical address.",
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "PostalAddress",
                              "x-parser-schema-id": "<anonymous-schema-100>"
                            },
                            "streetAddress": {
                              "type": "string",
                              "description": "the street number and name.",
                              "x-faker": "address.streetAddress",
                              "examples": [
                                "5046 Ottis Point",
                                "166 Marion Burg",
                                "93044 Haley Stream"
                              ],
                              "x-parser-schema-id": "<anonymous-schema-101>"
                            },
                            "postOfficeBoxNumber": {
                              "type": "string",
                              "description": "The post office box number for PO box addresses.",
                              "x-faker": "address.secondaryAddress",
                              "examples": [
                                "Box 1234",
                                "Apt. 161",
                                "Apt. 623"
                              ],
                              "x-parser-schema-id": "<anonymous-schema-102>"
                            },
                            "addressRegion": {
                              "type": "string",
                              "description": "State or Province.",
                              "x-faker": "address.state",
                              "examples": [
                                "New Jersey",
                                "California",
                                "MI",
                                null
                              ],
                              "x-parser-schema-id": "<anonymous-schema-103>"
                            },
                            "addressLocality": {
                              "type": "string",
                              "description": "City, Township.",
                              "x-faker": "address.city",
                              "examples": [
                                "Gotham City",
                                "Kulasmouth",
                                "Heidistad",
                                "Altamonte Springs",
                                "West Ahmed",
                                "Blaiseview"
                              ],
                              "x-parser-schema-id": "<anonymous-schema-104>"
                            },
                            "postalCode": {
                              "type": "string",
                              "description": "Zip/Post Code",
                              "x-faker": "address.zipCode",
                              "examples": [
                                "10010",
                                "38859",
                                "40387",
                                "50239-7698",
                                null
                              ],
                              "x-parser-schema-id": "<anonymous-schema-105>"
                            },
                            "addressCountry": {
                              "type": "string",
                              "description": "The country. For example, USA. You can also provide the two-letter ISO 3166-1 alpha-2 country code.",
                              "examples": [
                                "USA",
                                "TH",
                                "NZ",
                                "EG",
                                "SJ",
                                "VN"
                              ],
                              "x-faker": "address.countryCode",
                              "x-parser-schema-id": "<anonymous-schema-106>"
                            },
                            "addressCounty": {
                              "type": "string",
                              "description": "the county (us real estate extension)",
                              "faker": "address.county",
                              "examples": [
                                "Gotham County",
                                "Buckinghamshire",
                                "Borders",
                                null
                              ],
                              "x-parser-schema-id": "<anonymous-schema-107>"
                            },
                            "addressSubdivision": {
                              "type": "string",
                              "description": "the subdivision or neighborhood (us real estate extension)",
                              "x-faker": "address.streetName",
                              "examples": [
                                "Gotham Heights",
                                "South Kensington",
                                "SOMA (South of Market)",
                                "Nob Hill"
                              ],
                              "x-parser-schema-id": "<anonymous-schema-108>"
                            }
                          },
                          "x-parser-schema-id": "PostalAddress"
                        },
                        "x-parser-schema-id": "<anonymous-schema-99>"
                      },
                      "birthDate": {
                        "description": "date of birth.",
                        "type": "string",
                        "format": "date",
                        "x-parser-schema-id": "<anonymous-schema-109>"
                      },
                      "contactPoint": {
                        "description": "contact points for the person",
                        "type": "array",
                        "items": {
                          "$id": "http://realestate.yodata.me/schema/ContactPoint.json",
                          "title": "ContactPoint",
                          "description": "A point of contact for the entity. By convention in the real estate domain, ContactPoints\nare preferred over telephone, email, and faxNumber so the ContactPoint.name property can be used to label values\nfor example, Work Telephone, Home, as named contactPoint values.\n",
                          "type": "object",
                          "required": [
                            "type",
                            "name"
                          ],
                          "minProperties": 3,
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "ContactPoint",
                              "x-parser-schema-id": "<anonymous-schema-111>"
                            },
                            "name": {
                              "type": "string",
                              "description": "a label for the contactPoint, i.e. 'Work', or 'Home'",
                              "examples": [
                                "Work",
                                "Home",
                                "Vacation",
                                "Bob's Cell",
                                "Alice's Work"
                              ],
                              "x-parser-schema-id": "<anonymous-schema-112>"
                            },
                            "telephone": {
                              "type": "string",
                              "x-faker": "phone.phoneNumber",
                              "examples": [
                                "555-555-5555",
                                "555-555-5555 x123",
                                "555-555-5555 ext. 123",
                                "+1-555-555-5555"
                              ],
                              "x-parser-schema-id": "<anonymous-schema-113>"
                            },
                            "faxNumber": {
                              "type": "string",
                              "x-faker": "phone.phoneNumber",
                              "examples": [
                                "555-555-5555",
                                "555-555-5555 x123",
                                "555-555-5555 ext. 123",
                                "+1-555-555-5555"
                              ],
                              "x-parser-schema-id": "<anonymous-schema-114>"
                            },
                            "email": {
                              "description": "an email address for the item.",
                              "type": "string",
                              "format": "email",
                              "x-faker": "internet.email",
                              "examples": [
                                "bob@example.com",
                                "alice@example.com"
                              ],
                              "x-parser-schema-id": "<anonymous-schema-115>"
                            },
                            "url": {
                              "description": "primary URL for the item.",
                              "type": "string",
                              "format": "uri",
                              "example": "https://www.facebook.com/hallandoates",
                              "x-parser-schema-id": "<anonymous-schema-116>"
                            }
                          },
                          "x-parser-schema-id": "ContactPoint"
                        },
                        "x-parser-schema-id": "<anonymous-schema-110>"
                      },
                      "email": {
                        "type": "string",
                        "format": "email",
                        "x-faker": "internet.email",
                        "x-parser-schema-id": "<anonymous-schema-94>"
                      },
                      "additionalName": {
                        "title": "additionalName",
                        "description": "any other name(s) associated with the entity, i.e. nickname, middle name, maiden name, etc. For multiple names, use a comma without space as a separator.",
                        "type": "string",
                        "examples": [
                          "Johnny,John",
                          "Prince,The Artist Formerly Known as Prince,The Artist",
                          "Babs,Barbara",
                          "Katheryn Elizabeth Hudson,Katy Perry",
                          "Destiny Hope Cyrus,Miley Cyrus"
                        ],
                        "x-parser-schema-id": "<anonymous-schema-117>"
                      },
                      "familyName": {
                        "$id": "http://realestate.yodata.me/schema/familyName.yaml",
                        "type": "string",
                        "title": "Family Name",
                        "description": "Last Name of a person",
                        "x-faker": "name.lastName",
                        "maxLength": 50,
                        "externalDocs": {
                          "description": "Family Name",
                          "url": "https://schema.org/familyName"
                        },
                        "examples": [
                          "Smith",
                          "Jones",
                          "Parker",
                          "Monk",
                          "Brown",
                          "Miller",
                          "Davis",
                          "Wilson",
                          "Fitzgerald",
                          "Johnson",
                          "Williams"
                        ]
                      },
                      "faxNumber": {
                        "type": "string",
                        "description": "Do people still use fax machines?",
                        "x-faker": "phone.phoneNumber",
                        "x-parser-schema-id": "<anonymous-schema-118>"
                      },
                      "givenName": {
                        "type": "string",
                        "description": "First Name of a person",
                        "x-faker": "name.firstName",
                        "examples": [
                          "John",
                          "Jane",
                          "Mary",
                          "Joseph",
                          "William",
                          "David",
                          "Richard",
                          "Charles",
                          "Thomas",
                          "Christopher",
                          "Daniel",
                          "Matthew",
                          "Anthony",
                          "Donald",
                          "Mark",
                          "Paul",
                          "Steven",
                          "Andrew",
                          "Kenneth",
                          "George",
                          "Joshua",
                          "Kevin",
                          "Brian",
                          "Edward",
                          "Ronald",
                          "Timothy",
                          "Jason",
                          "Jeffrey",
                          "Ryan",
                          "Jacob"
                        ],
                        "x-parser-schema-id": "<anonymous-schema-119>"
                      },
                      "honorificPrefix": {
                        "title": "honorificPrefix",
                        "description": "An honorific prefix preceding a Person's name such as Dr/Mrs/Mr.",
                        "type": "string",
                        "example": "Dr",
                        "x-parser-schema-id": "<anonymous-schema-120>"
                      },
                      "honorificSuffix": {
                        "title": "honorificSuffix",
                        "description": "An honorific title following a person's name like M.D.",
                        "type": "string",
                        "example": "Esq",
                        "x-parser-schema-id": "<anonymous-schema-121>"
                      },
                      "jobTitle": {
                        "title": "jobTitle",
                        "description": "job tiles associated with the item",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "x-parser-schema-id": "<anonymous-schema-123>"
                        },
                        "example": [
                          "Chief Data Officer",
                          "Sanitation Engineer"
                        ],
                        "x-parser-schema-id": "<anonymous-schema-122>"
                      },
                      "knowsLanguage": {
                        "description": "languages spoken by the person",
                        "type": "array",
                        "items": {
                          "$id": "http://realestate.yodata.me/schema/Language.yaml",
                          "description": "a written or spoken Language",
                          "title": "Language",
                          "type": "object",
                          "required": [
                            "type",
                            "name",
                            "additionalName"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "Language",
                              "x-parser-schema-id": "<anonymous-schema-125>"
                            },
                            "name": {
                              "type": "string",
                              "description": "the display name of the language",
                              "x-parser-schema-id": "<anonymous-schema-126>"
                            },
                            "additionalName": {
                              "type": "string",
                              "description": "BCP 47 language code",
                              "x-parser-schema-id": "<anonymous-schema-127>"
                            }
                          },
                          "examples": [
                            {
                              "type": "Language",
                              "name": "English",
                              "additionalName": "en-us"
                            },
                            {
                              "type": "Language",
                              "name": "Spanish",
                              "additionalName": "es"
                            },
                            {
                              "type": "Language",
                              "name": "French",
                              "additionalName": "fr"
                            },
                            {
                              "type": "Language",
                              "name": "German",
                              "additionalName": "de"
                            },
                            {
                              "type": "Language",
                              "name": "Italian",
                              "additionalName": "it"
                            },
                            {
                              "type": "Language",
                              "name": "Japanese",
                              "additionalName": "ja"
                            },
                            {
                              "type": "Language",
                              "name": "Korean",
                              "additionalName": "ko"
                            },
                            {
                              "type": "Language",
                              "name": "Portuguese",
                              "additionalName": "pt"
                            },
                            {
                              "type": "Language",
                              "name": "Russian",
                              "additionalName": "ru"
                            },
                            {
                              "type": "Language",
                              "name": "Chinese",
                              "additionalName": "zh"
                            },
                            {
                              "type": "Language",
                              "name": "Arabic",
                              "additionalName": "ar"
                            },
                            {
                              "type": "Language",
                              "name": "Hindi",
                              "additionalName": "hi"
                            },
                            {
                              "type": "Language",
                              "name": "Bengali",
                              "additionalName": "bn"
                            },
                            {
                              "type": "Language",
                              "name": "Portuguese",
                              "additionalName": "pt"
                            }
                          ],
                          "x-parser-schema-id": "Language"
                        },
                        "x-parser-schema-id": "<anonymous-schema-124>"
                      },
                      "name": {
                        "description": "Full name of the person.",
                        "type": "string",
                        "x-faker": "name.findName",
                        "x-parser-schema-id": "<anonymous-schema-128>"
                      },
                      "telephone": {
                        "type": "string",
                        "description": "Primary phone number.",
                        "example": "+15558675309",
                        "x-parser-schema-id": "<anonymous-schema-129>"
                      },
                      "worksFor": {
                        "type": "string",
                        "description": "Organizations the person works for.",
                        "x-faker": "company.companyName",
                        "x-parser-schema-id": "<anonymous-schema-130>"
                      }
                    },
                    "x-parser-schema-id": "Person"
                  },
                  {
                    "title": "Contact",
                    "description": "a CRM contact.",
                    "properties": {
                      "type": {
                        "type": "string",
                        "const": "Contact"
                      },
                      "identifier": {
                        "title": "identifier",
                        "type": "object",
                        "description": "identifier assigned to a contact by the vendor who originally created the contact",
                        "examples": [
                          {
                            "salesforceid": "0031U00002XW1QWQA1"
                          },
                          {
                            "vendoraid": "123456"
                          },
                          {
                            "originating_system_id": "123456"
                          }
                        ],
                        "x-parser-schema-id": "<anonymous-schema-95>"
                      },
                      "additionalProperty": {
                        "title": "additionalProperty",
                        "type": "object",
                        "description": "additionalProperty are",
                        "example": {
                          "supercrmuserid": 1234,
                          "doNotSell": true
                        }
                      },
                      "comment": {
                        "title": "comment",
                        "type": "array",
                        "description": "comments by, for or about the item",
                        "x-range": "Comment",
                        "items": {
                          "type": "object"
                        },
                        "example": [
                          {
                            "type": "Comment",
                            "text": "this is my comment.",
                            "author": {
                              "type": "Contact",
                              "name": "Bruce Wayne"
                            },
                            "about": {
                              "type": "PropertyListing",
                              "id": "https://example.com/listingid"
                            },
                            "dateCreated": "2019-07-15T05:24:05Z",
                            "dateModified": "2019-07-15T05:24:05Z"
                          }
                        ]
                      },
                      "jobTitle": {
                        "title": "jobTitle",
                        "description": "The job title of the person (for example, Financial Manager).",
                        "type": "string",
                        "x-faker": "name.jobTitle",
                        "examples": [
                          "CEO",
                          "Sales Manager",
                          "Escrow Officer",
                          "Transaction Coordinator",
                          "Director of Marketing",
                          "Senior Loan Officer",
                          "Loan Officer",
                          "Sanitation Engineer",
                          "Owner",
                          "Cofounder",
                          "Founder",
                          "President",
                          "Vice President of Sales",
                          null,
                          null,
                          null,
                          null,
                          null,
                          null,
                          null,
                          null,
                          null,
                          null
                        ],
                        "x-parser-schema-id": "<anonymous-schema-387>"
                      },
                      "contactGroup": {
                        "type": "array",
                        "items": {
                          "$id": "http://realestate.yodata.me/schema/ContactGroup.json",
                          "title": "ContactGroup",
                          "description": "groups the contact is a member of.",
                          "type": "object",
                          "required": [
                            "type",
                            "name"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ContactGroup",
                                "Collection"
                              ]
                            },
                            "identifier": {
                              "title": "identifier",
                              "type": "object",
                              "description": "identifier assigned to a contact by the vendor who originally created the contact",
                              "examples": [
                                {
                                  "salesforceid": "0031U00002XW1QWQA1"
                                },
                                {
                                  "vendoraid": "123456"
                                },
                                {
                                  "originating_system_id": "123456"
                                }
                              ],
                              "x-parser-schema-id": "<anonymous-schema-95>"
                            },
                            "name": {
                              "type": "string",
                              "examples": [
                                "Past Clients",
                                "Prospects",
                                "Leads",
                                "Referrals",
                                "Friends",
                                "Family",
                                "Neighbors",
                                "Business Associates",
                                "Personal"
                              ]
                            }
                          }
                        }
                      },
                      "keywords": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "leadOwner": {
                        "type": "object",
                        "description": "lead owner",
                        "x-range": [
                          "RealEstateAgent",
                          "RealEstateOrganization",
                          "RealEstateTeam"
                        ],
                        "example": {
                          "type": "RealEstateOrganization",
                          "name": "Gotham City Real Estate",
                          "id": "https://example.com/profile.card#me"
                        }
                      },
                      "leadSource": {
                        "type": "object",
                        "description": "origin of the lead",
                        "x-range": [
                          "MobileApplication",
                          "RealEstateOffice",
                          "RealEstateWebsite",
                          "Thing"
                        ],
                        "example": {
                          "id": "https://www.zillow.com/homedetails/1044-Siler-Pl-Berkeley-CA-94705/24820985_zpid/",
                          "type": "RealEstateWebsite",
                          "name": "Zillow",
                          "url": "https://zillow.com"
                        }
                      },
                      "originatingSystem": {
                        "type": "object",
                        "x-range": [
                          "Thing"
                        ],
                        "description": "the original system where this item was created.  Can be of type Thing or any sub-type.",
                        "examples": [
                          {
                            "type": "SoftwareApplication",
                            "name": "RDesk",
                            "description": "User Created.",
                            "url": "http://www.rdeskwebsite.com/"
                          }
                        ]
                      },
                      "dateCreated": {
                        "$id": "http://realestate.yodata.me/schema/dateCreated.yaml",
                        "type": "string",
                        "format": "date-time",
                        "title": "Date Created",
                        "description": "The date on which the item was created."
                      },
                      "dateModified": {
                        "description": "The date on which the item was most recently modified or when the item's entry was modified within a DataFeed.",
                        "type": "string",
                        "format": "date-time",
                        "x-parser-schema-id": "<anonymous-schema-137>"
                      }
                    },
                    "x-parser-schema-id": "<anonymous-schema-131>"
                  }
                ],
                "x-parser-schema-id": "Contact"
              }
            },
            "x-parser-schema-id": "<anonymous-schema-89>"
          }
        },
        "x-parser-schema-id": "<anonymous-schema-87>"
      },
      "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
      "x-parser-original-payload": {
        "type": "object",
        "required": [
          "topic",
          "data"
        ],
        "properties": {
          "topic": {
            "const": "realestate/contact#add"
          },
          "data": {
            "type": "object",
            "required": [
              "object"
            ],
            "properties": {
              "type": {
                "const": "AddAction"
              },
              "agent": {
                "type": "object",
                "properties": {
                  "type": {
                    "const": "Person"
                  },
                  "name": {
                    "type": "string",
                    "description": "the name of the item"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "x-faker": "internet.email"
                  },
                  "identifier": {
                    "title": "identifier",
                    "type": "object",
                    "description": "identifier assigned to a contact by the vendor who originally created the contact",
                    "examples": [
                      {
                        "salesforceid": "0031U00002XW1QWQA1"
                      },
                      {
                        "vendoraid": "123456"
                      },
                      {
                        "originating_system_id": "123456"
                      }
                    ]
                  }
                },
                "required": [
                  "type"
                ],
                "minProperties": 2
              },
              "object": {
                "allOf": [
                  {
                    "title": "Person",
                    "type": "object",
                    "required": [
                      "type",
                      "name"
                    ],
                    "properties": {
                      "type": {
                        "type": "string"
                      },
                      "affiliation": {
                        "description": "An organization that this person is affiliated with",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://example.com/profile/card#me"
                        }
                      },
                      "address": {
                        "type": "array",
                        "items": {
                          "$id": "http://realestate.yodata.me/schemas/PostalAddress.yaml",
                          "title": "PostalAddress",
                          "type": "object",
                          "description": "A physical address.",
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "PostalAddress"
                            },
                            "streetAddress": {
                              "type": "string",
                              "description": "the street number and name.",
                              "x-faker": "address.streetAddress",
                              "examples": [
                                "5046 Ottis Point",
                                "166 Marion Burg",
                                "93044 Haley Stream"
                              ]
                            },
                            "postOfficeBoxNumber": {
                              "type": "string",
                              "description": "The post office box number for PO box addresses.",
                              "x-faker": "address.secondaryAddress",
                              "examples": [
                                "Box 1234",
                                "Apt. 161",
                                "Apt. 623"
                              ]
                            },
                            "addressRegion": {
                              "type": "string",
                              "description": "State or Province.",
                              "x-faker": "address.state",
                              "examples": [
                                "New Jersey",
                                "California",
                                "MI",
                                null
                              ]
                            },
                            "addressLocality": {
                              "type": "string",
                              "description": "City, Township.",
                              "x-faker": "address.city",
                              "examples": [
                                "Gotham City",
                                "Kulasmouth",
                                "Heidistad",
                                "Altamonte Springs",
                                "West Ahmed",
                                "Blaiseview"
                              ]
                            },
                            "postalCode": {
                              "type": "string",
                              "description": "Zip/Post Code",
                              "x-faker": "address.zipCode",
                              "examples": [
                                "10010",
                                "38859",
                                "40387",
                                "50239-7698",
                                null
                              ]
                            },
                            "addressCountry": {
                              "type": "string",
                              "description": "The country. For example, USA. You can also provide the two-letter ISO 3166-1 alpha-2 country code.",
                              "examples": [
                                "USA",
                                "TH",
                                "NZ",
                                "EG",
                                "SJ",
                                "VN"
                              ],
                              "x-faker": "address.countryCode"
                            },
                            "addressCounty": {
                              "type": "string",
                              "description": "the county (us real estate extension)",
                              "faker": "address.county",
                              "examples": [
                                "Gotham County",
                                "Buckinghamshire",
                                "Borders",
                                null
                              ]
                            },
                            "addressSubdivision": {
                              "type": "string",
                              "description": "the subdivision or neighborhood (us real estate extension)",
                              "x-faker": "address.streetName",
                              "examples": [
                                "Gotham Heights",
                                "South Kensington",
                                "SOMA (South of Market)",
                                "Nob Hill"
                              ]
                            }
                          }
                        }
                      },
                      "birthDate": {
                        "description": "date of birth.",
                        "type": "string",
                        "format": "date"
                      },
                      "contactPoint": {
                        "description": "contact points for the person",
                        "type": "array",
                        "items": {
                          "$id": "http://realestate.yodata.me/schema/ContactPoint.json",
                          "title": "ContactPoint",
                          "description": "A point of contact for the entity. By convention in the real estate domain, ContactPoints\nare preferred over telephone, email, and faxNumber so the ContactPoint.name property can be used to label values\nfor example, Work Telephone, Home, as named contactPoint values.\n",
                          "type": "object",
                          "required": [
                            "type",
                            "name"
                          ],
                          "minProperties": 3,
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "ContactPoint"
                            },
                            "name": {
                              "type": "string",
                              "description": "a label for the contactPoint, i.e. 'Work', or 'Home'",
                              "examples": [
                                "Work",
                                "Home",
                                "Vacation",
                                "Bob's Cell",
                                "Alice's Work"
                              ]
                            },
                            "telephone": {
                              "type": "string",
                              "x-faker": "phone.phoneNumber",
                              "examples": [
                                "555-555-5555",
                                "555-555-5555 x123",
                                "555-555-5555 ext. 123",
                                "+1-555-555-5555"
                              ]
                            },
                            "faxNumber": {
                              "type": "string",
                              "x-faker": "phone.phoneNumber",
                              "examples": [
                                "555-555-5555",
                                "555-555-5555 x123",
                                "555-555-5555 ext. 123",
                                "+1-555-555-5555"
                              ]
                            },
                            "email": {
                              "description": "an email address for the item.",
                              "type": "string",
                              "format": "email",
                              "x-faker": "internet.email",
                              "examples": [
                                "bob@example.com",
                                "alice@example.com"
                              ]
                            },
                            "url": {
                              "description": "primary URL for the item.",
                              "type": "string",
                              "format": "uri",
                              "example": "https://www.facebook.com/hallandoates"
                            }
                          }
                        }
                      },
                      "email": {
                        "type": "string",
                        "format": "email",
                        "x-faker": "internet.email"
                      },
                      "additionalName": {
                        "title": "additionalName",
                        "description": "any other name(s) associated with the entity, i.e. nickname, middle name, maiden name, etc. For multiple names, use a comma without space as a separator.",
                        "type": "string",
                        "examples": [
                          "Johnny,John",
                          "Prince,The Artist Formerly Known as Prince,The Artist",
                          "Babs,Barbara",
                          "Katheryn Elizabeth Hudson,Katy Perry",
                          "Destiny Hope Cyrus,Miley Cyrus"
                        ]
                      },
                      "familyName": {
                        "$id": "http://realestate.yodata.me/schema/familyName.yaml",
                        "type": "string",
                        "title": "Family Name",
                        "description": "Last Name of a person",
                        "x-faker": "name.lastName",
                        "maxLength": 50,
                        "externalDocs": {
                          "description": "Family Name",
                          "url": "https://schema.org/familyName"
                        },
                        "examples": [
                          "Smith",
                          "Jones",
                          "Parker",
                          "Monk",
                          "Brown",
                          "Miller",
                          "Davis",
                          "Wilson",
                          "Fitzgerald",
                          "Johnson",
                          "Williams"
                        ]
                      },
                      "faxNumber": {
                        "type": "string",
                        "description": "Do people still use fax machines?",
                        "x-faker": "phone.phoneNumber"
                      },
                      "givenName": {
                        "type": "string",
                        "description": "First Name of a person",
                        "x-faker": "name.firstName",
                        "examples": [
                          "John",
                          "Jane",
                          "Mary",
                          "Joseph",
                          "William",
                          "David",
                          "Richard",
                          "Charles",
                          "Thomas",
                          "Christopher",
                          "Daniel",
                          "Matthew",
                          "Anthony",
                          "Donald",
                          "Mark",
                          "Paul",
                          "Steven",
                          "Andrew",
                          "Kenneth",
                          "George",
                          "Joshua",
                          "Kevin",
                          "Brian",
                          "Edward",
                          "Ronald",
                          "Timothy",
                          "Jason",
                          "Jeffrey",
                          "Ryan",
                          "Jacob"
                        ]
                      },
                      "honorificPrefix": {
                        "title": "honorificPrefix",
                        "description": "An honorific prefix preceding a Person's name such as Dr/Mrs/Mr.",
                        "type": "string",
                        "example": "Dr"
                      },
                      "honorificSuffix": {
                        "title": "honorificSuffix",
                        "description": "An honorific title following a person's name like M.D.",
                        "type": "string",
                        "example": "Esq"
                      },
                      "jobTitle": {
                        "title": "jobTitle",
                        "description": "job tiles associated with the item",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "example": [
                          "Chief Data Officer",
                          "Sanitation Engineer"
                        ]
                      },
                      "knowsLanguage": {
                        "description": "languages spoken by the person",
                        "type": "array",
                        "items": {
                          "$id": "http://realestate.yodata.me/schema/Language.yaml",
                          "description": "a written or spoken Language",
                          "title": "Language",
                          "type": "object",
                          "required": [
                            "type",
                            "name",
                            "additionalName"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "Language"
                            },
                            "name": {
                              "type": "string",
                              "description": "the display name of the language"
                            },
                            "additionalName": {
                              "type": "string",
                              "description": "BCP 47 language code"
                            }
                          },
                          "examples": [
                            {
                              "type": "Language",
                              "name": "English",
                              "additionalName": "en-us"
                            },
                            {
                              "type": "Language",
                              "name": "Spanish",
                              "additionalName": "es"
                            },
                            {
                              "type": "Language",
                              "name": "French",
                              "additionalName": "fr"
                            },
                            {
                              "type": "Language",
                              "name": "German",
                              "additionalName": "de"
                            },
                            {
                              "type": "Language",
                              "name": "Italian",
                              "additionalName": "it"
                            },
                            {
                              "type": "Language",
                              "name": "Japanese",
                              "additionalName": "ja"
                            },
                            {
                              "type": "Language",
                              "name": "Korean",
                              "additionalName": "ko"
                            },
                            {
                              "type": "Language",
                              "name": "Portuguese",
                              "additionalName": "pt"
                            },
                            {
                              "type": "Language",
                              "name": "Russian",
                              "additionalName": "ru"
                            },
                            {
                              "type": "Language",
                              "name": "Chinese",
                              "additionalName": "zh"
                            },
                            {
                              "type": "Language",
                              "name": "Arabic",
                              "additionalName": "ar"
                            },
                            {
                              "type": "Language",
                              "name": "Hindi",
                              "additionalName": "hi"
                            },
                            {
                              "type": "Language",
                              "name": "Bengali",
                              "additionalName": "bn"
                            },
                            {
                              "type": "Language",
                              "name": "Portuguese",
                              "additionalName": "pt"
                            }
                          ]
                        }
                      },
                      "name": {
                        "description": "Full name of the person.",
                        "type": "string",
                        "x-faker": "name.findName"
                      },
                      "telephone": {
                        "type": "string",
                        "description": "Primary phone number.",
                        "example": "+15558675309"
                      },
                      "worksFor": {
                        "type": "string",
                        "description": "Organizations the person works for.",
                        "x-faker": "company.companyName"
                      }
                    }
                  },
                  {
                    "title": "Contact",
                    "description": "a CRM contact.",
                    "properties": {
                      "type": {
                        "type": "string",
                        "const": "Contact"
                      },
                      "identifier": {
                        "title": "identifier",
                        "type": "object",
                        "description": "identifier assigned to a contact by the vendor who originally created the contact",
                        "examples": [
                          {
                            "salesforceid": "0031U00002XW1QWQA1"
                          },
                          {
                            "vendoraid": "123456"
                          },
                          {
                            "originating_system_id": "123456"
                          }
                        ]
                      },
                      "additionalProperty": {
                        "title": "additionalProperty",
                        "type": "object",
                        "description": "additionalProperty are",
                        "example": {
                          "supercrmuserid": 1234,
                          "doNotSell": true
                        }
                      },
                      "comment": {
                        "title": "comment",
                        "type": "array",
                        "description": "comments by, for or about the item",
                        "x-range": "Comment",
                        "items": {
                          "type": "object"
                        },
                        "example": [
                          {
                            "type": "Comment",
                            "text": "this is my comment.",
                            "author": {
                              "type": "Contact",
                              "name": "Bruce Wayne"
                            },
                            "about": {
                              "type": "PropertyListing",
                              "id": "https://example.com/listingid"
                            },
                            "dateCreated": "2019-07-15T05:24:05Z",
                            "dateModified": "2019-07-15T05:24:05Z"
                          }
                        ]
                      },
                      "jobTitle": {
                        "title": "jobTitle",
                        "description": "The job title of the person (for example, Financial Manager).",
                        "type": "string",
                        "x-faker": "name.jobTitle",
                        "examples": [
                          "CEO",
                          "Sales Manager",
                          "Escrow Officer",
                          "Transaction Coordinator",
                          "Director of Marketing",
                          "Senior Loan Officer",
                          "Loan Officer",
                          "Sanitation Engineer",
                          "Owner",
                          "Cofounder",
                          "Founder",
                          "President",
                          "Vice President of Sales",
                          null,
                          null,
                          null,
                          null,
                          null,
                          null,
                          null,
                          null,
                          null,
                          null
                        ]
                      },
                      "contactGroup": {
                        "type": "array",
                        "items": {
                          "$id": "http://realestate.yodata.me/schema/ContactGroup.json",
                          "title": "ContactGroup",
                          "description": "groups the contact is a member of.",
                          "type": "object",
                          "required": [
                            "type",
                            "name"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ContactGroup",
                                "Collection"
                              ]
                            },
                            "identifier": {
                              "title": "identifier",
                              "type": "object",
                              "description": "identifier assigned to a contact by the vendor who originally created the contact",
                              "examples": [
                                {
                                  "salesforceid": "0031U00002XW1QWQA1"
                                },
                                {
                                  "vendoraid": "123456"
                                },
                                {
                                  "originating_system_id": "123456"
                                }
                              ]
                            },
                            "name": {
                              "type": "string",
                              "examples": [
                                "Past Clients",
                                "Prospects",
                                "Leads",
                                "Referrals",
                                "Friends",
                                "Family",
                                "Neighbors",
                                "Business Associates",
                                "Personal"
                              ]
                            }
                          }
                        }
                      },
                      "keywords": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "leadOwner": {
                        "type": "object",
                        "description": "lead owner",
                        "x-range": [
                          "RealEstateAgent",
                          "RealEstateOrganization",
                          "RealEstateTeam"
                        ],
                        "example": {
                          "type": "RealEstateOrganization",
                          "name": "Gotham City Real Estate",
                          "id": "https://example.com/profile.card#me"
                        }
                      },
                      "leadSource": {
                        "type": "object",
                        "description": "origin of the lead",
                        "x-range": [
                          "MobileApplication",
                          "RealEstateOffice",
                          "RealEstateWebsite",
                          "Thing"
                        ],
                        "example": {
                          "id": "https://www.zillow.com/homedetails/1044-Siler-Pl-Berkeley-CA-94705/24820985_zpid/",
                          "type": "RealEstateWebsite",
                          "name": "Zillow",
                          "url": "https://zillow.com"
                        }
                      },
                      "originatingSystem": {
                        "type": "object",
                        "x-range": [
                          "Thing"
                        ],
                        "description": "the original system where this item was created.  Can be of type Thing or any sub-type.",
                        "examples": [
                          {
                            "type": "SoftwareApplication",
                            "name": "RDesk",
                            "description": "User Created.",
                            "url": "http://www.rdeskwebsite.com/"
                          }
                        ]
                      },
                      "dateCreated": {
                        "$id": "http://realestate.yodata.me/schema/dateCreated.yaml",
                        "type": "string",
                        "format": "date-time",
                        "title": "Date Created",
                        "description": "The date on which the item was created."
                      },
                      "dateModified": {
                        "description": "The date on which the item was most recently modified or when the item's entry was modified within a DataFeed.",
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  }
                ]
              }
            }
          }
        }
      },
      "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
      "x-parser-message-parsed": true
    }
  },
  "contact/comment": {
    "_json": {
      "messageId": "contact#comment",
      "name": "realestate/contact#comment",
      "summary": "a comment (data.object) is added by a user (data.agent) to a contact (data.target)",
      "headers": {
        "type": "object",
        "properties": {
          "time": {
            "type": "string",
            "format": "date-time",
            "description": "date & time the event was produced",
            "x-faker": "date.past",
            "x-parser-schema-id": "<anonymous-schema-31>"
          },
          "agent": {
            "type": "string",
            "format": "uri",
            "summary": "the event provider who sent the event via a subscription authorized to your service.",
            "description": "if you are a multi-tenant app, then the agent is the user associated with the event data.\nany future events related to this message will be sent to the same agent/recipient\n",
            "examples": [
              "https://teamsupermario.example.com/profile/card#me",
              "https://bigbrandrealestate.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-32>"
          },
          "instrument": {
            "type": "string",
            "format": "uri",
            "description": "the app or service that produced the event on behalf of the agent/user",
            "examples": [
              "http://supercrm.example.com/profile/card#me",
              "http://reliance.example.com/profile/card#me",
              "http://moxiworks.example.com/profile/card#me",
              "http://listing-manager.example.com/profile/card#me",
              "http://ace.example.com/profile/card#me",
              "http://roqlogic.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-33>"
          },
          "source": {
            "type": "string",
            "format": "uri",
            "description": "a copy of the event was sent to the source(s).",
            "examples": [
              "https://bigbrandrealestate.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-34>"
          },
          "originalRecipient": {
            "type": "string",
            "format": "uri",
            "summary": "the original recipient of the event",
            "description": "the originalRecipient helps you determine the subscription that delivered the event to you.\nif the originalRecipient is the same as the agent, then the you are subscribed to the agent.\nif the originalRecipient is different from the agent, then you are subscribed to the event source\n",
            "example": [
              "http://bigbrandrealestate.example.com/profile/card#me",
              "http://teamsupermario.example.com/profile/card#me",
              "http://bob.example.com/profile/card#me",
              "http://jane.example.com/profile/card#me",
              "http://joe.example.com/profile/card#me",
              "http://jill.example.com/profile/card#me",
              "http://jim.example.com/profile/card#me",
              "http://jennifer.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-35>"
          },
          "id": {
            "type": "string",
            "format": "uri",
            "summary": "the event id - the cannonical identifier for the event",
            "description": "the Event ID (aka \"Publish ID\") is the immutable canonical identifier for the event.\nit is a URI that is unique to the event and will not change.\nall subscribers will receive the same id for the same event.\n",
            "examples": [
              "http://supercrm.example.com/publish/12345",
              "http://reliance.example.com/publish/23456",
              "http://moxiworks.example.com/publish/34567",
              "http://listing-manager.example.com/publish/45678",
              "http://ace.example.com/publish/56789",
              "http://roqlogic.example.com/publish/67890"
            ],
            "x-parser-schema-id": "<anonymous-schema-36>"
          },
          "@id": {
            "type": "string",
            "format": "uri",
            "summary": "the @id is the url in your inbox where you can retrieve the event",
            "examples": [
              "http://reliance.example.com/inbox/23456",
              "http://moxiworks.example.com/inbox/34567",
              "http://listing-manager.example.com/inbox/45678",
              "http://ace.example.com/inbox/56789",
              "http://roqlogic.example.com/inbox/67890"
            ],
            "x-parser-schema-id": "<anonymous-schema-37>"
          }
        },
        "x-parser-schema-id": "<anonymous-schema-30>"
      },
      "payload": {
        "type": "object",
        "required": [
          "topic",
          "data"
        ],
        "properties": {
          "topic": {
            "const": "realestate/contact#comment",
            "x-parser-schema-id": "<anonymous-schema-133>"
          },
          "data": {
            "type": "object",
            "required": [
              "object",
              "target"
            ],
            "properties": {
              "type": {
                "const": "CommentAction",
                "x-parser-schema-id": "<anonymous-schema-135>"
              },
              "agent": {
                "type": "object",
                "properties": {
                  "type": {
                    "const": "Person",
                    "x-parser-schema-id": "<anonymous-schema-92>"
                  },
                  "name": {
                    "type": "string",
                    "description": "the name of the item",
                    "x-parser-schema-id": "<anonymous-schema-93>"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "x-faker": "internet.email",
                    "x-parser-schema-id": "<anonymous-schema-94>"
                  },
                  "identifier": {
                    "title": "identifier",
                    "type": "object",
                    "description": "identifier assigned to a contact by the vendor who originally created the contact",
                    "examples": [
                      {
                        "salesforceid": "0031U00002XW1QWQA1"
                      },
                      {
                        "vendoraid": "123456"
                      },
                      {
                        "originating_system_id": "123456"
                      }
                    ],
                    "x-parser-schema-id": "<anonymous-schema-95>"
                  }
                },
                "required": [
                  "type"
                ],
                "minProperties": 2,
                "x-parser-schema-id": "<anonymous-schema-91>"
              },
              "object": {
                "type": "object",
                "title": "Comment",
                "description": "A comment on an item.",
                "x-range": "Comment",
                "required": [
                  "type",
                  "text"
                ],
                "properties": {
                  "type": {
                    "const": "Comment",
                    "x-parser-schema-id": "<anonymous-schema-136>"
                  },
                  "dateCreated": {
                    "$id": "http://realestate.yodata.me/schema/dateCreated.yaml",
                    "type": "string",
                    "format": "date-time",
                    "title": "Date Created",
                    "description": "The date on which the item was created."
                  },
                  "dateModified": {
                    "description": "The date on which the item was most recently modified or when the item's entry was modified within a DataFeed.",
                    "type": "string",
                    "format": "date-time",
                    "x-parser-schema-id": "<anonymous-schema-137>"
                  },
                  "dateDeleted": {
                    "$id": "http://realestate.yodata.me/schema/dateDeleted.yaml",
                    "type": "string",
                    "format": "date-time",
                    "title": "Date Deleted",
                    "description": "The date on which the item was deleted."
                  },
                  "text": {
                    "$id": "http://realestate.yodata.me/schema/text.yaml",
                    "title": "text",
                    "type": "string",
                    "examples": [
                      "Populus debet control notitia sua",
                      "Aspicio pinguem in his vestimentis?",
                      "Et id ipsum vitae.",
                      "Amici, Romani et cives, aures vestras mihi praebe",
                      "Heus, ego iustus occurrit tibi et hoc est insanus, sed hic numerus meus est, ut me vocas fortasse."
                    ]
                  },
                  "author": {
                    "title": "author",
                    "type": "object",
                    "description": "the author of something",
                    "examples": [
                      {
                        "type": "Contact",
                        "name": "Mark Twain",
                        "identifier": {
                          "originatingSystemName": "originating-system-id"
                        }
                      },
                      {
                        "type": "RealEstateAgent",
                        "name": "Andy Warhol",
                        "identifier": {
                          "originatingSystemName": "originating-system-id"
                        }
                      },
                      {
                        "name": "Stan Lee"
                      },
                      {
                        "email": "bob@example.com"
                      },
                      {
                        "telephone": "1-800-555-1212"
                      }
                    ],
                    "x-parser-schema-id": "<anonymous-schema-138>"
                  },
                  "about": {
                    "example": {
                      "type": "Contact",
                      "name": "Robin",
                      "identifier": {
                        "redContact_GUID": "6bf62a1b-225e-4fca-87b3-54cc09446a66"
                      }
                    },
                    "$id": "http://realestate.yodata.me/schema/about.yaml",
                    "title": "about",
                    "description": "The subject of the content",
                    "type": "object",
                    "examples": [
                      {
                        "type": "PropertyListing",
                        "streetAddress": "123 Main Street",
                        "addressLocality": "Anytown",
                        "addressRegion": "NY",
                        "postalCode": 12345,
                        "addressCountry": "US",
                        "identifier": {
                          "originatingSystemName": "originatingsystemid"
                        }
                      }
                    ]
                  },
                  "identifier": {
                    "title": "identifier",
                    "type": "object",
                    "description": "identifier assigned to a contact by the vendor who originally created the contact",
                    "examples": [
                      {
                        "salesforceid": "0031U00002XW1QWQA1"
                      },
                      {
                        "vendoraid": "123456"
                      },
                      {
                        "originating_system_id": "123456"
                      }
                    ],
                    "example": {
                      "redContact_Note_ID": "62c4a9ae-eba1-4c27-a2dd-afb4068695f8"
                    },
                    "x-parser-schema-id": "<anonymous-schema-139>"
                  }
                },
                "x-parser-schema-id": "Comment"
              },
              "target": {
                "type": "object",
                "properties": {
                  "type": {
                    "const": "Contact",
                    "x-parser-schema-id": "<anonymous-schema-141>"
                  },
                  "identifier": {
                    "title": "identifier",
                    "type": "object",
                    "description": "identifier assigned to a contact by the vendor who originally created the contact",
                    "examples": [
                      {
                        "salesforceid": "0031U00002XW1QWQA1"
                      },
                      {
                        "vendoraid": "123456"
                      },
                      {
                        "originating_system_id": "123456"
                      }
                    ],
                    "x-parser-schema-id": "<anonymous-schema-95>"
                  }
                },
                "required": [
                  "type",
                  "identifier"
                ],
                "x-parser-schema-id": "<anonymous-schema-140>"
              }
            },
            "x-parser-schema-id": "<anonymous-schema-134>"
          }
        },
        "x-parser-schema-id": "<anonymous-schema-132>"
      },
      "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
      "x-parser-original-payload": {
        "type": "object",
        "required": [
          "topic",
          "data"
        ],
        "properties": {
          "topic": {
            "const": "realestate/contact#comment"
          },
          "data": {
            "type": "object",
            "required": [
              "object",
              "target"
            ],
            "properties": {
              "type": {
                "const": "CommentAction"
              },
              "agent": {
                "type": "object",
                "properties": {
                  "type": {
                    "const": "Person"
                  },
                  "name": {
                    "type": "string",
                    "description": "the name of the item"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "x-faker": "internet.email"
                  },
                  "identifier": {
                    "title": "identifier",
                    "type": "object",
                    "description": "identifier assigned to a contact by the vendor who originally created the contact",
                    "examples": [
                      {
                        "salesforceid": "0031U00002XW1QWQA1"
                      },
                      {
                        "vendoraid": "123456"
                      },
                      {
                        "originating_system_id": "123456"
                      }
                    ]
                  }
                },
                "required": [
                  "type"
                ],
                "minProperties": 2
              },
              "object": {
                "type": "object",
                "title": "Comment",
                "description": "A comment on an item.",
                "x-range": "Comment",
                "required": [
                  "type",
                  "text"
                ],
                "properties": {
                  "type": {
                    "const": "Comment"
                  },
                  "dateCreated": {
                    "$id": "http://realestate.yodata.me/schema/dateCreated.yaml",
                    "type": "string",
                    "format": "date-time",
                    "title": "Date Created",
                    "description": "The date on which the item was created."
                  },
                  "dateModified": {
                    "description": "The date on which the item was most recently modified or when the item's entry was modified within a DataFeed.",
                    "type": "string",
                    "format": "date-time"
                  },
                  "dateDeleted": {
                    "$id": "http://realestate.yodata.me/schema/dateDeleted.yaml",
                    "type": "string",
                    "format": "date-time",
                    "title": "Date Deleted",
                    "description": "The date on which the item was deleted."
                  },
                  "text": {
                    "$id": "http://realestate.yodata.me/schema/text.yaml",
                    "title": "text",
                    "type": "string",
                    "examples": [
                      "Populus debet control notitia sua",
                      "Aspicio pinguem in his vestimentis?",
                      "Et id ipsum vitae.",
                      "Amici, Romani et cives, aures vestras mihi praebe",
                      "Heus, ego iustus occurrit tibi et hoc est insanus, sed hic numerus meus est, ut me vocas fortasse."
                    ]
                  },
                  "author": {
                    "title": "author",
                    "type": "object",
                    "description": "the author of something",
                    "examples": [
                      {
                        "type": "Contact",
                        "name": "Mark Twain",
                        "identifier": {
                          "originatingSystemName": "originating-system-id"
                        }
                      },
                      {
                        "type": "RealEstateAgent",
                        "name": "Andy Warhol",
                        "identifier": {
                          "originatingSystemName": "originating-system-id"
                        }
                      },
                      {
                        "name": "Stan Lee"
                      },
                      {
                        "email": "bob@example.com"
                      },
                      {
                        "telephone": "1-800-555-1212"
                      }
                    ]
                  },
                  "about": {
                    "example": {
                      "type": "Contact",
                      "name": "Robin",
                      "identifier": {
                        "redContact_GUID": "6bf62a1b-225e-4fca-87b3-54cc09446a66"
                      }
                    },
                    "$id": "http://realestate.yodata.me/schema/about.yaml",
                    "title": "about",
                    "description": "The subject of the content",
                    "type": "object",
                    "examples": [
                      {
                        "type": "PropertyListing",
                        "streetAddress": "123 Main Street",
                        "addressLocality": "Anytown",
                        "addressRegion": "NY",
                        "postalCode": 12345,
                        "addressCountry": "US",
                        "identifier": {
                          "originatingSystemName": "originatingsystemid"
                        }
                      }
                    ]
                  },
                  "identifier": {
                    "title": "identifier",
                    "type": "object",
                    "description": "identifier assigned to a contact by the vendor who originally created the contact",
                    "examples": [
                      {
                        "salesforceid": "0031U00002XW1QWQA1"
                      },
                      {
                        "vendoraid": "123456"
                      },
                      {
                        "originating_system_id": "123456"
                      }
                    ],
                    "example": {
                      "redContact_Note_ID": "62c4a9ae-eba1-4c27-a2dd-afb4068695f8"
                    }
                  }
                }
              },
              "target": {
                "type": "object",
                "properties": {
                  "type": {
                    "const": "Contact"
                  },
                  "identifier": {
                    "title": "identifier",
                    "type": "object",
                    "description": "identifier assigned to a contact by the vendor who originally created the contact",
                    "examples": [
                      {
                        "salesforceid": "0031U00002XW1QWQA1"
                      },
                      {
                        "vendoraid": "123456"
                      },
                      {
                        "originating_system_id": "123456"
                      }
                    ]
                  }
                },
                "required": [
                  "type",
                  "identifier"
                ]
              }
            }
          }
        }
      },
      "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
      "x-parser-message-parsed": true
    }
  },
  "contact/delete": {
    "_json": {
      "messageId": "contact#delete",
      "name": "realestate/contact#delete",
      "summary": "a contact (data.object) is deleted by a user (data.agent)",
      "headers": {
        "type": "object",
        "properties": {
          "time": {
            "type": "string",
            "format": "date-time",
            "description": "date & time the event was produced",
            "x-faker": "date.past",
            "x-parser-schema-id": "<anonymous-schema-31>"
          },
          "agent": {
            "type": "string",
            "format": "uri",
            "summary": "the event provider who sent the event via a subscription authorized to your service.",
            "description": "if you are a multi-tenant app, then the agent is the user associated with the event data.\nany future events related to this message will be sent to the same agent/recipient\n",
            "examples": [
              "https://teamsupermario.example.com/profile/card#me",
              "https://bigbrandrealestate.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-32>"
          },
          "instrument": {
            "type": "string",
            "format": "uri",
            "description": "the app or service that produced the event on behalf of the agent/user",
            "examples": [
              "http://supercrm.example.com/profile/card#me",
              "http://reliance.example.com/profile/card#me",
              "http://moxiworks.example.com/profile/card#me",
              "http://listing-manager.example.com/profile/card#me",
              "http://ace.example.com/profile/card#me",
              "http://roqlogic.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-33>"
          },
          "source": {
            "type": "string",
            "format": "uri",
            "description": "a copy of the event was sent to the source(s).",
            "examples": [
              "https://bigbrandrealestate.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-34>"
          },
          "originalRecipient": {
            "type": "string",
            "format": "uri",
            "summary": "the original recipient of the event",
            "description": "the originalRecipient helps you determine the subscription that delivered the event to you.\nif the originalRecipient is the same as the agent, then the you are subscribed to the agent.\nif the originalRecipient is different from the agent, then you are subscribed to the event source\n",
            "example": [
              "http://bigbrandrealestate.example.com/profile/card#me",
              "http://teamsupermario.example.com/profile/card#me",
              "http://bob.example.com/profile/card#me",
              "http://jane.example.com/profile/card#me",
              "http://joe.example.com/profile/card#me",
              "http://jill.example.com/profile/card#me",
              "http://jim.example.com/profile/card#me",
              "http://jennifer.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-35>"
          },
          "id": {
            "type": "string",
            "format": "uri",
            "summary": "the event id - the cannonical identifier for the event",
            "description": "the Event ID (aka \"Publish ID\") is the immutable canonical identifier for the event.\nit is a URI that is unique to the event and will not change.\nall subscribers will receive the same id for the same event.\n",
            "examples": [
              "http://supercrm.example.com/publish/12345",
              "http://reliance.example.com/publish/23456",
              "http://moxiworks.example.com/publish/34567",
              "http://listing-manager.example.com/publish/45678",
              "http://ace.example.com/publish/56789",
              "http://roqlogic.example.com/publish/67890"
            ],
            "x-parser-schema-id": "<anonymous-schema-36>"
          },
          "@id": {
            "type": "string",
            "format": "uri",
            "summary": "the @id is the url in your inbox where you can retrieve the event",
            "examples": [
              "http://reliance.example.com/inbox/23456",
              "http://moxiworks.example.com/inbox/34567",
              "http://listing-manager.example.com/inbox/45678",
              "http://ace.example.com/inbox/56789",
              "http://roqlogic.example.com/inbox/67890"
            ],
            "x-parser-schema-id": "<anonymous-schema-37>"
          }
        },
        "x-parser-schema-id": "<anonymous-schema-30>"
      },
      "payload": {
        "type": "object",
        "required": [
          "topic",
          "data"
        ],
        "properties": {
          "topic": {
            "const": "realestate/contact#delete",
            "x-parser-schema-id": "<anonymous-schema-143>"
          },
          "data": {
            "type": "object",
            "required": [
              "type",
              "object",
              "agent"
            ],
            "properties": {
              "type": {
                "const": "DeleteAction",
                "x-parser-schema-id": "<anonymous-schema-145>"
              },
              "agent": {
                "type": "object",
                "properties": {
                  "type": {
                    "const": "Person",
                    "x-parser-schema-id": "<anonymous-schema-92>"
                  },
                  "name": {
                    "type": "string",
                    "description": "the name of the item",
                    "x-parser-schema-id": "<anonymous-schema-93>"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "x-faker": "internet.email",
                    "x-parser-schema-id": "<anonymous-schema-94>"
                  },
                  "identifier": {
                    "title": "identifier",
                    "type": "object",
                    "description": "identifier assigned to a contact by the vendor who originally created the contact",
                    "examples": [
                      {
                        "salesforceid": "0031U00002XW1QWQA1"
                      },
                      {
                        "vendoraid": "123456"
                      },
                      {
                        "originating_system_id": "123456"
                      }
                    ],
                    "x-parser-schema-id": "<anonymous-schema-95>"
                  }
                },
                "required": [
                  "type"
                ],
                "minProperties": 2,
                "x-parser-schema-id": "<anonymous-schema-91>"
              },
              "object": {
                "type": "object",
                "properties": {
                  "type": {
                    "const": "Contact",
                    "x-parser-schema-id": "<anonymous-schema-141>"
                  },
                  "identifier": {
                    "title": "identifier",
                    "type": "object",
                    "description": "identifier assigned to a contact by the vendor who originally created the contact",
                    "examples": [
                      {
                        "salesforceid": "0031U00002XW1QWQA1"
                      },
                      {
                        "vendoraid": "123456"
                      },
                      {
                        "originating_system_id": "123456"
                      }
                    ],
                    "x-parser-schema-id": "<anonymous-schema-95>"
                  }
                },
                "required": [
                  "type",
                  "identifier"
                ],
                "x-parser-schema-id": "<anonymous-schema-140>"
              }
            },
            "x-parser-schema-id": "<anonymous-schema-144>"
          }
        },
        "x-parser-schema-id": "<anonymous-schema-142>"
      },
      "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
      "x-parser-original-payload": {
        "type": "object",
        "required": [
          "topic",
          "data"
        ],
        "properties": {
          "topic": {
            "const": "realestate/contact#delete"
          },
          "data": {
            "type": "object",
            "required": [
              "type",
              "object",
              "agent"
            ],
            "properties": {
              "type": {
                "const": "DeleteAction"
              },
              "agent": {
                "type": "object",
                "properties": {
                  "type": {
                    "const": "Person"
                  },
                  "name": {
                    "type": "string",
                    "description": "the name of the item"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "x-faker": "internet.email"
                  },
                  "identifier": {
                    "title": "identifier",
                    "type": "object",
                    "description": "identifier assigned to a contact by the vendor who originally created the contact",
                    "examples": [
                      {
                        "salesforceid": "0031U00002XW1QWQA1"
                      },
                      {
                        "vendoraid": "123456"
                      },
                      {
                        "originating_system_id": "123456"
                      }
                    ]
                  }
                },
                "required": [
                  "type"
                ],
                "minProperties": 2
              },
              "object": {
                "type": "object",
                "properties": {
                  "type": {
                    "const": "Contact"
                  },
                  "identifier": {
                    "title": "identifier",
                    "type": "object",
                    "description": "identifier assigned to a contact by the vendor who originally created the contact",
                    "examples": [
                      {
                        "salesforceid": "0031U00002XW1QWQA1"
                      },
                      {
                        "vendoraid": "123456"
                      },
                      {
                        "originating_system_id": "123456"
                      }
                    ]
                  }
                },
                "required": [
                  "type",
                  "identifier"
                ]
              }
            }
          }
        }
      },
      "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
      "x-parser-message-parsed": true
    }
  },
  "contact/update": {
    "_json": {
      "messageId": "contact#update",
      "name": "realestate/contact#update",
      "summary": "a contact (data.object) is updated by a user (data.agent)",
      "headers": {
        "type": "object",
        "properties": {
          "time": {
            "type": "string",
            "format": "date-time",
            "description": "date & time the event was produced",
            "x-faker": "date.past",
            "x-parser-schema-id": "<anonymous-schema-31>"
          },
          "agent": {
            "type": "string",
            "format": "uri",
            "summary": "the event provider who sent the event via a subscription authorized to your service.",
            "description": "if you are a multi-tenant app, then the agent is the user associated with the event data.\nany future events related to this message will be sent to the same agent/recipient\n",
            "examples": [
              "https://teamsupermario.example.com/profile/card#me",
              "https://bigbrandrealestate.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-32>"
          },
          "instrument": {
            "type": "string",
            "format": "uri",
            "description": "the app or service that produced the event on behalf of the agent/user",
            "examples": [
              "http://supercrm.example.com/profile/card#me",
              "http://reliance.example.com/profile/card#me",
              "http://moxiworks.example.com/profile/card#me",
              "http://listing-manager.example.com/profile/card#me",
              "http://ace.example.com/profile/card#me",
              "http://roqlogic.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-33>"
          },
          "source": {
            "type": "string",
            "format": "uri",
            "description": "a copy of the event was sent to the source(s).",
            "examples": [
              "https://bigbrandrealestate.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-34>"
          },
          "originalRecipient": {
            "type": "string",
            "format": "uri",
            "summary": "the original recipient of the event",
            "description": "the originalRecipient helps you determine the subscription that delivered the event to you.\nif the originalRecipient is the same as the agent, then the you are subscribed to the agent.\nif the originalRecipient is different from the agent, then you are subscribed to the event source\n",
            "example": [
              "http://bigbrandrealestate.example.com/profile/card#me",
              "http://teamsupermario.example.com/profile/card#me",
              "http://bob.example.com/profile/card#me",
              "http://jane.example.com/profile/card#me",
              "http://joe.example.com/profile/card#me",
              "http://jill.example.com/profile/card#me",
              "http://jim.example.com/profile/card#me",
              "http://jennifer.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-35>"
          },
          "id": {
            "type": "string",
            "format": "uri",
            "summary": "the event id - the cannonical identifier for the event",
            "description": "the Event ID (aka \"Publish ID\") is the immutable canonical identifier for the event.\nit is a URI that is unique to the event and will not change.\nall subscribers will receive the same id for the same event.\n",
            "examples": [
              "http://supercrm.example.com/publish/12345",
              "http://reliance.example.com/publish/23456",
              "http://moxiworks.example.com/publish/34567",
              "http://listing-manager.example.com/publish/45678",
              "http://ace.example.com/publish/56789",
              "http://roqlogic.example.com/publish/67890"
            ],
            "x-parser-schema-id": "<anonymous-schema-36>"
          },
          "@id": {
            "type": "string",
            "format": "uri",
            "summary": "the @id is the url in your inbox where you can retrieve the event",
            "examples": [
              "http://reliance.example.com/inbox/23456",
              "http://moxiworks.example.com/inbox/34567",
              "http://listing-manager.example.com/inbox/45678",
              "http://ace.example.com/inbox/56789",
              "http://roqlogic.example.com/inbox/67890"
            ],
            "x-parser-schema-id": "<anonymous-schema-37>"
          }
        },
        "x-parser-schema-id": "<anonymous-schema-30>"
      },
      "payload": {
        "type": "object",
        "required": [
          "topic",
          "data"
        ],
        "properties": {
          "topic": {
            "const": "realestate/contact#update",
            "x-parser-schema-id": "<anonymous-schema-147>"
          },
          "data": {
            "type": "object",
            "required": [
              "type",
              "object",
              "agent"
            ],
            "properties": {
              "type": {
                "const": "UpdateAction",
                "x-parser-schema-id": "<anonymous-schema-149>"
              },
              "agent": {
                "type": "object",
                "properties": {
                  "type": {
                    "const": "Person",
                    "x-parser-schema-id": "<anonymous-schema-92>"
                  },
                  "name": {
                    "type": "string",
                    "description": "the name of the item",
                    "x-parser-schema-id": "<anonymous-schema-93>"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "x-faker": "internet.email",
                    "x-parser-schema-id": "<anonymous-schema-94>"
                  },
                  "identifier": {
                    "title": "identifier",
                    "type": "object",
                    "description": "identifier assigned to a contact by the vendor who originally created the contact",
                    "examples": [
                      {
                        "salesforceid": "0031U00002XW1QWQA1"
                      },
                      {
                        "vendoraid": "123456"
                      },
                      {
                        "originating_system_id": "123456"
                      }
                    ],
                    "x-parser-schema-id": "<anonymous-schema-95>"
                  }
                },
                "required": [
                  "type"
                ],
                "minProperties": 2,
                "x-parser-schema-id": "<anonymous-schema-91>"
              },
              "object": {
                "allOf": [
                  {
                    "title": "Person",
                    "type": "object",
                    "required": [
                      "type",
                      "name"
                    ],
                    "properties": {
                      "type": {
                        "type": "string",
                        "x-parser-schema-id": "<anonymous-schema-96>"
                      },
                      "affiliation": {
                        "description": "An organization that this person is affiliated with",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://example.com/profile/card#me",
                          "x-parser-schema-id": "<anonymous-schema-98>"
                        },
                        "x-parser-schema-id": "<anonymous-schema-97>"
                      },
                      "address": {
                        "type": "array",
                        "items": {
                          "$id": "http://realestate.yodata.me/schemas/PostalAddress.yaml",
                          "title": "PostalAddress",
                          "type": "object",
                          "description": "A physical address.",
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "PostalAddress",
                              "x-parser-schema-id": "<anonymous-schema-100>"
                            },
                            "streetAddress": {
                              "type": "string",
                              "description": "the street number and name.",
                              "x-faker": "address.streetAddress",
                              "examples": [
                                "5046 Ottis Point",
                                "166 Marion Burg",
                                "93044 Haley Stream"
                              ],
                              "x-parser-schema-id": "<anonymous-schema-101>"
                            },
                            "postOfficeBoxNumber": {
                              "type": "string",
                              "description": "The post office box number for PO box addresses.",
                              "x-faker": "address.secondaryAddress",
                              "examples": [
                                "Box 1234",
                                "Apt. 161",
                                "Apt. 623"
                              ],
                              "x-parser-schema-id": "<anonymous-schema-102>"
                            },
                            "addressRegion": {
                              "type": "string",
                              "description": "State or Province.",
                              "x-faker": "address.state",
                              "examples": [
                                "New Jersey",
                                "California",
                                "MI",
                                null
                              ],
                              "x-parser-schema-id": "<anonymous-schema-103>"
                            },
                            "addressLocality": {
                              "type": "string",
                              "description": "City, Township.",
                              "x-faker": "address.city",
                              "examples": [
                                "Gotham City",
                                "Kulasmouth",
                                "Heidistad",
                                "Altamonte Springs",
                                "West Ahmed",
                                "Blaiseview"
                              ],
                              "x-parser-schema-id": "<anonymous-schema-104>"
                            },
                            "postalCode": {
                              "type": "string",
                              "description": "Zip/Post Code",
                              "x-faker": "address.zipCode",
                              "examples": [
                                "10010",
                                "38859",
                                "40387",
                                "50239-7698",
                                null
                              ],
                              "x-parser-schema-id": "<anonymous-schema-105>"
                            },
                            "addressCountry": {
                              "type": "string",
                              "description": "The country. For example, USA. You can also provide the two-letter ISO 3166-1 alpha-2 country code.",
                              "examples": [
                                "USA",
                                "TH",
                                "NZ",
                                "EG",
                                "SJ",
                                "VN"
                              ],
                              "x-faker": "address.countryCode",
                              "x-parser-schema-id": "<anonymous-schema-106>"
                            },
                            "addressCounty": {
                              "type": "string",
                              "description": "the county (us real estate extension)",
                              "faker": "address.county",
                              "examples": [
                                "Gotham County",
                                "Buckinghamshire",
                                "Borders",
                                null
                              ],
                              "x-parser-schema-id": "<anonymous-schema-107>"
                            },
                            "addressSubdivision": {
                              "type": "string",
                              "description": "the subdivision or neighborhood (us real estate extension)",
                              "x-faker": "address.streetName",
                              "examples": [
                                "Gotham Heights",
                                "South Kensington",
                                "SOMA (South of Market)",
                                "Nob Hill"
                              ],
                              "x-parser-schema-id": "<anonymous-schema-108>"
                            }
                          },
                          "x-parser-schema-id": "PostalAddress"
                        },
                        "x-parser-schema-id": "<anonymous-schema-99>"
                      },
                      "birthDate": {
                        "description": "date of birth.",
                        "type": "string",
                        "format": "date",
                        "x-parser-schema-id": "<anonymous-schema-109>"
                      },
                      "contactPoint": {
                        "description": "contact points for the person",
                        "type": "array",
                        "items": {
                          "$id": "http://realestate.yodata.me/schema/ContactPoint.json",
                          "title": "ContactPoint",
                          "description": "A point of contact for the entity. By convention in the real estate domain, ContactPoints\nare preferred over telephone, email, and faxNumber so the ContactPoint.name property can be used to label values\nfor example, Work Telephone, Home, as named contactPoint values.\n",
                          "type": "object",
                          "required": [
                            "type",
                            "name"
                          ],
                          "minProperties": 3,
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "ContactPoint",
                              "x-parser-schema-id": "<anonymous-schema-111>"
                            },
                            "name": {
                              "type": "string",
                              "description": "a label for the contactPoint, i.e. 'Work', or 'Home'",
                              "examples": [
                                "Work",
                                "Home",
                                "Vacation",
                                "Bob's Cell",
                                "Alice's Work"
                              ],
                              "x-parser-schema-id": "<anonymous-schema-112>"
                            },
                            "telephone": {
                              "type": "string",
                              "x-faker": "phone.phoneNumber",
                              "examples": [
                                "555-555-5555",
                                "555-555-5555 x123",
                                "555-555-5555 ext. 123",
                                "+1-555-555-5555"
                              ],
                              "x-parser-schema-id": "<anonymous-schema-113>"
                            },
                            "faxNumber": {
                              "type": "string",
                              "x-faker": "phone.phoneNumber",
                              "examples": [
                                "555-555-5555",
                                "555-555-5555 x123",
                                "555-555-5555 ext. 123",
                                "+1-555-555-5555"
                              ],
                              "x-parser-schema-id": "<anonymous-schema-114>"
                            },
                            "email": {
                              "description": "an email address for the item.",
                              "type": "string",
                              "format": "email",
                              "x-faker": "internet.email",
                              "examples": [
                                "bob@example.com",
                                "alice@example.com"
                              ],
                              "x-parser-schema-id": "<anonymous-schema-115>"
                            },
                            "url": {
                              "description": "primary URL for the item.",
                              "type": "string",
                              "format": "uri",
                              "example": "https://www.facebook.com/hallandoates",
                              "x-parser-schema-id": "<anonymous-schema-116>"
                            }
                          },
                          "x-parser-schema-id": "ContactPoint"
                        },
                        "x-parser-schema-id": "<anonymous-schema-110>"
                      },
                      "email": {
                        "type": "string",
                        "format": "email",
                        "x-faker": "internet.email",
                        "x-parser-schema-id": "<anonymous-schema-94>"
                      },
                      "additionalName": {
                        "title": "additionalName",
                        "description": "any other name(s) associated with the entity, i.e. nickname, middle name, maiden name, etc. For multiple names, use a comma without space as a separator.",
                        "type": "string",
                        "examples": [
                          "Johnny,John",
                          "Prince,The Artist Formerly Known as Prince,The Artist",
                          "Babs,Barbara",
                          "Katheryn Elizabeth Hudson,Katy Perry",
                          "Destiny Hope Cyrus,Miley Cyrus"
                        ],
                        "x-parser-schema-id": "<anonymous-schema-117>"
                      },
                      "familyName": {
                        "$id": "http://realestate.yodata.me/schema/familyName.yaml",
                        "type": "string",
                        "title": "Family Name",
                        "description": "Last Name of a person",
                        "x-faker": "name.lastName",
                        "maxLength": 50,
                        "externalDocs": {
                          "description": "Family Name",
                          "url": "https://schema.org/familyName"
                        },
                        "examples": [
                          "Smith",
                          "Jones",
                          "Parker",
                          "Monk",
                          "Brown",
                          "Miller",
                          "Davis",
                          "Wilson",
                          "Fitzgerald",
                          "Johnson",
                          "Williams"
                        ]
                      },
                      "faxNumber": {
                        "type": "string",
                        "description": "Do people still use fax machines?",
                        "x-faker": "phone.phoneNumber",
                        "x-parser-schema-id": "<anonymous-schema-118>"
                      },
                      "givenName": {
                        "type": "string",
                        "description": "First Name of a person",
                        "x-faker": "name.firstName",
                        "examples": [
                          "John",
                          "Jane",
                          "Mary",
                          "Joseph",
                          "William",
                          "David",
                          "Richard",
                          "Charles",
                          "Thomas",
                          "Christopher",
                          "Daniel",
                          "Matthew",
                          "Anthony",
                          "Donald",
                          "Mark",
                          "Paul",
                          "Steven",
                          "Andrew",
                          "Kenneth",
                          "George",
                          "Joshua",
                          "Kevin",
                          "Brian",
                          "Edward",
                          "Ronald",
                          "Timothy",
                          "Jason",
                          "Jeffrey",
                          "Ryan",
                          "Jacob"
                        ],
                        "x-parser-schema-id": "<anonymous-schema-119>"
                      },
                      "honorificPrefix": {
                        "title": "honorificPrefix",
                        "description": "An honorific prefix preceding a Person's name such as Dr/Mrs/Mr.",
                        "type": "string",
                        "example": "Dr",
                        "x-parser-schema-id": "<anonymous-schema-120>"
                      },
                      "honorificSuffix": {
                        "title": "honorificSuffix",
                        "description": "An honorific title following a person's name like M.D.",
                        "type": "string",
                        "example": "Esq",
                        "x-parser-schema-id": "<anonymous-schema-121>"
                      },
                      "jobTitle": {
                        "title": "jobTitle",
                        "description": "job tiles associated with the item",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "x-parser-schema-id": "<anonymous-schema-123>"
                        },
                        "example": [
                          "Chief Data Officer",
                          "Sanitation Engineer"
                        ],
                        "x-parser-schema-id": "<anonymous-schema-122>"
                      },
                      "knowsLanguage": {
                        "description": "languages spoken by the person",
                        "type": "array",
                        "items": {
                          "$id": "http://realestate.yodata.me/schema/Language.yaml",
                          "description": "a written or spoken Language",
                          "title": "Language",
                          "type": "object",
                          "required": [
                            "type",
                            "name",
                            "additionalName"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "Language",
                              "x-parser-schema-id": "<anonymous-schema-125>"
                            },
                            "name": {
                              "type": "string",
                              "description": "the display name of the language",
                              "x-parser-schema-id": "<anonymous-schema-126>"
                            },
                            "additionalName": {
                              "type": "string",
                              "description": "BCP 47 language code",
                              "x-parser-schema-id": "<anonymous-schema-127>"
                            }
                          },
                          "examples": [
                            {
                              "type": "Language",
                              "name": "English",
                              "additionalName": "en-us"
                            },
                            {
                              "type": "Language",
                              "name": "Spanish",
                              "additionalName": "es"
                            },
                            {
                              "type": "Language",
                              "name": "French",
                              "additionalName": "fr"
                            },
                            {
                              "type": "Language",
                              "name": "German",
                              "additionalName": "de"
                            },
                            {
                              "type": "Language",
                              "name": "Italian",
                              "additionalName": "it"
                            },
                            {
                              "type": "Language",
                              "name": "Japanese",
                              "additionalName": "ja"
                            },
                            {
                              "type": "Language",
                              "name": "Korean",
                              "additionalName": "ko"
                            },
                            {
                              "type": "Language",
                              "name": "Portuguese",
                              "additionalName": "pt"
                            },
                            {
                              "type": "Language",
                              "name": "Russian",
                              "additionalName": "ru"
                            },
                            {
                              "type": "Language",
                              "name": "Chinese",
                              "additionalName": "zh"
                            },
                            {
                              "type": "Language",
                              "name": "Arabic",
                              "additionalName": "ar"
                            },
                            {
                              "type": "Language",
                              "name": "Hindi",
                              "additionalName": "hi"
                            },
                            {
                              "type": "Language",
                              "name": "Bengali",
                              "additionalName": "bn"
                            },
                            {
                              "type": "Language",
                              "name": "Portuguese",
                              "additionalName": "pt"
                            }
                          ],
                          "x-parser-schema-id": "Language"
                        },
                        "x-parser-schema-id": "<anonymous-schema-124>"
                      },
                      "name": {
                        "description": "Full name of the person.",
                        "type": "string",
                        "x-faker": "name.findName",
                        "x-parser-schema-id": "<anonymous-schema-128>"
                      },
                      "telephone": {
                        "type": "string",
                        "description": "Primary phone number.",
                        "example": "+15558675309",
                        "x-parser-schema-id": "<anonymous-schema-129>"
                      },
                      "worksFor": {
                        "type": "string",
                        "description": "Organizations the person works for.",
                        "x-faker": "company.companyName",
                        "x-parser-schema-id": "<anonymous-schema-130>"
                      }
                    },
                    "x-parser-schema-id": "Person"
                  },
                  {
                    "title": "Contact",
                    "description": "a CRM contact.",
                    "properties": {
                      "type": {
                        "type": "string",
                        "const": "Contact"
                      },
                      "identifier": {
                        "title": "identifier",
                        "type": "object",
                        "description": "identifier assigned to a contact by the vendor who originally created the contact",
                        "examples": [
                          {
                            "salesforceid": "0031U00002XW1QWQA1"
                          },
                          {
                            "vendoraid": "123456"
                          },
                          {
                            "originating_system_id": "123456"
                          }
                        ],
                        "x-parser-schema-id": "<anonymous-schema-95>"
                      },
                      "additionalProperty": {
                        "title": "additionalProperty",
                        "type": "object",
                        "description": "additionalProperty are",
                        "example": {
                          "supercrmuserid": 1234,
                          "doNotSell": true
                        }
                      },
                      "comment": {
                        "title": "comment",
                        "type": "array",
                        "description": "comments by, for or about the item",
                        "x-range": "Comment",
                        "items": {
                          "type": "object"
                        },
                        "example": [
                          {
                            "type": "Comment",
                            "text": "this is my comment.",
                            "author": {
                              "type": "Contact",
                              "name": "Bruce Wayne"
                            },
                            "about": {
                              "type": "PropertyListing",
                              "id": "https://example.com/listingid"
                            },
                            "dateCreated": "2019-07-15T05:24:05Z",
                            "dateModified": "2019-07-15T05:24:05Z"
                          }
                        ]
                      },
                      "jobTitle": {
                        "title": "jobTitle",
                        "description": "The job title of the person (for example, Financial Manager).",
                        "type": "string",
                        "x-faker": "name.jobTitle",
                        "examples": [
                          "CEO",
                          "Sales Manager",
                          "Escrow Officer",
                          "Transaction Coordinator",
                          "Director of Marketing",
                          "Senior Loan Officer",
                          "Loan Officer",
                          "Sanitation Engineer",
                          "Owner",
                          "Cofounder",
                          "Founder",
                          "President",
                          "Vice President of Sales",
                          null,
                          null,
                          null,
                          null,
                          null,
                          null,
                          null,
                          null,
                          null,
                          null
                        ],
                        "x-parser-schema-id": "<anonymous-schema-387>"
                      },
                      "contactGroup": {
                        "type": "array",
                        "items": {
                          "$id": "http://realestate.yodata.me/schema/ContactGroup.json",
                          "title": "ContactGroup",
                          "description": "groups the contact is a member of.",
                          "type": "object",
                          "required": [
                            "type",
                            "name"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ContactGroup",
                                "Collection"
                              ]
                            },
                            "identifier": {
                              "title": "identifier",
                              "type": "object",
                              "description": "identifier assigned to a contact by the vendor who originally created the contact",
                              "examples": [
                                {
                                  "salesforceid": "0031U00002XW1QWQA1"
                                },
                                {
                                  "vendoraid": "123456"
                                },
                                {
                                  "originating_system_id": "123456"
                                }
                              ],
                              "x-parser-schema-id": "<anonymous-schema-95>"
                            },
                            "name": {
                              "type": "string",
                              "examples": [
                                "Past Clients",
                                "Prospects",
                                "Leads",
                                "Referrals",
                                "Friends",
                                "Family",
                                "Neighbors",
                                "Business Associates",
                                "Personal"
                              ]
                            }
                          }
                        }
                      },
                      "keywords": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "leadOwner": {
                        "type": "object",
                        "description": "lead owner",
                        "x-range": [
                          "RealEstateAgent",
                          "RealEstateOrganization",
                          "RealEstateTeam"
                        ],
                        "example": {
                          "type": "RealEstateOrganization",
                          "name": "Gotham City Real Estate",
                          "id": "https://example.com/profile.card#me"
                        }
                      },
                      "leadSource": {
                        "type": "object",
                        "description": "origin of the lead",
                        "x-range": [
                          "MobileApplication",
                          "RealEstateOffice",
                          "RealEstateWebsite",
                          "Thing"
                        ],
                        "example": {
                          "id": "https://www.zillow.com/homedetails/1044-Siler-Pl-Berkeley-CA-94705/24820985_zpid/",
                          "type": "RealEstateWebsite",
                          "name": "Zillow",
                          "url": "https://zillow.com"
                        }
                      },
                      "originatingSystem": {
                        "type": "object",
                        "x-range": [
                          "Thing"
                        ],
                        "description": "the original system where this item was created.  Can be of type Thing or any sub-type.",
                        "examples": [
                          {
                            "type": "SoftwareApplication",
                            "name": "RDesk",
                            "description": "User Created.",
                            "url": "http://www.rdeskwebsite.com/"
                          }
                        ]
                      },
                      "dateCreated": {
                        "$id": "http://realestate.yodata.me/schema/dateCreated.yaml",
                        "type": "string",
                        "format": "date-time",
                        "title": "Date Created",
                        "description": "The date on which the item was created."
                      },
                      "dateModified": {
                        "description": "The date on which the item was most recently modified or when the item's entry was modified within a DataFeed.",
                        "type": "string",
                        "format": "date-time",
                        "x-parser-schema-id": "<anonymous-schema-137>"
                      }
                    },
                    "x-parser-schema-id": "<anonymous-schema-131>"
                  }
                ],
                "x-parser-schema-id": "Contact"
              }
            },
            "x-parser-schema-id": "<anonymous-schema-148>"
          }
        },
        "x-parser-schema-id": "<anonymous-schema-146>"
      },
      "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
      "x-parser-original-payload": {
        "type": "object",
        "required": [
          "topic",
          "data"
        ],
        "properties": {
          "topic": {
            "const": "realestate/contact#update"
          },
          "data": {
            "type": "object",
            "required": [
              "type",
              "object",
              "agent"
            ],
            "properties": {
              "type": {
                "const": "UpdateAction"
              },
              "agent": {
                "type": "object",
                "properties": {
                  "type": {
                    "const": "Person"
                  },
                  "name": {
                    "type": "string",
                    "description": "the name of the item"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "x-faker": "internet.email"
                  },
                  "identifier": {
                    "title": "identifier",
                    "type": "object",
                    "description": "identifier assigned to a contact by the vendor who originally created the contact",
                    "examples": [
                      {
                        "salesforceid": "0031U00002XW1QWQA1"
                      },
                      {
                        "vendoraid": "123456"
                      },
                      {
                        "originating_system_id": "123456"
                      }
                    ]
                  }
                },
                "required": [
                  "type"
                ],
                "minProperties": 2
              },
              "object": {
                "allOf": [
                  {
                    "title": "Person",
                    "type": "object",
                    "required": [
                      "type",
                      "name"
                    ],
                    "properties": {
                      "type": {
                        "type": "string"
                      },
                      "affiliation": {
                        "description": "An organization that this person is affiliated with",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://example.com/profile/card#me"
                        }
                      },
                      "address": {
                        "type": "array",
                        "items": {
                          "$id": "http://realestate.yodata.me/schemas/PostalAddress.yaml",
                          "title": "PostalAddress",
                          "type": "object",
                          "description": "A physical address.",
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "PostalAddress"
                            },
                            "streetAddress": {
                              "type": "string",
                              "description": "the street number and name.",
                              "x-faker": "address.streetAddress",
                              "examples": [
                                "5046 Ottis Point",
                                "166 Marion Burg",
                                "93044 Haley Stream"
                              ]
                            },
                            "postOfficeBoxNumber": {
                              "type": "string",
                              "description": "The post office box number for PO box addresses.",
                              "x-faker": "address.secondaryAddress",
                              "examples": [
                                "Box 1234",
                                "Apt. 161",
                                "Apt. 623"
                              ]
                            },
                            "addressRegion": {
                              "type": "string",
                              "description": "State or Province.",
                              "x-faker": "address.state",
                              "examples": [
                                "New Jersey",
                                "California",
                                "MI",
                                null
                              ]
                            },
                            "addressLocality": {
                              "type": "string",
                              "description": "City, Township.",
                              "x-faker": "address.city",
                              "examples": [
                                "Gotham City",
                                "Kulasmouth",
                                "Heidistad",
                                "Altamonte Springs",
                                "West Ahmed",
                                "Blaiseview"
                              ]
                            },
                            "postalCode": {
                              "type": "string",
                              "description": "Zip/Post Code",
                              "x-faker": "address.zipCode",
                              "examples": [
                                "10010",
                                "38859",
                                "40387",
                                "50239-7698",
                                null
                              ]
                            },
                            "addressCountry": {
                              "type": "string",
                              "description": "The country. For example, USA. You can also provide the two-letter ISO 3166-1 alpha-2 country code.",
                              "examples": [
                                "USA",
                                "TH",
                                "NZ",
                                "EG",
                                "SJ",
                                "VN"
                              ],
                              "x-faker": "address.countryCode"
                            },
                            "addressCounty": {
                              "type": "string",
                              "description": "the county (us real estate extension)",
                              "faker": "address.county",
                              "examples": [
                                "Gotham County",
                                "Buckinghamshire",
                                "Borders",
                                null
                              ]
                            },
                            "addressSubdivision": {
                              "type": "string",
                              "description": "the subdivision or neighborhood (us real estate extension)",
                              "x-faker": "address.streetName",
                              "examples": [
                                "Gotham Heights",
                                "South Kensington",
                                "SOMA (South of Market)",
                                "Nob Hill"
                              ]
                            }
                          }
                        }
                      },
                      "birthDate": {
                        "description": "date of birth.",
                        "type": "string",
                        "format": "date"
                      },
                      "contactPoint": {
                        "description": "contact points for the person",
                        "type": "array",
                        "items": {
                          "$id": "http://realestate.yodata.me/schema/ContactPoint.json",
                          "title": "ContactPoint",
                          "description": "A point of contact for the entity. By convention in the real estate domain, ContactPoints\nare preferred over telephone, email, and faxNumber so the ContactPoint.name property can be used to label values\nfor example, Work Telephone, Home, as named contactPoint values.\n",
                          "type": "object",
                          "required": [
                            "type",
                            "name"
                          ],
                          "minProperties": 3,
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "ContactPoint"
                            },
                            "name": {
                              "type": "string",
                              "description": "a label for the contactPoint, i.e. 'Work', or 'Home'",
                              "examples": [
                                "Work",
                                "Home",
                                "Vacation",
                                "Bob's Cell",
                                "Alice's Work"
                              ]
                            },
                            "telephone": {
                              "type": "string",
                              "x-faker": "phone.phoneNumber",
                              "examples": [
                                "555-555-5555",
                                "555-555-5555 x123",
                                "555-555-5555 ext. 123",
                                "+1-555-555-5555"
                              ]
                            },
                            "faxNumber": {
                              "type": "string",
                              "x-faker": "phone.phoneNumber",
                              "examples": [
                                "555-555-5555",
                                "555-555-5555 x123",
                                "555-555-5555 ext. 123",
                                "+1-555-555-5555"
                              ]
                            },
                            "email": {
                              "description": "an email address for the item.",
                              "type": "string",
                              "format": "email",
                              "x-faker": "internet.email",
                              "examples": [
                                "bob@example.com",
                                "alice@example.com"
                              ]
                            },
                            "url": {
                              "description": "primary URL for the item.",
                              "type": "string",
                              "format": "uri",
                              "example": "https://www.facebook.com/hallandoates"
                            }
                          }
                        }
                      },
                      "email": {
                        "type": "string",
                        "format": "email",
                        "x-faker": "internet.email"
                      },
                      "additionalName": {
                        "title": "additionalName",
                        "description": "any other name(s) associated with the entity, i.e. nickname, middle name, maiden name, etc. For multiple names, use a comma without space as a separator.",
                        "type": "string",
                        "examples": [
                          "Johnny,John",
                          "Prince,The Artist Formerly Known as Prince,The Artist",
                          "Babs,Barbara",
                          "Katheryn Elizabeth Hudson,Katy Perry",
                          "Destiny Hope Cyrus,Miley Cyrus"
                        ]
                      },
                      "familyName": {
                        "$id": "http://realestate.yodata.me/schema/familyName.yaml",
                        "type": "string",
                        "title": "Family Name",
                        "description": "Last Name of a person",
                        "x-faker": "name.lastName",
                        "maxLength": 50,
                        "externalDocs": {
                          "description": "Family Name",
                          "url": "https://schema.org/familyName"
                        },
                        "examples": [
                          "Smith",
                          "Jones",
                          "Parker",
                          "Monk",
                          "Brown",
                          "Miller",
                          "Davis",
                          "Wilson",
                          "Fitzgerald",
                          "Johnson",
                          "Williams"
                        ]
                      },
                      "faxNumber": {
                        "type": "string",
                        "description": "Do people still use fax machines?",
                        "x-faker": "phone.phoneNumber"
                      },
                      "givenName": {
                        "type": "string",
                        "description": "First Name of a person",
                        "x-faker": "name.firstName",
                        "examples": [
                          "John",
                          "Jane",
                          "Mary",
                          "Joseph",
                          "William",
                          "David",
                          "Richard",
                          "Charles",
                          "Thomas",
                          "Christopher",
                          "Daniel",
                          "Matthew",
                          "Anthony",
                          "Donald",
                          "Mark",
                          "Paul",
                          "Steven",
                          "Andrew",
                          "Kenneth",
                          "George",
                          "Joshua",
                          "Kevin",
                          "Brian",
                          "Edward",
                          "Ronald",
                          "Timothy",
                          "Jason",
                          "Jeffrey",
                          "Ryan",
                          "Jacob"
                        ]
                      },
                      "honorificPrefix": {
                        "title": "honorificPrefix",
                        "description": "An honorific prefix preceding a Person's name such as Dr/Mrs/Mr.",
                        "type": "string",
                        "example": "Dr"
                      },
                      "honorificSuffix": {
                        "title": "honorificSuffix",
                        "description": "An honorific title following a person's name like M.D.",
                        "type": "string",
                        "example": "Esq"
                      },
                      "jobTitle": {
                        "title": "jobTitle",
                        "description": "job tiles associated with the item",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "example": [
                          "Chief Data Officer",
                          "Sanitation Engineer"
                        ]
                      },
                      "knowsLanguage": {
                        "description": "languages spoken by the person",
                        "type": "array",
                        "items": {
                          "$id": "http://realestate.yodata.me/schema/Language.yaml",
                          "description": "a written or spoken Language",
                          "title": "Language",
                          "type": "object",
                          "required": [
                            "type",
                            "name",
                            "additionalName"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "Language"
                            },
                            "name": {
                              "type": "string",
                              "description": "the display name of the language"
                            },
                            "additionalName": {
                              "type": "string",
                              "description": "BCP 47 language code"
                            }
                          },
                          "examples": [
                            {
                              "type": "Language",
                              "name": "English",
                              "additionalName": "en-us"
                            },
                            {
                              "type": "Language",
                              "name": "Spanish",
                              "additionalName": "es"
                            },
                            {
                              "type": "Language",
                              "name": "French",
                              "additionalName": "fr"
                            },
                            {
                              "type": "Language",
                              "name": "German",
                              "additionalName": "de"
                            },
                            {
                              "type": "Language",
                              "name": "Italian",
                              "additionalName": "it"
                            },
                            {
                              "type": "Language",
                              "name": "Japanese",
                              "additionalName": "ja"
                            },
                            {
                              "type": "Language",
                              "name": "Korean",
                              "additionalName": "ko"
                            },
                            {
                              "type": "Language",
                              "name": "Portuguese",
                              "additionalName": "pt"
                            },
                            {
                              "type": "Language",
                              "name": "Russian",
                              "additionalName": "ru"
                            },
                            {
                              "type": "Language",
                              "name": "Chinese",
                              "additionalName": "zh"
                            },
                            {
                              "type": "Language",
                              "name": "Arabic",
                              "additionalName": "ar"
                            },
                            {
                              "type": "Language",
                              "name": "Hindi",
                              "additionalName": "hi"
                            },
                            {
                              "type": "Language",
                              "name": "Bengali",
                              "additionalName": "bn"
                            },
                            {
                              "type": "Language",
                              "name": "Portuguese",
                              "additionalName": "pt"
                            }
                          ]
                        }
                      },
                      "name": {
                        "description": "Full name of the person.",
                        "type": "string",
                        "x-faker": "name.findName"
                      },
                      "telephone": {
                        "type": "string",
                        "description": "Primary phone number.",
                        "example": "+15558675309"
                      },
                      "worksFor": {
                        "type": "string",
                        "description": "Organizations the person works for.",
                        "x-faker": "company.companyName"
                      }
                    }
                  },
                  {
                    "title": "Contact",
                    "description": "a CRM contact.",
                    "properties": {
                      "type": {
                        "type": "string",
                        "const": "Contact"
                      },
                      "identifier": {
                        "title": "identifier",
                        "type": "object",
                        "description": "identifier assigned to a contact by the vendor who originally created the contact",
                        "examples": [
                          {
                            "salesforceid": "0031U00002XW1QWQA1"
                          },
                          {
                            "vendoraid": "123456"
                          },
                          {
                            "originating_system_id": "123456"
                          }
                        ]
                      },
                      "additionalProperty": {
                        "title": "additionalProperty",
                        "type": "object",
                        "description": "additionalProperty are",
                        "example": {
                          "supercrmuserid": 1234,
                          "doNotSell": true
                        }
                      },
                      "comment": {
                        "title": "comment",
                        "type": "array",
                        "description": "comments by, for or about the item",
                        "x-range": "Comment",
                        "items": {
                          "type": "object"
                        },
                        "example": [
                          {
                            "type": "Comment",
                            "text": "this is my comment.",
                            "author": {
                              "type": "Contact",
                              "name": "Bruce Wayne"
                            },
                            "about": {
                              "type": "PropertyListing",
                              "id": "https://example.com/listingid"
                            },
                            "dateCreated": "2019-07-15T05:24:05Z",
                            "dateModified": "2019-07-15T05:24:05Z"
                          }
                        ]
                      },
                      "jobTitle": {
                        "title": "jobTitle",
                        "description": "The job title of the person (for example, Financial Manager).",
                        "type": "string",
                        "x-faker": "name.jobTitle",
                        "examples": [
                          "CEO",
                          "Sales Manager",
                          "Escrow Officer",
                          "Transaction Coordinator",
                          "Director of Marketing",
                          "Senior Loan Officer",
                          "Loan Officer",
                          "Sanitation Engineer",
                          "Owner",
                          "Cofounder",
                          "Founder",
                          "President",
                          "Vice President of Sales",
                          null,
                          null,
                          null,
                          null,
                          null,
                          null,
                          null,
                          null,
                          null,
                          null
                        ]
                      },
                      "contactGroup": {
                        "type": "array",
                        "items": {
                          "$id": "http://realestate.yodata.me/schema/ContactGroup.json",
                          "title": "ContactGroup",
                          "description": "groups the contact is a member of.",
                          "type": "object",
                          "required": [
                            "type",
                            "name"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ContactGroup",
                                "Collection"
                              ]
                            },
                            "identifier": {
                              "title": "identifier",
                              "type": "object",
                              "description": "identifier assigned to a contact by the vendor who originally created the contact",
                              "examples": [
                                {
                                  "salesforceid": "0031U00002XW1QWQA1"
                                },
                                {
                                  "vendoraid": "123456"
                                },
                                {
                                  "originating_system_id": "123456"
                                }
                              ]
                            },
                            "name": {
                              "type": "string",
                              "examples": [
                                "Past Clients",
                                "Prospects",
                                "Leads",
                                "Referrals",
                                "Friends",
                                "Family",
                                "Neighbors",
                                "Business Associates",
                                "Personal"
                              ]
                            }
                          }
                        }
                      },
                      "keywords": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "leadOwner": {
                        "type": "object",
                        "description": "lead owner",
                        "x-range": [
                          "RealEstateAgent",
                          "RealEstateOrganization",
                          "RealEstateTeam"
                        ],
                        "example": {
                          "type": "RealEstateOrganization",
                          "name": "Gotham City Real Estate",
                          "id": "https://example.com/profile.card#me"
                        }
                      },
                      "leadSource": {
                        "type": "object",
                        "description": "origin of the lead",
                        "x-range": [
                          "MobileApplication",
                          "RealEstateOffice",
                          "RealEstateWebsite",
                          "Thing"
                        ],
                        "example": {
                          "id": "https://www.zillow.com/homedetails/1044-Siler-Pl-Berkeley-CA-94705/24820985_zpid/",
                          "type": "RealEstateWebsite",
                          "name": "Zillow",
                          "url": "https://zillow.com"
                        }
                      },
                      "originatingSystem": {
                        "type": "object",
                        "x-range": [
                          "Thing"
                        ],
                        "description": "the original system where this item was created.  Can be of type Thing or any sub-type.",
                        "examples": [
                          {
                            "type": "SoftwareApplication",
                            "name": "RDesk",
                            "description": "User Created.",
                            "url": "http://www.rdeskwebsite.com/"
                          }
                        ]
                      },
                      "dateCreated": {
                        "$id": "http://realestate.yodata.me/schema/dateCreated.yaml",
                        "type": "string",
                        "format": "date-time",
                        "title": "Date Created",
                        "description": "The date on which the item was created."
                      },
                      "dateModified": {
                        "description": "The date on which the item was most recently modified or when the item's entry was modified within a DataFeed.",
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  }
                ]
              }
            }
          }
        }
      },
      "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
      "x-parser-message-parsed": true
    }
  },
  "contact/plandelete": {
    "_json": {
      "messageId": "contact#plandelete",
      "name": "realestate/contact#plandelete",
      "summary": "a contact plan (data.object) is deleted by a user (data.agent)",
      "headers": {
        "type": "object",
        "properties": {
          "time": {
            "type": "string",
            "format": "date-time",
            "description": "date & time the event was produced",
            "x-faker": "date.past",
            "x-parser-schema-id": "<anonymous-schema-31>"
          },
          "agent": {
            "type": "string",
            "format": "uri",
            "summary": "the event provider who sent the event via a subscription authorized to your service.",
            "description": "if you are a multi-tenant app, then the agent is the user associated with the event data.\nany future events related to this message will be sent to the same agent/recipient\n",
            "examples": [
              "https://teamsupermario.example.com/profile/card#me",
              "https://bigbrandrealestate.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-32>"
          },
          "instrument": {
            "type": "string",
            "format": "uri",
            "description": "the app or service that produced the event on behalf of the agent/user",
            "examples": [
              "http://supercrm.example.com/profile/card#me",
              "http://reliance.example.com/profile/card#me",
              "http://moxiworks.example.com/profile/card#me",
              "http://listing-manager.example.com/profile/card#me",
              "http://ace.example.com/profile/card#me",
              "http://roqlogic.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-33>"
          },
          "source": {
            "type": "string",
            "format": "uri",
            "description": "a copy of the event was sent to the source(s).",
            "examples": [
              "https://bigbrandrealestate.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-34>"
          },
          "originalRecipient": {
            "type": "string",
            "format": "uri",
            "summary": "the original recipient of the event",
            "description": "the originalRecipient helps you determine the subscription that delivered the event to you.\nif the originalRecipient is the same as the agent, then the you are subscribed to the agent.\nif the originalRecipient is different from the agent, then you are subscribed to the event source\n",
            "example": [
              "http://bigbrandrealestate.example.com/profile/card#me",
              "http://teamsupermario.example.com/profile/card#me",
              "http://bob.example.com/profile/card#me",
              "http://jane.example.com/profile/card#me",
              "http://joe.example.com/profile/card#me",
              "http://jill.example.com/profile/card#me",
              "http://jim.example.com/profile/card#me",
              "http://jennifer.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-35>"
          },
          "id": {
            "type": "string",
            "format": "uri",
            "summary": "the event id - the cannonical identifier for the event",
            "description": "the Event ID (aka \"Publish ID\") is the immutable canonical identifier for the event.\nit is a URI that is unique to the event and will not change.\nall subscribers will receive the same id for the same event.\n",
            "examples": [
              "http://supercrm.example.com/publish/12345",
              "http://reliance.example.com/publish/23456",
              "http://moxiworks.example.com/publish/34567",
              "http://listing-manager.example.com/publish/45678",
              "http://ace.example.com/publish/56789",
              "http://roqlogic.example.com/publish/67890"
            ],
            "x-parser-schema-id": "<anonymous-schema-36>"
          },
          "@id": {
            "type": "string",
            "format": "uri",
            "summary": "the @id is the url in your inbox where you can retrieve the event",
            "examples": [
              "http://reliance.example.com/inbox/23456",
              "http://moxiworks.example.com/inbox/34567",
              "http://listing-manager.example.com/inbox/45678",
              "http://ace.example.com/inbox/56789",
              "http://roqlogic.example.com/inbox/67890"
            ],
            "x-parser-schema-id": "<anonymous-schema-37>"
          }
        },
        "x-parser-schema-id": "<anonymous-schema-30>"
      },
      "payload": {
        "type": "object",
        "required": [
          "topic",
          "data"
        ],
        "properties": {
          "topic": {
            "const": "realestate/contact#plandelete",
            "x-parser-schema-id": "<anonymous-schema-151>"
          },
          "data": {
            "type": "object",
            "required": [
              "type",
              "object",
              "agent"
            ],
            "properties": {
              "type": {
                "const": "DeleteAction",
                "x-parser-schema-id": "<anonymous-schema-153>"
              },
              "agent": {
                "type": "object",
                "properties": {
                  "type": {
                    "const": "Person",
                    "x-parser-schema-id": "<anonymous-schema-92>"
                  },
                  "name": {
                    "type": "string",
                    "description": "the name of the item",
                    "x-parser-schema-id": "<anonymous-schema-93>"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "x-faker": "internet.email",
                    "x-parser-schema-id": "<anonymous-schema-94>"
                  },
                  "identifier": {
                    "title": "identifier",
                    "type": "object",
                    "description": "identifier assigned to a contact by the vendor who originally created the contact",
                    "examples": [
                      {
                        "salesforceid": "0031U00002XW1QWQA1"
                      },
                      {
                        "vendoraid": "123456"
                      },
                      {
                        "originating_system_id": "123456"
                      }
                    ],
                    "x-parser-schema-id": "<anonymous-schema-95>"
                  }
                },
                "required": [
                  "type"
                ],
                "minProperties": 2,
                "x-parser-schema-id": "<anonymous-schema-91>"
              },
              "object": {
                "type": "object",
                "properties": {
                  "type": {
                    "const": "Plan",
                    "x-parser-schema-id": "<anonymous-schema-155>"
                  },
                  "name": {
                    "type": "string",
                    "description": "name of the plan",
                    "examples": [
                      "my awesome plan",
                      "annoying but effective plan",
                      "plan to take over the world",
                      "birthdays and anniversaries plan"
                    ],
                    "x-parser-schema-id": "<anonymous-schema-156>"
                  },
                  "identifier": {
                    "title": "identifier",
                    "type": "object",
                    "description": "identifier assigned to a contact by the vendor who originally created the contact",
                    "examples": [
                      {
                        "salesforceid": "0031U00002XW1QWQA1"
                      },
                      {
                        "vendoraid": "123456"
                      },
                      {
                        "originating_system_id": "123456"
                      }
                    ],
                    "x-parser-schema-id": "<anonymous-schema-95>"
                  }
                },
                "required": [
                  "type",
                  "name",
                  "identifier"
                ],
                "x-parser-schema-id": "<anonymous-schema-154>"
              }
            },
            "x-parser-schema-id": "<anonymous-schema-152>"
          }
        },
        "x-parser-schema-id": "<anonymous-schema-150>"
      },
      "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
      "x-parser-original-payload": {
        "type": "object",
        "required": [
          "topic",
          "data"
        ],
        "properties": {
          "topic": {
            "const": "realestate/contact#plandelete"
          },
          "data": {
            "type": "object",
            "required": [
              "type",
              "object",
              "agent"
            ],
            "properties": {
              "type": {
                "const": "DeleteAction"
              },
              "agent": {
                "type": "object",
                "properties": {
                  "type": {
                    "const": "Person"
                  },
                  "name": {
                    "type": "string",
                    "description": "the name of the item"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "x-faker": "internet.email"
                  },
                  "identifier": {
                    "title": "identifier",
                    "type": "object",
                    "description": "identifier assigned to a contact by the vendor who originally created the contact",
                    "examples": [
                      {
                        "salesforceid": "0031U00002XW1QWQA1"
                      },
                      {
                        "vendoraid": "123456"
                      },
                      {
                        "originating_system_id": "123456"
                      }
                    ]
                  }
                },
                "required": [
                  "type"
                ],
                "minProperties": 2
              },
              "object": {
                "type": "object",
                "properties": {
                  "type": {
                    "const": "Plan"
                  },
                  "name": {
                    "type": "string",
                    "description": "name of the plan",
                    "examples": [
                      "my awesome plan",
                      "annoying but effective plan",
                      "plan to take over the world",
                      "birthdays and anniversaries plan"
                    ]
                  },
                  "identifier": {
                    "title": "identifier",
                    "type": "object",
                    "description": "identifier assigned to a contact by the vendor who originally created the contact",
                    "examples": [
                      {
                        "salesforceid": "0031U00002XW1QWQA1"
                      },
                      {
                        "vendoraid": "123456"
                      },
                      {
                        "originating_system_id": "123456"
                      }
                    ]
                  }
                },
                "required": [
                  "type",
                  "name",
                  "identifier"
                ]
              }
            }
          }
        }
      },
      "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
      "x-parser-message-parsed": true
    }
  },
  "contact/planupdate": {
    "_json": {
      "messageId": "contact#planupdate",
      "name": "realestate/contact#planupdate",
      "summary": "a contact plan (data.object) is updated by a user (data.agent)",
      "headers": {
        "type": "object",
        "properties": {
          "time": {
            "type": "string",
            "format": "date-time",
            "description": "date & time the event was produced",
            "x-faker": "date.past",
            "x-parser-schema-id": "<anonymous-schema-31>"
          },
          "agent": {
            "type": "string",
            "format": "uri",
            "summary": "the event provider who sent the event via a subscription authorized to your service.",
            "description": "if you are a multi-tenant app, then the agent is the user associated with the event data.\nany future events related to this message will be sent to the same agent/recipient\n",
            "examples": [
              "https://teamsupermario.example.com/profile/card#me",
              "https://bigbrandrealestate.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-32>"
          },
          "instrument": {
            "type": "string",
            "format": "uri",
            "description": "the app or service that produced the event on behalf of the agent/user",
            "examples": [
              "http://supercrm.example.com/profile/card#me",
              "http://reliance.example.com/profile/card#me",
              "http://moxiworks.example.com/profile/card#me",
              "http://listing-manager.example.com/profile/card#me",
              "http://ace.example.com/profile/card#me",
              "http://roqlogic.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-33>"
          },
          "source": {
            "type": "string",
            "format": "uri",
            "description": "a copy of the event was sent to the source(s).",
            "examples": [
              "https://bigbrandrealestate.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-34>"
          },
          "originalRecipient": {
            "type": "string",
            "format": "uri",
            "summary": "the original recipient of the event",
            "description": "the originalRecipient helps you determine the subscription that delivered the event to you.\nif the originalRecipient is the same as the agent, then the you are subscribed to the agent.\nif the originalRecipient is different from the agent, then you are subscribed to the event source\n",
            "example": [
              "http://bigbrandrealestate.example.com/profile/card#me",
              "http://teamsupermario.example.com/profile/card#me",
              "http://bob.example.com/profile/card#me",
              "http://jane.example.com/profile/card#me",
              "http://joe.example.com/profile/card#me",
              "http://jill.example.com/profile/card#me",
              "http://jim.example.com/profile/card#me",
              "http://jennifer.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-35>"
          },
          "id": {
            "type": "string",
            "format": "uri",
            "summary": "the event id - the cannonical identifier for the event",
            "description": "the Event ID (aka \"Publish ID\") is the immutable canonical identifier for the event.\nit is a URI that is unique to the event and will not change.\nall subscribers will receive the same id for the same event.\n",
            "examples": [
              "http://supercrm.example.com/publish/12345",
              "http://reliance.example.com/publish/23456",
              "http://moxiworks.example.com/publish/34567",
              "http://listing-manager.example.com/publish/45678",
              "http://ace.example.com/publish/56789",
              "http://roqlogic.example.com/publish/67890"
            ],
            "x-parser-schema-id": "<anonymous-schema-36>"
          },
          "@id": {
            "type": "string",
            "format": "uri",
            "summary": "the @id is the url in your inbox where you can retrieve the event",
            "examples": [
              "http://reliance.example.com/inbox/23456",
              "http://moxiworks.example.com/inbox/34567",
              "http://listing-manager.example.com/inbox/45678",
              "http://ace.example.com/inbox/56789",
              "http://roqlogic.example.com/inbox/67890"
            ],
            "x-parser-schema-id": "<anonymous-schema-37>"
          }
        },
        "x-parser-schema-id": "<anonymous-schema-30>"
      },
      "payload": {
        "type": "object",
        "required": [
          "topic",
          "data"
        ],
        "properties": {
          "topic": {
            "const": "realestate/contact#planupdate",
            "x-parser-schema-id": "<anonymous-schema-158>"
          },
          "data": {
            "type": "object",
            "required": [
              "type",
              "object",
              "agent"
            ],
            "properties": {
              "type": {
                "const": "UpdateAction",
                "x-parser-schema-id": "<anonymous-schema-160>"
              },
              "agent": {
                "type": "object",
                "properties": {
                  "type": {
                    "const": "Person",
                    "x-parser-schema-id": "<anonymous-schema-92>"
                  },
                  "name": {
                    "type": "string",
                    "description": "the name of the item",
                    "x-parser-schema-id": "<anonymous-schema-93>"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "x-faker": "internet.email",
                    "x-parser-schema-id": "<anonymous-schema-94>"
                  },
                  "identifier": {
                    "title": "identifier",
                    "type": "object",
                    "description": "identifier assigned to a contact by the vendor who originally created the contact",
                    "examples": [
                      {
                        "salesforceid": "0031U00002XW1QWQA1"
                      },
                      {
                        "vendoraid": "123456"
                      },
                      {
                        "originating_system_id": "123456"
                      }
                    ],
                    "x-parser-schema-id": "<anonymous-schema-95>"
                  }
                },
                "required": [
                  "type"
                ],
                "minProperties": 2,
                "x-parser-schema-id": "<anonymous-schema-91>"
              },
              "object": {
                "title": "Plan",
                "type": "object",
                "description": "a collection of related tasks",
                "required": [
                  "type",
                  "identifier",
                  "name"
                ],
                "x-range": "Plan",
                "properties": {
                  "type": {
                    "const": "Plan",
                    "x-parser-schema-id": "<anonymous-schema-161>"
                  },
                  "identifier": {
                    "title": "identifier",
                    "type": "object",
                    "description": "identifier assigned to a contact by the vendor who originally created the contact",
                    "examples": [
                      {
                        "salesforceid": "0031U00002XW1QWQA1"
                      },
                      {
                        "vendoraid": "123456"
                      },
                      {
                        "originating_system_id": "123456"
                      }
                    ],
                    "x-parser-schema-id": "<anonymous-schema-95>"
                  },
                  "name": {
                    "type": "string",
                    "description": "name of the plan",
                    "examples": [
                      "my awesome plan",
                      "annoying but effective plan",
                      "plan to take over the world",
                      "birthdays and anniversaries plan"
                    ],
                    "x-parser-schema-id": "<anonymous-schema-156>"
                  },
                  "description": {
                    "type": "string",
                    "description": "description of the item",
                    "example": "this is the description of my awesome plan",
                    "x-parser-schema-id": "<anonymous-schema-162>"
                  },
                  "member": {
                    "type": "array",
                    "description": "tasks which make up the plan",
                    "items": {
                      "title": "Task",
                      "type": "object",
                      "description": "an action assigned to an agent, typically as part of a set of interdependent tasks in a Plan",
                      "x-range": "Task",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "The item type (Linked-Data @type)",
                          "enum": [
                            "Task"
                          ],
                          "x-parser-schema-id": "<anonymous-schema-164>"
                        },
                        "identifier": {
                          "title": "identifier",
                          "type": "object",
                          "description": "identifier assigned to a contact by the vendor who originally created the contact",
                          "examples": [
                            {
                              "salesforceid": "0031U00002XW1QWQA1"
                            },
                            {
                              "vendoraid": "123456"
                            },
                            {
                              "originating_system_id": "123456"
                            }
                          ],
                          "example": {
                            "redEvent_ID": "23445"
                          },
                          "x-parser-schema-id": "<anonymous-schema-165>"
                        },
                        "actionStatus": {
                          "example": "PotentialActionStatus",
                          "type": "string",
                          "description": "disposition of the Action at the time of this action message.",
                          "x-range": [
                            "CompletedActionStatus",
                            "FailedActionStatus",
                            "ActiveActionStatus",
                            "PotentialActionStatus"
                          ],
                          "enum": [
                            "CompletedActionStatus",
                            "FailedActionStatus",
                            "ActiveActionStatus",
                            "PotentialActionStatus"
                          ],
                          "x-parser-schema-id": "<anonymous-schema-166>"
                        },
                        "memberOf": {
                          "type": "object",
                          "x-range": "Plan",
                          "description": "a plan the task is associated with",
                          "example": {
                            "type": "Plan",
                            "identifier": {
                              "redPlan_ID": "xxxx"
                            }
                          },
                          "x-parser-schema-id": "<anonymous-schema-167>"
                        },
                        "agent": {
                          "type": "object",
                          "description": "the party who completed, or will complete the task",
                          "x-range": [
                            "Person",
                            "Organization",
                            "RealEstateAgent",
                            "Contact"
                          ],
                          "example": {
                            "type": "RealEstateAgent",
                            "id": "http://user.example.com/profile/card#me"
                          },
                          "x-parser-schema-id": "<anonymous-schema-168>"
                        },
                        "participant": {
                          "x-title": "participant",
                          "x-range": [
                            "Person",
                            "RealEstateAgent",
                            "RealEstateTeam",
                            "RealEstateOrganization"
                          ],
                          "description": "Other co-agents with a direct or indirect interest in the action.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "x-parser-schema-id": "<anonymous-schema-170>"
                          },
                          "example": [
                            {
                              "type": "Contact",
                              "name": "Bruce Wayne",
                              "email": "bruce@example.com",
                              "identifier": {
                                "redContact_GUID": "92d0a096-457e-4643-ace8-fa95b6bdb1c5"
                              }
                            }
                          ],
                          "x-parser-schema-id": "<anonymous-schema-169>"
                        },
                        "name": {
                          "type": "string",
                          "description": "name or title",
                          "example": "Call Ricky",
                          "x-parser-schema-id": "<anonymous-schema-171>"
                        },
                        "description": {
                          "type": "string",
                          "description": "task detailed description",
                          "example": "Agenda 1. Something 2. Something Else ...",
                          "x-parser-schema-id": "<anonymous-schema-172>"
                        },
                        "keywords": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "x-parser-schema-id": "<anonymous-schema-174>"
                          },
                          "x-parser-schema-id": "<anonymous-schema-173>"
                        },
                        "dateDue": {
                          "description": "the due date-time (ISO 8601 formated)",
                          "type": "string",
                          "format": "date-time",
                          "x-parser-schema-id": "<anonymous-schema-175>"
                        },
                        "dateCompleted": {
                          "type": "string",
                          "format": "date-time",
                          "description": "date the task was completed",
                          "x-parser-schema-id": "<anonymous-schema-176>"
                        },
                        "location": {
                          "type": "object",
                          "description": "the physical location where an event takes place",
                          "x-range": [
                            "Place"
                          ],
                          "example": {
                            "type": "Place",
                            "address": {
                              "streetAddress": "1007 Mountain Gate Rd",
                              "addressLocality": "Gotham City",
                              "addressRegion": "NJ",
                              "postalCode": "10007",
                              "addressCounty": "Gotham addressCounty",
                              "addressSubdivision": "Gotham Heights"
                            }
                          },
                          "x-parser-schema-id": "<anonymous-schema-177>"
                        }
                      },
                      "x-parser-schema-id": "Task"
                    },
                    "x-parser-schema-id": "<anonymous-schema-163>"
                  },
                  "creator": {
                    "title": "creator",
                    "description": "the item creator",
                    "x-range": [
                      "Person",
                      "Organization"
                    ],
                    "example": "http://agent.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-178>"
                  },
                  "dateCreated": {
                    "$id": "http://realestate.yodata.me/schema/dateCreated.yaml",
                    "type": "string",
                    "format": "date-time",
                    "title": "Date Created",
                    "description": "The date on which the item was created."
                  },
                  "dateModified": {
                    "description": "The date on which the item was most recently modified or when the item's entry was modified within a DataFeed.",
                    "type": "string",
                    "format": "date-time",
                    "x-parser-schema-id": "<anonymous-schema-137>"
                  },
                  "dateCompleted": {
                    "description": "The date on which the item was created.",
                    "type": "string",
                    "format": "date-time",
                    "x-parser-schema-id": "<anonymous-schema-179>"
                  }
                },
                "x-parser-schema-id": "Plan"
              }
            },
            "x-parser-schema-id": "<anonymous-schema-159>"
          }
        },
        "x-parser-schema-id": "<anonymous-schema-157>"
      },
      "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
      "x-parser-original-payload": {
        "type": "object",
        "required": [
          "topic",
          "data"
        ],
        "properties": {
          "topic": {
            "const": "realestate/contact#planupdate"
          },
          "data": {
            "type": "object",
            "required": [
              "type",
              "object",
              "agent"
            ],
            "properties": {
              "type": {
                "const": "UpdateAction"
              },
              "agent": {
                "type": "object",
                "properties": {
                  "type": {
                    "const": "Person"
                  },
                  "name": {
                    "type": "string",
                    "description": "the name of the item"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "x-faker": "internet.email"
                  },
                  "identifier": {
                    "title": "identifier",
                    "type": "object",
                    "description": "identifier assigned to a contact by the vendor who originally created the contact",
                    "examples": [
                      {
                        "salesforceid": "0031U00002XW1QWQA1"
                      },
                      {
                        "vendoraid": "123456"
                      },
                      {
                        "originating_system_id": "123456"
                      }
                    ]
                  }
                },
                "required": [
                  "type"
                ],
                "minProperties": 2
              },
              "object": {
                "title": "Plan",
                "type": "object",
                "description": "a collection of related tasks",
                "required": [
                  "type",
                  "identifier",
                  "name"
                ],
                "x-range": "Plan",
                "properties": {
                  "type": {
                    "const": "Plan"
                  },
                  "identifier": {
                    "title": "identifier",
                    "type": "object",
                    "description": "identifier assigned to a contact by the vendor who originally created the contact",
                    "examples": [
                      {
                        "salesforceid": "0031U00002XW1QWQA1"
                      },
                      {
                        "vendoraid": "123456"
                      },
                      {
                        "originating_system_id": "123456"
                      }
                    ]
                  },
                  "name": {
                    "type": "string",
                    "description": "name of the plan",
                    "examples": [
                      "my awesome plan",
                      "annoying but effective plan",
                      "plan to take over the world",
                      "birthdays and anniversaries plan"
                    ]
                  },
                  "description": {
                    "type": "string",
                    "description": "description of the item",
                    "example": "this is the description of my awesome plan"
                  },
                  "member": {
                    "type": "array",
                    "description": "tasks which make up the plan",
                    "items": {
                      "title": "Task",
                      "type": "object",
                      "description": "an action assigned to an agent, typically as part of a set of interdependent tasks in a Plan",
                      "x-range": "Task",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "The item type (Linked-Data @type)",
                          "enum": [
                            "Task"
                          ]
                        },
                        "identifier": {
                          "title": "identifier",
                          "type": "object",
                          "description": "identifier assigned to a contact by the vendor who originally created the contact",
                          "examples": [
                            {
                              "salesforceid": "0031U00002XW1QWQA1"
                            },
                            {
                              "vendoraid": "123456"
                            },
                            {
                              "originating_system_id": "123456"
                            }
                          ],
                          "example": {
                            "redEvent_ID": "23445"
                          }
                        },
                        "actionStatus": {
                          "example": "PotentialActionStatus",
                          "type": "string",
                          "description": "disposition of the Action at the time of this action message.",
                          "x-range": [
                            "CompletedActionStatus",
                            "FailedActionStatus",
                            "ActiveActionStatus",
                            "PotentialActionStatus"
                          ],
                          "enum": [
                            "CompletedActionStatus",
                            "FailedActionStatus",
                            "ActiveActionStatus",
                            "PotentialActionStatus"
                          ]
                        },
                        "memberOf": {
                          "type": "object",
                          "x-range": "Plan",
                          "description": "a plan the task is associated with",
                          "example": {
                            "type": "Plan",
                            "identifier": {
                              "redPlan_ID": "xxxx"
                            }
                          }
                        },
                        "agent": {
                          "type": "object",
                          "description": "the party who completed, or will complete the task",
                          "x-range": [
                            "Person",
                            "Organization",
                            "RealEstateAgent",
                            "Contact"
                          ],
                          "example": {
                            "type": "RealEstateAgent",
                            "id": "http://user.example.com/profile/card#me"
                          }
                        },
                        "participant": {
                          "x-title": "participant",
                          "x-range": [
                            "Person",
                            "RealEstateAgent",
                            "RealEstateTeam",
                            "RealEstateOrganization"
                          ],
                          "description": "Other co-agents with a direct or indirect interest in the action.",
                          "type": "array",
                          "items": {
                            "type": "object"
                          },
                          "example": [
                            {
                              "type": "Contact",
                              "name": "Bruce Wayne",
                              "email": "bruce@example.com",
                              "identifier": {
                                "redContact_GUID": "92d0a096-457e-4643-ace8-fa95b6bdb1c5"
                              }
                            }
                          ]
                        },
                        "name": {
                          "type": "string",
                          "description": "name or title",
                          "example": "Call Ricky"
                        },
                        "description": {
                          "type": "string",
                          "description": "task detailed description",
                          "example": "Agenda 1. Something 2. Something Else ..."
                        },
                        "keywords": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "dateDue": {
                          "description": "the due date-time (ISO 8601 formated)",
                          "type": "string",
                          "format": "date-time"
                        },
                        "dateCompleted": {
                          "type": "string",
                          "format": "date-time",
                          "description": "date the task was completed"
                        },
                        "location": {
                          "type": "object",
                          "description": "the physical location where an event takes place",
                          "x-range": [
                            "Place"
                          ],
                          "example": {
                            "type": "Place",
                            "address": {
                              "streetAddress": "1007 Mountain Gate Rd",
                              "addressLocality": "Gotham City",
                              "addressRegion": "NJ",
                              "postalCode": "10007",
                              "addressCounty": "Gotham addressCounty",
                              "addressSubdivision": "Gotham Heights"
                            }
                          }
                        }
                      }
                    }
                  },
                  "creator": {
                    "title": "creator",
                    "description": "the item creator",
                    "x-range": [
                      "Person",
                      "Organization"
                    ],
                    "example": "http://agent.example.com/profile/card#me"
                  },
                  "dateCreated": {
                    "$id": "http://realestate.yodata.me/schema/dateCreated.yaml",
                    "type": "string",
                    "format": "date-time",
                    "title": "Date Created",
                    "description": "The date on which the item was created."
                  },
                  "dateModified": {
                    "description": "The date on which the item was most recently modified or when the item's entry was modified within a DataFeed.",
                    "type": "string",
                    "format": "date-time"
                  },
                  "dateCompleted": {
                    "description": "The date on which the item was created.",
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        }
      },
      "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
      "x-parser-message-parsed": true
    }
  },
  "contact/collectioncreate": {
    "_json": {
      "messageId": "contact#collectioncreate",
      "name": "realestate/contact#collectioncreate",
      "title": "Contact Group Create",
      "summary": "a contact group was created",
      "headers": {
        "type": "object",
        "properties": {
          "time": {
            "type": "string",
            "format": "date-time",
            "description": "date & time the event was produced",
            "x-faker": "date.past",
            "x-parser-schema-id": "<anonymous-schema-31>"
          },
          "agent": {
            "type": "string",
            "format": "uri",
            "summary": "the event provider who sent the event via a subscription authorized to your service.",
            "description": "if you are a multi-tenant app, then the agent is the user associated with the event data.\nany future events related to this message will be sent to the same agent/recipient\n",
            "examples": [
              "https://teamsupermario.example.com/profile/card#me",
              "https://bigbrandrealestate.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-32>"
          },
          "instrument": {
            "type": "string",
            "format": "uri",
            "description": "the app or service that produced the event on behalf of the agent/user",
            "examples": [
              "http://supercrm.example.com/profile/card#me",
              "http://reliance.example.com/profile/card#me",
              "http://moxiworks.example.com/profile/card#me",
              "http://listing-manager.example.com/profile/card#me",
              "http://ace.example.com/profile/card#me",
              "http://roqlogic.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-33>"
          },
          "source": {
            "type": "string",
            "format": "uri",
            "description": "a copy of the event was sent to the source(s).",
            "examples": [
              "https://bigbrandrealestate.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-34>"
          },
          "originalRecipient": {
            "type": "string",
            "format": "uri",
            "summary": "the original recipient of the event",
            "description": "the originalRecipient helps you determine the subscription that delivered the event to you.\nif the originalRecipient is the same as the agent, then the you are subscribed to the agent.\nif the originalRecipient is different from the agent, then you are subscribed to the event source\n",
            "example": [
              "http://bigbrandrealestate.example.com/profile/card#me",
              "http://teamsupermario.example.com/profile/card#me",
              "http://bob.example.com/profile/card#me",
              "http://jane.example.com/profile/card#me",
              "http://joe.example.com/profile/card#me",
              "http://jill.example.com/profile/card#me",
              "http://jim.example.com/profile/card#me",
              "http://jennifer.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-35>"
          },
          "id": {
            "type": "string",
            "format": "uri",
            "summary": "the event id - the cannonical identifier for the event",
            "description": "the Event ID (aka \"Publish ID\") is the immutable canonical identifier for the event.\nit is a URI that is unique to the event and will not change.\nall subscribers will receive the same id for the same event.\n",
            "examples": [
              "http://supercrm.example.com/publish/12345",
              "http://reliance.example.com/publish/23456",
              "http://moxiworks.example.com/publish/34567",
              "http://listing-manager.example.com/publish/45678",
              "http://ace.example.com/publish/56789",
              "http://roqlogic.example.com/publish/67890"
            ],
            "x-parser-schema-id": "<anonymous-schema-36>"
          },
          "@id": {
            "type": "string",
            "format": "uri",
            "summary": "the @id is the url in your inbox where you can retrieve the event",
            "examples": [
              "http://reliance.example.com/inbox/23456",
              "http://moxiworks.example.com/inbox/34567",
              "http://listing-manager.example.com/inbox/45678",
              "http://ace.example.com/inbox/56789",
              "http://roqlogic.example.com/inbox/67890"
            ],
            "x-parser-schema-id": "<anonymous-schema-37>"
          }
        },
        "x-parser-schema-id": "<anonymous-schema-30>"
      },
      "payload": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "const": "CreateAction",
                "x-parser-schema-id": "<anonymous-schema-182>"
              },
              "agent": {
                "type": "object",
                "properties": {
                  "type": {
                    "const": "Person",
                    "x-parser-schema-id": "<anonymous-schema-92>"
                  },
                  "name": {
                    "type": "string",
                    "description": "the name of the item",
                    "x-parser-schema-id": "<anonymous-schema-93>"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "x-faker": "internet.email",
                    "x-parser-schema-id": "<anonymous-schema-94>"
                  },
                  "identifier": {
                    "title": "identifier",
                    "type": "object",
                    "description": "identifier assigned to a contact by the vendor who originally created the contact",
                    "examples": [
                      {
                        "salesforceid": "0031U00002XW1QWQA1"
                      },
                      {
                        "vendoraid": "123456"
                      },
                      {
                        "originating_system_id": "123456"
                      }
                    ],
                    "x-parser-schema-id": "<anonymous-schema-95>"
                  }
                },
                "required": [
                  "type"
                ],
                "minProperties": 2,
                "x-parser-schema-id": "<anonymous-schema-91>"
              },
              "object": {
                "title": "Contact Group Reference",
                "description": "A reference to a contact group \"collection\" with minimal properties.",
                "type": "object",
                "properties": {
                  "type": {
                    "const": "Collection",
                    "x-parser-schema-id": "<anonymous-schema-184>"
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the contact group.",
                    "examples": [
                      "Past Clients",
                      "Prospects",
                      "Friends",
                      "Family",
                      "Acquaintances",
                      "Business Contacts",
                      "Other"
                    ],
                    "x-parser-schema-id": "<anonymous-schema-185>"
                  },
                  "identifier": {
                    "title": "identifier",
                    "type": "object",
                    "description": "identifier assigned to a contact by the vendor who originally created the contact",
                    "examples": [
                      {
                        "salesforceid": "0031U00002XW1QWQA1"
                      },
                      {
                        "vendoraid": "123456"
                      },
                      {
                        "originating_system_id": "123456"
                      }
                    ],
                    "x-parser-schema-id": "<anonymous-schema-95>"
                  }
                },
                "required": [
                  "type",
                  "name"
                ],
                "x-parser-schema-id": "<anonymous-schema-183>"
              }
            },
            "x-parser-schema-id": "<anonymous-schema-181>"
          }
        },
        "x-parser-schema-id": "<anonymous-schema-180>"
      },
      "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
      "x-parser-original-payload": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "const": "CreateAction"
              },
              "agent": {
                "type": "object",
                "properties": {
                  "type": {
                    "const": "Person"
                  },
                  "name": {
                    "type": "string",
                    "description": "the name of the item"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "x-faker": "internet.email"
                  },
                  "identifier": {
                    "title": "identifier",
                    "type": "object",
                    "description": "identifier assigned to a contact by the vendor who originally created the contact",
                    "examples": [
                      {
                        "salesforceid": "0031U00002XW1QWQA1"
                      },
                      {
                        "vendoraid": "123456"
                      },
                      {
                        "originating_system_id": "123456"
                      }
                    ]
                  }
                },
                "required": [
                  "type"
                ],
                "minProperties": 2
              },
              "object": {
                "title": "Contact Group Reference",
                "description": "A reference to a contact group \"collection\" with minimal properties.",
                "type": "object",
                "properties": {
                  "type": {
                    "const": "Collection"
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the contact group.",
                    "examples": [
                      "Past Clients",
                      "Prospects",
                      "Friends",
                      "Family",
                      "Acquaintances",
                      "Business Contacts",
                      "Other"
                    ]
                  },
                  "identifier": {
                    "title": "identifier",
                    "type": "object",
                    "description": "identifier assigned to a contact by the vendor who originally created the contact",
                    "examples": [
                      {
                        "salesforceid": "0031U00002XW1QWQA1"
                      },
                      {
                        "vendoraid": "123456"
                      },
                      {
                        "originating_system_id": "123456"
                      }
                    ]
                  }
                },
                "required": [
                  "type",
                  "name"
                ]
              }
            }
          }
        }
      },
      "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
      "x-parser-message-parsed": true
    }
  },
  "contact/collectiondelete": {
    "_json": {
      "messageId": "contact#collectiondelete",
      "name": "realestate/contact#collectiondelete",
      "summary": "a contact collection (data.object) is deleted by a user (data.agent)",
      "headers": {
        "type": "object",
        "properties": {
          "time": {
            "type": "string",
            "format": "date-time",
            "description": "date & time the event was produced",
            "x-faker": "date.past",
            "x-parser-schema-id": "<anonymous-schema-31>"
          },
          "agent": {
            "type": "string",
            "format": "uri",
            "summary": "the event provider who sent the event via a subscription authorized to your service.",
            "description": "if you are a multi-tenant app, then the agent is the user associated with the event data.\nany future events related to this message will be sent to the same agent/recipient\n",
            "examples": [
              "https://teamsupermario.example.com/profile/card#me",
              "https://bigbrandrealestate.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-32>"
          },
          "instrument": {
            "type": "string",
            "format": "uri",
            "description": "the app or service that produced the event on behalf of the agent/user",
            "examples": [
              "http://supercrm.example.com/profile/card#me",
              "http://reliance.example.com/profile/card#me",
              "http://moxiworks.example.com/profile/card#me",
              "http://listing-manager.example.com/profile/card#me",
              "http://ace.example.com/profile/card#me",
              "http://roqlogic.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-33>"
          },
          "source": {
            "type": "string",
            "format": "uri",
            "description": "a copy of the event was sent to the source(s).",
            "examples": [
              "https://bigbrandrealestate.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-34>"
          },
          "originalRecipient": {
            "type": "string",
            "format": "uri",
            "summary": "the original recipient of the event",
            "description": "the originalRecipient helps you determine the subscription that delivered the event to you.\nif the originalRecipient is the same as the agent, then the you are subscribed to the agent.\nif the originalRecipient is different from the agent, then you are subscribed to the event source\n",
            "example": [
              "http://bigbrandrealestate.example.com/profile/card#me",
              "http://teamsupermario.example.com/profile/card#me",
              "http://bob.example.com/profile/card#me",
              "http://jane.example.com/profile/card#me",
              "http://joe.example.com/profile/card#me",
              "http://jill.example.com/profile/card#me",
              "http://jim.example.com/profile/card#me",
              "http://jennifer.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-35>"
          },
          "id": {
            "type": "string",
            "format": "uri",
            "summary": "the event id - the cannonical identifier for the event",
            "description": "the Event ID (aka \"Publish ID\") is the immutable canonical identifier for the event.\nit is a URI that is unique to the event and will not change.\nall subscribers will receive the same id for the same event.\n",
            "examples": [
              "http://supercrm.example.com/publish/12345",
              "http://reliance.example.com/publish/23456",
              "http://moxiworks.example.com/publish/34567",
              "http://listing-manager.example.com/publish/45678",
              "http://ace.example.com/publish/56789",
              "http://roqlogic.example.com/publish/67890"
            ],
            "x-parser-schema-id": "<anonymous-schema-36>"
          },
          "@id": {
            "type": "string",
            "format": "uri",
            "summary": "the @id is the url in your inbox where you can retrieve the event",
            "examples": [
              "http://reliance.example.com/inbox/23456",
              "http://moxiworks.example.com/inbox/34567",
              "http://listing-manager.example.com/inbox/45678",
              "http://ace.example.com/inbox/56789",
              "http://roqlogic.example.com/inbox/67890"
            ],
            "x-parser-schema-id": "<anonymous-schema-37>"
          }
        },
        "x-parser-schema-id": "<anonymous-schema-30>"
      },
      "payload": {
        "type": "object",
        "required": [
          "topic",
          "data"
        ],
        "properties": {
          "topic": {
            "const": "realestate/contact#collectiondelete",
            "x-parser-schema-id": "<anonymous-schema-187>"
          },
          "data": {
            "type": "object",
            "required": [
              "object"
            ],
            "properties": {
              "type": {
                "const": "DeleteAction",
                "x-parser-schema-id": "<anonymous-schema-189>"
              },
              "agent": {
                "type": "object",
                "properties": {
                  "type": {
                    "const": "Person",
                    "x-parser-schema-id": "<anonymous-schema-92>"
                  },
                  "name": {
                    "type": "string",
                    "description": "the name of the item",
                    "x-parser-schema-id": "<anonymous-schema-93>"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "x-faker": "internet.email",
                    "x-parser-schema-id": "<anonymous-schema-94>"
                  },
                  "identifier": {
                    "title": "identifier",
                    "type": "object",
                    "description": "identifier assigned to a contact by the vendor who originally created the contact",
                    "examples": [
                      {
                        "salesforceid": "0031U00002XW1QWQA1"
                      },
                      {
                        "vendoraid": "123456"
                      },
                      {
                        "originating_system_id": "123456"
                      }
                    ],
                    "x-parser-schema-id": "<anonymous-schema-95>"
                  }
                },
                "required": [
                  "type"
                ],
                "minProperties": 2,
                "x-parser-schema-id": "<anonymous-schema-91>"
              },
              "object": {
                "title": "Contact Group Reference",
                "description": "A reference to a contact group \"collection\" with minimal properties.",
                "type": "object",
                "properties": {
                  "type": {
                    "const": "Collection",
                    "x-parser-schema-id": "<anonymous-schema-184>"
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the contact group.",
                    "examples": [
                      "Past Clients",
                      "Prospects",
                      "Friends",
                      "Family",
                      "Acquaintances",
                      "Business Contacts",
                      "Other"
                    ],
                    "x-parser-schema-id": "<anonymous-schema-185>"
                  },
                  "identifier": {
                    "title": "identifier",
                    "type": "object",
                    "description": "identifier assigned to a contact by the vendor who originally created the contact",
                    "examples": [
                      {
                        "salesforceid": "0031U00002XW1QWQA1"
                      },
                      {
                        "vendoraid": "123456"
                      },
                      {
                        "originating_system_id": "123456"
                      }
                    ],
                    "x-parser-schema-id": "<anonymous-schema-95>"
                  }
                },
                "required": [
                  "type",
                  "name"
                ],
                "x-parser-schema-id": "<anonymous-schema-183>"
              }
            },
            "x-parser-schema-id": "<anonymous-schema-188>"
          }
        },
        "x-parser-schema-id": "<anonymous-schema-186>"
      },
      "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
      "x-parser-original-payload": {
        "type": "object",
        "required": [
          "topic",
          "data"
        ],
        "properties": {
          "topic": {
            "const": "realestate/contact#collectiondelete"
          },
          "data": {
            "type": "object",
            "required": [
              "object"
            ],
            "properties": {
              "type": {
                "const": "DeleteAction"
              },
              "agent": {
                "type": "object",
                "properties": {
                  "type": {
                    "const": "Person"
                  },
                  "name": {
                    "type": "string",
                    "description": "the name of the item"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "x-faker": "internet.email"
                  },
                  "identifier": {
                    "title": "identifier",
                    "type": "object",
                    "description": "identifier assigned to a contact by the vendor who originally created the contact",
                    "examples": [
                      {
                        "salesforceid": "0031U00002XW1QWQA1"
                      },
                      {
                        "vendoraid": "123456"
                      },
                      {
                        "originating_system_id": "123456"
                      }
                    ]
                  }
                },
                "required": [
                  "type"
                ],
                "minProperties": 2
              },
              "object": {
                "title": "Contact Group Reference",
                "description": "A reference to a contact group \"collection\" with minimal properties.",
                "type": "object",
                "properties": {
                  "type": {
                    "const": "Collection"
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the contact group.",
                    "examples": [
                      "Past Clients",
                      "Prospects",
                      "Friends",
                      "Family",
                      "Acquaintances",
                      "Business Contacts",
                      "Other"
                    ]
                  },
                  "identifier": {
                    "title": "identifier",
                    "type": "object",
                    "description": "identifier assigned to a contact by the vendor who originally created the contact",
                    "examples": [
                      {
                        "salesforceid": "0031U00002XW1QWQA1"
                      },
                      {
                        "vendoraid": "123456"
                      },
                      {
                        "originating_system_id": "123456"
                      }
                    ]
                  }
                },
                "required": [
                  "type",
                  "name"
                ]
              }
            }
          }
        }
      },
      "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
      "x-parser-message-parsed": true
    }
  },
  "contact/collectionmemberadd": {
    "_json": {
      "messageId": "contact#collectionmemberadd",
      "name": "realestate/contact#collectionmemberadd",
      "summary": "a contact (data.object) is added to a contact collection (data.targetCollection) by a user (data.agent)",
      "headers": {
        "type": "object",
        "properties": {
          "time": {
            "type": "string",
            "format": "date-time",
            "description": "date & time the event was produced",
            "x-faker": "date.past",
            "x-parser-schema-id": "<anonymous-schema-31>"
          },
          "agent": {
            "type": "string",
            "format": "uri",
            "summary": "the event provider who sent the event via a subscription authorized to your service.",
            "description": "if you are a multi-tenant app, then the agent is the user associated with the event data.\nany future events related to this message will be sent to the same agent/recipient\n",
            "examples": [
              "https://teamsupermario.example.com/profile/card#me",
              "https://bigbrandrealestate.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-32>"
          },
          "instrument": {
            "type": "string",
            "format": "uri",
            "description": "the app or service that produced the event on behalf of the agent/user",
            "examples": [
              "http://supercrm.example.com/profile/card#me",
              "http://reliance.example.com/profile/card#me",
              "http://moxiworks.example.com/profile/card#me",
              "http://listing-manager.example.com/profile/card#me",
              "http://ace.example.com/profile/card#me",
              "http://roqlogic.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-33>"
          },
          "source": {
            "type": "string",
            "format": "uri",
            "description": "a copy of the event was sent to the source(s).",
            "examples": [
              "https://bigbrandrealestate.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-34>"
          },
          "originalRecipient": {
            "type": "string",
            "format": "uri",
            "summary": "the original recipient of the event",
            "description": "the originalRecipient helps you determine the subscription that delivered the event to you.\nif the originalRecipient is the same as the agent, then the you are subscribed to the agent.\nif the originalRecipient is different from the agent, then you are subscribed to the event source\n",
            "example": [
              "http://bigbrandrealestate.example.com/profile/card#me",
              "http://teamsupermario.example.com/profile/card#me",
              "http://bob.example.com/profile/card#me",
              "http://jane.example.com/profile/card#me",
              "http://joe.example.com/profile/card#me",
              "http://jill.example.com/profile/card#me",
              "http://jim.example.com/profile/card#me",
              "http://jennifer.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-35>"
          },
          "id": {
            "type": "string",
            "format": "uri",
            "summary": "the event id - the cannonical identifier for the event",
            "description": "the Event ID (aka \"Publish ID\") is the immutable canonical identifier for the event.\nit is a URI that is unique to the event and will not change.\nall subscribers will receive the same id for the same event.\n",
            "examples": [
              "http://supercrm.example.com/publish/12345",
              "http://reliance.example.com/publish/23456",
              "http://moxiworks.example.com/publish/34567",
              "http://listing-manager.example.com/publish/45678",
              "http://ace.example.com/publish/56789",
              "http://roqlogic.example.com/publish/67890"
            ],
            "x-parser-schema-id": "<anonymous-schema-36>"
          },
          "@id": {
            "type": "string",
            "format": "uri",
            "summary": "the @id is the url in your inbox where you can retrieve the event",
            "examples": [
              "http://reliance.example.com/inbox/23456",
              "http://moxiworks.example.com/inbox/34567",
              "http://listing-manager.example.com/inbox/45678",
              "http://ace.example.com/inbox/56789",
              "http://roqlogic.example.com/inbox/67890"
            ],
            "x-parser-schema-id": "<anonymous-schema-37>"
          }
        },
        "x-parser-schema-id": "<anonymous-schema-30>"
      },
      "payload": {
        "type": "object",
        "required": [
          "topic",
          "data"
        ],
        "properties": {
          "topic": {
            "const": "realestate/contact#collectionmemberadd",
            "x-parser-schema-id": "<anonymous-schema-191>"
          },
          "data": {
            "type": "object",
            "required": [
              "object",
              "targetCollection"
            ],
            "properties": {
              "type": {
                "const": "AddAction",
                "x-parser-schema-id": "<anonymous-schema-193>"
              },
              "agent": {
                "type": "object",
                "properties": {
                  "type": {
                    "const": "Person",
                    "x-parser-schema-id": "<anonymous-schema-92>"
                  },
                  "name": {
                    "type": "string",
                    "description": "the name of the item",
                    "x-parser-schema-id": "<anonymous-schema-93>"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "x-faker": "internet.email",
                    "x-parser-schema-id": "<anonymous-schema-94>"
                  },
                  "identifier": {
                    "title": "identifier",
                    "type": "object",
                    "description": "identifier assigned to a contact by the vendor who originally created the contact",
                    "examples": [
                      {
                        "salesforceid": "0031U00002XW1QWQA1"
                      },
                      {
                        "vendoraid": "123456"
                      },
                      {
                        "originating_system_id": "123456"
                      }
                    ],
                    "x-parser-schema-id": "<anonymous-schema-95>"
                  }
                },
                "required": [
                  "type"
                ],
                "minProperties": 2,
                "x-parser-schema-id": "<anonymous-schema-91>"
              },
              "object": {
                "type": "object",
                "properties": {
                  "type": {
                    "const": "Contact",
                    "x-parser-schema-id": "<anonymous-schema-141>"
                  },
                  "identifier": {
                    "title": "identifier",
                    "type": "object",
                    "description": "identifier assigned to a contact by the vendor who originally created the contact",
                    "examples": [
                      {
                        "salesforceid": "0031U00002XW1QWQA1"
                      },
                      {
                        "vendoraid": "123456"
                      },
                      {
                        "originating_system_id": "123456"
                      }
                    ],
                    "x-parser-schema-id": "<anonymous-schema-95>"
                  }
                },
                "required": [
                  "type",
                  "identifier"
                ],
                "x-parser-schema-id": "<anonymous-schema-140>"
              },
              "targetCollection": {
                "title": "Contact Group Reference",
                "description": "A reference to a contact group \"collection\" with minimal properties.",
                "type": "object",
                "properties": {
                  "type": {
                    "const": "Collection",
                    "x-parser-schema-id": "<anonymous-schema-184>"
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the contact group.",
                    "examples": [
                      "Past Clients",
                      "Prospects",
                      "Friends",
                      "Family",
                      "Acquaintances",
                      "Business Contacts",
                      "Other"
                    ],
                    "x-parser-schema-id": "<anonymous-schema-185>"
                  },
                  "identifier": {
                    "title": "identifier",
                    "type": "object",
                    "description": "identifier assigned to a contact by the vendor who originally created the contact",
                    "examples": [
                      {
                        "salesforceid": "0031U00002XW1QWQA1"
                      },
                      {
                        "vendoraid": "123456"
                      },
                      {
                        "originating_system_id": "123456"
                      }
                    ],
                    "x-parser-schema-id": "<anonymous-schema-95>"
                  }
                },
                "required": [
                  "type",
                  "name"
                ],
                "x-parser-schema-id": "<anonymous-schema-183>"
              }
            },
            "x-parser-schema-id": "<anonymous-schema-192>"
          }
        },
        "x-parser-schema-id": "<anonymous-schema-190>"
      },
      "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
      "x-parser-original-payload": {
        "type": "object",
        "required": [
          "topic",
          "data"
        ],
        "properties": {
          "topic": {
            "const": "realestate/contact#collectionmemberadd"
          },
          "data": {
            "type": "object",
            "required": [
              "object",
              "targetCollection"
            ],
            "properties": {
              "type": {
                "const": "AddAction"
              },
              "agent": {
                "type": "object",
                "properties": {
                  "type": {
                    "const": "Person"
                  },
                  "name": {
                    "type": "string",
                    "description": "the name of the item"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "x-faker": "internet.email"
                  },
                  "identifier": {
                    "title": "identifier",
                    "type": "object",
                    "description": "identifier assigned to a contact by the vendor who originally created the contact",
                    "examples": [
                      {
                        "salesforceid": "0031U00002XW1QWQA1"
                      },
                      {
                        "vendoraid": "123456"
                      },
                      {
                        "originating_system_id": "123456"
                      }
                    ]
                  }
                },
                "required": [
                  "type"
                ],
                "minProperties": 2
              },
              "object": {
                "type": "object",
                "properties": {
                  "type": {
                    "const": "Contact"
                  },
                  "identifier": {
                    "title": "identifier",
                    "type": "object",
                    "description": "identifier assigned to a contact by the vendor who originally created the contact",
                    "examples": [
                      {
                        "salesforceid": "0031U00002XW1QWQA1"
                      },
                      {
                        "vendoraid": "123456"
                      },
                      {
                        "originating_system_id": "123456"
                      }
                    ]
                  }
                },
                "required": [
                  "type",
                  "identifier"
                ]
              },
              "targetCollection": {
                "title": "Contact Group Reference",
                "description": "A reference to a contact group \"collection\" with minimal properties.",
                "type": "object",
                "properties": {
                  "type": {
                    "const": "Collection"
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the contact group.",
                    "examples": [
                      "Past Clients",
                      "Prospects",
                      "Friends",
                      "Family",
                      "Acquaintances",
                      "Business Contacts",
                      "Other"
                    ]
                  },
                  "identifier": {
                    "title": "identifier",
                    "type": "object",
                    "description": "identifier assigned to a contact by the vendor who originally created the contact",
                    "examples": [
                      {
                        "salesforceid": "0031U00002XW1QWQA1"
                      },
                      {
                        "vendoraid": "123456"
                      },
                      {
                        "originating_system_id": "123456"
                      }
                    ]
                  }
                },
                "required": [
                  "type",
                  "name"
                ]
              }
            }
          }
        }
      },
      "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
      "x-parser-message-parsed": true
    }
  },
  "contact/collectionmemberremove": {
    "_json": {
      "messageId": "contact#collectionmemberremove",
      "name": "realestate/contact#collectionmemberremove",
      "summary": "a contact was removed from collection",
      "headers": {
        "type": "object",
        "properties": {
          "time": {
            "type": "string",
            "format": "date-time",
            "description": "date & time the event was produced",
            "x-faker": "date.past",
            "x-parser-schema-id": "<anonymous-schema-31>"
          },
          "agent": {
            "type": "string",
            "format": "uri",
            "summary": "the event provider who sent the event via a subscription authorized to your service.",
            "description": "if you are a multi-tenant app, then the agent is the user associated with the event data.\nany future events related to this message will be sent to the same agent/recipient\n",
            "examples": [
              "https://teamsupermario.example.com/profile/card#me",
              "https://bigbrandrealestate.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-32>"
          },
          "instrument": {
            "type": "string",
            "format": "uri",
            "description": "the app or service that produced the event on behalf of the agent/user",
            "examples": [
              "http://supercrm.example.com/profile/card#me",
              "http://reliance.example.com/profile/card#me",
              "http://moxiworks.example.com/profile/card#me",
              "http://listing-manager.example.com/profile/card#me",
              "http://ace.example.com/profile/card#me",
              "http://roqlogic.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-33>"
          },
          "source": {
            "type": "string",
            "format": "uri",
            "description": "a copy of the event was sent to the source(s).",
            "examples": [
              "https://bigbrandrealestate.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-34>"
          },
          "originalRecipient": {
            "type": "string",
            "format": "uri",
            "summary": "the original recipient of the event",
            "description": "the originalRecipient helps you determine the subscription that delivered the event to you.\nif the originalRecipient is the same as the agent, then the you are subscribed to the agent.\nif the originalRecipient is different from the agent, then you are subscribed to the event source\n",
            "example": [
              "http://bigbrandrealestate.example.com/profile/card#me",
              "http://teamsupermario.example.com/profile/card#me",
              "http://bob.example.com/profile/card#me",
              "http://jane.example.com/profile/card#me",
              "http://joe.example.com/profile/card#me",
              "http://jill.example.com/profile/card#me",
              "http://jim.example.com/profile/card#me",
              "http://jennifer.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-35>"
          },
          "id": {
            "type": "string",
            "format": "uri",
            "summary": "the event id - the cannonical identifier for the event",
            "description": "the Event ID (aka \"Publish ID\") is the immutable canonical identifier for the event.\nit is a URI that is unique to the event and will not change.\nall subscribers will receive the same id for the same event.\n",
            "examples": [
              "http://supercrm.example.com/publish/12345",
              "http://reliance.example.com/publish/23456",
              "http://moxiworks.example.com/publish/34567",
              "http://listing-manager.example.com/publish/45678",
              "http://ace.example.com/publish/56789",
              "http://roqlogic.example.com/publish/67890"
            ],
            "x-parser-schema-id": "<anonymous-schema-36>"
          },
          "@id": {
            "type": "string",
            "format": "uri",
            "summary": "the @id is the url in your inbox where you can retrieve the event",
            "examples": [
              "http://reliance.example.com/inbox/23456",
              "http://moxiworks.example.com/inbox/34567",
              "http://listing-manager.example.com/inbox/45678",
              "http://ace.example.com/inbox/56789",
              "http://roqlogic.example.com/inbox/67890"
            ],
            "x-parser-schema-id": "<anonymous-schema-37>"
          }
        },
        "x-parser-schema-id": "<anonymous-schema-30>"
      },
      "payload": {
        "type": "object",
        "properties": {
          "topic": {
            "const": "realestate/contact#collectionmemberremove",
            "x-parser-schema-id": "<anonymous-schema-195>"
          },
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "const": "RemoveAction",
                "x-parser-schema-id": "<anonymous-schema-197>"
              },
              "agent": {
                "type": "object",
                "properties": {
                  "type": {
                    "const": "Person",
                    "x-parser-schema-id": "<anonymous-schema-92>"
                  },
                  "name": {
                    "type": "string",
                    "description": "the name of the item",
                    "x-parser-schema-id": "<anonymous-schema-93>"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "x-faker": "internet.email",
                    "x-parser-schema-id": "<anonymous-schema-94>"
                  },
                  "identifier": {
                    "title": "identifier",
                    "type": "object",
                    "description": "identifier assigned to a contact by the vendor who originally created the contact",
                    "examples": [
                      {
                        "salesforceid": "0031U00002XW1QWQA1"
                      },
                      {
                        "vendoraid": "123456"
                      },
                      {
                        "originating_system_id": "123456"
                      }
                    ],
                    "x-parser-schema-id": "<anonymous-schema-95>"
                  }
                },
                "required": [
                  "type"
                ],
                "minProperties": 2,
                "x-parser-schema-id": "<anonymous-schema-91>"
              },
              "object": {
                "type": "object",
                "properties": {
                  "type": {
                    "const": "Contact",
                    "x-parser-schema-id": "<anonymous-schema-141>"
                  },
                  "identifier": {
                    "title": "identifier",
                    "type": "object",
                    "description": "identifier assigned to a contact by the vendor who originally created the contact",
                    "examples": [
                      {
                        "salesforceid": "0031U00002XW1QWQA1"
                      },
                      {
                        "vendoraid": "123456"
                      },
                      {
                        "originating_system_id": "123456"
                      }
                    ],
                    "x-parser-schema-id": "<anonymous-schema-95>"
                  }
                },
                "required": [
                  "type",
                  "identifier"
                ],
                "x-parser-schema-id": "<anonymous-schema-140>"
              },
              "targetCollection": {
                "title": "Contact Group Reference",
                "description": "A reference to a contact group \"collection\" with minimal properties.",
                "type": "object",
                "properties": {
                  "type": {
                    "const": "Collection",
                    "x-parser-schema-id": "<anonymous-schema-184>"
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the contact group.",
                    "examples": [
                      "Past Clients",
                      "Prospects",
                      "Friends",
                      "Family",
                      "Acquaintances",
                      "Business Contacts",
                      "Other"
                    ],
                    "x-parser-schema-id": "<anonymous-schema-185>"
                  },
                  "identifier": {
                    "title": "identifier",
                    "type": "object",
                    "description": "identifier assigned to a contact by the vendor who originally created the contact",
                    "examples": [
                      {
                        "salesforceid": "0031U00002XW1QWQA1"
                      },
                      {
                        "vendoraid": "123456"
                      },
                      {
                        "originating_system_id": "123456"
                      }
                    ],
                    "x-parser-schema-id": "<anonymous-schema-95>"
                  }
                },
                "required": [
                  "type",
                  "name"
                ],
                "x-parser-schema-id": "<anonymous-schema-183>"
              }
            },
            "x-parser-schema-id": "<anonymous-schema-196>"
          }
        },
        "x-parser-schema-id": "<anonymous-schema-194>"
      },
      "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
      "x-parser-original-payload": {
        "type": "object",
        "properties": {
          "topic": {
            "const": "realestate/contact#collectionmemberremove"
          },
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "const": "RemoveAction"
              },
              "agent": {
                "type": "object",
                "properties": {
                  "type": {
                    "const": "Person"
                  },
                  "name": {
                    "type": "string",
                    "description": "the name of the item"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "x-faker": "internet.email"
                  },
                  "identifier": {
                    "title": "identifier",
                    "type": "object",
                    "description": "identifier assigned to a contact by the vendor who originally created the contact",
                    "examples": [
                      {
                        "salesforceid": "0031U00002XW1QWQA1"
                      },
                      {
                        "vendoraid": "123456"
                      },
                      {
                        "originating_system_id": "123456"
                      }
                    ]
                  }
                },
                "required": [
                  "type"
                ],
                "minProperties": 2
              },
              "object": {
                "type": "object",
                "properties": {
                  "type": {
                    "const": "Contact"
                  },
                  "identifier": {
                    "title": "identifier",
                    "type": "object",
                    "description": "identifier assigned to a contact by the vendor who originally created the contact",
                    "examples": [
                      {
                        "salesforceid": "0031U00002XW1QWQA1"
                      },
                      {
                        "vendoraid": "123456"
                      },
                      {
                        "originating_system_id": "123456"
                      }
                    ]
                  }
                },
                "required": [
                  "type",
                  "identifier"
                ]
              },
              "targetCollection": {
                "title": "Contact Group Reference",
                "description": "A reference to a contact group \"collection\" with minimal properties.",
                "type": "object",
                "properties": {
                  "type": {
                    "const": "Collection"
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the contact group.",
                    "examples": [
                      "Past Clients",
                      "Prospects",
                      "Friends",
                      "Family",
                      "Acquaintances",
                      "Business Contacts",
                      "Other"
                    ]
                  },
                  "identifier": {
                    "title": "identifier",
                    "type": "object",
                    "description": "identifier assigned to a contact by the vendor who originally created the contact",
                    "examples": [
                      {
                        "salesforceid": "0031U00002XW1QWQA1"
                      },
                      {
                        "vendoraid": "123456"
                      },
                      {
                        "originating_system_id": "123456"
                      }
                    ]
                  }
                },
                "required": [
                  "type",
                  "name"
                ]
              }
            }
          }
        }
      },
      "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
      "x-parser-message-parsed": true
    }
  },
  "lead/accept": {
    "_json": {
      "messageId": "lead#accept",
      "name": "realestate/lead#accept",
      "summary": "a lead (data.object) was accepted by the recipient (data.recipient).",
      "headers": {
        "type": "object",
        "properties": {
          "time": {
            "type": "string",
            "format": "date-time",
            "description": "date & time the event was produced",
            "x-faker": "date.past",
            "x-parser-schema-id": "<anonymous-schema-31>"
          },
          "agent": {
            "type": "string",
            "format": "uri",
            "summary": "the event provider who sent the event via a subscription authorized to your service.",
            "description": "if you are a multi-tenant app, then the agent is the user associated with the event data.\nany future events related to this message will be sent to the same agent/recipient\n",
            "examples": [
              "https://teamsupermario.example.com/profile/card#me",
              "https://bigbrandrealestate.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-32>"
          },
          "instrument": {
            "type": "string",
            "format": "uri",
            "description": "the app or service that produced the event on behalf of the agent/user",
            "examples": [
              "http://supercrm.example.com/profile/card#me",
              "http://reliance.example.com/profile/card#me",
              "http://moxiworks.example.com/profile/card#me",
              "http://listing-manager.example.com/profile/card#me",
              "http://ace.example.com/profile/card#me",
              "http://roqlogic.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-33>"
          },
          "source": {
            "type": "string",
            "format": "uri",
            "description": "a copy of the event was sent to the source(s).",
            "examples": [
              "https://bigbrandrealestate.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-34>"
          },
          "originalRecipient": {
            "type": "string",
            "format": "uri",
            "summary": "the original recipient of the event",
            "description": "the originalRecipient helps you determine the subscription that delivered the event to you.\nif the originalRecipient is the same as the agent, then the you are subscribed to the agent.\nif the originalRecipient is different from the agent, then you are subscribed to the event source\n",
            "example": [
              "http://bigbrandrealestate.example.com/profile/card#me",
              "http://teamsupermario.example.com/profile/card#me",
              "http://bob.example.com/profile/card#me",
              "http://jane.example.com/profile/card#me",
              "http://joe.example.com/profile/card#me",
              "http://jill.example.com/profile/card#me",
              "http://jim.example.com/profile/card#me",
              "http://jennifer.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-35>"
          },
          "id": {
            "type": "string",
            "format": "uri",
            "summary": "the event id - the cannonical identifier for the event",
            "description": "the Event ID (aka \"Publish ID\") is the immutable canonical identifier for the event.\nit is a URI that is unique to the event and will not change.\nall subscribers will receive the same id for the same event.\n",
            "examples": [
              "http://supercrm.example.com/publish/12345",
              "http://reliance.example.com/publish/23456",
              "http://moxiworks.example.com/publish/34567",
              "http://listing-manager.example.com/publish/45678",
              "http://ace.example.com/publish/56789",
              "http://roqlogic.example.com/publish/67890"
            ],
            "x-parser-schema-id": "<anonymous-schema-36>"
          },
          "@id": {
            "type": "string",
            "format": "uri",
            "summary": "the @id is the url in your inbox where you can retrieve the event",
            "examples": [
              "http://reliance.example.com/inbox/23456",
              "http://moxiworks.example.com/inbox/34567",
              "http://listing-manager.example.com/inbox/45678",
              "http://ace.example.com/inbox/56789",
              "http://roqlogic.example.com/inbox/67890"
            ],
            "x-parser-schema-id": "<anonymous-schema-37>"
          }
        },
        "x-parser-schema-id": "<anonymous-schema-30>"
      },
      "payload": {
        "type": "object",
        "properties": {
          "type": {
            "const": "lead#accept",
            "x-parser-schema-id": "<anonymous-schema-208>"
          },
          "object": {
            "title": "Lead",
            "type": "object",
            "x-range": "Lead",
            "description": "a sales opportunity (object) offered by a sender to a recipient.",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "Lead"
                ],
                "description": "Lead",
                "x-parser-schema-id": "<anonymous-schema-209>"
              },
              "identifier": {
                "title": "identifier",
                "type": "object",
                "description": "identifier assigned to a contact by the vendor who originally created the contact",
                "examples": [
                  {
                    "salesforceid": "0031U00002XW1QWQA1"
                  },
                  {
                    "vendoraid": "123456"
                  },
                  {
                    "originating_system_id": "123456"
                  }
                ],
                "x-parser-schema-id": "<anonymous-schema-95>"
              },
              "object": {
                "description": "the lead (Contact)",
                "x-range": [
                  "Contact"
                ],
                "type": "object",
                "example": {
                  "type": "Contact",
                  "name": "Joe Smith",
                  "telephone": "731-620-9877 x6155",
                  "email": "Giuseppe.Lang62@hotmail.com"
                },
                "x-parser-schema-id": "<anonymous-schema-210>"
              },
              "recipient": {
                "description": "the lead recipient",
                "type": "string",
                "format": "uri",
                "example": "http://{lead-recipient}.example.com/profile/card#me",
                "x-parser-schema-id": "<anonymous-schema-211>"
              },
              "sender": {
                "description": "the lead provider",
                "type": "string",
                "format": "uri",
                "example": "http://{lead-sender}.example.com/profile/card#me",
                "x-parser-schema-id": "<anonymous-schema-212>"
              },
              "owner": {
                "description": "the original owner of the lead",
                "x-range": [
                  "RealEstateOrganization",
                  "RealEstateAgent",
                  "Person"
                ],
                "type": "string",
                "format": "uri",
                "example": "http://{lead-owner}.example.com/profile/card#me",
                "x-parser-schema-id": "<anonymous-schema-213>"
              },
              "dateAccepted": {
                "type": "string",
                "description": "The date/time the item was accepted by the recipient",
                "x-range": "DateTime",
                "example": "2019-11-25T04:23:32.000Z",
                "x-parser-schema-id": "<anonymous-schema-214>"
              },
              "dateRejected": {
                "type": "string",
                "format": "date-time",
                "description": "The date/time the item was rejected by the recipient",
                "x-parser-schema-id": "<anonymous-schema-215>"
              },
              "dateSent": {
                "description": "the date the lead was sent",
                "type": "string",
                "format": "date-time",
                "x-parser-schema-id": "<anonymous-schema-216>"
              },
              "dateReceived": {
                "type": "string",
                "description": "The date/time the item was received by it's recipient",
                "x-range": "DateTime",
                "example": "2019-11-25T04:23:32.000Z",
                "x-parser-schema-id": "<anonymous-schema-217>"
              },
              "leadSource": {
                "description": "lead origin, may be a website event or a thing such as a website, zillow, mobile applicaton.",
                "x-range": [
                  "Action",
                  "RealEstateWebSite",
                  "MobileApplication"
                ],
                "type": "array",
                "items": {
                  "type": "object",
                  "example": {
                    "type": "AskAction",
                    "object": {
                      "type": "Question",
                      "text": "Help me I'm trapped inside documentation."
                    }
                  },
                  "x-parser-schema-id": "<anonymous-schema-219>"
                },
                "x-parser-schema-id": "<anonymous-schema-218>"
              }
            },
            "x-parser-schema-id": "Lead"
          }
        },
        "x-parser-schema-id": "<anonymous-schema-207>"
      },
      "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
      "x-parser-original-payload": {
        "type": "object",
        "properties": {
          "type": {
            "const": "lead#accept"
          },
          "object": {
            "title": "Lead",
            "type": "object",
            "x-range": "Lead",
            "description": "a sales opportunity (object) offered by a sender to a recipient.",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "Lead"
                ],
                "description": "Lead"
              },
              "identifier": {
                "title": "identifier",
                "type": "object",
                "description": "identifier assigned to a contact by the vendor who originally created the contact",
                "examples": [
                  {
                    "salesforceid": "0031U00002XW1QWQA1"
                  },
                  {
                    "vendoraid": "123456"
                  },
                  {
                    "originating_system_id": "123456"
                  }
                ]
              },
              "object": {
                "description": "the lead (Contact)",
                "x-range": [
                  "Contact"
                ],
                "type": "object",
                "example": {
                  "type": "Contact",
                  "name": "Joe Smith",
                  "telephone": "731-620-9877 x6155",
                  "email": "Giuseppe.Lang62@hotmail.com"
                }
              },
              "recipient": {
                "description": "the lead recipient",
                "type": "string",
                "format": "uri",
                "example": "http://{lead-recipient}.example.com/profile/card#me"
              },
              "sender": {
                "description": "the lead provider",
                "type": "string",
                "format": "uri",
                "example": "http://{lead-sender}.example.com/profile/card#me"
              },
              "owner": {
                "description": "the original owner of the lead",
                "x-range": [
                  "RealEstateOrganization",
                  "RealEstateAgent",
                  "Person"
                ],
                "type": "string",
                "format": "uri",
                "example": "http://{lead-owner}.example.com/profile/card#me"
              },
              "dateAccepted": {
                "type": "string",
                "description": "The date/time the item was accepted by the recipient",
                "x-range": "DateTime",
                "example": "2019-11-25T04:23:32.000Z"
              },
              "dateRejected": {
                "type": "string",
                "format": "date-time",
                "description": "The date/time the item was rejected by the recipient"
              },
              "dateSent": {
                "description": "the date the lead was sent",
                "type": "string",
                "format": "date-time"
              },
              "dateReceived": {
                "type": "string",
                "description": "The date/time the item was received by it's recipient",
                "x-range": "DateTime",
                "example": "2019-11-25T04:23:32.000Z"
              },
              "leadSource": {
                "description": "lead origin, may be a website event or a thing such as a website, zillow, mobile applicaton.",
                "x-range": [
                  "Action",
                  "RealEstateWebSite",
                  "MobileApplication"
                ],
                "type": "array",
                "items": {
                  "type": "object",
                  "example": {
                    "type": "AskAction",
                    "object": {
                      "type": "Question",
                      "text": "Help me I'm trapped inside documentation."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
      "x-parser-message-parsed": true
    }
  },
  "lead/add": {
    "_json": {
      "messageId": "lead#add",
      "name": "realestate/lead#add",
      "summary": "a crm lead was created",
      "headers": {
        "type": "object",
        "properties": {
          "topic": {
            "const": "realestate/lead#add",
            "x-parser-schema-id": "<anonymous-schema-221>"
          }
        },
        "x-parser-schema-id": "<anonymous-schema-220>"
      },
      "payload": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "const": "lead#add",
                "x-parser-schema-id": "<anonymous-schema-224>"
              },
              "object": {
                "title": "Lead",
                "type": "object",
                "x-range": "Lead",
                "description": "a sales opportunity (object) offered by a sender to a recipient.",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Lead"
                    ],
                    "description": "Lead",
                    "x-parser-schema-id": "<anonymous-schema-209>"
                  },
                  "identifier": {
                    "title": "identifier",
                    "type": "object",
                    "description": "identifier assigned to a contact by the vendor who originally created the contact",
                    "examples": [
                      {
                        "salesforceid": "0031U00002XW1QWQA1"
                      },
                      {
                        "vendoraid": "123456"
                      },
                      {
                        "originating_system_id": "123456"
                      }
                    ],
                    "x-parser-schema-id": "<anonymous-schema-95>"
                  },
                  "object": {
                    "description": "the lead (Contact)",
                    "x-range": [
                      "Contact"
                    ],
                    "type": "object",
                    "example": {
                      "type": "Contact",
                      "name": "Joe Smith",
                      "telephone": "731-620-9877 x6155",
                      "email": "Giuseppe.Lang62@hotmail.com"
                    },
                    "x-parser-schema-id": "<anonymous-schema-210>"
                  },
                  "recipient": {
                    "description": "the lead recipient",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{lead-recipient}.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-211>"
                  },
                  "sender": {
                    "description": "the lead provider",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{lead-sender}.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-212>"
                  },
                  "owner": {
                    "description": "the original owner of the lead",
                    "x-range": [
                      "RealEstateOrganization",
                      "RealEstateAgent",
                      "Person"
                    ],
                    "type": "string",
                    "format": "uri",
                    "example": "http://{lead-owner}.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-213>"
                  },
                  "dateAccepted": {
                    "type": "string",
                    "description": "The date/time the item was accepted by the recipient",
                    "x-range": "DateTime",
                    "example": "2019-11-25T04:23:32.000Z",
                    "x-parser-schema-id": "<anonymous-schema-214>"
                  },
                  "dateRejected": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date/time the item was rejected by the recipient",
                    "x-parser-schema-id": "<anonymous-schema-215>"
                  },
                  "dateSent": {
                    "description": "the date the lead was sent",
                    "type": "string",
                    "format": "date-time",
                    "x-parser-schema-id": "<anonymous-schema-216>"
                  },
                  "dateReceived": {
                    "type": "string",
                    "description": "The date/time the item was received by it's recipient",
                    "x-range": "DateTime",
                    "example": "2019-11-25T04:23:32.000Z",
                    "x-parser-schema-id": "<anonymous-schema-217>"
                  },
                  "leadSource": {
                    "description": "lead origin, may be a website event or a thing such as a website, zillow, mobile applicaton.",
                    "x-range": [
                      "Action",
                      "RealEstateWebSite",
                      "MobileApplication"
                    ],
                    "type": "array",
                    "items": {
                      "type": "object",
                      "example": {
                        "type": "AskAction",
                        "object": {
                          "type": "Question",
                          "text": "Help me I'm trapped inside documentation."
                        }
                      },
                      "x-parser-schema-id": "<anonymous-schema-219>"
                    },
                    "x-parser-schema-id": "<anonymous-schema-218>"
                  }
                },
                "x-parser-schema-id": "Lead"
              }
            },
            "x-parser-schema-id": "<anonymous-schema-223>"
          }
        },
        "x-parser-schema-id": "<anonymous-schema-222>"
      },
      "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
      "x-parser-original-payload": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "const": "lead#add"
              },
              "object": {
                "title": "Lead",
                "type": "object",
                "x-range": "Lead",
                "description": "a sales opportunity (object) offered by a sender to a recipient.",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Lead"
                    ],
                    "description": "Lead"
                  },
                  "identifier": {
                    "title": "identifier",
                    "type": "object",
                    "description": "identifier assigned to a contact by the vendor who originally created the contact",
                    "examples": [
                      {
                        "salesforceid": "0031U00002XW1QWQA1"
                      },
                      {
                        "vendoraid": "123456"
                      },
                      {
                        "originating_system_id": "123456"
                      }
                    ]
                  },
                  "object": {
                    "description": "the lead (Contact)",
                    "x-range": [
                      "Contact"
                    ],
                    "type": "object",
                    "example": {
                      "type": "Contact",
                      "name": "Joe Smith",
                      "telephone": "731-620-9877 x6155",
                      "email": "Giuseppe.Lang62@hotmail.com"
                    }
                  },
                  "recipient": {
                    "description": "the lead recipient",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{lead-recipient}.example.com/profile/card#me"
                  },
                  "sender": {
                    "description": "the lead provider",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{lead-sender}.example.com/profile/card#me"
                  },
                  "owner": {
                    "description": "the original owner of the lead",
                    "x-range": [
                      "RealEstateOrganization",
                      "RealEstateAgent",
                      "Person"
                    ],
                    "type": "string",
                    "format": "uri",
                    "example": "http://{lead-owner}.example.com/profile/card#me"
                  },
                  "dateAccepted": {
                    "type": "string",
                    "description": "The date/time the item was accepted by the recipient",
                    "x-range": "DateTime",
                    "example": "2019-11-25T04:23:32.000Z"
                  },
                  "dateRejected": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date/time the item was rejected by the recipient"
                  },
                  "dateSent": {
                    "description": "the date the lead was sent",
                    "type": "string",
                    "format": "date-time"
                  },
                  "dateReceived": {
                    "type": "string",
                    "description": "The date/time the item was received by it's recipient",
                    "x-range": "DateTime",
                    "example": "2019-11-25T04:23:32.000Z"
                  },
                  "leadSource": {
                    "description": "lead origin, may be a website event or a thing such as a website, zillow, mobile applicaton.",
                    "x-range": [
                      "Action",
                      "RealEstateWebSite",
                      "MobileApplication"
                    ],
                    "type": "array",
                    "items": {
                      "type": "object",
                      "example": {
                        "type": "AskAction",
                        "object": {
                          "type": "Question",
                          "text": "Help me I'm trapped inside documentation."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
      "x-parser-message-parsed": true
    }
  },
  "lead/assign": {
    "_json": {
      "messageId": "lead#asssign",
      "name": "realestate/lead#assign",
      "summary": "a lead was assigned",
      "headers": {
        "type": "object",
        "properties": {
          "topic": {
            "const": "realestate/lead#assign",
            "x-parser-schema-id": "<anonymous-schema-226>"
          }
        },
        "x-parser-schema-id": "<anonymous-schema-225>"
      },
      "payload": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "const": "lead#assign",
                "x-parser-schema-id": "<anonymous-schema-229>"
              },
              "object": {
                "title": "Lead",
                "type": "object",
                "x-range": "Lead",
                "description": "a sales opportunity (object) offered by a sender to a recipient.",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Lead"
                    ],
                    "description": "Lead",
                    "x-parser-schema-id": "<anonymous-schema-209>"
                  },
                  "identifier": {
                    "title": "identifier",
                    "type": "object",
                    "description": "identifier assigned to a contact by the vendor who originally created the contact",
                    "examples": [
                      {
                        "salesforceid": "0031U00002XW1QWQA1"
                      },
                      {
                        "vendoraid": "123456"
                      },
                      {
                        "originating_system_id": "123456"
                      }
                    ],
                    "x-parser-schema-id": "<anonymous-schema-95>"
                  },
                  "object": {
                    "description": "the lead (Contact)",
                    "x-range": [
                      "Contact"
                    ],
                    "type": "object",
                    "example": {
                      "type": "Contact",
                      "name": "Joe Smith",
                      "telephone": "731-620-9877 x6155",
                      "email": "Giuseppe.Lang62@hotmail.com"
                    },
                    "x-parser-schema-id": "<anonymous-schema-210>"
                  },
                  "recipient": {
                    "description": "the lead recipient",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{lead-recipient}.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-211>"
                  },
                  "sender": {
                    "description": "the lead provider",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{lead-sender}.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-212>"
                  },
                  "owner": {
                    "description": "the original owner of the lead",
                    "x-range": [
                      "RealEstateOrganization",
                      "RealEstateAgent",
                      "Person"
                    ],
                    "type": "string",
                    "format": "uri",
                    "example": "http://{lead-owner}.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-213>"
                  },
                  "dateAccepted": {
                    "type": "string",
                    "description": "The date/time the item was accepted by the recipient",
                    "x-range": "DateTime",
                    "example": "2019-11-25T04:23:32.000Z",
                    "x-parser-schema-id": "<anonymous-schema-214>"
                  },
                  "dateRejected": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date/time the item was rejected by the recipient",
                    "x-parser-schema-id": "<anonymous-schema-215>"
                  },
                  "dateSent": {
                    "description": "the date the lead was sent",
                    "type": "string",
                    "format": "date-time",
                    "x-parser-schema-id": "<anonymous-schema-216>"
                  },
                  "dateReceived": {
                    "type": "string",
                    "description": "The date/time the item was received by it's recipient",
                    "x-range": "DateTime",
                    "example": "2019-11-25T04:23:32.000Z",
                    "x-parser-schema-id": "<anonymous-schema-217>"
                  },
                  "leadSource": {
                    "description": "lead origin, may be a website event or a thing such as a website, zillow, mobile applicaton.",
                    "x-range": [
                      "Action",
                      "RealEstateWebSite",
                      "MobileApplication"
                    ],
                    "type": "array",
                    "items": {
                      "type": "object",
                      "example": {
                        "type": "AskAction",
                        "object": {
                          "type": "Question",
                          "text": "Help me I'm trapped inside documentation."
                        }
                      },
                      "x-parser-schema-id": "<anonymous-schema-219>"
                    },
                    "x-parser-schema-id": "<anonymous-schema-218>"
                  }
                },
                "x-parser-schema-id": "Lead"
              },
              "agent": {
                "description": "the assignor, typically the lead owner",
                "type": "string",
                "format": "uri",
                "x-parser-schema-id": "<anonymous-schema-230>"
              },
              "recipient": {
                "description": "the assignee of the lead.",
                "type": "string",
                "format": "uri",
                "example": "http://andyagent.example.com/profile/card#me",
                "x-parser-schema-id": "<anonymous-schema-231>"
              }
            },
            "x-parser-schema-id": "<anonymous-schema-228>"
          }
        },
        "x-parser-schema-id": "<anonymous-schema-227>"
      },
      "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
      "x-parser-original-payload": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "const": "lead#assign"
              },
              "object": {
                "title": "Lead",
                "type": "object",
                "x-range": "Lead",
                "description": "a sales opportunity (object) offered by a sender to a recipient.",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Lead"
                    ],
                    "description": "Lead"
                  },
                  "identifier": {
                    "title": "identifier",
                    "type": "object",
                    "description": "identifier assigned to a contact by the vendor who originally created the contact",
                    "examples": [
                      {
                        "salesforceid": "0031U00002XW1QWQA1"
                      },
                      {
                        "vendoraid": "123456"
                      },
                      {
                        "originating_system_id": "123456"
                      }
                    ]
                  },
                  "object": {
                    "description": "the lead (Contact)",
                    "x-range": [
                      "Contact"
                    ],
                    "type": "object",
                    "example": {
                      "type": "Contact",
                      "name": "Joe Smith",
                      "telephone": "731-620-9877 x6155",
                      "email": "Giuseppe.Lang62@hotmail.com"
                    }
                  },
                  "recipient": {
                    "description": "the lead recipient",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{lead-recipient}.example.com/profile/card#me"
                  },
                  "sender": {
                    "description": "the lead provider",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{lead-sender}.example.com/profile/card#me"
                  },
                  "owner": {
                    "description": "the original owner of the lead",
                    "x-range": [
                      "RealEstateOrganization",
                      "RealEstateAgent",
                      "Person"
                    ],
                    "type": "string",
                    "format": "uri",
                    "example": "http://{lead-owner}.example.com/profile/card#me"
                  },
                  "dateAccepted": {
                    "type": "string",
                    "description": "The date/time the item was accepted by the recipient",
                    "x-range": "DateTime",
                    "example": "2019-11-25T04:23:32.000Z"
                  },
                  "dateRejected": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date/time the item was rejected by the recipient"
                  },
                  "dateSent": {
                    "description": "the date the lead was sent",
                    "type": "string",
                    "format": "date-time"
                  },
                  "dateReceived": {
                    "type": "string",
                    "description": "The date/time the item was received by it's recipient",
                    "x-range": "DateTime",
                    "example": "2019-11-25T04:23:32.000Z"
                  },
                  "leadSource": {
                    "description": "lead origin, may be a website event or a thing such as a website, zillow, mobile applicaton.",
                    "x-range": [
                      "Action",
                      "RealEstateWebSite",
                      "MobileApplication"
                    ],
                    "type": "array",
                    "items": {
                      "type": "object",
                      "example": {
                        "type": "AskAction",
                        "object": {
                          "type": "Question",
                          "text": "Help me I'm trapped inside documentation."
                        }
                      }
                    }
                  }
                }
              },
              "agent": {
                "description": "the assignor, typically the lead owner",
                "type": "string",
                "format": "uri"
              },
              "recipient": {
                "description": "the assignee of the lead.",
                "type": "string",
                "format": "uri",
                "example": "http://andyagent.example.com/profile/card#me"
              }
            }
          }
        }
      },
      "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
      "x-parser-message-parsed": true
    }
  },
  "lead/update": {
    "_json": {
      "messageId": "lead#update",
      "name": "realestate/lead#update",
      "summary": "a crm lead was updated",
      "headers": {
        "type": "object",
        "properties": {
          "topic": {
            "const": "realestate/lead#update",
            "x-parser-schema-id": "<anonymous-schema-233>"
          }
        },
        "x-parser-schema-id": "<anonymous-schema-232>"
      },
      "payload": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "const": "UpdateAction",
                "x-parser-schema-id": "<anonymous-schema-236>"
              },
              "object": {
                "title": "Lead",
                "type": "object",
                "x-range": "Lead",
                "description": "a sales opportunity (object) offered by a sender to a recipient.",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Lead"
                    ],
                    "description": "Lead",
                    "x-parser-schema-id": "<anonymous-schema-209>"
                  },
                  "identifier": {
                    "title": "identifier",
                    "type": "object",
                    "description": "identifier assigned to a contact by the vendor who originally created the contact",
                    "examples": [
                      {
                        "salesforceid": "0031U00002XW1QWQA1"
                      },
                      {
                        "vendoraid": "123456"
                      },
                      {
                        "originating_system_id": "123456"
                      }
                    ],
                    "x-parser-schema-id": "<anonymous-schema-95>"
                  },
                  "object": {
                    "description": "the lead (Contact)",
                    "x-range": [
                      "Contact"
                    ],
                    "type": "object",
                    "example": {
                      "type": "Contact",
                      "name": "Joe Smith",
                      "telephone": "731-620-9877 x6155",
                      "email": "Giuseppe.Lang62@hotmail.com"
                    },
                    "x-parser-schema-id": "<anonymous-schema-210>"
                  },
                  "recipient": {
                    "description": "the lead recipient",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{lead-recipient}.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-211>"
                  },
                  "sender": {
                    "description": "the lead provider",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{lead-sender}.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-212>"
                  },
                  "owner": {
                    "description": "the original owner of the lead",
                    "x-range": [
                      "RealEstateOrganization",
                      "RealEstateAgent",
                      "Person"
                    ],
                    "type": "string",
                    "format": "uri",
                    "example": "http://{lead-owner}.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-213>"
                  },
                  "dateAccepted": {
                    "type": "string",
                    "description": "The date/time the item was accepted by the recipient",
                    "x-range": "DateTime",
                    "example": "2019-11-25T04:23:32.000Z",
                    "x-parser-schema-id": "<anonymous-schema-214>"
                  },
                  "dateRejected": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date/time the item was rejected by the recipient",
                    "x-parser-schema-id": "<anonymous-schema-215>"
                  },
                  "dateSent": {
                    "description": "the date the lead was sent",
                    "type": "string",
                    "format": "date-time",
                    "x-parser-schema-id": "<anonymous-schema-216>"
                  },
                  "dateReceived": {
                    "type": "string",
                    "description": "The date/time the item was received by it's recipient",
                    "x-range": "DateTime",
                    "example": "2019-11-25T04:23:32.000Z",
                    "x-parser-schema-id": "<anonymous-schema-217>"
                  },
                  "leadSource": {
                    "description": "lead origin, may be a website event or a thing such as a website, zillow, mobile applicaton.",
                    "x-range": [
                      "Action",
                      "RealEstateWebSite",
                      "MobileApplication"
                    ],
                    "type": "array",
                    "items": {
                      "type": "object",
                      "example": {
                        "type": "AskAction",
                        "object": {
                          "type": "Question",
                          "text": "Help me I'm trapped inside documentation."
                        }
                      },
                      "x-parser-schema-id": "<anonymous-schema-219>"
                    },
                    "x-parser-schema-id": "<anonymous-schema-218>"
                  }
                },
                "x-parser-schema-id": "Lead"
              },
              "agent": {
                "type": "string",
                "description": "user who effected the change",
                "format": "uri",
                "example": "https://{lead-admin}.bhhs.hsaffailites.com/profile/card",
                "x-parser-schema-id": "<anonymous-schema-237>"
              }
            },
            "x-parser-schema-id": "<anonymous-schema-235>"
          }
        },
        "x-parser-schema-id": "<anonymous-schema-234>"
      },
      "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
      "x-parser-original-payload": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "const": "UpdateAction"
              },
              "object": {
                "title": "Lead",
                "type": "object",
                "x-range": "Lead",
                "description": "a sales opportunity (object) offered by a sender to a recipient.",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Lead"
                    ],
                    "description": "Lead"
                  },
                  "identifier": {
                    "title": "identifier",
                    "type": "object",
                    "description": "identifier assigned to a contact by the vendor who originally created the contact",
                    "examples": [
                      {
                        "salesforceid": "0031U00002XW1QWQA1"
                      },
                      {
                        "vendoraid": "123456"
                      },
                      {
                        "originating_system_id": "123456"
                      }
                    ]
                  },
                  "object": {
                    "description": "the lead (Contact)",
                    "x-range": [
                      "Contact"
                    ],
                    "type": "object",
                    "example": {
                      "type": "Contact",
                      "name": "Joe Smith",
                      "telephone": "731-620-9877 x6155",
                      "email": "Giuseppe.Lang62@hotmail.com"
                    }
                  },
                  "recipient": {
                    "description": "the lead recipient",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{lead-recipient}.example.com/profile/card#me"
                  },
                  "sender": {
                    "description": "the lead provider",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{lead-sender}.example.com/profile/card#me"
                  },
                  "owner": {
                    "description": "the original owner of the lead",
                    "x-range": [
                      "RealEstateOrganization",
                      "RealEstateAgent",
                      "Person"
                    ],
                    "type": "string",
                    "format": "uri",
                    "example": "http://{lead-owner}.example.com/profile/card#me"
                  },
                  "dateAccepted": {
                    "type": "string",
                    "description": "The date/time the item was accepted by the recipient",
                    "x-range": "DateTime",
                    "example": "2019-11-25T04:23:32.000Z"
                  },
                  "dateRejected": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date/time the item was rejected by the recipient"
                  },
                  "dateSent": {
                    "description": "the date the lead was sent",
                    "type": "string",
                    "format": "date-time"
                  },
                  "dateReceived": {
                    "type": "string",
                    "description": "The date/time the item was received by it's recipient",
                    "x-range": "DateTime",
                    "example": "2019-11-25T04:23:32.000Z"
                  },
                  "leadSource": {
                    "description": "lead origin, may be a website event or a thing such as a website, zillow, mobile applicaton.",
                    "x-range": [
                      "Action",
                      "RealEstateWebSite",
                      "MobileApplication"
                    ],
                    "type": "array",
                    "items": {
                      "type": "object",
                      "example": {
                        "type": "AskAction",
                        "object": {
                          "type": "Question",
                          "text": "Help me I'm trapped inside documentation."
                        }
                      }
                    }
                  }
                }
              },
              "agent": {
                "type": "string",
                "description": "user who effected the change",
                "format": "uri",
                "example": "https://{lead-admin}.bhhs.hsaffailites.com/profile/card"
              }
            }
          }
        }
      },
      "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
      "x-parser-message-parsed": true
    }
  },
  "lead/reject": {
    "_json": {
      "messageId": "lead#reject",
      "name": "realestate/lead#reject",
      "summary": "a crm lead was rejected",
      "headers": {
        "type": "object",
        "properties": {
          "topic": {
            "const": "realestate/lead#reject",
            "x-parser-schema-id": "<anonymous-schema-239>"
          }
        },
        "x-parser-schema-id": "<anonymous-schema-238>"
      },
      "payload": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "const": "RejectAction",
                "x-parser-schema-id": "<anonymous-schema-242>"
              },
              "object": {
                "title": "Lead",
                "type": "object",
                "x-range": "Lead",
                "description": "a sales opportunity (object) offered by a sender to a recipient.",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Lead"
                    ],
                    "description": "Lead",
                    "x-parser-schema-id": "<anonymous-schema-209>"
                  },
                  "identifier": {
                    "title": "identifier",
                    "type": "object",
                    "description": "identifier assigned to a contact by the vendor who originally created the contact",
                    "examples": [
                      {
                        "salesforceid": "0031U00002XW1QWQA1"
                      },
                      {
                        "vendoraid": "123456"
                      },
                      {
                        "originating_system_id": "123456"
                      }
                    ],
                    "x-parser-schema-id": "<anonymous-schema-95>"
                  },
                  "object": {
                    "description": "the lead (Contact)",
                    "x-range": [
                      "Contact"
                    ],
                    "type": "object",
                    "example": {
                      "type": "Contact",
                      "name": "Joe Smith",
                      "telephone": "731-620-9877 x6155",
                      "email": "Giuseppe.Lang62@hotmail.com"
                    },
                    "x-parser-schema-id": "<anonymous-schema-210>"
                  },
                  "recipient": {
                    "description": "the lead recipient",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{lead-recipient}.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-211>"
                  },
                  "sender": {
                    "description": "the lead provider",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{lead-sender}.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-212>"
                  },
                  "owner": {
                    "description": "the original owner of the lead",
                    "x-range": [
                      "RealEstateOrganization",
                      "RealEstateAgent",
                      "Person"
                    ],
                    "type": "string",
                    "format": "uri",
                    "example": "http://{lead-owner}.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-213>"
                  },
                  "dateAccepted": {
                    "type": "string",
                    "description": "The date/time the item was accepted by the recipient",
                    "x-range": "DateTime",
                    "example": "2019-11-25T04:23:32.000Z",
                    "x-parser-schema-id": "<anonymous-schema-214>"
                  },
                  "dateRejected": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date/time the item was rejected by the recipient",
                    "x-parser-schema-id": "<anonymous-schema-215>"
                  },
                  "dateSent": {
                    "description": "the date the lead was sent",
                    "type": "string",
                    "format": "date-time",
                    "x-parser-schema-id": "<anonymous-schema-216>"
                  },
                  "dateReceived": {
                    "type": "string",
                    "description": "The date/time the item was received by it's recipient",
                    "x-range": "DateTime",
                    "example": "2019-11-25T04:23:32.000Z",
                    "x-parser-schema-id": "<anonymous-schema-217>"
                  },
                  "leadSource": {
                    "description": "lead origin, may be a website event or a thing such as a website, zillow, mobile applicaton.",
                    "x-range": [
                      "Action",
                      "RealEstateWebSite",
                      "MobileApplication"
                    ],
                    "type": "array",
                    "items": {
                      "type": "object",
                      "example": {
                        "type": "AskAction",
                        "object": {
                          "type": "Question",
                          "text": "Help me I'm trapped inside documentation."
                        }
                      },
                      "x-parser-schema-id": "<anonymous-schema-219>"
                    },
                    "x-parser-schema-id": "<anonymous-schema-218>"
                  }
                },
                "x-parser-schema-id": "Lead"
              },
              "agent": {
                "description": "the agent who rejected the lead",
                "type": "string",
                "format": "uri",
                "example": "http://andyagent.example.com/profile/card#me",
                "x-parser-schema-id": "<anonymous-schema-243>"
              },
              "reason": {
                "description": "the reason the lead was rejected",
                "type": "string",
                "example": "duplicate lead",
                "x-parser-schema-id": "<anonymous-schema-244>"
              },
              "comment": {
                "description": "a comment about the rejection",
                "type": "string",
                "example": "this lead was already in the system",
                "x-parser-schema-id": "<anonymous-schema-245>"
              }
            },
            "x-parser-schema-id": "<anonymous-schema-241>"
          }
        },
        "x-parser-schema-id": "<anonymous-schema-240>"
      },
      "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
      "x-parser-original-payload": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "const": "RejectAction"
              },
              "object": {
                "title": "Lead",
                "type": "object",
                "x-range": "Lead",
                "description": "a sales opportunity (object) offered by a sender to a recipient.",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Lead"
                    ],
                    "description": "Lead"
                  },
                  "identifier": {
                    "title": "identifier",
                    "type": "object",
                    "description": "identifier assigned to a contact by the vendor who originally created the contact",
                    "examples": [
                      {
                        "salesforceid": "0031U00002XW1QWQA1"
                      },
                      {
                        "vendoraid": "123456"
                      },
                      {
                        "originating_system_id": "123456"
                      }
                    ]
                  },
                  "object": {
                    "description": "the lead (Contact)",
                    "x-range": [
                      "Contact"
                    ],
                    "type": "object",
                    "example": {
                      "type": "Contact",
                      "name": "Joe Smith",
                      "telephone": "731-620-9877 x6155",
                      "email": "Giuseppe.Lang62@hotmail.com"
                    }
                  },
                  "recipient": {
                    "description": "the lead recipient",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{lead-recipient}.example.com/profile/card#me"
                  },
                  "sender": {
                    "description": "the lead provider",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{lead-sender}.example.com/profile/card#me"
                  },
                  "owner": {
                    "description": "the original owner of the lead",
                    "x-range": [
                      "RealEstateOrganization",
                      "RealEstateAgent",
                      "Person"
                    ],
                    "type": "string",
                    "format": "uri",
                    "example": "http://{lead-owner}.example.com/profile/card#me"
                  },
                  "dateAccepted": {
                    "type": "string",
                    "description": "The date/time the item was accepted by the recipient",
                    "x-range": "DateTime",
                    "example": "2019-11-25T04:23:32.000Z"
                  },
                  "dateRejected": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date/time the item was rejected by the recipient"
                  },
                  "dateSent": {
                    "description": "the date the lead was sent",
                    "type": "string",
                    "format": "date-time"
                  },
                  "dateReceived": {
                    "type": "string",
                    "description": "The date/time the item was received by it's recipient",
                    "x-range": "DateTime",
                    "example": "2019-11-25T04:23:32.000Z"
                  },
                  "leadSource": {
                    "description": "lead origin, may be a website event or a thing such as a website, zillow, mobile applicaton.",
                    "x-range": [
                      "Action",
                      "RealEstateWebSite",
                      "MobileApplication"
                    ],
                    "type": "array",
                    "items": {
                      "type": "object",
                      "example": {
                        "type": "AskAction",
                        "object": {
                          "type": "Question",
                          "text": "Help me I'm trapped inside documentation."
                        }
                      }
                    }
                  }
                }
              },
              "agent": {
                "description": "the agent who rejected the lead",
                "type": "string",
                "format": "uri",
                "example": "http://andyagent.example.com/profile/card#me"
              },
              "reason": {
                "description": "the reason the lead was rejected",
                "type": "string",
                "example": "duplicate lead"
              },
              "comment": {
                "description": "a comment about the rejection",
                "type": "string",
                "example": "this lead was already in the system"
              }
            }
          }
        }
      },
      "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
      "x-parser-message-parsed": true
    }
  },
  "lead/retract": {
    "_json": {
      "messageId": "lead#retract",
      "name": "realestate/lead#retract",
      "summary": "a lead (data.object) is taken back from the previous assignee (data.participant) by the previous sender/owner (data.recipient)",
      "headers": {
        "type": "object",
        "properties": {
          "topic": {
            "const": "realestate/lead#retract",
            "x-parser-schema-id": "<anonymous-schema-247>"
          }
        },
        "x-parser-schema-id": "<anonymous-schema-246>"
      },
      "payload": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "description": "the message payload",
            "x-range": "RetractAction",
            "properties": {
              "type": {
                "const": "RetractAction",
                "x-parser-schema-id": "<anonymous-schema-250>"
              },
              "object": {
                "title": "Lead",
                "type": "object",
                "x-range": "Lead",
                "description": "a sales opportunity (object) offered by a sender to a recipient.",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Lead"
                    ],
                    "description": "Lead",
                    "x-parser-schema-id": "<anonymous-schema-209>"
                  },
                  "identifier": {
                    "title": "identifier",
                    "type": "object",
                    "description": "identifier assigned to a contact by the vendor who originally created the contact",
                    "examples": [
                      {
                        "salesforceid": "0031U00002XW1QWQA1"
                      },
                      {
                        "vendoraid": "123456"
                      },
                      {
                        "originating_system_id": "123456"
                      }
                    ],
                    "x-parser-schema-id": "<anonymous-schema-95>"
                  },
                  "object": {
                    "description": "the lead (Contact)",
                    "x-range": [
                      "Contact"
                    ],
                    "type": "object",
                    "example": {
                      "type": "Contact",
                      "name": "Joe Smith",
                      "telephone": "731-620-9877 x6155",
                      "email": "Giuseppe.Lang62@hotmail.com"
                    },
                    "x-parser-schema-id": "<anonymous-schema-210>"
                  },
                  "recipient": {
                    "description": "the lead recipient",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{lead-recipient}.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-211>"
                  },
                  "sender": {
                    "description": "the lead provider",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{lead-sender}.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-212>"
                  },
                  "owner": {
                    "description": "the original owner of the lead",
                    "x-range": [
                      "RealEstateOrganization",
                      "RealEstateAgent",
                      "Person"
                    ],
                    "type": "string",
                    "format": "uri",
                    "example": "http://{lead-owner}.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-213>"
                  },
                  "dateAccepted": {
                    "type": "string",
                    "description": "The date/time the item was accepted by the recipient",
                    "x-range": "DateTime",
                    "example": "2019-11-25T04:23:32.000Z",
                    "x-parser-schema-id": "<anonymous-schema-214>"
                  },
                  "dateRejected": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date/time the item was rejected by the recipient",
                    "x-parser-schema-id": "<anonymous-schema-215>"
                  },
                  "dateSent": {
                    "description": "the date the lead was sent",
                    "type": "string",
                    "format": "date-time",
                    "x-parser-schema-id": "<anonymous-schema-216>"
                  },
                  "dateReceived": {
                    "type": "string",
                    "description": "The date/time the item was received by it's recipient",
                    "x-range": "DateTime",
                    "example": "2019-11-25T04:23:32.000Z",
                    "x-parser-schema-id": "<anonymous-schema-217>"
                  },
                  "leadSource": {
                    "description": "lead origin, may be a website event or a thing such as a website, zillow, mobile applicaton.",
                    "x-range": [
                      "Action",
                      "RealEstateWebSite",
                      "MobileApplication"
                    ],
                    "type": "array",
                    "items": {
                      "type": "object",
                      "example": {
                        "type": "AskAction",
                        "object": {
                          "type": "Question",
                          "text": "Help me I'm trapped inside documentation."
                        }
                      },
                      "x-parser-schema-id": "<anonymous-schema-219>"
                    },
                    "x-parser-schema-id": "<anonymous-schema-218>"
                  }
                },
                "x-parser-schema-id": "Lead"
              },
              "agent": {
                "type": "string",
                "description": "user who effected the change",
                "format": "uri",
                "example": "https://{lead-admin}.bhhs.hsaffailites.com/profile/card",
                "x-parser-schema-id": "<anonymous-schema-251>"
              },
              "participant": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "RealEstateAgent",
                      "RealEstateOffice",
                      "RealEstateOrganization"
                    ],
                    "x-parser-schema-id": "<anonymous-schema-253>"
                  },
                  "id": {
                    "type": "string",
                    "format": "uri",
                    "x-parser-schema-id": "<anonymous-schema-254>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-252>"
              },
              "recipient": {
                "type": "object",
                "description": "the lead-owner, to whom the lead is being returned",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "RealEstateAgent",
                      "RealEstateOffice",
                      "RealEstateOrganization"
                    ],
                    "x-parser-schema-id": "<anonymous-schema-256>"
                  },
                  "id": {
                    "type": "string",
                    "format": "uri",
                    "x-parser-schema-id": "<anonymous-schema-257>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-255>"
              }
            },
            "x-parser-schema-id": "<anonymous-schema-249>"
          }
        },
        "x-parser-schema-id": "<anonymous-schema-248>"
      },
      "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
      "x-parser-original-payload": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "description": "the message payload",
            "x-range": "RetractAction",
            "properties": {
              "type": {
                "const": "RetractAction"
              },
              "object": {
                "title": "Lead",
                "type": "object",
                "x-range": "Lead",
                "description": "a sales opportunity (object) offered by a sender to a recipient.",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Lead"
                    ],
                    "description": "Lead"
                  },
                  "identifier": {
                    "title": "identifier",
                    "type": "object",
                    "description": "identifier assigned to a contact by the vendor who originally created the contact",
                    "examples": [
                      {
                        "salesforceid": "0031U00002XW1QWQA1"
                      },
                      {
                        "vendoraid": "123456"
                      },
                      {
                        "originating_system_id": "123456"
                      }
                    ]
                  },
                  "object": {
                    "description": "the lead (Contact)",
                    "x-range": [
                      "Contact"
                    ],
                    "type": "object",
                    "example": {
                      "type": "Contact",
                      "name": "Joe Smith",
                      "telephone": "731-620-9877 x6155",
                      "email": "Giuseppe.Lang62@hotmail.com"
                    }
                  },
                  "recipient": {
                    "description": "the lead recipient",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{lead-recipient}.example.com/profile/card#me"
                  },
                  "sender": {
                    "description": "the lead provider",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{lead-sender}.example.com/profile/card#me"
                  },
                  "owner": {
                    "description": "the original owner of the lead",
                    "x-range": [
                      "RealEstateOrganization",
                      "RealEstateAgent",
                      "Person"
                    ],
                    "type": "string",
                    "format": "uri",
                    "example": "http://{lead-owner}.example.com/profile/card#me"
                  },
                  "dateAccepted": {
                    "type": "string",
                    "description": "The date/time the item was accepted by the recipient",
                    "x-range": "DateTime",
                    "example": "2019-11-25T04:23:32.000Z"
                  },
                  "dateRejected": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date/time the item was rejected by the recipient"
                  },
                  "dateSent": {
                    "description": "the date the lead was sent",
                    "type": "string",
                    "format": "date-time"
                  },
                  "dateReceived": {
                    "type": "string",
                    "description": "The date/time the item was received by it's recipient",
                    "x-range": "DateTime",
                    "example": "2019-11-25T04:23:32.000Z"
                  },
                  "leadSource": {
                    "description": "lead origin, may be a website event or a thing such as a website, zillow, mobile applicaton.",
                    "x-range": [
                      "Action",
                      "RealEstateWebSite",
                      "MobileApplication"
                    ],
                    "type": "array",
                    "items": {
                      "type": "object",
                      "example": {
                        "type": "AskAction",
                        "object": {
                          "type": "Question",
                          "text": "Help me I'm trapped inside documentation."
                        }
                      }
                    }
                  }
                }
              },
              "agent": {
                "type": "string",
                "description": "user who effected the change",
                "format": "uri",
                "example": "https://{lead-admin}.bhhs.hsaffailites.com/profile/card"
              },
              "participant": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "RealEstateAgent",
                      "RealEstateOffice",
                      "RealEstateOrganization"
                    ]
                  },
                  "id": {
                    "type": "string",
                    "format": "uri"
                  }
                }
              },
              "recipient": {
                "type": "object",
                "description": "the lead-owner, to whom the lead is being returned",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "RealEstateAgent",
                      "RealEstateOffice",
                      "RealEstateOrganization"
                    ]
                  },
                  "id": {
                    "type": "string",
                    "format": "uri"
                  }
                }
              }
            }
          }
        }
      },
      "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
      "x-parser-message-parsed": true
    }
  },
  "franchise/listingreport": {
    "_json": {
      "messageId": "franchise#listingreport",
      "x-scope": "realestate/franchise#",
      "summary": "franchise listing report",
      "headers": {
        "type": "object",
        "properties": {
          "time": {
            "type": "string",
            "format": "date-time",
            "description": "date & time the event was produced",
            "x-faker": "date.past",
            "x-parser-schema-id": "<anonymous-schema-31>"
          },
          "agent": {
            "type": "string",
            "format": "uri",
            "summary": "the event provider who sent the event via a subscription authorized to your service.",
            "description": "if you are a multi-tenant app, then the agent is the user associated with the event data.\nany future events related to this message will be sent to the same agent/recipient\n",
            "examples": [
              "https://teamsupermario.example.com/profile/card#me",
              "https://bigbrandrealestate.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-32>"
          },
          "instrument": {
            "type": "string",
            "format": "uri",
            "description": "the app or service that produced the event on behalf of the agent/user",
            "examples": [
              "http://supercrm.example.com/profile/card#me",
              "http://reliance.example.com/profile/card#me",
              "http://moxiworks.example.com/profile/card#me",
              "http://listing-manager.example.com/profile/card#me",
              "http://ace.example.com/profile/card#me",
              "http://roqlogic.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-33>"
          },
          "source": {
            "type": "string",
            "format": "uri",
            "description": "a copy of the event was sent to the source(s).",
            "examples": [
              "https://bigbrandrealestate.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-34>"
          },
          "originalRecipient": {
            "type": "string",
            "format": "uri",
            "summary": "the original recipient of the event",
            "description": "the originalRecipient helps you determine the subscription that delivered the event to you.\nif the originalRecipient is the same as the agent, then the you are subscribed to the agent.\nif the originalRecipient is different from the agent, then you are subscribed to the event source\n",
            "example": [
              "http://bigbrandrealestate.example.com/profile/card#me",
              "http://teamsupermario.example.com/profile/card#me",
              "http://bob.example.com/profile/card#me",
              "http://jane.example.com/profile/card#me",
              "http://joe.example.com/profile/card#me",
              "http://jill.example.com/profile/card#me",
              "http://jim.example.com/profile/card#me",
              "http://jennifer.example.com/profile/card#me"
            ],
            "x-parser-schema-id": "<anonymous-schema-35>"
          },
          "id": {
            "type": "string",
            "format": "uri",
            "summary": "the event id - the cannonical identifier for the event",
            "description": "the Event ID (aka \"Publish ID\") is the immutable canonical identifier for the event.\nit is a URI that is unique to the event and will not change.\nall subscribers will receive the same id for the same event.\n",
            "examples": [
              "http://supercrm.example.com/publish/12345",
              "http://reliance.example.com/publish/23456",
              "http://moxiworks.example.com/publish/34567",
              "http://listing-manager.example.com/publish/45678",
              "http://ace.example.com/publish/56789",
              "http://roqlogic.example.com/publish/67890"
            ],
            "x-parser-schema-id": "<anonymous-schema-36>"
          },
          "@id": {
            "type": "string",
            "format": "uri",
            "summary": "the @id is the url in your inbox where you can retrieve the event",
            "examples": [
              "http://reliance.example.com/inbox/23456",
              "http://moxiworks.example.com/inbox/34567",
              "http://listing-manager.example.com/inbox/45678",
              "http://ace.example.com/inbox/56789",
              "http://roqlogic.example.com/inbox/67890"
            ],
            "x-parser-schema-id": "<anonymous-schema-37>"
          }
        },
        "topic": {
          "const": "realestate/franchise#listingreport"
        },
        "x-parser-schema-id": "<anonymous-schema-205>"
      },
      "payload": {
        "data": {
          "type": "object",
          "properties": {
            "type": {
              "const": "UpdateAction"
            },
            "object": {
              "$id": "http://realestate.yodata.me/schemas/ListingReport.yaml",
              "title": "ListingReport",
              "description": "summary report of listing inventory count",
              "x-range": "ListingReport",
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "RECORD-TYPE",
                  "example": "ListingReport",
                  "x-parser-schema-id": "<anonymous-schema-658>"
                },
                "batchId": {
                  "type": "string",
                  "description": "BATCH-ID",
                  "x-parser-schema-id": "<anonymous-schema-659>"
                },
                "reportingOfficeId": {
                  "type": "string",
                  "format": "uri",
                  "description": "OFFICE-ID",
                  "example": "https://{officeid}.example.com/profile/card#me",
                  "x-parser-schema-id": "<anonymous-schema-660>"
                },
                "dateCreated": {
                  "type": "string",
                  "format": "date-time",
                  "description": "YEAR-MONTH",
                  "x-parser-schema-id": "<anonymous-schema-661>"
                },
                "listingsAddedCount": {
                  "type": "number",
                  "description": "LISTINGS-TAKEN",
                  "x-parser-schema-id": "<anonymous-schema-662>"
                },
                "totalListingsCount": {
                  "type": "number",
                  "description": "LISTINGS-INVENTORY",
                  "x-parser-schema-id": "<anonymous-schema-663>"
                }
              },
              "x-parser-schema-id": "ListingReport"
            }
          }
        },
        "x-parser-schema-id": "<anonymous-schema-206>"
      },
      "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
      "x-parser-original-payload": {
        "data": {
          "type": "object",
          "properties": {
            "type": {
              "const": "UpdateAction"
            },
            "object": {
              "$id": "http://realestate.yodata.me/schemas/ListingReport.yaml",
              "title": "ListingReport",
              "description": "summary report of listing inventory count",
              "x-range": "ListingReport",
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "RECORD-TYPE",
                  "example": "ListingReport"
                },
                "batchId": {
                  "type": "string",
                  "description": "BATCH-ID"
                },
                "reportingOfficeId": {
                  "type": "string",
                  "format": "uri",
                  "description": "OFFICE-ID",
                  "example": "https://{officeid}.example.com/profile/card#me"
                },
                "dateCreated": {
                  "type": "string",
                  "format": "date-time",
                  "description": "YEAR-MONTH"
                },
                "listingsAddedCount": {
                  "type": "number",
                  "description": "LISTINGS-TAKEN"
                },
                "totalListingsCount": {
                  "type": "number",
                  "description": "LISTINGS-INVENTORY"
                }
              }
            }
          }
        }
      },
      "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
      "x-parser-message-parsed": true,
      "x-parser-message-name": "franchise/listingreport"
    }
  },
  "franchise/transactionreport": {
    "_json": {
      "messageId": "franchise#transactionreport",
      "name": "franchise#transactionreport",
      "title": "Franchise Transaction Report",
      "summary": "Franchise transaction report of transaction for sales production reporting.",
      "headers": {
        "type": "object",
        "properties": {
          "topic": {
            "const": "realestate/franchise#transactionreport",
            "x-parser-schema-id": "<anonymous-schema-199>"
          }
        },
        "x-parser-schema-id": "<anonymous-schema-198>"
      },
      "payload": {
        "title": "data",
        "type": "object",
        "properties": {
          "type": {
            "const": "UpdateAction",
            "x-parser-schema-id": "<anonymous-schema-201>"
          },
          "instrument": {
            "type": "object",
            "description": "the application or service used that generated the report",
            "properties": {
              "type": {
                "const": "SoftwareApplication",
                "x-parser-schema-id": "<anonymous-schema-203>"
              },
              "name": {
                "type": "string",
                "maxLength": 10,
                "examples": [
                  "Guru",
                  "Lone Wolf"
                ],
                "x-parser-schema-id": "<anonymous-schema-204>"
              }
            },
            "x-parser-schema-id": "<anonymous-schema-202>"
          }
        },
        "x-parser-schema-id": "<anonymous-schema-200>"
      },
      "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
      "x-parser-original-payload": {
        "title": "data",
        "type": "object",
        "properties": {
          "type": {
            "const": "UpdateAction"
          },
          "instrument": {
            "type": "object",
            "description": "the application or service used that generated the report",
            "properties": {
              "type": {
                "const": "SoftwareApplication"
              },
              "name": {
                "type": "string",
                "maxLength": 10,
                "examples": [
                  "Guru",
                  "Lone Wolf"
                ]
              }
            }
          }
        }
      },
      "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
      "x-parser-message-parsed": true
    }
  },
  "listing/update": {
    "_json": {
      "messageId": "listing#update",
      "name": "realestate/listing#update",
      "summary": "a PropertyListing is created or updated",
      "headers": {
        "type": "object",
        "properties": {
          "topic": {
            "const": "realestate/listing#update",
            "x-parser-schema-id": "<anonymous-schema-259>"
          }
        },
        "x-parser-schema-id": "<anonymous-schema-258>"
      },
      "payload": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "const": "UpdateAction",
                "x-parser-schema-id": "<anonymous-schema-262>"
              },
              "object": {
                "title": "PropertyListing",
                "type": "object",
                "x-range": "PropertyListing",
                "description": "a real estate property listed for sale",
                "properties": {
                  "type": {
                    "enum": [
                      "PropertyListing"
                    ],
                    "type": "string",
                    "x-parser-schema-id": "<anonymous-schema-263>"
                  },
                  "addressCountry": {
                    "type": "string",
                    "description": "two-letter ISO 3166-1 alpha-2 country code",
                    "example": "US",
                    "enum": [
                      "CA",
                      "DE",
                      "GR",
                      "IN",
                      "IT",
                      "MX",
                      "PE",
                      "PT",
                      "ES",
                      "AE",
                      "GB",
                      "US"
                    ],
                    "x-parser-schema-id": "<anonymous-schema-264>"
                  },
                  "addressLocality": {
                    "$id": "addressLocality",
                    "type": "string",
                    "description": "City, Township.",
                    "maxLength": 50,
                    "x-faker": "address.city"
                  },
                  "addressRegion": {
                    "type": "string",
                    "description": "State or Province.",
                    "example": "New Jersey",
                    "maxLength": 3,
                    "x-parser-schema-id": "<anonymous-schema-265>"
                  },
                  "buyerAgent": {
                    "description": "the buyer's RealEstateAgent",
                    "example": {
                      "email": "butch.byers@example.com",
                      "identifier": {
                        "agentKey": "xxxx"
                      },
                      "name": "Butch Byers",
                      "type": "RealEstateAgent"
                    },
                    "type": "object",
                    "x-range": "RealEstateAgent",
                    "x-parser-schema-id": "<anonymous-schema-266>"
                  },
                  "buyerOffice": {
                    "description": "the buyer's RealEstateOffice",
                    "example": {
                      "email": "gcr@example.com",
                      "identifier": {
                        "officeKey": "grc1"
                      },
                      "name": "Gotham City Real Estate",
                      "type": "RealEstateOffice"
                    },
                    "type": "object",
                    "x-range": "RealEstateOffice",
                    "x-parser-schema-id": "<anonymous-schema-267>"
                  },
                  "closeDate": {
                    "title": "closeDate",
                    "type": "string",
                    "format": "date-time",
                    "description": "With for-sale listings, the date the purchase agreement was fulfilled. With lease listings, the date the requirements were fulfilled, such as contract and/or deposit.",
                    "x-range": "DateTime",
                    "x-parser-schema-id": "<anonymous-schema-268>"
                  },
                  "image": {
                    "title": "image",
                    "description": "an ImageObject or URI reference to an image on the web.",
                    "type": "array",
                    "x-range": [
                      "ImageObject"
                    ],
                    "items": [
                      {
                        "type": "object",
                        "allOf": [
                          {
                            "title": "MediaObject",
                            "description": "an image, video or document availble for download",
                            "x-subclass": [
                              "ImageObject",
                              "DigitalDocument"
                            ],
                            "allOf": [
                              {
                                "$id": "http://realestate.yodata.me/schema/Thing",
                                "type": "object",
                                "title": "Thing",
                                "summary": "The root type of all Things.",
                                "required": [
                                  "type"
                                ],
                                "propertyNames": {
                                  "pattern": "^[a-z@$][a-zA-Z0-9-_]+$",
                                  "x-parser-schema-id": "<anonymous-schema-273>"
                                },
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "pattern": "^[A-Z][a-zA-Z0-9]+$",
                                    "description": "The item type (Linked-Data @type)",
                                    "x-parser-schema-id": "<anonymous-schema-271>"
                                  },
                                  "@id": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "the liked data uri for the Thing",
                                    "x-parser-schema-id": "<anonymous-schema-272>"
                                  }
                                },
                                "x-parser-schema-id": "Thing"
                              },
                              {
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "MediaObject",
                                      "ImageObject",
                                      "DigitalDocument"
                                    ]
                                  },
                                  "id": {
                                    "description": "the URL to access the item.",
                                    "example": "http://user.example.com/public/logo/fileName.zip",
                                    "type": "string",
                                    "format": "uri"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "the file name of the object.",
                                    "example": "fileName.zip"
                                  },
                                  "encodingFormat": {
                                    "type": "string",
                                    "description": "MIME type",
                                    "example": "application/zip"
                                  },
                                  "about": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "URI to the subject of the image or logo",
                                    "example": "http://user.example.com/profile/card#me"
                                  },
                                  "url": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "URL of the image content",
                                    "example": "http://user.example.com/public/profile/image.jpg"
                                  }
                                },
                                "x-parser-schema-id": "<anonymous-schema-274>"
                              }
                            ],
                            "x-parser-schema-id": "MediaObject"
                          },
                          {
                            "title": "ImageObject",
                            "x-range": "ImageObject",
                            "properties": {
                              "type": {
                                "enum": [
                                  "ImageObject"
                                ],
                                "example": "ImageObject"
                              },
                              "id": {
                                "example": "http://user.example.com/public/logo/image.jpg"
                              },
                              "name": {
                                "example": "image.jpg"
                              },
                              "encodingFormat": {
                                "example": "image/jpeg"
                              }
                            },
                            "x-parser-schema-id": "<anonymous-schema-275>"
                          }
                        ],
                        "x-parser-schema-id": "<anonymous-schema-270>"
                      }
                    ],
                    "x-parser-schema-id": "<anonymous-schema-269>"
                  },
                  "internetAddressDisplayYN": {
                    "enum": [
                      "Y",
                      "N"
                    ],
                    "type": "string",
                    "x-parser-schema-id": "<anonymous-schema-276>"
                  },
                  "latitude": {
                    "type": "number",
                    "description": "The latitude of a location.",
                    "x-title": "latitude",
                    "example": 40.75,
                    "x-parser-schema-id": "<anonymous-schema-277>"
                  },
                  "listingAgent": {
                    "type": "object",
                    "description": "the agent/broker representing the seller in a real estate transaction",
                    "x-range": [
                      "RealEstateAgent",
                      "RealEstateOrganization"
                    ],
                    "example": {
                      "type": "RealEstateAgent",
                      "name": "Lori Listagent",
                      "telephone": "1-252-574-0160",
                      "email": "lorilistagent@example.com"
                    },
                    "x-parser-schema-id": "<anonymous-schema-278>"
                  },
                  "listingContractDate": {
                    "description": "The effective date of the agreement between the seller and the seller's broker.",
                    "format": "date-time",
                    "type": "string",
                    "x-parser-schema-id": "<anonymous-schema-279>"
                  },
                  "listingId": {
                    "description": "the local identifier for the listing",
                    "example": "GOTHAM-MLS+12345",
                    "type": "string",
                    "x-parser-schema-id": "<anonymous-schema-280>"
                  },
                  "listingOffice": {
                    "description": "the listing office",
                    "example": {
                      "name": "Gotham City Real Estate",
                      "type": "RealEstateOffice"
                    },
                    "type": "object",
                    "x-range": "RealEstateOrganization",
                    "x-parser-schema-id": "<anonymous-schema-281>"
                  },
                  "listingOriginatingSystem": {
                    "description": "The place where the item is originally input by the user.",
                    "example": {
                      "identifier": {
                        "bhhsmlsid": "xxxx",
                        "resoouid": "not-yet-available"
                      },
                      "name": "MLSListings",
                      "type": "MultipleListingService"
                    },
                    "type": "object",
                    "x-range": "MultipleListingService",
                    "x-subPropertyOf": "instrument",
                    "x-parser-schema-id": "<anonymous-schema-282>"
                  },
                  "listingPrice": {
                    "type": "object",
                    "x-range": "PriceSpecification",
                    "example": {
                      "type": "PriceSpecification",
                      "price": 75000,
                      "priceCurrency": "USD"
                    },
                    "x-parser-schema-id": "<anonymous-schema-283>"
                  },
                  "listingStatus": {
                    "enum": [
                      "Active",
                      "Pending",
                      "Sold",
                      "Canceled",
                      "Prelisted",
                      "OffMarket",
                      "Private"
                    ],
                    "type": "string",
                    "x-parser-schema-id": "<anonymous-schema-284>"
                  },
                  "livingArea": {
                    "description": "property indoor space",
                    "example": {
                      "type": "QuantitativeValue",
                      "unitCode": "SqFt",
                      "unitText": "Square Feet",
                      "value": 1500
                    },
                    "type": "object",
                    "x-range": "QuantitativeValue",
                    "x-parser-schema-id": "<anonymous-schema-285>"
                  },
                  "longitude": {
                    "type": "number",
                    "description": "The longitude of a location.",
                    "x-title": "longitude",
                    "example": 73.98,
                    "x-parser-schema-id": "<anonymous-schema-286>"
                  },
                  "lotSize": {
                    "description": "outdoor space minValue, maxValue",
                    "example": {
                      "type": "QuantitativeValue",
                      "unitCode": "AC",
                      "unitText": "Acres",
                      "value": 0.5
                    },
                    "type": "object",
                    "x-range": "QuantitativeValue",
                    "x-parser-schema-id": "<anonymous-schema-287>"
                  },
                  "numberOfBathrooms": {
                    "description": "the number of bathrooms",
                    "example": "2",
                    "type": "string",
                    "x-parser-schema-id": "<anonymous-schema-288>"
                  },
                  "numberOfBedrooms": {
                    "description": "the number of bedrooms",
                    "example": "3",
                    "type": "string",
                    "x-parser-schema-id": "<anonymous-schema-289>"
                  },
                  "numberOfRooms": {
                    "description": "the total number of rooms in the building",
                    "example": "7",
                    "type": "string",
                    "x-parser-schema-id": "<anonymous-schema-290>"
                  },
                  "originatingSystemKey": {
                    "description": "the listing identifier from the original MLS, aka MLSID.",
                    "example": 12345,
                    "type": "string",
                    "x-parser-schema-id": "<anonymous-schema-291>"
                  },
                  "originatingSystemName": {
                    "description": "the name of the MLS where the listing was originally input",
                    "example": "GOTHAM-MLS",
                    "type": "string",
                    "x-parser-schema-id": "<anonymous-schema-292>"
                  },
                  "postalCode": {
                    "type": "string",
                    "description": "Zip/Post Code",
                    "example": "10010",
                    "maxLength": 12,
                    "x-parser-schema-id": "<anonymous-schema-293>"
                  },
                  "propertySubType": {
                    "title": "propertySubType",
                    "type": "string",
                    "x-range": "PropertySubType",
                    "description": "RESO property sub-type (see range for allowed values)",
                    "enum": [
                      "ApartmentPropertyType",
                      "BoatSlipPropertyType",
                      "CabinPropertyType",
                      "CondominiumPropertyType",
                      "DeededParkingPropertyType",
                      "DuplexPropertyType",
                      "FarmPropertyType",
                      "ManufacturedHomePropertyType",
                      "ManufacturedOnLandPropertyType",
                      "MobileHomePropertyType",
                      "OwnYourOwnPropertyType",
                      "QuadruplexPropertyType",
                      "RanchPropertyType",
                      "SingleFamilyPropertyType",
                      "StockCooperativePropertyType",
                      "TimesharePropertyType",
                      "TownhousePropertyType",
                      "TriplexPropertyType",
                      "AgriculturePropertyType",
                      "BusinessPropertyType",
                      "HotelMotelPropertyType",
                      "IndustrialPropertyType",
                      "MixedUsePropertyType",
                      "MultiFamilyPropertyType",
                      "OfficePropertyType",
                      "RetailPropertyType",
                      "UnimprovedLandPropertyType",
                      "WarehousePropertyType"
                    ],
                    "x-parser-schema-id": "<anonymous-schema-294>"
                  },
                  "propertyType": {
                    "type": "string",
                    "description": "RESO property type (see range for allowed values)",
                    "x-range": "PropertyType",
                    "minLength": 4,
                    "maxLength": 4,
                    "enum": [
                      "RESI",
                      "RLSE",
                      "RINC",
                      "LAND",
                      "MOBI",
                      "FARM",
                      "COMS",
                      "COML",
                      "BUSO"
                    ],
                    "x-parser-schema-id": "<anonymous-schema-295>"
                  },
                  "purchaseContractDate": {
                    "description": "With for-sale listings, the date an offer was accepted and the listing was no longer on market. With lease listings this may represent a meeting of the minds to lease, but some contractual requirements are yet to be fulfilled, such as contract signing or receipt of the deposit.",
                    "format": "date-time",
                    "type": "string",
                    "x-parser-schema-id": "<anonymous-schema-296>"
                  },
                  "stories": {
                    "type": "number",
                    "description": "he number of floors in the property",
                    "example": 2,
                    "x-parser-schema-id": "<anonymous-schema-297>"
                  },
                  "streetAddress": {
                    "type": "string",
                    "description": "the street address",
                    "example": "1007 Mountain Gate Rd",
                    "maxLength": 75,
                    "x-parser-schema-id": "<anonymous-schema-298>"
                  },
                  "universalPropertyId": {
                    "type": "string",
                    "title": "universalPropertyId",
                    "description": "The Universal Property Identifier is a unique identifier for all real property in the US and Canada.  It is based on country and local identification methods and is limited to real property.  For cases such as shares of real property, units, and other more granular cases, please utilize the UniversalPropertySubId.",
                    "example": "US-04015-N-R-11022331-N",
                    "x-parser-schema-id": "<anonymous-schema-299>"
                  },
                  "url": {
                    "title": "url",
                    "type": "string",
                    "format": "uri",
                    "description": "URL of the item.",
                    "example": "https://www.example.com/homedetails/1007-Mountain-Gate-Rd-Gotham-City-Gotham/10007",
                    "x-parser-schema-id": "<anonymous-schema-300>"
                  },
                  "yearBuilt": {
                    "type": "number",
                    "description": "the year the structure was created",
                    "example": 1988,
                    "x-parser-schema-id": "<anonymous-schema-301>"
                  }
                },
                "x-parser-schema-id": "PropertyListing"
              }
            },
            "x-parser-schema-id": "<anonymous-schema-261>"
          }
        },
        "x-parser-schema-id": "<anonymous-schema-260>"
      },
      "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
      "x-parser-original-payload": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "const": "UpdateAction"
              },
              "object": {
                "title": "PropertyListing",
                "type": "object",
                "x-range": "PropertyListing",
                "description": "a real estate property listed for sale",
                "properties": {
                  "type": {
                    "enum": [
                      "PropertyListing"
                    ],
                    "type": "string"
                  },
                  "addressCountry": {
                    "type": "string",
                    "description": "two-letter ISO 3166-1 alpha-2 country code",
                    "example": "US",
                    "enum": [
                      "CA",
                      "DE",
                      "GR",
                      "IN",
                      "IT",
                      "MX",
                      "PE",
                      "PT",
                      "ES",
                      "AE",
                      "GB",
                      "US"
                    ]
                  },
                  "addressLocality": {
                    "$id": "addressLocality",
                    "type": "string",
                    "description": "City, Township.",
                    "maxLength": 50,
                    "x-faker": "address.city"
                  },
                  "addressRegion": {
                    "type": "string",
                    "description": "State or Province.",
                    "example": "New Jersey",
                    "maxLength": 3
                  },
                  "buyerAgent": {
                    "description": "the buyer's RealEstateAgent",
                    "example": {
                      "email": "butch.byers@example.com",
                      "identifier": {
                        "agentKey": "xxxx"
                      },
                      "name": "Butch Byers",
                      "type": "RealEstateAgent"
                    },
                    "type": "object",
                    "x-range": "RealEstateAgent"
                  },
                  "buyerOffice": {
                    "description": "the buyer's RealEstateOffice",
                    "example": {
                      "email": "gcr@example.com",
                      "identifier": {
                        "officeKey": "grc1"
                      },
                      "name": "Gotham City Real Estate",
                      "type": "RealEstateOffice"
                    },
                    "type": "object",
                    "x-range": "RealEstateOffice"
                  },
                  "closeDate": {
                    "title": "closeDate",
                    "type": "string",
                    "format": "date-time",
                    "description": "With for-sale listings, the date the purchase agreement was fulfilled. With lease listings, the date the requirements were fulfilled, such as contract and/or deposit.",
                    "x-range": "DateTime"
                  },
                  "image": {
                    "title": "image",
                    "description": "an ImageObject or URI reference to an image on the web.",
                    "type": "array",
                    "x-range": [
                      "ImageObject"
                    ],
                    "items": [
                      {
                        "type": "object",
                        "allOf": [
                          {
                            "title": "MediaObject",
                            "description": "an image, video or document availble for download",
                            "x-subclass": [
                              "ImageObject",
                              "DigitalDocument"
                            ],
                            "allOf": [
                              {
                                "$id": "http://realestate.yodata.me/schema/Thing",
                                "type": "object",
                                "title": "Thing",
                                "summary": "The root type of all Things.",
                                "required": [
                                  "type"
                                ],
                                "propertyNames": {
                                  "pattern": "^[a-z@$][a-zA-Z0-9-_]+$"
                                },
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "pattern": "^[A-Z][a-zA-Z0-9]+$",
                                    "description": "The item type (Linked-Data @type)"
                                  },
                                  "@id": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "the liked data uri for the Thing"
                                  }
                                }
                              },
                              {
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "MediaObject",
                                      "ImageObject",
                                      "DigitalDocument"
                                    ]
                                  },
                                  "id": {
                                    "description": "the URL to access the item.",
                                    "example": "http://user.example.com/public/logo/fileName.zip",
                                    "type": "string",
                                    "format": "uri"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "the file name of the object.",
                                    "example": "fileName.zip"
                                  },
                                  "encodingFormat": {
                                    "type": "string",
                                    "description": "MIME type",
                                    "example": "application/zip"
                                  },
                                  "about": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "URI to the subject of the image or logo",
                                    "example": "http://user.example.com/profile/card#me"
                                  },
                                  "url": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "URL of the image content",
                                    "example": "http://user.example.com/public/profile/image.jpg"
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "title": "ImageObject",
                            "x-range": "ImageObject",
                            "properties": {
                              "type": {
                                "enum": [
                                  "ImageObject"
                                ],
                                "example": "ImageObject"
                              },
                              "id": {
                                "example": "http://user.example.com/public/logo/image.jpg"
                              },
                              "name": {
                                "example": "image.jpg"
                              },
                              "encodingFormat": {
                                "example": "image/jpeg"
                              }
                            }
                          }
                        ]
                      }
                    ]
                  },
                  "internetAddressDisplayYN": {
                    "enum": [
                      "Y",
                      "N"
                    ],
                    "type": "string"
                  },
                  "latitude": {
                    "type": "number",
                    "description": "The latitude of a location.",
                    "x-title": "latitude",
                    "example": 40.75
                  },
                  "listingAgent": {
                    "type": "object",
                    "description": "the agent/broker representing the seller in a real estate transaction",
                    "x-range": [
                      "RealEstateAgent",
                      "RealEstateOrganization"
                    ],
                    "example": {
                      "type": "RealEstateAgent",
                      "name": "Lori Listagent",
                      "telephone": "1-252-574-0160",
                      "email": "lorilistagent@example.com"
                    }
                  },
                  "listingContractDate": {
                    "description": "The effective date of the agreement between the seller and the seller's broker.",
                    "format": "date-time",
                    "type": "string"
                  },
                  "listingId": {
                    "description": "the local identifier for the listing",
                    "example": "GOTHAM-MLS+12345",
                    "type": "string"
                  },
                  "listingOffice": {
                    "description": "the listing office",
                    "example": {
                      "name": "Gotham City Real Estate",
                      "type": "RealEstateOffice"
                    },
                    "type": "object",
                    "x-range": "RealEstateOrganization"
                  },
                  "listingOriginatingSystem": {
                    "description": "The place where the item is originally input by the user.",
                    "example": {
                      "identifier": {
                        "bhhsmlsid": "xxxx",
                        "resoouid": "not-yet-available"
                      },
                      "name": "MLSListings",
                      "type": "MultipleListingService"
                    },
                    "type": "object",
                    "x-range": "MultipleListingService",
                    "x-subPropertyOf": "instrument"
                  },
                  "listingPrice": {
                    "type": "object",
                    "x-range": "PriceSpecification",
                    "example": {
                      "type": "PriceSpecification",
                      "price": 75000,
                      "priceCurrency": "USD"
                    }
                  },
                  "listingStatus": {
                    "enum": [
                      "Active",
                      "Pending",
                      "Sold",
                      "Canceled",
                      "Prelisted",
                      "OffMarket",
                      "Private"
                    ],
                    "type": "string"
                  },
                  "livingArea": {
                    "description": "property indoor space",
                    "example": {
                      "type": "QuantitativeValue",
                      "unitCode": "SqFt",
                      "unitText": "Square Feet",
                      "value": 1500
                    },
                    "type": "object",
                    "x-range": "QuantitativeValue"
                  },
                  "longitude": {
                    "type": "number",
                    "description": "The longitude of a location.",
                    "x-title": "longitude",
                    "example": 73.98
                  },
                  "lotSize": {
                    "description": "outdoor space minValue, maxValue",
                    "example": {
                      "type": "QuantitativeValue",
                      "unitCode": "AC",
                      "unitText": "Acres",
                      "value": 0.5
                    },
                    "type": "object",
                    "x-range": "QuantitativeValue"
                  },
                  "numberOfBathrooms": {
                    "description": "the number of bathrooms",
                    "example": "2",
                    "type": "string"
                  },
                  "numberOfBedrooms": {
                    "description": "the number of bedrooms",
                    "example": "3",
                    "type": "string"
                  },
                  "numberOfRooms": {
                    "description": "the total number of rooms in the building",
                    "example": "7",
                    "type": "string"
                  },
                  "originatingSystemKey": {
                    "description": "the listing identifier from the original MLS, aka MLSID.",
                    "example": 12345,
                    "type": "string"
                  },
                  "originatingSystemName": {
                    "description": "the name of the MLS where the listing was originally input",
                    "example": "GOTHAM-MLS",
                    "type": "string"
                  },
                  "postalCode": {
                    "type": "string",
                    "description": "Zip/Post Code",
                    "example": "10010",
                    "maxLength": 12
                  },
                  "propertySubType": {
                    "title": "propertySubType",
                    "type": "string",
                    "x-range": "PropertySubType",
                    "description": "RESO property sub-type (see range for allowed values)",
                    "enum": [
                      "ApartmentPropertyType",
                      "BoatSlipPropertyType",
                      "CabinPropertyType",
                      "CondominiumPropertyType",
                      "DeededParkingPropertyType",
                      "DuplexPropertyType",
                      "FarmPropertyType",
                      "ManufacturedHomePropertyType",
                      "ManufacturedOnLandPropertyType",
                      "MobileHomePropertyType",
                      "OwnYourOwnPropertyType",
                      "QuadruplexPropertyType",
                      "RanchPropertyType",
                      "SingleFamilyPropertyType",
                      "StockCooperativePropertyType",
                      "TimesharePropertyType",
                      "TownhousePropertyType",
                      "TriplexPropertyType",
                      "AgriculturePropertyType",
                      "BusinessPropertyType",
                      "HotelMotelPropertyType",
                      "IndustrialPropertyType",
                      "MixedUsePropertyType",
                      "MultiFamilyPropertyType",
                      "OfficePropertyType",
                      "RetailPropertyType",
                      "UnimprovedLandPropertyType",
                      "WarehousePropertyType"
                    ]
                  },
                  "propertyType": {
                    "type": "string",
                    "description": "RESO property type (see range for allowed values)",
                    "x-range": "PropertyType",
                    "minLength": 4,
                    "maxLength": 4,
                    "enum": [
                      "RESI",
                      "RLSE",
                      "RINC",
                      "LAND",
                      "MOBI",
                      "FARM",
                      "COMS",
                      "COML",
                      "BUSO"
                    ]
                  },
                  "purchaseContractDate": {
                    "description": "With for-sale listings, the date an offer was accepted and the listing was no longer on market. With lease listings this may represent a meeting of the minds to lease, but some contractual requirements are yet to be fulfilled, such as contract signing or receipt of the deposit.",
                    "format": "date-time",
                    "type": "string"
                  },
                  "stories": {
                    "type": "number",
                    "description": "he number of floors in the property",
                    "example": 2
                  },
                  "streetAddress": {
                    "type": "string",
                    "description": "the street address",
                    "example": "1007 Mountain Gate Rd",
                    "maxLength": 75
                  },
                  "universalPropertyId": {
                    "type": "string",
                    "title": "universalPropertyId",
                    "description": "The Universal Property Identifier is a unique identifier for all real property in the US and Canada.  It is based on country and local identification methods and is limited to real property.  For cases such as shares of real property, units, and other more granular cases, please utilize the UniversalPropertySubId.",
                    "example": "US-04015-N-R-11022331-N"
                  },
                  "url": {
                    "title": "url",
                    "type": "string",
                    "format": "uri",
                    "description": "URL of the item.",
                    "example": "https://www.example.com/homedetails/1007-Mountain-Gate-Rd-Gotham-City-Gotham/10007"
                  },
                  "yearBuilt": {
                    "type": "number",
                    "description": "the year the structure was created",
                    "example": 1988
                  }
                }
              }
            }
          }
        }
      },
      "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
      "x-parser-message-parsed": true
    }
  },
  "listing/delete": {
    "_json": {
      "messageId": "listing#delete",
      "name": "realestate/listing#delete",
      "summary": "a PropertyListing is deleted",
      "headers": {
        "type": "object",
        "properties": {
          "topic": {
            "const": "realestate/listing#delete",
            "x-parser-schema-id": "<anonymous-schema-303>"
          }
        },
        "x-parser-schema-id": "<anonymous-schema-302>"
      },
      "payload": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "const": "DeleteAction",
                "x-parser-schema-id": "<anonymous-schema-306>"
              },
              "object": {
                "title": "PropertyListing",
                "type": "object",
                "x-range": "PropertyListing",
                "description": "a real estate property listed for sale",
                "properties": {
                  "type": {
                    "enum": [
                      "PropertyListing"
                    ],
                    "type": "string",
                    "x-parser-schema-id": "<anonymous-schema-263>"
                  },
                  "addressCountry": {
                    "type": "string",
                    "description": "two-letter ISO 3166-1 alpha-2 country code",
                    "example": "US",
                    "enum": [
                      "CA",
                      "DE",
                      "GR",
                      "IN",
                      "IT",
                      "MX",
                      "PE",
                      "PT",
                      "ES",
                      "AE",
                      "GB",
                      "US"
                    ],
                    "x-parser-schema-id": "<anonymous-schema-264>"
                  },
                  "addressLocality": {
                    "$id": "addressLocality",
                    "type": "string",
                    "description": "City, Township.",
                    "maxLength": 50,
                    "x-faker": "address.city"
                  },
                  "addressRegion": {
                    "type": "string",
                    "description": "State or Province.",
                    "example": "New Jersey",
                    "maxLength": 3,
                    "x-parser-schema-id": "<anonymous-schema-265>"
                  },
                  "buyerAgent": {
                    "description": "the buyer's RealEstateAgent",
                    "example": {
                      "email": "butch.byers@example.com",
                      "identifier": {
                        "agentKey": "xxxx"
                      },
                      "name": "Butch Byers",
                      "type": "RealEstateAgent"
                    },
                    "type": "object",
                    "x-range": "RealEstateAgent",
                    "x-parser-schema-id": "<anonymous-schema-266>"
                  },
                  "buyerOffice": {
                    "description": "the buyer's RealEstateOffice",
                    "example": {
                      "email": "gcr@example.com",
                      "identifier": {
                        "officeKey": "grc1"
                      },
                      "name": "Gotham City Real Estate",
                      "type": "RealEstateOffice"
                    },
                    "type": "object",
                    "x-range": "RealEstateOffice",
                    "x-parser-schema-id": "<anonymous-schema-267>"
                  },
                  "closeDate": {
                    "title": "closeDate",
                    "type": "string",
                    "format": "date-time",
                    "description": "With for-sale listings, the date the purchase agreement was fulfilled. With lease listings, the date the requirements were fulfilled, such as contract and/or deposit.",
                    "x-range": "DateTime",
                    "x-parser-schema-id": "<anonymous-schema-268>"
                  },
                  "image": {
                    "title": "image",
                    "description": "an ImageObject or URI reference to an image on the web.",
                    "type": "array",
                    "x-range": [
                      "ImageObject"
                    ],
                    "items": [
                      {
                        "type": "object",
                        "allOf": [
                          {
                            "title": "MediaObject",
                            "description": "an image, video or document availble for download",
                            "x-subclass": [
                              "ImageObject",
                              "DigitalDocument"
                            ],
                            "allOf": [
                              {
                                "$id": "http://realestate.yodata.me/schema/Thing",
                                "type": "object",
                                "title": "Thing",
                                "summary": "The root type of all Things.",
                                "required": [
                                  "type"
                                ],
                                "propertyNames": {
                                  "pattern": "^[a-z@$][a-zA-Z0-9-_]+$",
                                  "x-parser-schema-id": "<anonymous-schema-273>"
                                },
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "pattern": "^[A-Z][a-zA-Z0-9]+$",
                                    "description": "The item type (Linked-Data @type)",
                                    "x-parser-schema-id": "<anonymous-schema-271>"
                                  },
                                  "@id": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "the liked data uri for the Thing",
                                    "x-parser-schema-id": "<anonymous-schema-272>"
                                  }
                                },
                                "x-parser-schema-id": "Thing"
                              },
                              {
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "MediaObject",
                                      "ImageObject",
                                      "DigitalDocument"
                                    ]
                                  },
                                  "id": {
                                    "description": "the URL to access the item.",
                                    "example": "http://user.example.com/public/logo/fileName.zip",
                                    "type": "string",
                                    "format": "uri"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "the file name of the object.",
                                    "example": "fileName.zip"
                                  },
                                  "encodingFormat": {
                                    "type": "string",
                                    "description": "MIME type",
                                    "example": "application/zip"
                                  },
                                  "about": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "URI to the subject of the image or logo",
                                    "example": "http://user.example.com/profile/card#me"
                                  },
                                  "url": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "URL of the image content",
                                    "example": "http://user.example.com/public/profile/image.jpg"
                                  }
                                },
                                "x-parser-schema-id": "<anonymous-schema-274>"
                              }
                            ],
                            "x-parser-schema-id": "MediaObject"
                          },
                          {
                            "title": "ImageObject",
                            "x-range": "ImageObject",
                            "properties": {
                              "type": {
                                "enum": [
                                  "ImageObject"
                                ],
                                "example": "ImageObject"
                              },
                              "id": {
                                "example": "http://user.example.com/public/logo/image.jpg"
                              },
                              "name": {
                                "example": "image.jpg"
                              },
                              "encodingFormat": {
                                "example": "image/jpeg"
                              }
                            },
                            "x-parser-schema-id": "<anonymous-schema-275>"
                          }
                        ],
                        "x-parser-schema-id": "<anonymous-schema-270>"
                      }
                    ],
                    "x-parser-schema-id": "<anonymous-schema-269>"
                  },
                  "internetAddressDisplayYN": {
                    "enum": [
                      "Y",
                      "N"
                    ],
                    "type": "string",
                    "x-parser-schema-id": "<anonymous-schema-276>"
                  },
                  "latitude": {
                    "type": "number",
                    "description": "The latitude of a location.",
                    "x-title": "latitude",
                    "example": 40.75,
                    "x-parser-schema-id": "<anonymous-schema-277>"
                  },
                  "listingAgent": {
                    "type": "object",
                    "description": "the agent/broker representing the seller in a real estate transaction",
                    "x-range": [
                      "RealEstateAgent",
                      "RealEstateOrganization"
                    ],
                    "example": {
                      "type": "RealEstateAgent",
                      "name": "Lori Listagent",
                      "telephone": "1-252-574-0160",
                      "email": "lorilistagent@example.com"
                    },
                    "x-parser-schema-id": "<anonymous-schema-278>"
                  },
                  "listingContractDate": {
                    "description": "The effective date of the agreement between the seller and the seller's broker.",
                    "format": "date-time",
                    "type": "string",
                    "x-parser-schema-id": "<anonymous-schema-279>"
                  },
                  "listingId": {
                    "description": "the local identifier for the listing",
                    "example": "GOTHAM-MLS+12345",
                    "type": "string",
                    "x-parser-schema-id": "<anonymous-schema-280>"
                  },
                  "listingOffice": {
                    "description": "the listing office",
                    "example": {
                      "name": "Gotham City Real Estate",
                      "type": "RealEstateOffice"
                    },
                    "type": "object",
                    "x-range": "RealEstateOrganization",
                    "x-parser-schema-id": "<anonymous-schema-281>"
                  },
                  "listingOriginatingSystem": {
                    "description": "The place where the item is originally input by the user.",
                    "example": {
                      "identifier": {
                        "bhhsmlsid": "xxxx",
                        "resoouid": "not-yet-available"
                      },
                      "name": "MLSListings",
                      "type": "MultipleListingService"
                    },
                    "type": "object",
                    "x-range": "MultipleListingService",
                    "x-subPropertyOf": "instrument",
                    "x-parser-schema-id": "<anonymous-schema-282>"
                  },
                  "listingPrice": {
                    "type": "object",
                    "x-range": "PriceSpecification",
                    "example": {
                      "type": "PriceSpecification",
                      "price": 75000,
                      "priceCurrency": "USD"
                    },
                    "x-parser-schema-id": "<anonymous-schema-283>"
                  },
                  "listingStatus": {
                    "enum": [
                      "Active",
                      "Pending",
                      "Sold",
                      "Canceled",
                      "Prelisted",
                      "OffMarket",
                      "Private"
                    ],
                    "type": "string",
                    "x-parser-schema-id": "<anonymous-schema-284>"
                  },
                  "livingArea": {
                    "description": "property indoor space",
                    "example": {
                      "type": "QuantitativeValue",
                      "unitCode": "SqFt",
                      "unitText": "Square Feet",
                      "value": 1500
                    },
                    "type": "object",
                    "x-range": "QuantitativeValue",
                    "x-parser-schema-id": "<anonymous-schema-285>"
                  },
                  "longitude": {
                    "type": "number",
                    "description": "The longitude of a location.",
                    "x-title": "longitude",
                    "example": 73.98,
                    "x-parser-schema-id": "<anonymous-schema-286>"
                  },
                  "lotSize": {
                    "description": "outdoor space minValue, maxValue",
                    "example": {
                      "type": "QuantitativeValue",
                      "unitCode": "AC",
                      "unitText": "Acres",
                      "value": 0.5
                    },
                    "type": "object",
                    "x-range": "QuantitativeValue",
                    "x-parser-schema-id": "<anonymous-schema-287>"
                  },
                  "numberOfBathrooms": {
                    "description": "the number of bathrooms",
                    "example": "2",
                    "type": "string",
                    "x-parser-schema-id": "<anonymous-schema-288>"
                  },
                  "numberOfBedrooms": {
                    "description": "the number of bedrooms",
                    "example": "3",
                    "type": "string",
                    "x-parser-schema-id": "<anonymous-schema-289>"
                  },
                  "numberOfRooms": {
                    "description": "the total number of rooms in the building",
                    "example": "7",
                    "type": "string",
                    "x-parser-schema-id": "<anonymous-schema-290>"
                  },
                  "originatingSystemKey": {
                    "description": "the listing identifier from the original MLS, aka MLSID.",
                    "example": 12345,
                    "type": "string",
                    "x-parser-schema-id": "<anonymous-schema-291>"
                  },
                  "originatingSystemName": {
                    "description": "the name of the MLS where the listing was originally input",
                    "example": "GOTHAM-MLS",
                    "type": "string",
                    "x-parser-schema-id": "<anonymous-schema-292>"
                  },
                  "postalCode": {
                    "type": "string",
                    "description": "Zip/Post Code",
                    "example": "10010",
                    "maxLength": 12,
                    "x-parser-schema-id": "<anonymous-schema-293>"
                  },
                  "propertySubType": {
                    "title": "propertySubType",
                    "type": "string",
                    "x-range": "PropertySubType",
                    "description": "RESO property sub-type (see range for allowed values)",
                    "enum": [
                      "ApartmentPropertyType",
                      "BoatSlipPropertyType",
                      "CabinPropertyType",
                      "CondominiumPropertyType",
                      "DeededParkingPropertyType",
                      "DuplexPropertyType",
                      "FarmPropertyType",
                      "ManufacturedHomePropertyType",
                      "ManufacturedOnLandPropertyType",
                      "MobileHomePropertyType",
                      "OwnYourOwnPropertyType",
                      "QuadruplexPropertyType",
                      "RanchPropertyType",
                      "SingleFamilyPropertyType",
                      "StockCooperativePropertyType",
                      "TimesharePropertyType",
                      "TownhousePropertyType",
                      "TriplexPropertyType",
                      "AgriculturePropertyType",
                      "BusinessPropertyType",
                      "HotelMotelPropertyType",
                      "IndustrialPropertyType",
                      "MixedUsePropertyType",
                      "MultiFamilyPropertyType",
                      "OfficePropertyType",
                      "RetailPropertyType",
                      "UnimprovedLandPropertyType",
                      "WarehousePropertyType"
                    ],
                    "x-parser-schema-id": "<anonymous-schema-294>"
                  },
                  "propertyType": {
                    "type": "string",
                    "description": "RESO property type (see range for allowed values)",
                    "x-range": "PropertyType",
                    "minLength": 4,
                    "maxLength": 4,
                    "enum": [
                      "RESI",
                      "RLSE",
                      "RINC",
                      "LAND",
                      "MOBI",
                      "FARM",
                      "COMS",
                      "COML",
                      "BUSO"
                    ],
                    "x-parser-schema-id": "<anonymous-schema-295>"
                  },
                  "purchaseContractDate": {
                    "description": "With for-sale listings, the date an offer was accepted and the listing was no longer on market. With lease listings this may represent a meeting of the minds to lease, but some contractual requirements are yet to be fulfilled, such as contract signing or receipt of the deposit.",
                    "format": "date-time",
                    "type": "string",
                    "x-parser-schema-id": "<anonymous-schema-296>"
                  },
                  "stories": {
                    "type": "number",
                    "description": "he number of floors in the property",
                    "example": 2,
                    "x-parser-schema-id": "<anonymous-schema-297>"
                  },
                  "streetAddress": {
                    "type": "string",
                    "description": "the street address",
                    "example": "1007 Mountain Gate Rd",
                    "maxLength": 75,
                    "x-parser-schema-id": "<anonymous-schema-298>"
                  },
                  "universalPropertyId": {
                    "type": "string",
                    "title": "universalPropertyId",
                    "description": "The Universal Property Identifier is a unique identifier for all real property in the US and Canada.  It is based on country and local identification methods and is limited to real property.  For cases such as shares of real property, units, and other more granular cases, please utilize the UniversalPropertySubId.",
                    "example": "US-04015-N-R-11022331-N",
                    "x-parser-schema-id": "<anonymous-schema-299>"
                  },
                  "url": {
                    "title": "url",
                    "type": "string",
                    "format": "uri",
                    "description": "URL of the item.",
                    "example": "https://www.example.com/homedetails/1007-Mountain-Gate-Rd-Gotham-City-Gotham/10007",
                    "x-parser-schema-id": "<anonymous-schema-300>"
                  },
                  "yearBuilt": {
                    "type": "number",
                    "description": "the year the structure was created",
                    "example": 1988,
                    "x-parser-schema-id": "<anonymous-schema-301>"
                  }
                },
                "example": {
                  "type": "PropertyListing",
                  "url": "https://{lead-admin}.bhhs.hsaffailites.com/listing/12345"
                },
                "x-parser-schema-id": "<anonymous-schema-307>"
              }
            },
            "x-parser-schema-id": "<anonymous-schema-305>"
          }
        },
        "x-parser-schema-id": "<anonymous-schema-304>"
      },
      "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
      "x-parser-original-payload": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "const": "DeleteAction"
              },
              "object": {
                "title": "PropertyListing",
                "type": "object",
                "x-range": "PropertyListing",
                "description": "a real estate property listed for sale",
                "properties": {
                  "type": {
                    "enum": [
                      "PropertyListing"
                    ],
                    "type": "string"
                  },
                  "addressCountry": {
                    "type": "string",
                    "description": "two-letter ISO 3166-1 alpha-2 country code",
                    "example": "US",
                    "enum": [
                      "CA",
                      "DE",
                      "GR",
                      "IN",
                      "IT",
                      "MX",
                      "PE",
                      "PT",
                      "ES",
                      "AE",
                      "GB",
                      "US"
                    ]
                  },
                  "addressLocality": {
                    "$id": "addressLocality",
                    "type": "string",
                    "description": "City, Township.",
                    "maxLength": 50,
                    "x-faker": "address.city"
                  },
                  "addressRegion": {
                    "type": "string",
                    "description": "State or Province.",
                    "example": "New Jersey",
                    "maxLength": 3
                  },
                  "buyerAgent": {
                    "description": "the buyer's RealEstateAgent",
                    "example": {
                      "email": "butch.byers@example.com",
                      "identifier": {
                        "agentKey": "xxxx"
                      },
                      "name": "Butch Byers",
                      "type": "RealEstateAgent"
                    },
                    "type": "object",
                    "x-range": "RealEstateAgent"
                  },
                  "buyerOffice": {
                    "description": "the buyer's RealEstateOffice",
                    "example": {
                      "email": "gcr@example.com",
                      "identifier": {
                        "officeKey": "grc1"
                      },
                      "name": "Gotham City Real Estate",
                      "type": "RealEstateOffice"
                    },
                    "type": "object",
                    "x-range": "RealEstateOffice"
                  },
                  "closeDate": {
                    "title": "closeDate",
                    "type": "string",
                    "format": "date-time",
                    "description": "With for-sale listings, the date the purchase agreement was fulfilled. With lease listings, the date the requirements were fulfilled, such as contract and/or deposit.",
                    "x-range": "DateTime"
                  },
                  "image": {
                    "title": "image",
                    "description": "an ImageObject or URI reference to an image on the web.",
                    "type": "array",
                    "x-range": [
                      "ImageObject"
                    ],
                    "items": [
                      {
                        "type": "object",
                        "allOf": [
                          {
                            "title": "MediaObject",
                            "description": "an image, video or document availble for download",
                            "x-subclass": [
                              "ImageObject",
                              "DigitalDocument"
                            ],
                            "allOf": [
                              {
                                "$id": "http://realestate.yodata.me/schema/Thing",
                                "type": "object",
                                "title": "Thing",
                                "summary": "The root type of all Things.",
                                "required": [
                                  "type"
                                ],
                                "propertyNames": {
                                  "pattern": "^[a-z@$][a-zA-Z0-9-_]+$"
                                },
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "pattern": "^[A-Z][a-zA-Z0-9]+$",
                                    "description": "The item type (Linked-Data @type)"
                                  },
                                  "@id": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "the liked data uri for the Thing"
                                  }
                                }
                              },
                              {
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "MediaObject",
                                      "ImageObject",
                                      "DigitalDocument"
                                    ]
                                  },
                                  "id": {
                                    "description": "the URL to access the item.",
                                    "example": "http://user.example.com/public/logo/fileName.zip",
                                    "type": "string",
                                    "format": "uri"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "the file name of the object.",
                                    "example": "fileName.zip"
                                  },
                                  "encodingFormat": {
                                    "type": "string",
                                    "description": "MIME type",
                                    "example": "application/zip"
                                  },
                                  "about": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "URI to the subject of the image or logo",
                                    "example": "http://user.example.com/profile/card#me"
                                  },
                                  "url": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "URL of the image content",
                                    "example": "http://user.example.com/public/profile/image.jpg"
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "title": "ImageObject",
                            "x-range": "ImageObject",
                            "properties": {
                              "type": {
                                "enum": [
                                  "ImageObject"
                                ],
                                "example": "ImageObject"
                              },
                              "id": {
                                "example": "http://user.example.com/public/logo/image.jpg"
                              },
                              "name": {
                                "example": "image.jpg"
                              },
                              "encodingFormat": {
                                "example": "image/jpeg"
                              }
                            }
                          }
                        ]
                      }
                    ]
                  },
                  "internetAddressDisplayYN": {
                    "enum": [
                      "Y",
                      "N"
                    ],
                    "type": "string"
                  },
                  "latitude": {
                    "type": "number",
                    "description": "The latitude of a location.",
                    "x-title": "latitude",
                    "example": 40.75
                  },
                  "listingAgent": {
                    "type": "object",
                    "description": "the agent/broker representing the seller in a real estate transaction",
                    "x-range": [
                      "RealEstateAgent",
                      "RealEstateOrganization"
                    ],
                    "example": {
                      "type": "RealEstateAgent",
                      "name": "Lori Listagent",
                      "telephone": "1-252-574-0160",
                      "email": "lorilistagent@example.com"
                    }
                  },
                  "listingContractDate": {
                    "description": "The effective date of the agreement between the seller and the seller's broker.",
                    "format": "date-time",
                    "type": "string"
                  },
                  "listingId": {
                    "description": "the local identifier for the listing",
                    "example": "GOTHAM-MLS+12345",
                    "type": "string"
                  },
                  "listingOffice": {
                    "description": "the listing office",
                    "example": {
                      "name": "Gotham City Real Estate",
                      "type": "RealEstateOffice"
                    },
                    "type": "object",
                    "x-range": "RealEstateOrganization"
                  },
                  "listingOriginatingSystem": {
                    "description": "The place where the item is originally input by the user.",
                    "example": {
                      "identifier": {
                        "bhhsmlsid": "xxxx",
                        "resoouid": "not-yet-available"
                      },
                      "name": "MLSListings",
                      "type": "MultipleListingService"
                    },
                    "type": "object",
                    "x-range": "MultipleListingService",
                    "x-subPropertyOf": "instrument"
                  },
                  "listingPrice": {
                    "type": "object",
                    "x-range": "PriceSpecification",
                    "example": {
                      "type": "PriceSpecification",
                      "price": 75000,
                      "priceCurrency": "USD"
                    }
                  },
                  "listingStatus": {
                    "enum": [
                      "Active",
                      "Pending",
                      "Sold",
                      "Canceled",
                      "Prelisted",
                      "OffMarket",
                      "Private"
                    ],
                    "type": "string"
                  },
                  "livingArea": {
                    "description": "property indoor space",
                    "example": {
                      "type": "QuantitativeValue",
                      "unitCode": "SqFt",
                      "unitText": "Square Feet",
                      "value": 1500
                    },
                    "type": "object",
                    "x-range": "QuantitativeValue"
                  },
                  "longitude": {
                    "type": "number",
                    "description": "The longitude of a location.",
                    "x-title": "longitude",
                    "example": 73.98
                  },
                  "lotSize": {
                    "description": "outdoor space minValue, maxValue",
                    "example": {
                      "type": "QuantitativeValue",
                      "unitCode": "AC",
                      "unitText": "Acres",
                      "value": 0.5
                    },
                    "type": "object",
                    "x-range": "QuantitativeValue"
                  },
                  "numberOfBathrooms": {
                    "description": "the number of bathrooms",
                    "example": "2",
                    "type": "string"
                  },
                  "numberOfBedrooms": {
                    "description": "the number of bedrooms",
                    "example": "3",
                    "type": "string"
                  },
                  "numberOfRooms": {
                    "description": "the total number of rooms in the building",
                    "example": "7",
                    "type": "string"
                  },
                  "originatingSystemKey": {
                    "description": "the listing identifier from the original MLS, aka MLSID.",
                    "example": 12345,
                    "type": "string"
                  },
                  "originatingSystemName": {
                    "description": "the name of the MLS where the listing was originally input",
                    "example": "GOTHAM-MLS",
                    "type": "string"
                  },
                  "postalCode": {
                    "type": "string",
                    "description": "Zip/Post Code",
                    "example": "10010",
                    "maxLength": 12
                  },
                  "propertySubType": {
                    "title": "propertySubType",
                    "type": "string",
                    "x-range": "PropertySubType",
                    "description": "RESO property sub-type (see range for allowed values)",
                    "enum": [
                      "ApartmentPropertyType",
                      "BoatSlipPropertyType",
                      "CabinPropertyType",
                      "CondominiumPropertyType",
                      "DeededParkingPropertyType",
                      "DuplexPropertyType",
                      "FarmPropertyType",
                      "ManufacturedHomePropertyType",
                      "ManufacturedOnLandPropertyType",
                      "MobileHomePropertyType",
                      "OwnYourOwnPropertyType",
                      "QuadruplexPropertyType",
                      "RanchPropertyType",
                      "SingleFamilyPropertyType",
                      "StockCooperativePropertyType",
                      "TimesharePropertyType",
                      "TownhousePropertyType",
                      "TriplexPropertyType",
                      "AgriculturePropertyType",
                      "BusinessPropertyType",
                      "HotelMotelPropertyType",
                      "IndustrialPropertyType",
                      "MixedUsePropertyType",
                      "MultiFamilyPropertyType",
                      "OfficePropertyType",
                      "RetailPropertyType",
                      "UnimprovedLandPropertyType",
                      "WarehousePropertyType"
                    ]
                  },
                  "propertyType": {
                    "type": "string",
                    "description": "RESO property type (see range for allowed values)",
                    "x-range": "PropertyType",
                    "minLength": 4,
                    "maxLength": 4,
                    "enum": [
                      "RESI",
                      "RLSE",
                      "RINC",
                      "LAND",
                      "MOBI",
                      "FARM",
                      "COMS",
                      "COML",
                      "BUSO"
                    ]
                  },
                  "purchaseContractDate": {
                    "description": "With for-sale listings, the date an offer was accepted and the listing was no longer on market. With lease listings this may represent a meeting of the minds to lease, but some contractual requirements are yet to be fulfilled, such as contract signing or receipt of the deposit.",
                    "format": "date-time",
                    "type": "string"
                  },
                  "stories": {
                    "type": "number",
                    "description": "he number of floors in the property",
                    "example": 2
                  },
                  "streetAddress": {
                    "type": "string",
                    "description": "the street address",
                    "example": "1007 Mountain Gate Rd",
                    "maxLength": 75
                  },
                  "universalPropertyId": {
                    "type": "string",
                    "title": "universalPropertyId",
                    "description": "The Universal Property Identifier is a unique identifier for all real property in the US and Canada.  It is based on country and local identification methods and is limited to real property.  For cases such as shares of real property, units, and other more granular cases, please utilize the UniversalPropertySubId.",
                    "example": "US-04015-N-R-11022331-N"
                  },
                  "url": {
                    "title": "url",
                    "type": "string",
                    "format": "uri",
                    "description": "URL of the item.",
                    "example": "https://www.example.com/homedetails/1007-Mountain-Gate-Rd-Gotham-City-Gotham/10007"
                  },
                  "yearBuilt": {
                    "type": "number",
                    "description": "the year the structure was created",
                    "example": 1988
                  }
                },
                "example": {
                  "type": "PropertyListing",
                  "url": "https://{lead-admin}.bhhs.hsaffailites.com/listing/12345"
                }
              }
            }
          }
        }
      },
      "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
      "x-parser-message-parsed": true
    }
  },
  "marketing/programcreate": {
    "_json": {
      "messageId": "marketing#programcreate",
      "name": "realestate/marketing#programcreate",
      "summary": "a marketing program has been created",
      "headers": {
        "type": "object",
        "properties": {
          "topic": {
            "const": "realestate/marketing#programcreate",
            "x-parser-schema-id": "<anonymous-schema-309>"
          }
        },
        "x-parser-schema-id": "<anonymous-schema-308>"
      },
      "payload": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "const": "CreateAction",
                "x-parser-schema-id": "<anonymous-schema-312>"
              },
              "object": {
                "MarketingProgram": {
                  "title": "MarketingProgram",
                  "description": "a marketing program",
                  "type": "object",
                  "properties": {
                    "type": {
                      "const": "MarketingProgram"
                    },
                    "name": {
                      "type": "string",
                      "example": "Market Activity Report 508 Homewood Ave"
                    },
                    "identifier": {
                      "title": "identifier",
                      "type": "object",
                      "description": "identifier assigned to a contact by the vendor who originally created the contact",
                      "examples": [
                        {
                          "salesforceid": "0031U00002XW1QWQA1"
                        },
                        {
                          "vendoraid": "123456"
                        },
                        {
                          "originating_system_id": "123456"
                        }
                      ],
                      "x-parser-schema-id": "<anonymous-schema-95>"
                    }
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-313>"
              }
            },
            "x-parser-schema-id": "<anonymous-schema-311>"
          }
        },
        "x-parser-schema-id": "<anonymous-schema-310>"
      },
      "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
      "x-parser-original-payload": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "const": "CreateAction"
              },
              "object": {
                "MarketingProgram": {
                  "title": "MarketingProgram",
                  "description": "a marketing program",
                  "type": "object",
                  "properties": {
                    "type": {
                      "const": "MarketingProgram"
                    },
                    "name": {
                      "type": "string",
                      "example": "Market Activity Report 508 Homewood Ave"
                    },
                    "identifier": {
                      "title": "identifier",
                      "type": "object",
                      "description": "identifier assigned to a contact by the vendor who originally created the contact",
                      "examples": [
                        {
                          "salesforceid": "0031U00002XW1QWQA1"
                        },
                        {
                          "vendoraid": "123456"
                        },
                        {
                          "originating_system_id": "123456"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
      "x-parser-message-parsed": true
    }
  },
  "marketing/programdelete": {
    "_json": {
      "messageId": "marketing#programdelete",
      "name": "realestate/marketing#programdelete",
      "summary": "a marketing program was deleted",
      "headers": {
        "type": "object",
        "properties": {
          "topic": {
            "const": "realestate/marketing#programdelete",
            "x-parser-schema-id": "<anonymous-schema-315>"
          }
        },
        "x-parser-schema-id": "<anonymous-schema-314>"
      },
      "payload": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "const": "DeleteAction",
                "x-parser-schema-id": "<anonymous-schema-318>"
              },
              "agent": {
                "$id": "http://schema.org/agent",
                "title": "agent",
                "description": "the direct performer or driver of the action.",
                "x-range": [
                  "Person",
                  "Organization",
                  "URI"
                ],
                "oneOf": [
                  {
                    "type": "string",
                    "format": "uri",
                    "example": "http://{user}.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-319>"
                  },
                  {
                    "type": "object",
                    "x-parser-schema-id": "<anonymous-schema-320>"
                  }
                ]
              },
              "object": {
                "title": "ProgramMembership",
                "description": "describes membership relation between a member (Person) and a MarketingProgram",
                "type": "object",
                "properties": {
                  "type": {
                    "const": "ProgramMembership",
                    "x-parser-schema-id": "<anonymous-schema-322>"
                  },
                  "role": {
                    "type": "string",
                    "enum": [
                      "member",
                      "owner"
                    ],
                    "x-parser-schema-id": "<anonymous-schema-323>"
                  },
                  "member": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "const": "Contact",
                        "x-parser-schema-id": "<anonymous-schema-325>"
                      },
                      "name": {
                        "type": "string",
                        "x-parser-schema-id": "<anonymous-schema-326>"
                      },
                      "identifier": {
                        "title": "identifier",
                        "type": "object",
                        "description": "identifier assigned to a contact by the vendor who originally created the contact",
                        "examples": [
                          {
                            "salesforceid": "0031U00002XW1QWQA1"
                          },
                          {
                            "vendoraid": "123456"
                          },
                          {
                            "originating_system_id": "123456"
                          }
                        ],
                        "x-parser-schema-id": "<anonymous-schema-95>"
                      }
                    },
                    "x-parser-schema-id": "<anonymous-schema-324>"
                  },
                  "memberOf": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "const": "MarketingProgram",
                        "x-parser-schema-id": "<anonymous-schema-328>"
                      },
                      "name": {
                        "type": "string",
                        "example": "Market Activity Report 508 Homewood Ave",
                        "x-parser-schema-id": "<anonymous-schema-329>"
                      },
                      "identifier": {
                        "title": "identifier",
                        "type": "object",
                        "description": "identifier assigned to a contact by the vendor who originally created the contact",
                        "examples": [
                          {
                            "salesforceid": "0031U00002XW1QWQA1"
                          },
                          {
                            "vendoraid": "123456"
                          },
                          {
                            "originating_system_id": "123456"
                          }
                        ],
                        "x-parser-schema-id": "<anonymous-schema-95>"
                      }
                    },
                    "x-parser-schema-id": "<anonymous-schema-327>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-321>"
              }
            },
            "x-parser-schema-id": "<anonymous-schema-317>"
          }
        },
        "x-parser-schema-id": "<anonymous-schema-316>"
      },
      "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
      "x-parser-original-payload": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "const": "DeleteAction"
              },
              "agent": {
                "$id": "http://schema.org/agent",
                "title": "agent",
                "description": "the direct performer or driver of the action.",
                "x-range": [
                  "Person",
                  "Organization",
                  "URI"
                ],
                "oneOf": [
                  {
                    "type": "string",
                    "format": "uri",
                    "example": "http://{user}.example.com/profile/card#me"
                  },
                  {
                    "type": "object"
                  }
                ]
              },
              "object": {
                "title": "ProgramMembership",
                "description": "describes membership relation between a member (Person) and a MarketingProgram",
                "type": "object",
                "properties": {
                  "type": {
                    "const": "ProgramMembership"
                  },
                  "role": {
                    "type": "string",
                    "enum": [
                      "member",
                      "owner"
                    ]
                  },
                  "member": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "const": "Contact"
                      },
                      "name": {
                        "type": "string"
                      },
                      "identifier": {
                        "title": "identifier",
                        "type": "object",
                        "description": "identifier assigned to a contact by the vendor who originally created the contact",
                        "examples": [
                          {
                            "salesforceid": "0031U00002XW1QWQA1"
                          },
                          {
                            "vendoraid": "123456"
                          },
                          {
                            "originating_system_id": "123456"
                          }
                        ]
                      }
                    }
                  },
                  "memberOf": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "const": "MarketingProgram"
                      },
                      "name": {
                        "type": "string",
                        "example": "Market Activity Report 508 Homewood Ave"
                      },
                      "identifier": {
                        "title": "identifier",
                        "type": "object",
                        "description": "identifier assigned to a contact by the vendor who originally created the contact",
                        "examples": [
                          {
                            "salesforceid": "0031U00002XW1QWQA1"
                          },
                          {
                            "vendoraid": "123456"
                          },
                          {
                            "originating_system_id": "123456"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
      "x-parser-message-parsed": true
    }
  },
  "marketing/programmemberadd": {
    "_json": {
      "messageId": "marketing#programmemberadd",
      "name": "realestate/marketing#programmemberadd",
      "summary": "a program member was added by the agent",
      "headers": {
        "type": "object",
        "properties": {
          "topic": {
            "const": "realestate/marketing#programmemberadd",
            "x-parser-schema-id": "<anonymous-schema-331>"
          }
        },
        "x-parser-schema-id": "<anonymous-schema-330>"
      },
      "payload": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "const": "AddAction",
                "x-parser-schema-id": "<anonymous-schema-334>"
              },
              "agent": {
                "type": "string",
                "format": "uri",
                "x-parser-schema-id": "<anonymous-schema-335>"
              },
              "object": {
                "$id": "http://realestate.yodata.me/schema/ProgramMembership.json",
                "title": "MarketingProgramMembership",
                "description": "describes membership relation between a member (Person) and a MarketingProgram",
                "type": "object",
                "properties": {
                  "type": {
                    "const": "ProgramMembership",
                    "x-parser-schema-id": "<anonymous-schema-336>"
                  },
                  "role": {
                    "type": "string",
                    "enum": [
                      "member",
                      "owner"
                    ],
                    "x-parser-schema-id": "<anonymous-schema-337>"
                  },
                  "member": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "Person",
                          "Contact"
                        ],
                        "x-parser-schema-id": "<anonymous-schema-339>"
                      },
                      "name": {
                        "type": "string",
                        "x-parser-schema-id": "<anonymous-schema-340>"
                      },
                      "identifier": {
                        "title": "identifier",
                        "type": "object",
                        "description": "identifier assigned to a contact by the vendor who originally created the contact",
                        "examples": [
                          {
                            "salesforceid": "0031U00002XW1QWQA1"
                          },
                          {
                            "vendoraid": "123456"
                          },
                          {
                            "originating_system_id": "123456"
                          }
                        ],
                        "x-parser-schema-id": "<anonymous-schema-95>"
                      }
                    },
                    "x-parser-schema-id": "<anonymous-schema-338>"
                  },
                  "memberOf": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "const": "MarketingProgram",
                        "x-parser-schema-id": "<anonymous-schema-342>"
                      },
                      "name": {
                        "type": "string",
                        "example": "Market Activity Report 508 Homewood Ave",
                        "x-parser-schema-id": "<anonymous-schema-343>"
                      },
                      "identifier": {
                        "title": "identifier",
                        "type": "object",
                        "description": "identifier assigned to a contact by the vendor who originally created the contact",
                        "examples": [
                          {
                            "salesforceid": "0031U00002XW1QWQA1"
                          },
                          {
                            "vendoraid": "123456"
                          },
                          {
                            "originating_system_id": "123456"
                          }
                        ],
                        "x-parser-schema-id": "<anonymous-schema-95>"
                      }
                    },
                    "x-parser-schema-id": "<anonymous-schema-341>"
                  }
                }
              },
              "targetCollection": {
                "MarketingProgram": {
                  "title": "MarketingProgram",
                  "description": "a marketing program",
                  "type": "object",
                  "properties": {
                    "type": {
                      "const": "MarketingProgram"
                    },
                    "name": {
                      "type": "string",
                      "example": "Market Activity Report 508 Homewood Ave"
                    },
                    "identifier": {
                      "title": "identifier",
                      "type": "object",
                      "description": "identifier assigned to a contact by the vendor who originally created the contact",
                      "examples": [
                        {
                          "salesforceid": "0031U00002XW1QWQA1"
                        },
                        {
                          "vendoraid": "123456"
                        },
                        {
                          "originating_system_id": "123456"
                        }
                      ],
                      "x-parser-schema-id": "<anonymous-schema-95>"
                    }
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-313>"
              }
            },
            "x-parser-schema-id": "<anonymous-schema-333>"
          }
        },
        "x-parser-schema-id": "<anonymous-schema-332>"
      },
      "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
      "x-parser-original-payload": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "const": "AddAction"
              },
              "agent": {
                "type": "string",
                "format": "uri"
              },
              "object": {
                "$id": "http://realestate.yodata.me/schema/ProgramMembership.json",
                "title": "MarketingProgramMembership",
                "description": "describes membership relation between a member (Person) and a MarketingProgram",
                "type": "object",
                "properties": {
                  "type": {
                    "const": "ProgramMembership"
                  },
                  "role": {
                    "type": "string",
                    "enum": [
                      "member",
                      "owner"
                    ]
                  },
                  "member": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "Person",
                          "Contact"
                        ]
                      },
                      "name": {
                        "type": "string"
                      },
                      "identifier": {
                        "title": "identifier",
                        "type": "object",
                        "description": "identifier assigned to a contact by the vendor who originally created the contact",
                        "examples": [
                          {
                            "salesforceid": "0031U00002XW1QWQA1"
                          },
                          {
                            "vendoraid": "123456"
                          },
                          {
                            "originating_system_id": "123456"
                          }
                        ]
                      }
                    }
                  },
                  "memberOf": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "const": "MarketingProgram"
                      },
                      "name": {
                        "type": "string",
                        "example": "Market Activity Report 508 Homewood Ave"
                      },
                      "identifier": {
                        "title": "identifier",
                        "type": "object",
                        "description": "identifier assigned to a contact by the vendor who originally created the contact",
                        "examples": [
                          {
                            "salesforceid": "0031U00002XW1QWQA1"
                          },
                          {
                            "vendoraid": "123456"
                          },
                          {
                            "originating_system_id": "123456"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "targetCollection": {
                "MarketingProgram": {
                  "title": "MarketingProgram",
                  "description": "a marketing program",
                  "type": "object",
                  "properties": {
                    "type": {
                      "const": "MarketingProgram"
                    },
                    "name": {
                      "type": "string",
                      "example": "Market Activity Report 508 Homewood Ave"
                    },
                    "identifier": {
                      "title": "identifier",
                      "type": "object",
                      "description": "identifier assigned to a contact by the vendor who originally created the contact",
                      "examples": [
                        {
                          "salesforceid": "0031U00002XW1QWQA1"
                        },
                        {
                          "vendoraid": "123456"
                        },
                        {
                          "originating_system_id": "123456"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
      "x-parser-message-parsed": true
    }
  },
  "marketing/programmemberremove": {
    "_json": {
      "messageId": "marketing#programmemberremove",
      "name": "realestate/marketing#programmemberremove",
      "summary": "the agent removed a program member (deleted the membership)",
      "headers": {
        "type": "object",
        "properties": {
          "topic": {
            "const": "realestate/marketing#programmemberremove",
            "x-parser-schema-id": "<anonymous-schema-345>"
          }
        },
        "x-parser-schema-id": "<anonymous-schema-344>"
      },
      "payload": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "const": "DeleteAction",
                "x-parser-schema-id": "<anonymous-schema-348>"
              },
              "agent": {
                "type": "string",
                "format": "uri",
                "x-parser-schema-id": "<anonymous-schema-349>"
              },
              "object": {
                "$id": "http://realestate.yodata.me/schema/ProgramMembership.json",
                "title": "MarketingProgramMembership",
                "description": "describes membership relation between a member (Person) and a MarketingProgram",
                "type": "object",
                "properties": {
                  "type": {
                    "const": "ProgramMembership",
                    "x-parser-schema-id": "<anonymous-schema-336>"
                  },
                  "role": {
                    "type": "string",
                    "enum": [
                      "member",
                      "owner"
                    ],
                    "x-parser-schema-id": "<anonymous-schema-337>"
                  },
                  "member": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "Person",
                          "Contact"
                        ],
                        "x-parser-schema-id": "<anonymous-schema-339>"
                      },
                      "name": {
                        "type": "string",
                        "x-parser-schema-id": "<anonymous-schema-340>"
                      },
                      "identifier": {
                        "title": "identifier",
                        "type": "object",
                        "description": "identifier assigned to a contact by the vendor who originally created the contact",
                        "examples": [
                          {
                            "salesforceid": "0031U00002XW1QWQA1"
                          },
                          {
                            "vendoraid": "123456"
                          },
                          {
                            "originating_system_id": "123456"
                          }
                        ],
                        "x-parser-schema-id": "<anonymous-schema-95>"
                      }
                    },
                    "x-parser-schema-id": "<anonymous-schema-338>"
                  },
                  "memberOf": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "const": "MarketingProgram",
                        "x-parser-schema-id": "<anonymous-schema-342>"
                      },
                      "name": {
                        "type": "string",
                        "example": "Market Activity Report 508 Homewood Ave",
                        "x-parser-schema-id": "<anonymous-schema-343>"
                      },
                      "identifier": {
                        "title": "identifier",
                        "type": "object",
                        "description": "identifier assigned to a contact by the vendor who originally created the contact",
                        "examples": [
                          {
                            "salesforceid": "0031U00002XW1QWQA1"
                          },
                          {
                            "vendoraid": "123456"
                          },
                          {
                            "originating_system_id": "123456"
                          }
                        ],
                        "x-parser-schema-id": "<anonymous-schema-95>"
                      }
                    },
                    "x-parser-schema-id": "<anonymous-schema-341>"
                  }
                }
              },
              "targetCollection": {
                "MarketingProgram": {
                  "title": "MarketingProgram",
                  "description": "a marketing program",
                  "type": "object",
                  "properties": {
                    "type": {
                      "const": "MarketingProgram"
                    },
                    "name": {
                      "type": "string",
                      "example": "Market Activity Report 508 Homewood Ave"
                    },
                    "identifier": {
                      "title": "identifier",
                      "type": "object",
                      "description": "identifier assigned to a contact by the vendor who originally created the contact",
                      "examples": [
                        {
                          "salesforceid": "0031U00002XW1QWQA1"
                        },
                        {
                          "vendoraid": "123456"
                        },
                        {
                          "originating_system_id": "123456"
                        }
                      ],
                      "x-parser-schema-id": "<anonymous-schema-95>"
                    }
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-313>"
              }
            },
            "x-parser-schema-id": "<anonymous-schema-347>"
          }
        },
        "x-parser-schema-id": "<anonymous-schema-346>"
      },
      "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
      "x-parser-original-payload": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "const": "DeleteAction"
              },
              "agent": {
                "type": "string",
                "format": "uri"
              },
              "object": {
                "$id": "http://realestate.yodata.me/schema/ProgramMembership.json",
                "title": "MarketingProgramMembership",
                "description": "describes membership relation between a member (Person) and a MarketingProgram",
                "type": "object",
                "properties": {
                  "type": {
                    "const": "ProgramMembership"
                  },
                  "role": {
                    "type": "string",
                    "enum": [
                      "member",
                      "owner"
                    ]
                  },
                  "member": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "Person",
                          "Contact"
                        ]
                      },
                      "name": {
                        "type": "string"
                      },
                      "identifier": {
                        "title": "identifier",
                        "type": "object",
                        "description": "identifier assigned to a contact by the vendor who originally created the contact",
                        "examples": [
                          {
                            "salesforceid": "0031U00002XW1QWQA1"
                          },
                          {
                            "vendoraid": "123456"
                          },
                          {
                            "originating_system_id": "123456"
                          }
                        ]
                      }
                    }
                  },
                  "memberOf": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "const": "MarketingProgram"
                      },
                      "name": {
                        "type": "string",
                        "example": "Market Activity Report 508 Homewood Ave"
                      },
                      "identifier": {
                        "title": "identifier",
                        "type": "object",
                        "description": "identifier assigned to a contact by the vendor who originally created the contact",
                        "examples": [
                          {
                            "salesforceid": "0031U00002XW1QWQA1"
                          },
                          {
                            "vendoraid": "123456"
                          },
                          {
                            "originating_system_id": "123456"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "targetCollection": {
                "MarketingProgram": {
                  "title": "MarketingProgram",
                  "description": "a marketing program",
                  "type": "object",
                  "properties": {
                    "type": {
                      "const": "MarketingProgram"
                    },
                    "name": {
                      "type": "string",
                      "example": "Market Activity Report 508 Homewood Ave"
                    },
                    "identifier": {
                      "title": "identifier",
                      "type": "object",
                      "description": "identifier assigned to a contact by the vendor who originally created the contact",
                      "examples": [
                        {
                          "salesforceid": "0031U00002XW1QWQA1"
                        },
                        {
                          "vendoraid": "123456"
                        },
                        {
                          "originating_system_id": "123456"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
      "x-parser-message-parsed": true
    }
  },
  "marketingpreferences/subscribe": {
    "_json": {
      "messageId": "marketingpreferences#subscribe",
      "name": "realestate/marketingpreferences#subscribe",
      "title": "Marketing Preferences Subscribe",
      "headers": {
        "type": "object",
        "properties": {
          "topic": {
            "const": "realestate/marketingpreferences#subscribe",
            "x-parser-schema-id": "<anonymous-schema-351>"
          }
        },
        "x-parser-schema-id": "<anonymous-schema-350>"
      },
      "payload": {
        "type": "object",
        "properties": {
          "data": {
            "$id": "SubscribeAction",
            "allOf": [
              {
                "$id": "http://realestate.yodata.me/schema/Action",
                "title": "Action",
                "type": "object",
                "description": "An action performed by a direct agent and indirect participants upon a direct object. Optionally happens at a location with the help of an inanimate instrument. The execution of the action may produce a result. Specific action sub-type documentation specifies the exact expectation of each argument/role.",
                "required": [
                  "type"
                ],
                "properties": {
                  "type": {
                    "description": "the action type",
                    "type": "string",
                    "x-parser-schema-id": "<anonymous-schema-353>"
                  },
                  "object": {
                    "description": "item on which the action is carried out",
                    "x-parser-schema-id": "<anonymous-schema-354>"
                  }
                },
                "externalDocs": {
                  "description": "schema.org/Action",
                  "url": "https://schema.org/Action"
                },
                "x-parser-schema-id": "Action"
              },
              {
                "x-range": "SubscribeAction",
                "description": "the consumer (agent) has subscribed to content from the participant with roleName SubscriptionProvider.",
                "properties": {
                  "type": {
                    "enum": [
                      "SubscribeAction"
                    ]
                  },
                  "agent": {
                    "type": "object",
                    "description": "the subscriber",
                    "x-range": "Contact",
                    "example": {
                      "type": "Contact",
                      "email": "bob@example.com",
                      "identifier": {
                        "hsfconsumerid": "D9AB8127-7D19-4C67-A514-9209F22F4511"
                      }
                    }
                  },
                  "participant": {
                    "description": "the subscription provider, an Agent, Team, Office or Organization",
                    "x-range": [
                      "RealEstateAgent",
                      "RealEstateTeam",
                      "RealEstateOffice",
                      "RealEstateOrganization"
                    ],
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "roleName": {
                          "type": "string",
                          "enum": [
                            "SubscriptionProvider"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://12345.example.com/profile/card#me"
                        },
                        "additionalProperty": {
                          "type": "object",
                          "properties": {
                            "isCompanyQueue": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-355>"
              }
            ],
            "x-parser-schema-id": "SubscribeAction"
          }
        },
        "x-parser-schema-id": "<anonymous-schema-352>"
      },
      "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
      "x-parser-original-payload": {
        "type": "object",
        "properties": {
          "data": {
            "$id": "SubscribeAction",
            "allOf": [
              {
                "$id": "http://realestate.yodata.me/schema/Action",
                "title": "Action",
                "type": "object",
                "description": "An action performed by a direct agent and indirect participants upon a direct object. Optionally happens at a location with the help of an inanimate instrument. The execution of the action may produce a result. Specific action sub-type documentation specifies the exact expectation of each argument/role.",
                "required": [
                  "type"
                ],
                "properties": {
                  "type": {
                    "description": "the action type",
                    "type": "string"
                  },
                  "object": {
                    "description": "item on which the action is carried out"
                  }
                },
                "externalDocs": {
                  "description": "schema.org/Action",
                  "url": "https://schema.org/Action"
                }
              },
              {
                "x-range": "SubscribeAction",
                "description": "the consumer (agent) has subscribed to content from the participant with roleName SubscriptionProvider.",
                "properties": {
                  "type": {
                    "enum": [
                      "SubscribeAction"
                    ]
                  },
                  "agent": {
                    "type": "object",
                    "description": "the subscriber",
                    "x-range": "Contact",
                    "example": {
                      "type": "Contact",
                      "email": "bob@example.com",
                      "identifier": {
                        "hsfconsumerid": "D9AB8127-7D19-4C67-A514-9209F22F4511"
                      }
                    }
                  },
                  "participant": {
                    "description": "the subscription provider, an Agent, Team, Office or Organization",
                    "x-range": [
                      "RealEstateAgent",
                      "RealEstateTeam",
                      "RealEstateOffice",
                      "RealEstateOrganization"
                    ],
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "roleName": {
                          "type": "string",
                          "enum": [
                            "SubscriptionProvider"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://12345.example.com/profile/card#me"
                        },
                        "additionalProperty": {
                          "type": "object",
                          "properties": {
                            "isCompanyQueue": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
      "x-parser-message-parsed": true
    }
  },
  "marketingpreferences/unsubscribe": {
    "_json": {
      "messageId": "marketingpreferences#unsubscribe",
      "name": "realestate/marketingpreferences#unsubscribe",
      "summary": "a consumer (agent) unsubscribes to email or sms for a specific agent (object)",
      "headers": {
        "type": "object",
        "properties": {
          "topic": {
            "const": "realestate/marketingpreferences#unsubscribe",
            "x-parser-schema-id": "<anonymous-schema-357>"
          }
        },
        "x-parser-schema-id": "<anonymous-schema-356>"
      },
      "payload": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$id": "http://realestate.yodata.me/schema/Action",
                "title": "Action",
                "type": "object",
                "description": "An action performed by a direct agent and indirect participants upon a direct object. Optionally happens at a location with the help of an inanimate instrument. The execution of the action may produce a result. Specific action sub-type documentation specifies the exact expectation of each argument/role.",
                "required": [
                  "type"
                ],
                "properties": {
                  "type": {
                    "description": "the action type",
                    "type": "string",
                    "x-parser-schema-id": "<anonymous-schema-353>"
                  },
                  "object": {
                    "description": "item on which the action is carried out",
                    "x-parser-schema-id": "<anonymous-schema-354>"
                  }
                },
                "externalDocs": {
                  "description": "schema.org/Action",
                  "url": "https://schema.org/Action"
                },
                "x-parser-schema-id": "Action"
              },
              {
                "x-range": "UnsubscribeAction",
                "description": "the consumer (agent) has unsubscribed to content from the participant with roleName SubscriptionProvider.",
                "properties": {
                  "type": {
                    "enum": [
                      "UnsubscribeAction"
                    ]
                  },
                  "agent": {
                    "type": "object",
                    "description": "the subscriber",
                    "x-range": "Contact",
                    "example": {
                      "type": "Contact",
                      "email": "bob@example.com",
                      "identifier": {
                        "hsfconsumerid": "xxxxxxxxxxxxx"
                      }
                    }
                  },
                  "participant": {
                    "description": "the subscription provider, an Agent, Team, Office or Organization",
                    "x-range": [
                      "RealEstateAgent",
                      "RealEstateTeam",
                      "RealEstateOffice",
                      "RealEstateOrganization"
                    ],
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "roleName": {
                          "type": "string",
                          "enum": [
                            "SubscriptionProvider"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://12345.example.com/profile/card#me"
                        },
                        "additionalProperty": {
                          "type": "object",
                          "properties": {
                            "isCompanyQueue": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-359>"
              }
            ],
            "x-parser-schema-id": "UnsubscribeAction"
          }
        },
        "x-parser-schema-id": "<anonymous-schema-358>"
      },
      "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
      "x-parser-original-payload": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$id": "http://realestate.yodata.me/schema/Action",
                "title": "Action",
                "type": "object",
                "description": "An action performed by a direct agent and indirect participants upon a direct object. Optionally happens at a location with the help of an inanimate instrument. The execution of the action may produce a result. Specific action sub-type documentation specifies the exact expectation of each argument/role.",
                "required": [
                  "type"
                ],
                "properties": {
                  "type": {
                    "description": "the action type",
                    "type": "string"
                  },
                  "object": {
                    "description": "item on which the action is carried out"
                  }
                },
                "externalDocs": {
                  "description": "schema.org/Action",
                  "url": "https://schema.org/Action"
                }
              },
              {
                "x-range": "UnsubscribeAction",
                "description": "the consumer (agent) has unsubscribed to content from the participant with roleName SubscriptionProvider.",
                "properties": {
                  "type": {
                    "enum": [
                      "UnsubscribeAction"
                    ]
                  },
                  "agent": {
                    "type": "object",
                    "description": "the subscriber",
                    "x-range": "Contact",
                    "example": {
                      "type": "Contact",
                      "email": "bob@example.com",
                      "identifier": {
                        "hsfconsumerid": "xxxxxxxxxxxxx"
                      }
                    }
                  },
                  "participant": {
                    "description": "the subscription provider, an Agent, Team, Office or Organization",
                    "x-range": [
                      "RealEstateAgent",
                      "RealEstateTeam",
                      "RealEstateOffice",
                      "RealEstateOrganization"
                    ],
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "roleName": {
                          "type": "string",
                          "enum": [
                            "SubscriptionProvider"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://12345.example.com/profile/card#me"
                        },
                        "additionalProperty": {
                          "type": "object",
                          "properties": {
                            "isCompanyQueue": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
      "x-parser-message-parsed": true
    }
  }
}
