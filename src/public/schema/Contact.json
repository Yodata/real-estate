{
  "type": "object",
  "title": "Contact",
  "description": "a CRM contact.",
  "properties": {
    "additionalName": {
      "title": "additionalName",
      "description": "any other name(s) associated with the entity, i.e. nickname, middle name, maiden name, etc. For multiple names, use a comma without space as a separator.",
      "type": "string",
      "examples": [
        "Johnny,John",
        "Prince,The Artist Formerly Known as Prince,The Artist",
        "Babs,Barbara",
        "Katheryn Elizabeth Hudson,Katy Perry",
        "Destiny Hope Cyrus,Miley Cyrus"
      ],
      "x-parser-schema-id": "<anonymous-schema-116>"
    },
    "additionalProperty": {
      "title": "additionalProperty",
      "type": "object",
      "description": "additionalProperty are",
      "example": {
        "supercrmuserid": 1234,
        "doNotSell": true
      }
    },
    "address": {
      "type": "array",
      "items": {
        "$id": "http://realestate.yodata.me/schemas/PostalAddress.yaml",
        "title": "PostalAddress",
        "type": "object",
        "description": "A physical address.",
        "properties": {
          "type": {
            "type": "string",
            "const": "PostalAddress",
            "x-parser-schema-id": "<anonymous-schema-99>"
          },
          "streetAddress": {
            "type": "string",
            "description": "the street number and name.",
            "x-faker": "address.streetAddress",
            "examples": [
              "5046 Ottis Point",
              "166 Marion Burg",
              "93044 Haley Stream"
            ],
            "x-parser-schema-id": "<anonymous-schema-100>"
          },
          "postOfficeBoxNumber": {
            "type": "string",
            "description": "The post office box number for PO box addresses.",
            "x-faker": "address.secondaryAddress",
            "examples": [
              "Box 1234",
              "Apt. 161",
              "Apt. 623"
            ],
            "x-parser-schema-id": "<anonymous-schema-101>"
          },
          "addressRegion": {
            "type": "string",
            "description": "State or Province.",
            "x-faker": "address.state",
            "examples": [
              "New Jersey",
              "California",
              "MI",
              null
            ],
            "x-parser-schema-id": "<anonymous-schema-102>"
          },
          "addressLocality": {
            "type": "string",
            "description": "City, Township.",
            "x-faker": "address.city",
            "examples": [
              "Gotham City",
              "Kulasmouth",
              "Heidistad",
              "Altamonte Springs",
              "West Ahmed",
              "Blaiseview"
            ],
            "x-parser-schema-id": "<anonymous-schema-103>"
          },
          "postalCode": {
            "type": "string",
            "description": "Zip/Post Code",
            "x-faker": "address.zipCode",
            "examples": [
              "10010",
              "38859",
              "40387",
              "50239-7698",
              null
            ],
            "x-parser-schema-id": "<anonymous-schema-104>"
          },
          "addressCountry": {
            "type": "string",
            "description": "The country. For example, USA. You can also provide the two-letter ISO 3166-1 alpha-2 country code.",
            "examples": [
              "USA",
              "TH",
              "NZ",
              "EG",
              "SJ",
              "VN"
            ],
            "x-faker": "address.countryCode",
            "x-parser-schema-id": "<anonymous-schema-105>"
          },
          "addressCounty": {
            "type": "string",
            "description": "the county (us real estate extension)",
            "faker": "address.county",
            "examples": [
              "Gotham County",
              "Buckinghamshire",
              "Borders",
              null
            ],
            "x-parser-schema-id": "<anonymous-schema-106>"
          },
          "addressSubdivision": {
            "type": "string",
            "description": "the subdivision or neighborhood (us real estate extension)",
            "x-faker": "address.streetName",
            "examples": [
              "Gotham Heights",
              "South Kensington",
              "SOMA (South of Market)",
              "Nob Hill"
            ],
            "x-parser-schema-id": "<anonymous-schema-107>"
          }
        },
        "x-parser-schema-id": "PostalAddress"
      },
      "x-parser-schema-id": "<anonymous-schema-98>"
    },
    "affiliation": {
      "description": "An organization that this person is affiliated with",
      "type": "array",
      "items": {
        "type": "string",
        "format": "uri",
        "example": "https://example.com/profile/card#me",
        "x-parser-schema-id": "<anonymous-schema-97>"
      },
      "x-parser-schema-id": "<anonymous-schema-96>"
    },
    "birthDate": {
      "description": "date of birth.",
      "type": "string",
      "format": "date",
      "x-parser-schema-id": "<anonymous-schema-108>"
    },
    "comment": {
      "title": "comment",
      "type": "array",
      "description": "comments by, for or about the item",
      "x-range": "Comment",
      "items": {
        "type": "object"
      },
      "example": [
        {
          "type": "Comment",
          "text": "this is my comment.",
          "author": {
            "type": "Contact",
            "name": "Bruce Wayne"
          },
          "about": {
            "type": "PropertyListing",
            "id": "https://example.com/listingid"
          },
          "dateCreated": "2019-07-15T05:24:05Z",
          "dateModified": "2019-07-15T05:24:05Z"
        }
      ]
    },
    "contactGroup": {
      "type": "array",
      "items": {
        "$id": "htttp://realestate.yodata.me/schema/ContactGroup.json",
        "title": "ContactGroup",
        "description": "groups the contact is a member of.",
        "type": "object",
        "required": [
          "type",
          "name"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "ContactGroup",
              "Collection"
            ]
          },
          "identifier": {
            "title": "identifier",
            "type": "object",
            "description": "identifier assigned to a contact by the vendor who originally created the contact",
            "examples": [
              {
                "salesforceid": "0031U00002XW1QWQA1"
              },
              {
                "vendoraid": "123456"
              },
              {
                "originating_system_id": "123456"
              }
            ],
            "x-parser-schema-id": "<anonymous-schema-94>"
          },
          "name": {
            "type": "string",
            "examples": [
              "Past Clients",
              "Prospects",
              "Leads",
              "Referrals",
              "Friends",
              "Family",
              "Neighbors",
              "Business Associates",
              "Personal"
            ]
          }
        }
      }
    },
    "contactPoint": {
      "description": "contact points for the person",
      "type": "array",
      "items": {
        "$id": "htttp://realestate.yodata.me/schema/ContactPoint.json",
        "title": "ContactPoint",
        "description": "A point of contact for the entity. By convention in the real estate domain, ContactPoints\nare preferred over telephone, email, and faxNumber so the ContactPoint.name property can be used to label values\nfor example, Work Telephone, Home, as named contactPoint values.\n",
        "type": "object",
        "required": [
          "type",
          "name"
        ],
        "minProperties": 3,
        "properties": {
          "type": {
            "type": "string",
            "const": "ContactPoint",
            "x-parser-schema-id": "<anonymous-schema-110>"
          },
          "name": {
            "type": "string",
            "description": "a label for the contactPoint, i.e. 'Work', or 'Home'",
            "examples": [
              "Work",
              "Home",
              "Vacation",
              "Bob's Cell",
              "Alice's Work"
            ],
            "x-parser-schema-id": "<anonymous-schema-111>"
          },
          "telephone": {
            "type": "string",
            "x-faker": "phone.phoneNumber",
            "examples": [
              "555-555-5555",
              "555-555-5555 x123",
              "555-555-5555 ext. 123",
              "+1-555-555-5555"
            ],
            "x-parser-schema-id": "<anonymous-schema-112>"
          },
          "faxNumber": {
            "type": "string",
            "x-faker": "phone.phoneNumber",
            "examples": [
              "555-555-5555",
              "555-555-5555 x123",
              "555-555-5555 ext. 123",
              "+1-555-555-5555"
            ],
            "x-parser-schema-id": "<anonymous-schema-113>"
          },
          "email": {
            "description": "an email address for the item.",
            "type": "string",
            "format": "email",
            "x-faker": "internet.email",
            "examples": [
              "bob@example.com",
              "alice@example.com"
            ],
            "x-parser-schema-id": "<anonymous-schema-114>"
          },
          "url": {
            "description": "primary URL for the item.",
            "type": "string",
            "format": "uri",
            "example": "https://www.facebook.com/hallandoates",
            "x-parser-schema-id": "<anonymous-schema-115>"
          }
        },
        "x-parser-schema-id": "ContactPoint"
      },
      "x-parser-schema-id": "<anonymous-schema-109>"
    },
    "dateCreated": {
      "$id": "http://realestate.yodata.me/schema/dateCreated.yaml",
      "type": "string",
      "format": "date-time",
      "title": "Date Created",
      "description": "The date on which the item was created."
    },
    "dateModified": {
      "description": "The date on which the item was most recently modified or when the item's entry was modified within a DataFeed.",
      "type": "string",
      "format": "date-time",
      "x-parser-schema-id": "<anonymous-schema-136>"
    },
    "email": {
      "type": "string",
      "format": "email",
      "x-faker": "internet.email",
      "x-parser-schema-id": "<anonymous-schema-93>"
    },
    "familyName": {
      "$id": "htttp://realestate.yodata.me/schema/familyName.yaml",
      "type": "string",
      "title": "Family Name",
      "description": "Last Name of a person",
      "x-faker": "name.lastName",
      "maxLength": 50,
      "externalDocs": {
        "description": "Family Name",
        "url": "https://schema.org/familyName"
      },
      "examples": [
        "Smith",
        "Jones",
        "Parker",
        "Monk",
        "Brown",
        "Miller",
        "Davis",
        "Wilson",
        "Fitzgerald",
        "Johnson",
        "Williams"
      ]
    },
    "faxNumber": {
      "type": "string",
      "description": "Do people still use fax machines?",
      "x-faker": "phone.phoneNumber",
      "x-parser-schema-id": "<anonymous-schema-117>"
    },
    "givenName": {
      "type": "string",
      "description": "First Name of a person",
      "x-faker": "name.firstName",
      "examples": [
        "John",
        "Jane",
        "Mary",
        "Joseph",
        "William",
        "David",
        "Richard",
        "Charles",
        "Thomas",
        "Christopher",
        "Daniel",
        "Matthew",
        "Anthony",
        "Donald",
        "Mark",
        "Paul",
        "Steven",
        "Andrew",
        "Kenneth",
        "George",
        "Joshua",
        "Kevin",
        "Brian",
        "Edward",
        "Ronald",
        "Timothy",
        "Jason",
        "Jeffrey",
        "Ryan",
        "Jacob"
      ],
      "x-parser-schema-id": "<anonymous-schema-118>"
    },
    "honorificPrefix": {
      "title": "honorificPrefix",
      "description": "An honorific prefix preceding a Person's name such as Dr/Mrs/Mr.",
      "type": "string",
      "example": "Dr",
      "x-parser-schema-id": "<anonymous-schema-119>"
    },
    "honorificSuffix": {
      "title": "honorificSuffix",
      "description": "An honorific title following a person's name like M.D.",
      "type": "string",
      "example": "Esq",
      "x-parser-schema-id": "<anonymous-schema-120>"
    },
    "identifier": {
      "title": "identifier",
      "type": "object",
      "description": "identifier assigned to a contact by the vendor who originally created the contact",
      "examples": [
        {
          "salesforceid": "0031U00002XW1QWQA1"
        },
        {
          "vendoraid": "123456"
        },
        {
          "originating_system_id": "123456"
        }
      ],
      "x-parser-schema-id": "<anonymous-schema-94>"
    },
    "jobTitle": {
      "items": {
        "type": "string",
        "x-parser-schema-id": "<anonymous-schema-122>"
      },
      "example": [
        "Chief Data Officer",
        "Sanitation Engineer"
      ],
      "title": "jobTitle",
      "description": "The job title of the person (for example, Financial Manager).",
      "type": "string",
      "x-faker": "name.jobTitle",
      "examples": [
        "CEO",
        "Sales Manager",
        "Escrow Officer",
        "Transaction Coordinator",
        "Director of Marketing",
        "Senior Loan Officer",
        "Loan Officer",
        "Sanitation Engineer",
        "Owner",
        "Cofounder",
        "Founder",
        "President",
        "Vice President of Sales",
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null
      ],
      "x-parser-schema-id": "<anonymous-schema-388>"
    },
    "keywords": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "knowsLanguage": {
      "description": "languages spoken by the person",
      "type": "array",
      "items": {
        "$id": "htttp://realestate.yodata.me/schema/Language.yaml",
        "description": "a written or spoken Language",
        "title": "Language",
        "type": "object",
        "required": [
          "type",
          "name",
          "additionalName"
        ],
        "properties": {
          "type": {
            "type": "string",
            "const": "Language",
            "x-parser-schema-id": "<anonymous-schema-124>"
          },
          "name": {
            "type": "string",
            "description": "the display name of the language",
            "x-parser-schema-id": "<anonymous-schema-125>"
          },
          "additionalName": {
            "type": "string",
            "description": "BCP 47 language code",
            "x-parser-schema-id": "<anonymous-schema-126>"
          }
        },
        "examples": [
          {
            "type": "Language",
            "name": "English",
            "additionalName": "en-us"
          },
          {
            "type": "Language",
            "name": "Spanish",
            "additionalName": "es"
          },
          {
            "type": "Language",
            "name": "French",
            "additionalName": "fr"
          },
          {
            "type": "Language",
            "name": "German",
            "additionalName": "de"
          },
          {
            "type": "Language",
            "name": "Italian",
            "additionalName": "it"
          },
          {
            "type": "Language",
            "name": "Japanese",
            "additionalName": "ja"
          },
          {
            "type": "Language",
            "name": "Korean",
            "additionalName": "ko"
          },
          {
            "type": "Language",
            "name": "Portuguese",
            "additionalName": "pt"
          },
          {
            "type": "Language",
            "name": "Russian",
            "additionalName": "ru"
          },
          {
            "type": "Language",
            "name": "Chinese",
            "additionalName": "zh"
          },
          {
            "type": "Language",
            "name": "Arabic",
            "additionalName": "ar"
          },
          {
            "type": "Language",
            "name": "Hindi",
            "additionalName": "hi"
          },
          {
            "type": "Language",
            "name": "Bengali",
            "additionalName": "bn"
          },
          {
            "type": "Language",
            "name": "Portuguese",
            "additionalName": "pt"
          }
        ],
        "x-parser-schema-id": "Language"
      },
      "x-parser-schema-id": "<anonymous-schema-123>"
    },
    "leadOwner": {
      "type": "object",
      "description": "lead owner",
      "x-range": [
        "RealEstateAgent",
        "RealEstateOrganization",
        "RealEstateTeam"
      ],
      "example": {
        "type": "RealEstateOrganization",
        "name": "Gotham City Real Estate",
        "id": "https://example.com/profile.card#me"
      }
    },
    "leadSource": {
      "type": "object",
      "description": "origin of the lead",
      "x-range": [
        "MobileApplication",
        "RealEstateOffice",
        "RealEstateWebsite",
        "Thing"
      ],
      "example": {
        "id": "https://www.zillow.com/homedetails/1044-Siler-Pl-Berkeley-CA-94705/24820985_zpid/",
        "type": "RealEstateWebsite",
        "name": "Zillow",
        "url": "https://zillow.com"
      }
    },
    "name": {
      "description": "Full name of the person.",
      "type": "string",
      "x-faker": "name.findName",
      "x-parser-schema-id": "<anonymous-schema-127>"
    },
    "originatingSystem": {
      "type": "object",
      "x-range": [
        "Thing"
      ],
      "description": "the original system where this item was created.  Can be of type Thing or any sub-type.",
      "examples": [
        {
          "type": "SoftwareApplication",
          "name": "RDesk",
          "description": "User Created.",
          "url": "http://www.rdeskwebsite.com/"
        }
      ]
    },
    "telephone": {
      "type": "string",
      "description": "Primary phone number.",
      "example": "+15558675309",
      "x-parser-schema-id": "<anonymous-schema-128>"
    },
    "type": {
      "x-parser-schema-id": "<anonymous-schema-95>",
      "type": "string",
      "const": "Contact"
    },
    "worksFor": {
      "type": "string",
      "description": "Organizations the person works for.",
      "x-faker": "company.companyName",
      "x-parser-schema-id": "<anonymous-schema-129>"
    }
  },
  "x-parser-schema-id": "<anonymous-schema-130>",
  "$id": "http://realestate.yodata.me/schema/Contact.json"
}
