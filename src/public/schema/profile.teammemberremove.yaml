$id: http://realestate.yodata.me/schema/profile.teammemberremove.yaml
messageId: profile#teammemberremove
title: profile#teammemberremove
summary: a member (user) is removed from the team
contentType: application/json
externalDocs: null
headers:
  type: object
  properties:
    time:
      type: string
      format: date-time
      description: date & time the event was produced
      x-faker: date.past
      x-parser-schema-id: <anonymous-schema-2>
    agent:
      type: string
      format: uri
      summary: >-
        the event provider who sent the event via a subscription authorized to
        your service.
      description: >
        if you are a multi-tenant app, then the agent is the user associated
        with the event data.

        any future events related to this message will be sent to the same
        agent/recipient
      examples:
        - https://teamsupermario.example.com/profile/card#me
        - https://bigbrandrealestate.example.com/profile/card#me
      x-parser-schema-id: <anonymous-schema-3>
    instrument:
      type: string
      format: uri
      description: the app or service that produced the event on behalf of the agent/user
      examples:
        - http://supercrm.example.com/profile/card#me
        - http://reliance.example.com/profile/card#me
        - http://moxiworks.example.com/profile/card#me
        - http://listing-manager.example.com/profile/card#me
        - http://ace.example.com/profile/card#me
        - http://roqlogic.example.com/profile/card#me
      x-parser-schema-id: <anonymous-schema-4>
    source:
      type: string
      format: uri
      description: a copy of the event was sent to the source(s).
      examples:
        - https://bigbrandrealestate.example.com/profile/card#me
      x-parser-schema-id: <anonymous-schema-5>
    originalRecipient:
      type: string
      format: uri
      summary: the original recipient of the event
      description: >
        the originalRecipient helps you determine the subscription that
        delivered the event to you.

        if the originalRecipient is the same as the agent, then the you are
        subscribed to the agent.

        if the originalRecipient is different from the agent, then you are
        subscribed to the event source
      examples:
        - http://bigbrandrealestate.example.com/profile/card#me
        - http://teamsupermario.example.com/profile/card#me
        - http://bob.example.com/profile/card#me
        - http://jane.example.com/profile/card#me
        - http://joe.example.com/profile/card#me
        - http://jill.example.com/profile/card#me
        - http://jim.example.com/profile/card#me
        - http://jennifer.example.com/profile/card#me
      x-parser-schema-id: <anonymous-schema-6>
    id:
      type: string
      format: uri
      summary: the event id - the cannonical identifier for the event
      description: >
        the Event ID (aka "Publish ID") is the immutable canonical identifier
        for the event.

        it is a URI that is unique to the event and will not change.

        all subscribers will receive the same id for the same event.
      examples:
        - http://supercrm.example.com/publish/12345
        - http://reliance.example.com/publish/23456
        - http://moxiworks.example.com/publish/34567
        - http://listing-manager.example.com/publish/45678
        - http://ace.example.com/publish/56789
        - http://roqlogic.example.com/publish/67890
      x-parser-schema-id: <anonymous-schema-7>
    '@id':
      type: string
      format: uri
      summary: the @id is the url in your inbox where you can retrieve the event
      examples:
        - http://reliance.example.com/inbox/23456
        - http://moxiworks.example.com/inbox/34567
        - http://listing-manager.example.com/inbox/45678
        - http://ace.example.com/inbox/56789
        - http://roqlogic.example.com/inbox/67890
      x-parser-schema-id: <anonymous-schema-8>
  x-parser-schema-id: <anonymous-schema-1>
payload:
  type: object
  properties:
    data:
      type: object
      properties:
        type:
          const: RemoveAction
          x-parser-schema-id: <anonymous-schema-428>
        object:
          allOf:
            - title: OrganizationRole
              type: object
              description: describes a role played by a member and a group or organization.
              properties:
                type:
                  type: string
                  description: a role played by the member in the memberOf group
                  enum:
                    - OrganizationRole
                  x-parser-schema-id: <anonymous-schema-384>
                roleName:
                  type: string
                  description: the role name
                  example: Owner
                  x-parser-schema-id: <anonymous-schema-385>
                memberOf:
                  description: the org or group where the role is performed
                  type: object
                  example:
                    type: RealEstateOrganization
                    id: http://orgid.example.com/profile/card#me
                  x-parser-schema-id: <anonymous-schema-386>
                member:
                  description: member object or id
                  type: string
                  format: uri
                  example: https://memberid.example.com/profile/card#me
                  x-parser-schema-id: <anonymous-schema-387>
                startDate:
                  type: string
                  format: date-time
                  description: date the member began performing this role
                  x-parser-schema-id: <anonymous-schema-388>
                endDate:
                  type: string
                  format: date-time
                  description: date the member stopped performing the role
                  x-parser-schema-id: <anonymous-schema-389>
              x-parser-schema-id: OrganizationRole
            - type: object
              title: RealEstateTeamMembership
              description: a membership relationship.  Subclass of OrganizationRole
              properties:
                type:
                  type: string
                  description: a member of a real estate team
                  enum:
                    - RealEstateTeamMembership
                  example: RealEstateTeamMembership
                  x-parser-schema-id: <anonymous-schema-421>
                roleName:
                  type: string
                  enum:
                    - TeamMember
                    - TeamAdmin
                    - TeamOwner
                  x-parser-schema-id: <anonymous-schema-422>
                memberOf:
                  type: string
                  format: uri
                  example: https://{team-id}.example.com/profile/card#me
                  x-parser-schema-id: <anonymous-schema-423>
                member:
                  type: string
                  format: uri
                  example: https://{agent}.example.com/profile/card#me
                  x-parser-schema-id: <anonymous-schema-424>
              x-parser-schema-id: <anonymous-schema-420>
          x-parser-schema-id: RealEstateTeamMembership
      x-parser-schema-id: <anonymous-schema-427>
    topic:
      const: realestate/profile#teammemberremove
      x-parser-schema-id: <anonymous-schema-426>
  x-parser-schema-id: <anonymous-schema-425>

