{
  "$id": "http://realestate.yodata.me/schema/website.listingoffer.json",
  "messageId": "website#listingoffer",
  "title": "website#listingoffer",
  "summary": "website user makes a listing offer",
  "contentType": "application/json",
  "externalDocs": null,
  "headers": {
    "type": "object",
    "properties": {
      "time": {
        "type": "string",
        "format": "date-time",
        "description": "date & time the event was produced",
        "x-faker": "date.past",
        "x-parser-schema-id": "<anonymous-schema-7>"
      },
      "agent": {
        "type": "string",
        "format": "uri",
        "summary": "the event provider who sent the event via a subscription authorized to your service.",
        "description": "if you are a multi-tenant app, then the agent is the user associated with the event data.\nany future events related to this message will be sent to the same agent/recipient\n",
        "examples": [
          "https://teamsupermario.example.com/profile/card#me",
          "https://bigbrandrealestate.example.com/profile/card#me"
        ],
        "x-parser-schema-id": "<anonymous-schema-8>"
      },
      "instrument": {
        "type": "string",
        "format": "uri",
        "description": "the app or service that produced the event on behalf of the agent/user",
        "examples": [
          "http://supercrm.example.com/profile/card#me",
          "http://reliance.example.com/profile/card#me",
          "http://moxiworks.example.com/profile/card#me",
          "http://listing-manager.example.com/profile/card#me",
          "http://ace.example.com/profile/card#me",
          "http://roqlogic.example.com/profile/card#me"
        ],
        "x-parser-schema-id": "<anonymous-schema-9>"
      },
      "source": {
        "type": "string",
        "format": "uri",
        "description": "a copy of the event was sent to the source(s).",
        "examples": [
          "https://bigbrandrealestate.example.com/profile/card#me"
        ],
        "x-parser-schema-id": "<anonymous-schema-10>"
      },
      "originalRecipient": {
        "type": "string",
        "format": "uri",
        "summary": "the original recipient of the event",
        "description": "the originalRecipient helps you determine the subscription that delivered the event to you.\nif the originalRecipient is the same as the agent, then the you are subscribed to the agent.\nif the originalRecipient is different from the agent, then you are subscribed to the event source\n",
        "examples": [
          "http://bigbrandrealestate.example.com/profile/card#me",
          "http://teamsupermario.example.com/profile/card#me",
          "http://bob.example.com/profile/card#me",
          "http://jane.example.com/profile/card#me",
          "http://joe.example.com/profile/card#me",
          "http://jill.example.com/profile/card#me",
          "http://jim.example.com/profile/card#me",
          "http://jennifer.example.com/profile/card#me"
        ],
        "x-parser-schema-id": "<anonymous-schema-11>"
      },
      "id": {
        "type": "string",
        "format": "uri",
        "summary": "the event id - the cannonical identifier for the event",
        "description": "the Event ID (aka \"Publish ID\") is the immutable canonical identifier for the event.\nit is a URI that is unique to the event and will not change.\nall subscribers will receive the same id for the same event.\n",
        "examples": [
          "http://supercrm.example.com/publish/12345",
          "http://reliance.example.com/publish/23456",
          "http://moxiworks.example.com/publish/34567",
          "http://listing-manager.example.com/publish/45678",
          "http://ace.example.com/publish/56789",
          "http://roqlogic.example.com/publish/67890"
        ],
        "x-parser-schema-id": "<anonymous-schema-12>"
      },
      "@id": {
        "type": "string",
        "format": "uri",
        "summary": "the @id is the url in your inbox where you can retrieve the event",
        "examples": [
          "http://reliance.example.com/inbox/23456",
          "http://moxiworks.example.com/inbox/34567",
          "http://listing-manager.example.com/inbox/45678",
          "http://ace.example.com/inbox/56789",
          "http://roqlogic.example.com/inbox/67890"
        ],
        "x-parser-schema-id": "<anonymous-schema-13>"
      }
    },
    "x-parser-schema-id": "<anonymous-schema-6>"
  },
  "payload": {
    "type": "object",
    "properties": {
      "data": {
        "$id": "http://realestate.yodata.me/schemas/ListingOffer.yaml",
        "type": "object",
        "title": "Listing Offer",
        "description": "an offer is made to buy a PropertyListing",
        "name": "ListingOffer",
        "required": [
          "type",
          "agent",
          "object",
          "recipient",
          "offerPrice"
        ],
        "properties": {
          "type": {
            "const": "ListingOffer",
            "x-parser-schema-id": "<anonymous-schema-534>"
          },
          "agent": {
            "type": "object",
            "description": "a website user/visitor",
            "x-range": [
              "Contact",
              "Person"
            ],
            "example": {
              "type": "Contact",
              "name": "Bruce Wayne",
              "givenName": "Bruce",
              "familyName": "Wayne",
              "email": "batman@example.com",
              "telephone": "1+888-867-5309",
              "identifier": {
                "hsfconsumerid": "xxxxxxxxxxxxx"
              },
              "sameAs": {
                "amcecrmid": "1234567",
                "salesForceId": "xxxxxxxxxxxxx"
              }
            },
            "x-parser-schema-id": "<anonymous-schema-535>"
          },
          "offerPrice": {
            "description": "the offer price or range",
            "type": "object",
            "title": "PriceSpecification",
            "x-range": "PriceSpecification",
            "properties": {
              "type": {
                "type": "string",
                "description": "PriceSpecification",
                "enum": [
                  "PriceSpecification"
                ],
                "x-parser-schema-id": "<anonymous-schema-537>"
              },
              "minPrice": {
                "type": "number",
                "description": "the low price offered if price is a range.",
                "example": 75000,
                "x-parser-schema-id": "<anonymous-schema-538>"
              },
              "maxPrice": {
                "type": "number",
                "description": "the high price offered if price is a range.",
                "example": 100000,
                "x-parser-schema-id": "<anonymous-schema-539>"
              },
              "price": {
                "type": "number",
                "description": "the offer price.",
                "example": 75000,
                "x-parser-schema-id": "<anonymous-schema-540>"
              },
              "priceCurrency": {
                "type": "string",
                "description": "use ISO4217",
                "example": "USD",
                "x-parser-schema-id": "<anonymous-schema-541>"
              }
            },
            "x-parser-schema-id": "<anonymous-schema-536>"
          },
          "propertyListing": {
            "type": "object",
            "description": "the listing on which the offer is made.",
            "example": {
              "type": "PropertyListing",
              "originatingSystemName": "GOTHAM-MLS",
              "originatingSystemKey": "12345",
              "url": "https://{company-website-url}/{path-to-listing}",
              "streetAddress": "1007 Mountain Gate Rd",
              "addressRegion": "New Jersey",
              "addressLocality": "Gotham City",
              "postalCode": "10010",
              "addressCountry": "USA",
              "listingPrice": {
                "type": "PriceSpecification",
                "price": 7500000,
                "priceCurrency": "USD"
              }
            },
            "x-parser-schema-id": "<anonymous-schema-542>"
          },
          "recipient": {
            "description": "listing agent or offer recipient",
            "oneOf": [
              {
                "$id": "http://realestate.yodata.me/schema/RealEstateAgent",
                "title": "RealEstateAgent",
                "description": "A real estate agent who represents buyers and sellers",
                "type": "object",
                "additionalProperties": true,
                "properties": {
                  "type": {
                    "type": "string",
                    "const": "RealEstateAgent",
                    "x-parser-schema-id": "<anonymous-schema-403>"
                  },
                  "additionalName": {
                    "title": "additionalName",
                    "description": "any other name(s) associated with the entity, i.e. nickname, middle name, maiden name, etc. For multiple names, use a comma without space as a separator.",
                    "type": "string",
                    "examples": [
                      "Johnny,John",
                      "Prince,The Artist Formerly Known as Prince,The Artist",
                      "Babs,Barbara",
                      "Katheryn Elizabeth Hudson,Katy Perry",
                      "Destiny Hope Cyrus,Miley Cyrus"
                    ],
                    "x-parser-schema-id": "<anonymous-schema-103>"
                  },
                  "address": {
                    "type": "object",
                    "x-range": "PostalAddress",
                    "description": "A physical address.",
                    "example": {
                      "type": "PostalAddress",
                      "name": "Home",
                      "addressCountry": "USA",
                      "addressCounty": "Gotham County",
                      "addressLocality": "Gotham City",
                      "addressRegion": "New Jersey",
                      "addressSubdivision": "Gotham Heights",
                      "postalCode": "10010",
                      "postOfficeBoxNumber": "Box 1234",
                      "streetAddress": "1007 Mountain Gate Rd"
                    },
                    "x-parser-schema-id": "<anonymous-schema-404>"
                  },
                  "certification": {
                    "type": "object",
                    "title": "Certification",
                    "description": "A certification issued by an organization to an individual or business.",
                    "x-range": "Certification",
                    "properties": {
                      "type": {
                        "description": "Certification",
                        "type": "string",
                        "enum": [
                          "Certification"
                        ],
                        "x-parser-schema-id": "<anonymous-schema-406>"
                      },
                      "name": {
                        "type": "string",
                        "description": "the name of the Certification",
                        "example": "e-Agent Certified",
                        "x-parser-schema-id": "<anonymous-schema-407>"
                      },
                      "issuedBy": {
                        "type": "object",
                        "x-range": "RealEstateOrganization",
                        "description": "the issuing authority",
                        "properties": {
                          "type": {
                            "enum": [
                              "RealEstateOrganization"
                            ],
                            "type": "string",
                            "description": "The item type (Linked-Data @type)",
                            "x-parser-schema-id": "<anonymous-schema-409>"
                          },
                          "id": {
                            "example": "https://example.com/profile/card#me",
                            "type": "string",
                            "format": "uri",
                            "description": "Linked-Data URI (@id)",
                            "x-parser-schema-id": "<anonymous-schema-410>"
                          },
                          "name": {
                            "type": "string",
                            "description": "name of the issuing organization",
                            "example": "Gotham City Real Estate",
                            "x-parser-schema-id": "<anonymous-schema-411>"
                          }
                        },
                        "x-parser-schema-id": "<anonymous-schema-408>"
                      },
                      "issuedTo": {
                        "x-range": "RealEstateAgent",
                        "type": "object",
                        "description": "the subject",
                        "properties": {
                          "type": {
                            "enum": [
                              "RealEstateAgent"
                            ],
                            "type": "string",
                            "description": "The item type (Linked-Data @type)",
                            "x-parser-schema-id": "<anonymous-schema-413>"
                          },
                          "id": {
                            "type": "string",
                            "format": "uri",
                            "description": "Linked-Data URI (@id)",
                            "x-parser-schema-id": "<anonymous-schema-242>"
                          },
                          "name": {
                            "$id": "http://realestate.yodata.me/schema/name.yaml",
                            "title": "name",
                            "type": "string",
                            "x-parser-schema-id": "name"
                          }
                        },
                        "x-parser-schema-id": "<anonymous-schema-412>"
                      }
                    },
                    "x-parser-schema-id": "<anonymous-schema-405>"
                  },
                  "contactPoint": {
                    "$id": "http://realestate.yodata.me/schema/ContactPoint.json",
                    "title": "ContactPoint",
                    "description": "A point of contact for the entity. By convention in the real estate domain, ContactPoints\nare preferred over telephone, email, and faxNumber so the ContactPoint.name property can be used to label values\nfor example, Work Telephone, Home, as named contactPoint values.\n",
                    "type": "object",
                    "required": [
                      "type",
                      "name"
                    ],
                    "minProperties": 3,
                    "properties": {
                      "type": {
                        "type": "string",
                        "const": "ContactPoint",
                        "x-parser-schema-id": "<anonymous-schema-414>"
                      },
                      "name": {
                        "type": "string",
                        "description": "a label for the contactPoint, i.e. 'Work', or 'Home'",
                        "examples": [
                          "Work",
                          "Home",
                          "Vacation",
                          "Bob's Cell",
                          "Alice's Work"
                        ],
                        "x-parser-schema-id": "<anonymous-schema-415>"
                      },
                      "telephone": {
                        "type": "string",
                        "x-faker": "phone.phoneNumber",
                        "examples": [
                          "555-555-5555",
                          "555-555-5555 x123",
                          "555-555-5555 ext. 123",
                          "+1-555-555-5555"
                        ],
                        "x-parser-schema-id": "<anonymous-schema-416>"
                      },
                      "faxNumber": {
                        "type": "string",
                        "x-faker": "phone.phoneNumber",
                        "examples": [
                          "555-555-5555",
                          "555-555-5555 x123",
                          "555-555-5555 ext. 123",
                          "+1-555-555-5555"
                        ],
                        "x-parser-schema-id": "<anonymous-schema-417>"
                      },
                      "email": {
                        "description": "an email address for the item.",
                        "type": "string",
                        "format": "email",
                        "x-faker": "internet.email",
                        "examples": [
                          "bob@example.com",
                          "alice@example.com"
                        ],
                        "x-parser-schema-id": "<anonymous-schema-418>"
                      },
                      "url": {
                        "description": "primary URL for the item.",
                        "type": "string",
                        "format": "uri",
                        "example": "https://www.facebook.com/hallandoates",
                        "x-parser-schema-id": "<anonymous-schema-419>"
                      }
                    }
                  },
                  "email": {
                    "title": "email",
                    "description": "a valid email address",
                    "type": "string",
                    "format": "email",
                    "x-faker": "internet.email",
                    "x-parser-schema-id": "<anonymous-schema-89>"
                  },
                  "familyName": {
                    "$id": "http://realestate.yodata.me/schema/familyName.yaml",
                    "type": "string",
                    "title": "Family Name",
                    "description": "Last Name of a person",
                    "x-faker": "name.lastName",
                    "maxLength": 50,
                    "externalDocs": {
                      "description": "Family Name",
                      "url": "https://schema.org/familyName"
                    },
                    "examples": [
                      "Smith",
                      "Jones",
                      "Parker",
                      "Monk",
                      "Brown",
                      "Miller",
                      "Davis",
                      "Wilson",
                      "Fitzgerald",
                      "Johnson",
                      "Williams"
                    ]
                  },
                  "givenName": {
                    "type": "string",
                    "description": "First Name of a person",
                    "x-faker": "name.firstName",
                    "examples": [
                      "John",
                      "Jane",
                      "Mary",
                      "Joseph",
                      "William",
                      "David",
                      "Richard",
                      "Charles",
                      "Thomas",
                      "Christopher",
                      "Daniel",
                      "Matthew",
                      "Anthony",
                      "Donald",
                      "Mark",
                      "Paul",
                      "Steven",
                      "Andrew",
                      "Kenneth",
                      "George",
                      "Joshua",
                      "Kevin",
                      "Brian",
                      "Edward",
                      "Ronald",
                      "Timothy",
                      "Jason",
                      "Jeffrey",
                      "Ryan",
                      "Jacob"
                    ],
                    "x-parser-schema-id": "<anonymous-schema-105>"
                  },
                  "id": {
                    "type": "string",
                    "format": "uri",
                    "description": "Linked-Data URI (@id)",
                    "x-parser-schema-id": "<anonymous-schema-242>"
                  },
                  "identifier": {
                    "title": "identifier",
                    "type": "object",
                    "summary": "identifier assigned to a contact by the vendor who originally created the contact",
                    "maxProperties": 1,
                    "minProperties": 1,
                    "examples": [
                      {
                        "bhhsconsumerid": "12345"
                      },
                      {
                        "salesforceid": "56789"
                      }
                    ],
                    "x-parser-schema-id": "identifier"
                  },
                  "image": {
                    "title": "image",
                    "description": "an ImageObject or URI reference to an image on the web.",
                    "type": "array",
                    "x-range": [
                      "ImageObject"
                    ],
                    "items": [
                      {
                        "type": "object",
                        "allOf": [
                          {
                            "title": "MediaObject",
                            "description": "an image, video or document availble for download",
                            "x-subclass": [
                              "ImageObject",
                              "DigitalDocument"
                            ],
                            "allOf": [
                              {
                                "$id": "http://realestate.yodata.me/schema/Thing",
                                "type": "object",
                                "title": "Thing",
                                "summary": "The root type of all Things.",
                                "required": [
                                  "type"
                                ],
                                "propertyNames": {
                                  "pattern": "^[a-z@$][a-zA-Z0-9-_]+$",
                                  "x-parser-schema-id": "<anonymous-schema-221>"
                                },
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "pattern": "^[A-Z][a-zA-Z0-9]+$",
                                    "description": "The item type (Linked-Data @type)",
                                    "x-parser-schema-id": "<anonymous-schema-219>"
                                  },
                                  "@id": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "the liked data uri for the Thing",
                                    "x-parser-schema-id": "<anonymous-schema-220>"
                                  }
                                },
                                "x-parser-schema-id": "Thing"
                              },
                              {
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "MediaObject",
                                      "ImageObject",
                                      "DigitalDocument"
                                    ]
                                  },
                                  "id": {
                                    "description": "the URL to access the item.",
                                    "example": "http://user.example.com/public/logo/fileName.zip",
                                    "type": "string",
                                    "format": "uri"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "the file name of the object.",
                                    "example": "fileName.zip"
                                  },
                                  "encodingFormat": {
                                    "type": "string",
                                    "description": "MIME type",
                                    "example": "application/zip"
                                  },
                                  "about": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "URI to the subject of the image or logo",
                                    "example": "http://user.example.com/profile/card#me"
                                  },
                                  "url": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "URL of the image content",
                                    "example": "http://user.example.com/public/profile/image.jpg"
                                  }
                                },
                                "x-parser-schema-id": "<anonymous-schema-222>"
                              }
                            ],
                            "x-parser-schema-id": "MediaObject"
                          },
                          {
                            "title": "ImageObject",
                            "x-range": "ImageObject",
                            "properties": {
                              "type": {
                                "enum": [
                                  "ImageObject"
                                ],
                                "example": "ImageObject"
                              },
                              "id": {
                                "example": "http://user.example.com/public/logo/image.jpg"
                              },
                              "name": {
                                "example": "image.jpg"
                              },
                              "encodingFormat": {
                                "example": "image/jpeg"
                              }
                            },
                            "x-parser-schema-id": "<anonymous-schema-223>"
                          }
                        ],
                        "x-parser-schema-id": "<anonymous-schema-218>"
                      }
                    ],
                    "x-parser-schema-id": "<anonymous-schema-217>"
                  },
                  "jobTitle": {
                    "type": "array",
                    "items": {
                      "title": "jobTitle",
                      "description": "The job title of the person (for example, Financial Manager).",
                      "type": "string",
                      "x-faker": "name.jobTitle",
                      "examples": [
                        "CEO",
                        "Sales Manager",
                        "Escrow Officer",
                        "Transaction Coordinator",
                        "Director of Marketing",
                        "Senior Loan Officer",
                        "Loan Officer",
                        "Sanitation Engineer",
                        "Owner",
                        "Cofounder",
                        "Founder",
                        "President",
                        "Vice President of Sales",
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null
                      ],
                      "x-parser-schema-id": "<anonymous-schema-421>"
                    },
                    "x-parser-schema-id": "<anonymous-schema-420>"
                  },
                  "memberOf": {
                    "title": "memberOf",
                    "description": "an Organization (or ProgramMembership) to which this Person or Organization belongs.",
                    "type": "array",
                    "x-range": [
                      "OrganizationRole",
                      "URI"
                    ],
                    "items": {
                      "anyOf": [
                        {
                          "$id": "OrganizationRole",
                          "title": "OrganizationRole",
                          "type": "object",
                          "description": "describes a role played by a member and a group or organization.",
                          "properties": {
                            "type": {
                              "type": "string",
                              "description": "a role played by the member in the memberOf group",
                              "enum": [
                                "OrganizationRole"
                              ],
                              "x-parser-schema-id": "<anonymous-schema-424>"
                            },
                            "roleName": {
                              "type": "string",
                              "description": "the role name",
                              "example": "Owner",
                              "x-parser-schema-id": "<anonymous-schema-425>"
                            },
                            "memberOf": {
                              "description": "the org or group where the role is performed",
                              "type": "object",
                              "example": {
                                "type": "RealEstateOrganization",
                                "id": "http://orgid.example.com/profile/card#me"
                              },
                              "x-parser-schema-id": "<anonymous-schema-426>"
                            },
                            "member": {
                              "description": "member object or id",
                              "type": "string",
                              "format": "uri",
                              "example": "https://memberid.example.com/profile/card#me",
                              "x-parser-schema-id": "<anonymous-schema-427>"
                            },
                            "startDate": {
                              "type": "string",
                              "format": "date-time",
                              "description": "date the member began performing this role",
                              "x-parser-schema-id": "<anonymous-schema-428>"
                            },
                            "endDate": {
                              "type": "string",
                              "format": "date-time",
                              "description": "date the member stopped performing the role",
                              "x-parser-schema-id": "<anonymous-schema-429>"
                            }
                          },
                          "x-parser-schema-id": "OrganizationRole"
                        },
                        {
                          "type": "string",
                          "format": "uri",
                          "x-parser-schema-id": "<anonymous-schema-430>"
                        }
                      ],
                      "x-parser-schema-id": "<anonymous-schema-423>"
                    },
                    "x-parser-schema-id": "<anonymous-schema-422>"
                  },
                  "name": {
                    "$id": "http://realestate.yodata.me/schema/name.yaml",
                    "title": "name",
                    "type": "string",
                    "x-parser-schema-id": "name"
                  },
                  "parentOrganization": {
                    "$id": "http://realestate.yodata.me/schema/parentOrganization",
                    "title": "parentOrganization",
                    "description": "organizations of which this org is a part.",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uri",
                      "x-parser-schema-id": "<anonymous-schema-431>"
                    }
                  },
                  "permit": {
                    "title": "Permit",
                    "description": "A permit issued by an organization to an individual or business.",
                    "type": "object",
                    "x-hasSubclass": [
                      "RealEstateLicense"
                    ],
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Permit type.",
                        "enum": [
                          "Permit"
                        ],
                        "x-parser-schema-id": "<anonymous-schema-433>"
                      },
                      "name": {
                        "type": "string",
                        "description": "Common or display value of the Permit.",
                        "example": "DRE Number",
                        "x-parser-schema-id": "<anonymous-schema-434>"
                      },
                      "issuedBy": {
                        "type": "object",
                        "x-range": "Organization",
                        "description": "The issuing authority",
                        "example": {
                          "type": "State",
                          "name": "California"
                        },
                        "x-parser-schema-id": "<anonymous-schema-435>"
                      },
                      "issuedThrough": {
                        "type": "object",
                        "description": "the service through which the permit was granted",
                        "example": {
                          "type": "Service",
                          "name": "Department of Real Estate"
                        },
                        "x-parser-schema-id": "<anonymous-schema-436>"
                      },
                      "validIn": {
                        "type": "object",
                        "x-range": "Place",
                        "x-parser-schema-id": "<anonymous-schema-437>"
                      },
                      "validFrom": {
                        "type": "string",
                        "format": "date-time",
                        "description": "start date",
                        "x-parser-schema-id": "<anonymous-schema-438>"
                      },
                      "validUntil": {
                        "type": "string",
                        "format": "date-time",
                        "description": "end date",
                        "x-parser-schema-id": "<anonymous-schema-439>"
                      }
                    },
                    "x-parser-schema-id": "<anonymous-schema-432>"
                  },
                  "subOrganization": {
                    "$id": "http://realestate.yodata.me/schema/subOrganization",
                    "title": "subOrganization",
                    "description": "child organizations of the organization",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uri",
                      "x-parser-schema-id": "<anonymous-schema-440>"
                    }
                  },
                  "url": {
                    "title": "url",
                    "type": "string",
                    "format": "uri",
                    "description": "URL of the item.",
                    "x-parser-schema-id": "<anonymous-schema-441>"
                  }
                },
                "x-parser-schema-id": "RealEstateAgent"
              },
              {
                "title": "Person",
                "type": "object",
                "required": [
                  "type",
                  "name"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "x-parser-schema-id": "<anonymous-schema-90>"
                  },
                  "affiliation": {
                    "description": "An organization that this person is affiliated with",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uri",
                      "example": "https://example.com/profile/card#me",
                      "x-parser-schema-id": "<anonymous-schema-92>"
                    },
                    "x-parser-schema-id": "<anonymous-schema-91>"
                  },
                  "address": {
                    "type": "array",
                    "items": {
                      "$id": "http://realestate.yodata.me/schemas/PostalAddress.yaml",
                      "title": "PostalAddress",
                      "type": "object",
                      "description": "A physical address.",
                      "properties": {
                        "type": {
                          "type": "string",
                          "const": "PostalAddress",
                          "x-parser-schema-id": "<anonymous-schema-94>"
                        },
                        "streetAddress": {
                          "$id": "streetAddress.yaml",
                          "title": "streetAddress",
                          "type": "string",
                          "description": "the street address",
                          "example": "1007 Mountain Gate Rd",
                          "maxLength": 75,
                          "x-faker": "address.streetAddress",
                          "x-parser-schema-id": "streetAddress"
                        },
                        "postOfficeBoxNumber": {
                          "$id": "http://realestate.yodata.me/schema/postOfficeBoxNumber",
                          "title": "postOfficeBoxNumber",
                          "type": "string",
                          "description": "The post office box number for PO box addresses.",
                          "x-faker": "address.secondaryAddress",
                          "example": "Box 1234"
                        },
                        "addressRegion": {
                          "$id": "addressRegion",
                          "title": "addressRegion",
                          "type": "string",
                          "description": "abbreviated state or province",
                          "max-length": 2,
                          "examples": [
                            "NJ",
                            "CA",
                            "MI",
                            null
                          ],
                          "x-faker": "address.stateAbbr",
                          "x-parser-schema-id": "addressRegion"
                        },
                        "addressLocality": {
                          "$id": "addressLocality",
                          "type": "string",
                          "description": "City, Township.",
                          "maxLength": 50,
                          "x-faker": "address.city",
                          "examples": [
                            "Gotham City",
                            "Kulasmouth",
                            "Heidistad",
                            "Altamonte Springs",
                            "West Ahmed",
                            "Blaiseview",
                            null
                          ],
                          "x-parser-schema-id": "addressLocality"
                        },
                        "postalCode": {
                          "$id": "http://realestate.yodata.me/schema/postalCode",
                          "title": "postalCode",
                          "type": "string",
                          "description": "Zip/Post Code",
                          "maxLength": 12,
                          "examples": [
                            "10010",
                            "50239-7698",
                            null
                          ],
                          "x-parser-schema-id": "postalCode"
                        },
                        "addressCountry": {
                          "$id": "http://realestate.yodata.me/schema/addressCountry",
                          "title": "addressCountry",
                          "description": "two-letter ISO 3166-1 alpha-2 country code",
                          "type": "string",
                          "enum": [
                            "CA",
                            "DE",
                            "GR",
                            "IN",
                            "IT",
                            "MX",
                            "PE",
                            "PT",
                            "ES",
                            "AE",
                            "GB",
                            "US"
                          ],
                          "x-parser-schema-id": "addressCountry"
                        },
                        "addressCounty": {
                          "$id": "http://realestate.yodata.me/schema/addressCounty",
                          "title": "addressCounty",
                          "description": "County",
                          "type": "string",
                          "x-faker": "address.county",
                          "x-parser-schema-id": "addressCounty"
                        },
                        "addressSubdivision": {
                          "$id": "http://realestate.yodata.me/schema/addressSubdivision",
                          "title": "addressSubdivision",
                          "description": "the subdivision or neighborhood (us real estate extension)",
                          "type": "string",
                          "x-faker": "address.streetName",
                          "examples": [
                            "Gotham Heights",
                            "South Kensington",
                            "SOMA (South of Market)",
                            "Nob Hill"
                          ]
                        }
                      },
                      "x-parser-schema-id": "PostalAddress"
                    },
                    "x-parser-schema-id": "<anonymous-schema-93>"
                  },
                  "birthDate": {
                    "description": "date of birth.",
                    "type": "string",
                    "format": "date",
                    "x-parser-schema-id": "<anonymous-schema-95>"
                  },
                  "contactPoint": {
                    "description": "contact points for the person",
                    "type": "array",
                    "items": {
                      "$id": "http://realestate.yodata.me/schema/ContactPoint.json",
                      "title": "ContactPoint",
                      "description": "A point of contact for the entity. By convention in the real estate domain, ContactPoints\nare preferred over telephone, email, and faxNumber so the ContactPoint.name property can be used to label values\nfor example, Work Telephone, Home, as named contactPoint values.\n",
                      "type": "object",
                      "required": [
                        "type",
                        "name"
                      ],
                      "minProperties": 3,
                      "properties": {
                        "type": {
                          "type": "string",
                          "const": "ContactPoint",
                          "x-parser-schema-id": "<anonymous-schema-97>"
                        },
                        "name": {
                          "type": "string",
                          "description": "a label for the contactPoint, i.e. 'Work', or 'Home'",
                          "examples": [
                            "Work",
                            "Home",
                            "Vacation",
                            "Bob's Cell",
                            "Alice's Work"
                          ],
                          "x-parser-schema-id": "<anonymous-schema-98>"
                        },
                        "telephone": {
                          "type": "string",
                          "x-faker": "phone.phoneNumber",
                          "examples": [
                            "555-555-5555",
                            "555-555-5555 x123",
                            "555-555-5555 ext. 123",
                            "+1-555-555-5555"
                          ],
                          "x-parser-schema-id": "<anonymous-schema-99>"
                        },
                        "faxNumber": {
                          "type": "string",
                          "x-faker": "phone.phoneNumber",
                          "examples": [
                            "555-555-5555",
                            "555-555-5555 x123",
                            "555-555-5555 ext. 123",
                            "+1-555-555-5555"
                          ],
                          "x-parser-schema-id": "<anonymous-schema-100>"
                        },
                        "email": {
                          "description": "an email address for the item.",
                          "type": "string",
                          "format": "email",
                          "x-faker": "internet.email",
                          "examples": [
                            "bob@example.com",
                            "alice@example.com"
                          ],
                          "x-parser-schema-id": "<anonymous-schema-101>"
                        },
                        "url": {
                          "description": "primary URL for the item.",
                          "type": "string",
                          "format": "uri",
                          "example": "https://www.facebook.com/hallandoates",
                          "x-parser-schema-id": "<anonymous-schema-102>"
                        }
                      },
                      "x-parser-schema-id": "ContactPoint"
                    },
                    "x-parser-schema-id": "<anonymous-schema-96>"
                  },
                  "email": {
                    "title": "email",
                    "description": "a valid email address",
                    "type": "string",
                    "format": "email",
                    "x-faker": "internet.email",
                    "x-parser-schema-id": "<anonymous-schema-89>"
                  },
                  "additionalName": {
                    "title": "additionalName",
                    "description": "any other name(s) associated with the entity, i.e. nickname, middle name, maiden name, etc. For multiple names, use a comma without space as a separator.",
                    "type": "string",
                    "examples": [
                      "Johnny,John",
                      "Prince,The Artist Formerly Known as Prince,The Artist",
                      "Babs,Barbara",
                      "Katheryn Elizabeth Hudson,Katy Perry",
                      "Destiny Hope Cyrus,Miley Cyrus"
                    ],
                    "x-parser-schema-id": "<anonymous-schema-103>"
                  },
                  "familyName": {
                    "$id": "http://realestate.yodata.me/schema/familyName.yaml",
                    "type": "string",
                    "title": "Family Name",
                    "description": "Last Name of a person",
                    "x-faker": "name.lastName",
                    "maxLength": 50,
                    "externalDocs": {
                      "description": "Family Name",
                      "url": "https://schema.org/familyName"
                    },
                    "examples": [
                      "Smith",
                      "Jones",
                      "Parker",
                      "Monk",
                      "Brown",
                      "Miller",
                      "Davis",
                      "Wilson",
                      "Fitzgerald",
                      "Johnson",
                      "Williams"
                    ]
                  },
                  "faxNumber": {
                    "type": "string",
                    "description": "Do people still use fax machines?",
                    "x-faker": "phone.phoneNumber",
                    "x-parser-schema-id": "<anonymous-schema-104>"
                  },
                  "givenName": {
                    "type": "string",
                    "description": "First Name of a person",
                    "x-faker": "name.firstName",
                    "examples": [
                      "John",
                      "Jane",
                      "Mary",
                      "Joseph",
                      "William",
                      "David",
                      "Richard",
                      "Charles",
                      "Thomas",
                      "Christopher",
                      "Daniel",
                      "Matthew",
                      "Anthony",
                      "Donald",
                      "Mark",
                      "Paul",
                      "Steven",
                      "Andrew",
                      "Kenneth",
                      "George",
                      "Joshua",
                      "Kevin",
                      "Brian",
                      "Edward",
                      "Ronald",
                      "Timothy",
                      "Jason",
                      "Jeffrey",
                      "Ryan",
                      "Jacob"
                    ],
                    "x-parser-schema-id": "<anonymous-schema-105>"
                  },
                  "honorificPrefix": {
                    "title": "honorificPrefix",
                    "description": "An honorific prefix preceding a Person's name such as Dr/Mrs/Mr.",
                    "type": "string",
                    "example": "Dr",
                    "x-parser-schema-id": "<anonymous-schema-106>"
                  },
                  "honorificSuffix": {
                    "title": "honorificSuffix",
                    "description": "An honorific title following a person's name like M.D.",
                    "type": "string",
                    "example": "Esq",
                    "x-parser-schema-id": "<anonymous-schema-107>"
                  },
                  "jobTitle": {
                    "title": "jobTitle",
                    "description": "job tiles associated with the item",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "x-parser-schema-id": "<anonymous-schema-109>"
                    },
                    "example": [
                      "Chief Data Officer",
                      "Sanitation Engineer"
                    ],
                    "x-parser-schema-id": "<anonymous-schema-108>"
                  },
                  "knowsLanguage": {
                    "description": "languages spoken by the person",
                    "type": "array",
                    "items": {
                      "$id": "http://realestate.yodata.me/schema/Language.yaml",
                      "description": "a written or spoken Language",
                      "title": "Language",
                      "type": "object",
                      "required": [
                        "type",
                        "name",
                        "additionalName"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "const": "Language",
                          "x-parser-schema-id": "<anonymous-schema-111>"
                        },
                        "name": {
                          "type": "string",
                          "description": "the display name of the language",
                          "x-parser-schema-id": "<anonymous-schema-112>"
                        },
                        "additionalName": {
                          "type": "string",
                          "description": "BCP 47 language code",
                          "x-parser-schema-id": "<anonymous-schema-113>"
                        }
                      },
                      "examples": [
                        {
                          "type": "Language",
                          "name": "English",
                          "additionalName": "en-us"
                        },
                        {
                          "type": "Language",
                          "name": "Spanish",
                          "additionalName": "es"
                        },
                        {
                          "type": "Language",
                          "name": "French",
                          "additionalName": "fr"
                        },
                        {
                          "type": "Language",
                          "name": "German",
                          "additionalName": "de"
                        },
                        {
                          "type": "Language",
                          "name": "Italian",
                          "additionalName": "it"
                        },
                        {
                          "type": "Language",
                          "name": "Japanese",
                          "additionalName": "ja"
                        },
                        {
                          "type": "Language",
                          "name": "Korean",
                          "additionalName": "ko"
                        },
                        {
                          "type": "Language",
                          "name": "Portuguese",
                          "additionalName": "pt"
                        },
                        {
                          "type": "Language",
                          "name": "Russian",
                          "additionalName": "ru"
                        },
                        {
                          "type": "Language",
                          "name": "Chinese",
                          "additionalName": "zh"
                        },
                        {
                          "type": "Language",
                          "name": "Arabic",
                          "additionalName": "ar"
                        },
                        {
                          "type": "Language",
                          "name": "Hindi",
                          "additionalName": "hi"
                        },
                        {
                          "type": "Language",
                          "name": "Bengali",
                          "additionalName": "bn"
                        },
                        {
                          "type": "Language",
                          "name": "Portuguese",
                          "additionalName": "pt"
                        }
                      ],
                      "x-parser-schema-id": "Language"
                    },
                    "x-parser-schema-id": "<anonymous-schema-110>"
                  },
                  "name": {
                    "description": "Full name of the person.",
                    "type": "string",
                    "x-faker": "name.findName",
                    "x-parser-schema-id": "<anonymous-schema-114>"
                  },
                  "telephone": {
                    "$id": "telephone",
                    "title": "telephone",
                    "type": "string",
                    "description": "Primary phone number.",
                    "example": "+15558675309"
                  },
                  "worksFor": {
                    "type": "string",
                    "description": "Organizations the person works for.",
                    "x-faker": "company.companyName",
                    "x-parser-schema-id": "<anonymous-schema-115>"
                  }
                },
                "x-parser-schema-id": "Person"
              }
            ],
            "example": {
              "type": "RealEstateAgent",
              "name": "Randy RealEstateAgent",
              "id": "https://{agentid}.example.com/profile/card#me"
            },
            "x-parser-schema-id": "<anonymous-schema-543>"
          }
        },
        "x-parser-schema-id": "ListingOffer"
      },
      "topic": {
        "const": "realestate/website#listingoffer",
        "x-parser-schema-id": "<anonymous-schema-533>"
      }
    },
    "x-parser-schema-id": "<anonymous-schema-532>"
  }
}
