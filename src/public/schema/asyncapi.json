{
  "asyncapi": "2.5.0",
  "info": {
    "title": "Standard Events for Real Estate Software Integration and Automation.",
    "version": "1.0.0",
    "description": "This document describes an event vocabulary for automating business processes across organizational boundaries in the residential real estate domain.\n\nThe vocabulary and related libraries are 100% open-source software actively maintained by a small but passionate community of developers and supported by forward-thinking real estate businesses.\n\n## Technical Acknowledgments\nThe Real Estate vocabulary is largely based on the tremendous work being done at schema.org.\n\nLinked Data Platform and Notifications are W3C specs credited to Sarven Capadisli, University of Bonn, info@csarven.ca\nAmy Guy, University of Edinburgh, amy@rhiaro.co.uk\nSteve Speicher, IBM Corporation\nJohn Arwe, IBM Corporation\nAshok Malhotra, Oracle Corporation\n\nThe Profile schema comes from the SOLID project developed at MIT.\n\nAnd all of the above can be traced directly to the work of the incomparable Tim Berners-Lee.\n",
    "contact": {
      "name": "Dave Duran",
      "email": "dave@yodata.io",
      "url": "https://github.com/yodata/real-estate"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "x-messages": {
      "name": "Events",
      "hideProps": false,
      "hideExample": false
    },
    "x-schemas": {
      "menu": "Types"
    }
  },
  "servers": {
    "production": {
      "url": "https://dev.yodata.io/",
      "protocol": "http",
      "description": "server description"
    }
  },
  "defaultContentType": "application/json",
  "components": {
    "schemas": {
      "CloudEvent": {
        "title": "CloudEvent",
        "type": "object",
        "required": [
          "topic",
          "agent",
          "instrument",
          "time"
        ],
        "properties": {
          "topic": {
            "type": "string",
            "description": "the event topic which determines the event.data schema",
            "x-parser-schema-id": "<anonymous-schema-543>"
          },
          "time": {
            "type": "string",
            "format": "date-time",
            "description": "date & time the event was produced",
            "x-parser-schema-id": "<anonymous-schema-544>"
          },
          "agent": {
            "type": "string",
            "format": "uri",
            "description": "the user, team, or organization who sent the event",
            "example": "https://agentid.example.com/profile/card#me",
            "x-parser-schema-id": "<anonymous-schema-545>"
          },
          "instrument": {
            "type": "string",
            "format": "uri",
            "description": "the service which created the event",
            "example": "https://vendorid.example.com/profile/card#me",
            "x-parser-schema-id": "<anonymous-schema-546>"
          },
          "source": {
            "type": "string",
            "format": "uri",
            "description": "an agent, team or organization who received a copy of the event",
            "example": "https://companyid.example.com/profile/card#me",
            "x-parser-schema-id": "<anonymous-schema-547>"
          },
          "originalRecipient": {
            "type": "string",
            "format": "uri",
            "description": "the original recipient of the event with this id",
            "example": "https://agentid.example.com/profile/card#me",
            "x-parser-schema-id": "<anonymous-schema-548>"
          },
          "id": {
            "type": "string",
            "format": "uri",
            "description": "the shared identifier of the event, akd the event id",
            "example": "https://instrumentid.example.com/publish/xxxxxxxxxxxxx",
            "x-parser-schema-id": "<anonymous-schema-549>"
          },
          "@id": {
            "type": "string",
            "format": "uri",
            "description": "the url of your instance of the event in your inbox",
            "example": "https://yourpod.example.com/inbox/xxxxxxxxxxxxx",
            "x-parser-schema-id": "<anonymous-schema-550>"
          },
          "data": {
            "type": "object",
            "description": "event payload, typically an Action",
            "x-parser-schema-id": "<anonymous-schema-551>"
          }
        },
        "x-parser-schema-id": "CloudEvent"
      },
      "Action": {
        "$id": "http://realestate.yodata.me/schema/Action",
        "title": "Action",
        "type": "object",
        "description": "An action performed by a direct agent and indirect participants upon a direct object. Optionally happens at a location with the help of an inanimate instrument. The execution of the action may produce a result. Specific action sub-type documentation specifies the exact expectation of each argument/role.",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "description": "the action type",
            "type": "string",
            "x-parser-schema-id": "<anonymous-schema-354>"
          },
          "object": {
            "description": "item on which the action is carried out",
            "x-parser-schema-id": "<anonymous-schema-355>"
          }
        },
        "externalDocs": {
          "description": "schema.org/Action",
          "url": "https://schema.org/Action"
        },
        "x-parser-schema-id": "Action"
      },
      "Award": {
        "title": "Award",
        "type": "object",
        "description": "An honor bestowed on one or mote _recipients_ by the message _agent_",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "Award"
            ],
            "description": "\"AwardAction\"",
            "x-parser-schema-id": "<anonymous-schema-14>"
          },
          "name": {
            "example": "Top 1%",
            "description": "name of the award",
            "type": "string",
            "x-parser-schema-id": "<anonymous-schema-15>"
          },
          "dateAwarded": {
            "type": "string",
            "format": "date-time",
            "description": "date the award was presented or announced.",
            "x-range": "DateTime",
            "example": "2019-11-25T04:23:32.000Z",
            "x-parser-schema-id": "<anonymous-schema-16>"
          },
          "agent": {
            "type": "string",
            "format": "uri",
            "description": "the agent that presented the award",
            "x-parser-schema-id": "<anonymous-schema-17>"
          },
          "recipient": {
            "type": "array",
            "description": "recipients of the award",
            "items": {
              "type": "object",
              "description": "the award recipient",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "RealEstateAgent",
                    "RealEstateOffice",
                    "RealEstateOrganization"
                  ],
                  "x-parser-schema-id": "<anonymous-schema-20>"
                },
                "id": {
                  "type": "string",
                  "format": "uri",
                  "example": "https://user.example.com/profile/card#me",
                  "x-parser-schema-id": "<anonymous-schema-21>"
                },
                "name": {
                  "type": "string",
                  "description": "the name of the award recipient",
                  "x-faker": "name.findName",
                  "x-parser-schema-id": "<anonymous-schema-22>"
                }
              },
              "required": [
                "type",
                "id",
                "name"
              ],
              "x-parser-schema-id": "<anonymous-schema-19>"
            },
            "x-parser-schema-id": "<anonymous-schema-18>"
          },
          "identifier": {
            "example": {
              "hsfAwardId": "xxxx"
            },
            "title": "identifier",
            "type": "object",
            "description": "identifier assigned to a contact by the vendor who originally created the contact",
            "examples": [
              {
                "salesforceid": "0031U00002XW1QWQA1"
              },
              {
                "vendoraid": "123456"
              },
              {
                "originating_system_id": "123456"
              }
            ],
            "x-parser-schema-id": "<anonymous-schema-23>"
          }
        },
        "x-parser-schema-id": "Award"
      },
      "AwardSeries": {
        "title": "AwardSeries",
        "type": "object",
        "x-range": [
          "AwardSeries"
        ],
        "description": "an award bestowed at regular intervals",
        "properties": {
          "type": {
            "const": "AwardSeries",
            "x-parser-schema-id": "<anonymous-schema-6>"
          },
          "name": {
            "example": "Top 1% Club",
            "description": "name of the series",
            "type": "string",
            "x-parser-schema-id": "<anonymous-schema-7>"
          },
          "description": {
            "example": "Annual",
            "type": "string",
            "description": "description of the item.",
            "x-parser-schema-id": "<anonymous-schema-8>"
          },
          "duration": {
            "title": "duration",
            "type": "string",
            "format": "duration",
            "description": "The duration of the item in ISO 8601 date format.",
            "example": "R/P1Y",
            "x-parser-schema-id": "<anonymous-schema-9>"
          },
          "startDate": {
            "description": "the start date-time (ISO 8601 formated)",
            "type": "string",
            "format": "date-time",
            "x-parser-schema-id": "<anonymous-schema-10>"
          },
          "endDate": {
            "type": "string",
            "description": "the end date-time (ISO 8601 formated)",
            "format": "date-time",
            "x-parser-schema-id": "<anonymous-schema-11>"
          },
          "id": {
            "type": "string",
            "format": "uri",
            "x-parser-schema-id": "<anonymous-schema-12>"
          },
          "identifier": {
            "example": {
              "hsfAwardSeriesID": "xxxx"
            },
            "title": "identifier",
            "type": "object",
            "description": "identifier assigned to a contact by the vendor who originally created the contact",
            "examples": [
              {
                "salesforceid": "0031U00002XW1QWQA1"
              },
              {
                "vendoraid": "123456"
              },
              {
                "originating_system_id": "123456"
              }
            ],
            "x-parser-schema-id": "<anonymous-schema-13>"
          }
        },
        "x-parser-schema-id": "AwardSeries"
      },
      "AwardTeam": {
        "title": "AwardTeam",
        "type": "object",
        "x-range": "AwardTeam",
        "description": "a Collection",
        "required": [
          "type",
          "identifier"
        ],
        "properties": {
          "type": {
            "const": "AwardTeam",
            "x-parser-schema-id": "<anonymous-schema-24>"
          },
          "name": {
            "example": "Top Producer by Volume",
            "type": "string",
            "description": "the name of the item",
            "x-parser-schema-id": "<anonymous-schema-25>"
          },
          "identifier": {
            "example": {
              "hsfTeamId": "xxxxx"
            },
            "title": "identifier",
            "type": "object",
            "description": "identifier assigned to a contact by the vendor who originally created the contact",
            "examples": [
              {
                "salesforceid": "0031U00002XW1QWQA1"
              },
              {
                "vendoraid": "123456"
              },
              {
                "originating_system_id": "123456"
              }
            ],
            "x-parser-schema-id": "<anonymous-schema-26>"
          },
          "member": {
            "description": "members of the AwardTeam",
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri",
              "examples": [
                "http://12345.example.com/profile/card#me",
                "http://ma302-001.example.com/profile/card#me",
                "http://ma302.example.com/profile/card#me"
              ],
              "x-parser-schema-id": "<anonymous-schema-28>"
            },
            "x-parser-schema-id": "<anonymous-schema-27>"
          }
        },
        "x-parser-schema-id": "AwardTeam"
      },
      "ApplicationProfile": {
        "allOf": [
          {
            "allOf": [
              {
                "$id": "http://realestate.yodata.me/schema/Thing",
                "type": "object",
                "title": "Thing",
                "summary": "The root type of all Things.",
                "required": [
                  "type"
                ],
                "propertyNames": {
                  "pattern": "^[a-z@$][a-zA-Z0-9-_]+$",
                  "x-parser-schema-id": "<anonymous-schema-274>"
                },
                "properties": {
                  "type": {
                    "type": "string",
                    "pattern": "^[A-Z][a-zA-Z0-9]+$",
                    "description": "The item type (Linked-Data @type)",
                    "x-parser-schema-id": "<anonymous-schema-272>"
                  },
                  "@id": {
                    "type": "string",
                    "format": "uri",
                    "description": "the liked data uri for the Thing",
                    "x-parser-schema-id": "<anonymous-schema-273>"
                  }
                },
                "x-parser-schema-id": "Thing"
              },
              {
                "type": "object",
                "description": "a solid profile document",
                "required": [
                  "id",
                  "type",
                  "primaryTopic"
                ],
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://user.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-554>"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "PersonalProfileDocument"
                    ],
                    "x-parser-schema-id": "<anonymous-schema-555>"
                  },
                  "primaryTopic": {
                    "type": "string",
                    "default": "#me",
                    "x-parser-schema-id": "<anonymous-schema-556>"
                  },
                  "#me": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "type": {
                        "type": "string",
                        "example": "SoftwareApplication",
                        "x-parser-schema-id": "<anonymous-schema-558>"
                      },
                      "inbox": {
                        "description": "URI to your Linked-Data-Notifications Inbox",
                        "type": "string",
                        "example": "/inbox/",
                        "default": "/inbox/",
                        "x-parser-schema-id": "<anonymous-schema-559>"
                      },
                      "outbox": {
                        "description": "URI to your Linked-Data-Notifications Outbox",
                        "type": "string",
                        "example": "/outbox/",
                        "default": "/outbox/",
                        "x-parser-schema-id": "<anonymous-schema-560>"
                      },
                      "storage": {
                        "description": "URI to your storage root.",
                        "type": "string",
                        "example": "/",
                        "default": "/",
                        "x-parser-schema-id": "<anonymous-schema-561>"
                      },
                      "preferencesFile": {
                        "description": "URI to shared application prefs.",
                        "type": "string",
                        "example": "/settings/prefs",
                        "x-parser-schema-id": "<anonymous-schema-562>"
                      },
                      "account": {
                        "description": "discoverable solid:account root",
                        "type": "string",
                        "example": "/",
                        "x-parser-schema-id": "<anonymous-schema-563>"
                      },
                      "privateTypeIndex": {
                        "description": "type index for your private use",
                        "type": "string",
                        "example": "/settings/privateTypeIndex",
                        "x-parser-schema-id": "<anonymous-schema-564>"
                      },
                      "publicTypeIndex": {
                        "description": "shared, discoverable type index",
                        "type": "string",
                        "example": "/settings/publicTypeIndex",
                        "x-parser-schema-id": "<anonymous-schema-565>"
                      },
                      "permissions": {
                        "description": "Permissions required by an linked-data application or service.",
                        "x-enumeration": [
                          {
                            "name": "profile:read",
                            "description": "grantee can read the owner's profile data."
                          },
                          {
                            "name": "profile:write",
                            "description": "grantee can modify the owner's profile data."
                          },
                          {
                            "name": "lead",
                            "description": "grantee can read, write and modify leads."
                          },
                          {
                            "name": "contact",
                            "description": "grantee can read, write and modify contacts."
                          },
                          {
                            "name": "website:events",
                            "description": "grantee can read, write and modify website events."
                          }
                        ],
                        "type": "array",
                        "items": {
                          "type": "object",
                          "enum": [
                            "profile:read",
                            "profile:write",
                            "lead",
                            "contact",
                            "website:events"
                          ],
                          "x-parser-schema-id": "<anonymous-schema-567>"
                        },
                        "x-parser-schema-id": "<anonymous-schema-566>"
                      }
                    },
                    "x-parser-schema-id": "<anonymous-schema-557>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-553>"
              }
            ],
            "x-parser-schema-id": "<anonymous-schema-552>"
          },
          {
            "type": "object",
            "required": [
              "id",
              "type",
              "inbox",
              "outbox"
            ],
            "properties": {
              "id": {
                "type": "string",
                "format": "uri",
                "example": "https://user.example.com/profile/card#me",
                "x-parser-schema-id": "<anonymous-schema-569>"
              },
              "type": {
                "type": "string",
                "example": "SoftwareApplication",
                "x-parser-schema-id": "<anonymous-schema-570>"
              },
              "inbox": {
                "description": "discoverable uri to your LDN inbox",
                "type": "string",
                "example": "/inbox/",
                "x-parser-schema-id": "<anonymous-schema-571>"
              },
              "outbox": {
                "description": "discoverable uri to your LDN outbox",
                "type": "string",
                "example": "/outbox/",
                "x-parser-schema-id": "<anonymous-schema-572>"
              },
              "storage": {
                "description": "uri to your linked-data storage root",
                "type": "string",
                "example": "/",
                "x-parser-schema-id": "<anonymous-schema-573>"
              },
              "preferencesFile": {
                "description": "discoverable uri for shared application preferences",
                "type": "string",
                "example": "/settings/prefs",
                "x-parser-schema-id": "<anonymous-schema-574>"
              },
              "account": {
                "description": "discoverable solid:account root",
                "type": "string",
                "example": "/",
                "x-parser-schema-id": "<anonymous-schema-575>"
              },
              "privateTypeIndex": {
                "description": "type index for your private use",
                "type": "string",
                "example": "/settings/privateTypeIndex",
                "x-parser-schema-id": "<anonymous-schema-576>"
              },
              "publicTypeIndex": {
                "description": "shared, discoverable type index",
                "type": "string",
                "example": "/settings/publicTypeIndex",
                "x-parser-schema-id": "<anonymous-schema-577>"
              },
              "permissions": {
                "description": "the subscription types required by your service.",
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "profile:read",
                    "contact",
                    "lead",
                    "listing"
                  ],
                  "x-parser-schema-id": "<anonymous-schema-579>"
                },
                "x-parser-schema-id": "<anonymous-schema-578>"
              }
            },
            "x-parser-schema-id": "<anonymous-schema-568>"
          }
        ],
        "x-parser-schema-id": "ApplicationProfile"
      },
      "BlogPosting": {
        "title": "BlogPosting",
        "type": "object",
        "x-range": "BlogPosting",
        "description": "A blog post.",
        "properties": {
          "type": {
            "enum": [
              "BlogPosting"
            ],
            "x-parser-schema-id": "<anonymous-schema-580>"
          },
          "identifier": {
            "example": {
              "aempostid": "xxxx"
            },
            "title": "identifier",
            "type": "object",
            "description": "identifier assigned to a contact by the vendor who originally created the contact",
            "examples": [
              {
                "salesforceid": "0031U00002XW1QWQA1"
              },
              {
                "vendoraid": "123456"
              },
              {
                "originating_system_id": "123456"
              }
            ],
            "x-parser-schema-id": "<anonymous-schema-581>"
          },
          "headline": {
            "type": "string",
            "description": "headline of the post.",
            "example": "Top 10 Spring Cleeaning Tips",
            "x-parser-schema-id": "<anonymous-schema-582>"
          },
          "articleBody": {
            "type": "string",
            "description": "the actual body of the post in HTML format.",
            "example": "<HTML><body>lorem ipsum dolor sit amet, consectetur adipiscing</body></HTML>",
            "x-parser-schema-id": "<anonymous-schema-583>"
          },
          "image": {
            "description": "by convention the first image item is the article hero image.  note: image tags can also be embeded in the articleBody.",
            "title": "image",
            "type": "array",
            "x-range": [
              "ImageObject"
            ],
            "items": [
              {
                "type": "object",
                "allOf": [
                  {
                    "title": "MediaObject",
                    "description": "an image, video or document availble for download",
                    "x-subclass": [
                      "ImageObject",
                      "DigitalDocument"
                    ],
                    "allOf": [
                      {
                        "$id": "http://realestate.yodata.me/schema/Thing",
                        "type": "object",
                        "title": "Thing",
                        "summary": "The root type of all Things.",
                        "required": [
                          "type"
                        ],
                        "propertyNames": {
                          "pattern": "^[a-z@$][a-zA-Z0-9-_]+$",
                          "x-parser-schema-id": "<anonymous-schema-274>"
                        },
                        "properties": {
                          "type": {
                            "type": "string",
                            "pattern": "^[A-Z][a-zA-Z0-9]+$",
                            "description": "The item type (Linked-Data @type)",
                            "x-parser-schema-id": "<anonymous-schema-272>"
                          },
                          "@id": {
                            "type": "string",
                            "format": "uri",
                            "description": "the liked data uri for the Thing",
                            "x-parser-schema-id": "<anonymous-schema-273>"
                          }
                        },
                        "x-parser-schema-id": "Thing"
                      },
                      {
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "MediaObject",
                              "ImageObject",
                              "DigitalDocument"
                            ]
                          },
                          "id": {
                            "description": "the URL to access the item.",
                            "example": "http://user.example.com/public/logo/fileName.zip",
                            "type": "string",
                            "format": "uri"
                          },
                          "name": {
                            "type": "string",
                            "description": "the file name of the object.",
                            "example": "fileName.zip"
                          },
                          "encodingFormat": {
                            "type": "string",
                            "description": "MIME type",
                            "example": "application/zip"
                          },
                          "about": {
                            "type": "string",
                            "format": "uri",
                            "description": "URI to the subject of the image or logo",
                            "example": "http://user.example.com/profile/card#me"
                          },
                          "url": {
                            "type": "string",
                            "format": "uri",
                            "description": "URL of the image content",
                            "example": "http://user.example.com/public/profile/image.jpg"
                          }
                        },
                        "x-parser-schema-id": "<anonymous-schema-275>"
                      }
                    ],
                    "x-parser-schema-id": "MediaObject"
                  },
                  {
                    "title": "ImageObject",
                    "x-range": "ImageObject",
                    "properties": {
                      "type": {
                        "enum": [
                          "ImageObject"
                        ],
                        "example": "ImageObject"
                      },
                      "id": {
                        "example": "http://user.example.com/public/logo/image.jpg"
                      },
                      "name": {
                        "example": "image.jpg"
                      },
                      "encodingFormat": {
                        "example": "image/jpeg"
                      }
                    },
                    "x-parser-schema-id": "<anonymous-schema-276>"
                  }
                ],
                "x-parser-schema-id": "<anonymous-schema-271>"
              }
            ],
            "x-parser-schema-id": "<anonymous-schema-584>"
          },
          "author": {
            "description": "author of the work",
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "RealEstateAgent",
                  "RealEstateOffice",
                  "RealEstateTeam",
                  "RealEstateOrganization"
                ],
                "x-parser-schema-id": "<anonymous-schema-586>"
              },
              "id": {
                "type": "string",
                "format": "uri",
                "description": "the profile URI of the author",
                "example": "https://agent123.example.com/profile/card#me",
                "x-parser-schema-id": "<anonymous-schema-587>"
              }
            },
            "x-parser-schema-id": "<anonymous-schema-585>"
          },
          "provider": {
            "description": "if the article is provided as a template or stock content to be shared by mutliple authors, the provider should be included.",
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "RealEstateOrganization",
                  "RealEstateTeam",
                  "RealEstateOffice",
                  "RealEstateAgent"
                ],
                "x-parser-schema-id": "<anonymous-schema-589>"
              },
              "id": {
                "type": "string",
                "format": "uri",
                "description": "the profile URI of the provider",
                "example": "https://example.com/profile/card#me",
                "x-parser-schema-id": "<anonymous-schema-590>"
              }
            },
            "x-parser-schema-id": "<anonymous-schema-588>"
          },
          "dateCreated": {
            "description": "The date on which the BlogPosting was created or the item was added to a DataFeed.",
            "type": "string",
            "format": "date-time",
            "x-parser-schema-id": "<anonymous-schema-591>"
          },
          "dateModified": {
            "description": "The date on which the BlogPosting was most recently modified or when the item's entry was modified within a DataFeed.",
            "type": "string",
            "format": "date-time",
            "x-parser-schema-id": "<anonymous-schema-592>"
          },
          "url": {
            "title": "url",
            "type": "string",
            "format": "uri",
            "description": "URL of the item.",
            "x-parser-schema-id": "<anonymous-schema-408>"
          },
          "urlTemplate": {
            "type": "string",
            "description": "urlTemplate in [IETF rfc6570 format](https://datatracker.ietf.org/doc/html/rfc6570)",
            "example": "https://example.com/{author/name}/blog/post?{slug}",
            "x-parser-schema-id": "<anonymous-schema-593>"
          }
        },
        "x-parser-schema-id": "BlogPosting"
      },
      "Certification": {
        "type": "object",
        "title": "Certification",
        "description": "A certification issued by an organization to an individual or business.",
        "x-range": "Certification",
        "properties": {
          "type": {
            "description": "Certification",
            "type": "string",
            "enum": [
              "Certification"
            ],
            "x-parser-schema-id": "<anonymous-schema-594>"
          },
          "name": {
            "type": "string",
            "description": "the name of the Certification",
            "example": "e-Agent Certified",
            "x-parser-schema-id": "<anonymous-schema-595>"
          },
          "issuedBy": {
            "type": "object",
            "x-range": "RealEstateOrganization",
            "description": "the issuing authority",
            "properties": {
              "type": {
                "enum": [
                  "RealEstateOrganization"
                ],
                "type": "string",
                "description": "The item type (Linked-Data @type)",
                "x-parser-schema-id": "<anonymous-schema-375>"
              },
              "id": {
                "example": "https://example.com/profile/card#me",
                "type": "string",
                "format": "uri",
                "description": "Linked-Data URI (@id)",
                "x-parser-schema-id": "<anonymous-schema-376>"
              },
              "name": {
                "type": "string",
                "description": "name of the issuing organization",
                "example": "Gotham City Real Estate",
                "x-parser-schema-id": "<anonymous-schema-377>"
              }
            },
            "x-parser-schema-id": "<anonymous-schema-374>"
          },
          "issuedTo": {
            "x-range": "RealEstateAgent",
            "type": "object",
            "description": "the subject",
            "properties": {
              "type": {
                "enum": [
                  "RealEstateAgent"
                ],
                "type": "string",
                "description": "The item type (Linked-Data @type)",
                "x-parser-schema-id": "<anonymous-schema-379>"
              },
              "id": {
                "type": "string",
                "format": "uri",
                "description": "Linked-Data URI (@id)",
                "x-parser-schema-id": "<anonymous-schema-380>"
              },
              "name": {
                "type": "string",
                "description": "the name of the item",
                "x-parser-schema-id": "<anonymous-schema-92>"
              }
            },
            "x-parser-schema-id": "<anonymous-schema-596>"
          }
        },
        "x-parser-schema-id": "Certification"
      },
      "City": {
        "title": "City",
        "type": "object",
        "description": "A city or town.",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "City",
              "PostalCodeArea"
            ],
            "x-parser-schema-id": "<anonymous-schema-597>"
          },
          "name": {
            "type": "string",
            "description": "city name (same as addressLocality)",
            "x-parser-schema-id": "<anonymous-schema-598>"
          },
          "addressRegion": {
            "type": "string",
            "description": "State or Province.",
            "example": "New Jersey",
            "x-parser-schema-id": "<anonymous-schema-599>"
          },
          "addressLocality": {
            "type": "string",
            "description": "City, Township.",
            "example": "Gotham City",
            "x-parser-schema-id": "<anonymous-schema-600>"
          },
          "postalCode": {
            "type": "string",
            "description": "Zip/Post Code",
            "example": "10010",
            "x-parser-schema-id": "<anonymous-schema-601>"
          },
          "addressCountry": {
            "type": "string",
            "description": "The country. For example, USA. You can also provide the two-letter ISO 3166-1 alpha-2 country code.",
            "example": "USA",
            "x-parser-schema-id": "<anonymous-schema-602>"
          },
          "addressCounty": {
            "type": "string",
            "description": "the county (us real estate extension)",
            "example": "Gotham County",
            "x-parser-schema-id": "<anonymous-schema-603>"
          }
        },
        "x-parser-schema-id": "City"
      },
      "Collection": {
        "title": "Collection",
        "type": "object",
        "x-range": "Collection",
        "description": "a set of items.",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "description": "Collection",
            "type": "string",
            "enum": [
              "Collection"
            ],
            "x-parser-schema-id": "<anonymous-schema-604>"
          },
          "name": {
            "type": "string",
            "description": "name of the collection",
            "example": "Clients",
            "x-parser-schema-id": "<anonymous-schema-605>"
          },
          "identifier": {
            "title": "identifier",
            "type": "object",
            "description": "identifier assigned to a contact by the vendor who originally created the contact",
            "examples": [
              {
                "salesforceid": "0031U00002XW1QWQA1"
              },
              {
                "vendoraid": "123456"
              },
              {
                "originating_system_id": "123456"
              }
            ],
            "x-parser-schema-id": "<anonymous-schema-94>"
          },
          "creator": {
            "description": "creator of the collection",
            "type": "string",
            "example": "https://{agentid}.example.com/profile/card#me",
            "x-parser-schema-id": "<anonymous-schema-606>"
          },
          "dateCreated": {
            "$id": "http://realestate.yodata.me/schema/dateCreated.yaml",
            "type": "string",
            "format": "date-time",
            "title": "Date Created",
            "description": "The date on which the item was created."
          },
          "dateModified": {
            "description": "The date on which the item was most recently modified or when the item's entry was modified within a DataFeed.",
            "type": "string",
            "format": "date-time",
            "x-parser-schema-id": "<anonymous-schema-136>"
          },
          "member": {
            "description": "members of the collection",
            "type": "array",
            "items": {
              "type": "object",
              "x-parser-schema-id": "<anonymous-schema-608>"
            },
            "x-parser-schema-id": "<anonymous-schema-607>"
          }
        },
        "x-parser-schema-id": "Collection"
      },
      "Comment": {
        "type": "object",
        "title": "Comment",
        "description": "A comment on an item.",
        "x-range": "Comment",
        "required": [
          "type",
          "text"
        ],
        "properties": {
          "type": {
            "const": "Comment",
            "x-parser-schema-id": "<anonymous-schema-135>"
          },
          "dateCreated": {
            "$id": "http://realestate.yodata.me/schema/dateCreated.yaml",
            "type": "string",
            "format": "date-time",
            "title": "Date Created",
            "description": "The date on which the item was created."
          },
          "dateModified": {
            "description": "The date on which the item was most recently modified or when the item's entry was modified within a DataFeed.",
            "type": "string",
            "format": "date-time",
            "x-parser-schema-id": "<anonymous-schema-136>"
          },
          "dateDeleted": {
            "$id": "http://realestate.yodata.me/schema/dateDeleted.yaml",
            "type": "string",
            "format": "date-time",
            "title": "Date Deleted",
            "description": "The date on which the item was deleted."
          },
          "text": {
            "$id": "http://realestate.yodata.me/schema/text.yaml",
            "title": "text",
            "type": "string",
            "examples": [
              "Populus debet control notitia sua",
              "Aspicio pinguem in his vestimentis?",
              "Et id ipsum vitae.",
              "Amici, Romani et cives, aures vestras mihi praebe",
              "Heus, ego iustus occurrit tibi et hoc est insanus, sed hic numerus meus est, ut me vocas fortasse."
            ]
          },
          "author": {
            "title": "author",
            "type": "object",
            "description": "the author of something",
            "examples": [
              {
                "type": "Contact",
                "name": "Mark Twain",
                "identifier": {
                  "originatingSystemName": "originating-system-id"
                }
              },
              {
                "type": "RealEstateAgent",
                "name": "Andy Warhol",
                "identifier": {
                  "originatingSystemName": "originating-system-id"
                }
              },
              {
                "name": "Stan Lee"
              },
              {
                "email": "bob@example.com"
              },
              {
                "telephone": "1-800-555-1212"
              }
            ],
            "x-parser-schema-id": "<anonymous-schema-137>"
          },
          "about": {
            "example": {
              "type": "Contact",
              "name": "Robin",
              "identifier": {
                "redContact_GUID": "6bf62a1b-225e-4fca-87b3-54cc09446a66"
              }
            },
            "$id": "http://realestate.yodata.me/schema/about.yaml",
            "title": "about",
            "description": "The subject of the content",
            "type": "object",
            "examples": [
              {
                "type": "PropertyListing",
                "streetAddress": "123 Main Street",
                "addressLocality": "Anytown",
                "addressRegion": "NY",
                "postalCode": 12345,
                "addressCountry": "US",
                "identifier": {
                  "originatingSystemName": "originatingsystemid"
                }
              }
            ]
          },
          "identifier": {
            "title": "identifier",
            "type": "object",
            "description": "identifier assigned to a contact by the vendor who originally created the contact",
            "examples": [
              {
                "salesforceid": "0031U00002XW1QWQA1"
              },
              {
                "vendoraid": "123456"
              },
              {
                "originating_system_id": "123456"
              }
            ],
            "example": {
              "redContact_Note_ID": "62c4a9ae-eba1-4c27-a2dd-afb4068695f8"
            },
            "x-parser-schema-id": "<anonymous-schema-138>"
          }
        },
        "x-parser-schema-id": "Comment"
      },
      "Contact": {
        "allOf": [
          {
            "title": "Person",
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "x-parser-schema-id": "<anonymous-schema-95>"
              },
              "affiliation": {
                "description": "An organization that this person is affiliated with",
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uri",
                  "example": "https://example.com/profile/card#me",
                  "x-parser-schema-id": "<anonymous-schema-97>"
                },
                "x-parser-schema-id": "<anonymous-schema-96>"
              },
              "address": {
                "type": "array",
                "items": {
                  "$id": "http://realestate.yodata.me/schemas/PostalAddress.yaml",
                  "title": "PostalAddress",
                  "type": "object",
                  "description": "A physical address.",
                  "properties": {
                    "type": {
                      "type": "string",
                      "const": "PostalAddress",
                      "x-parser-schema-id": "<anonymous-schema-99>"
                    },
                    "streetAddress": {
                      "type": "string",
                      "description": "the street number and name.",
                      "x-faker": "address.streetAddress",
                      "examples": [
                        "5046 Ottis Point",
                        "166 Marion Burg",
                        "93044 Haley Stream"
                      ],
                      "x-parser-schema-id": "<anonymous-schema-100>"
                    },
                    "postOfficeBoxNumber": {
                      "type": "string",
                      "description": "The post office box number for PO box addresses.",
                      "x-faker": "address.secondaryAddress",
                      "examples": [
                        "Box 1234",
                        "Apt. 161",
                        "Apt. 623"
                      ],
                      "x-parser-schema-id": "<anonymous-schema-101>"
                    },
                    "addressRegion": {
                      "type": "string",
                      "description": "State or Province.",
                      "x-faker": "address.state",
                      "examples": [
                        "New Jersey",
                        "California",
                        "MI",
                        null
                      ],
                      "x-parser-schema-id": "<anonymous-schema-102>"
                    },
                    "addressLocality": {
                      "type": "string",
                      "description": "City, Township.",
                      "x-faker": "address.city",
                      "examples": [
                        "Gotham City",
                        "Kulasmouth",
                        "Heidistad",
                        "Altamonte Springs",
                        "West Ahmed",
                        "Blaiseview"
                      ],
                      "x-parser-schema-id": "<anonymous-schema-103>"
                    },
                    "postalCode": {
                      "type": "string",
                      "description": "Zip/Post Code",
                      "x-faker": "address.zipCode",
                      "examples": [
                        "10010",
                        "38859",
                        "40387",
                        "50239-7698",
                        null
                      ],
                      "x-parser-schema-id": "<anonymous-schema-104>"
                    },
                    "addressCountry": {
                      "type": "string",
                      "description": "The country. For example, USA. You can also provide the two-letter ISO 3166-1 alpha-2 country code.",
                      "examples": [
                        "USA",
                        "TH",
                        "NZ",
                        "EG",
                        "SJ",
                        "VN"
                      ],
                      "x-faker": "address.countryCode",
                      "x-parser-schema-id": "<anonymous-schema-105>"
                    },
                    "addressCounty": {
                      "type": "string",
                      "description": "the county (us real estate extension)",
                      "faker": "address.county",
                      "examples": [
                        "Gotham County",
                        "Buckinghamshire",
                        "Borders",
                        null
                      ],
                      "x-parser-schema-id": "<anonymous-schema-106>"
                    },
                    "addressSubdivision": {
                      "type": "string",
                      "description": "the subdivision or neighborhood (us real estate extension)",
                      "x-faker": "address.streetName",
                      "examples": [
                        "Gotham Heights",
                        "South Kensington",
                        "SOMA (South of Market)",
                        "Nob Hill"
                      ],
                      "x-parser-schema-id": "<anonymous-schema-107>"
                    }
                  },
                  "x-parser-schema-id": "PostalAddress"
                },
                "x-parser-schema-id": "<anonymous-schema-98>"
              },
              "birthDate": {
                "description": "date of birth.",
                "type": "string",
                "format": "date",
                "x-parser-schema-id": "<anonymous-schema-108>"
              },
              "contactPoint": {
                "description": "contact points for the person",
                "type": "array",
                "items": {
                  "$id": "htttp://realestate.yodata.me/schema/ContactPoint.json",
                  "title": "ContactPoint",
                  "description": "A point of contact for the entity. By convention in the real estate domain, ContactPoints\nare preferred over telephone, email, and faxNumber so the ContactPoint.name property can be used to label values\nfor example, Work Telephone, Home, as named contactPoint values.\n",
                  "type": "object",
                  "required": [
                    "type",
                    "name"
                  ],
                  "minProperties": 3,
                  "properties": {
                    "type": {
                      "type": "string",
                      "const": "ContactPoint",
                      "x-parser-schema-id": "<anonymous-schema-110>"
                    },
                    "name": {
                      "type": "string",
                      "description": "a label for the contactPoint, i.e. 'Work', or 'Home'",
                      "examples": [
                        "Work",
                        "Home",
                        "Vacation",
                        "Bob's Cell",
                        "Alice's Work"
                      ],
                      "x-parser-schema-id": "<anonymous-schema-111>"
                    },
                    "telephone": {
                      "type": "string",
                      "x-faker": "phone.phoneNumber",
                      "examples": [
                        "555-555-5555",
                        "555-555-5555 x123",
                        "555-555-5555 ext. 123",
                        "+1-555-555-5555"
                      ],
                      "x-parser-schema-id": "<anonymous-schema-112>"
                    },
                    "faxNumber": {
                      "type": "string",
                      "x-faker": "phone.phoneNumber",
                      "examples": [
                        "555-555-5555",
                        "555-555-5555 x123",
                        "555-555-5555 ext. 123",
                        "+1-555-555-5555"
                      ],
                      "x-parser-schema-id": "<anonymous-schema-113>"
                    },
                    "email": {
                      "description": "an email address for the item.",
                      "type": "string",
                      "format": "email",
                      "x-faker": "internet.email",
                      "examples": [
                        "bob@example.com",
                        "alice@example.com"
                      ],
                      "x-parser-schema-id": "<anonymous-schema-114>"
                    },
                    "url": {
                      "description": "primary URL for the item.",
                      "type": "string",
                      "format": "uri",
                      "example": "https://www.facebook.com/hallandoates",
                      "x-parser-schema-id": "<anonymous-schema-115>"
                    }
                  },
                  "x-parser-schema-id": "ContactPoint"
                },
                "x-parser-schema-id": "<anonymous-schema-109>"
              },
              "email": {
                "type": "string",
                "format": "email",
                "x-faker": "internet.email",
                "x-parser-schema-id": "<anonymous-schema-93>"
              },
              "additionalName": {
                "title": "additionalName",
                "description": "any other name(s) associated with the entity, i.e. nickname, middle name, maiden name, etc. For multiple names, use a comma without space as a separator.",
                "type": "string",
                "examples": [
                  "Johnny,John",
                  "Prince,The Artist Formerly Known as Prince,The Artist",
                  "Babs,Barbara",
                  "Katheryn Elizabeth Hudson,Katy Perry",
                  "Destiny Hope Cyrus,Miley Cyrus"
                ],
                "x-parser-schema-id": "<anonymous-schema-116>"
              },
              "familyName": {
                "$id": "htttp://realestate.yodata.me/schema/familyName.yaml",
                "type": "string",
                "title": "Family Name",
                "description": "Last Name of a person",
                "x-faker": "name.lastName",
                "maxLength": 50,
                "externalDocs": {
                  "description": "Family Name",
                  "url": "https://schema.org/familyName"
                },
                "examples": [
                  "Smith",
                  "Jones",
                  "Parker",
                  "Monk",
                  "Brown",
                  "Miller",
                  "Davis",
                  "Wilson",
                  "Fitzgerald",
                  "Johnson",
                  "Williams"
                ]
              },
              "faxNumber": {
                "type": "string",
                "description": "Do people still use fax machines?",
                "x-faker": "phone.phoneNumber",
                "x-parser-schema-id": "<anonymous-schema-117>"
              },
              "givenName": {
                "type": "string",
                "description": "First Name of a person",
                "x-faker": "name.firstName",
                "examples": [
                  "John",
                  "Jane",
                  "Mary",
                  "Joseph",
                  "William",
                  "David",
                  "Richard",
                  "Charles",
                  "Thomas",
                  "Christopher",
                  "Daniel",
                  "Matthew",
                  "Anthony",
                  "Donald",
                  "Mark",
                  "Paul",
                  "Steven",
                  "Andrew",
                  "Kenneth",
                  "George",
                  "Joshua",
                  "Kevin",
                  "Brian",
                  "Edward",
                  "Ronald",
                  "Timothy",
                  "Jason",
                  "Jeffrey",
                  "Ryan",
                  "Jacob"
                ],
                "x-parser-schema-id": "<anonymous-schema-118>"
              },
              "honorificPrefix": {
                "title": "honorificPrefix",
                "description": "An honorific prefix preceding a Person's name such as Dr/Mrs/Mr.",
                "type": "string",
                "example": "Dr",
                "x-parser-schema-id": "<anonymous-schema-119>"
              },
              "honorificSuffix": {
                "title": "honorificSuffix",
                "description": "An honorific title following a person's name like M.D.",
                "type": "string",
                "example": "Esq",
                "x-parser-schema-id": "<anonymous-schema-120>"
              },
              "jobTitle": {
                "title": "jobTitle",
                "description": "job tiles associated with the item",
                "type": "array",
                "items": {
                  "type": "string",
                  "x-parser-schema-id": "<anonymous-schema-122>"
                },
                "example": [
                  "Chief Data Officer",
                  "Sanitation Engineer"
                ],
                "x-parser-schema-id": "<anonymous-schema-121>"
              },
              "knowsLanguage": {
                "description": "languages spoken by the person",
                "type": "array",
                "items": {
                  "$id": "htttp://realestate.yodata.me/schema/Language.yaml",
                  "description": "a written or spoken Language",
                  "title": "Language",
                  "type": "object",
                  "required": [
                    "type",
                    "name",
                    "additionalName"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "const": "Language",
                      "x-parser-schema-id": "<anonymous-schema-124>"
                    },
                    "name": {
                      "type": "string",
                      "description": "the display name of the language",
                      "x-parser-schema-id": "<anonymous-schema-125>"
                    },
                    "additionalName": {
                      "type": "string",
                      "description": "BCP 47 language code",
                      "x-parser-schema-id": "<anonymous-schema-126>"
                    }
                  },
                  "examples": [
                    {
                      "type": "Language",
                      "name": "English",
                      "additionalName": "en-us"
                    },
                    {
                      "type": "Language",
                      "name": "Spanish",
                      "additionalName": "es"
                    },
                    {
                      "type": "Language",
                      "name": "French",
                      "additionalName": "fr"
                    },
                    {
                      "type": "Language",
                      "name": "German",
                      "additionalName": "de"
                    },
                    {
                      "type": "Language",
                      "name": "Italian",
                      "additionalName": "it"
                    },
                    {
                      "type": "Language",
                      "name": "Japanese",
                      "additionalName": "ja"
                    },
                    {
                      "type": "Language",
                      "name": "Korean",
                      "additionalName": "ko"
                    },
                    {
                      "type": "Language",
                      "name": "Portuguese",
                      "additionalName": "pt"
                    },
                    {
                      "type": "Language",
                      "name": "Russian",
                      "additionalName": "ru"
                    },
                    {
                      "type": "Language",
                      "name": "Chinese",
                      "additionalName": "zh"
                    },
                    {
                      "type": "Language",
                      "name": "Arabic",
                      "additionalName": "ar"
                    },
                    {
                      "type": "Language",
                      "name": "Hindi",
                      "additionalName": "hi"
                    },
                    {
                      "type": "Language",
                      "name": "Bengali",
                      "additionalName": "bn"
                    },
                    {
                      "type": "Language",
                      "name": "Portuguese",
                      "additionalName": "pt"
                    }
                  ],
                  "x-parser-schema-id": "Language"
                },
                "x-parser-schema-id": "<anonymous-schema-123>"
              },
              "name": {
                "description": "Full name of the person.",
                "type": "string",
                "x-faker": "name.findName",
                "x-parser-schema-id": "<anonymous-schema-127>"
              },
              "telephone": {
                "type": "string",
                "description": "Primary phone number.",
                "example": "+15558675309",
                "x-parser-schema-id": "<anonymous-schema-128>"
              },
              "worksFor": {
                "type": "string",
                "description": "Organizations the person works for.",
                "x-faker": "company.companyName",
                "x-parser-schema-id": "<anonymous-schema-129>"
              }
            },
            "x-parser-schema-id": "Person"
          },
          {
            "title": "Contact",
            "description": "a CRM contact.",
            "properties": {
              "type": {
                "type": "string",
                "const": "Contact"
              },
              "identifier": {
                "title": "identifier",
                "type": "object",
                "description": "identifier assigned to a contact by the vendor who originally created the contact",
                "examples": [
                  {
                    "salesforceid": "0031U00002XW1QWQA1"
                  },
                  {
                    "vendoraid": "123456"
                  },
                  {
                    "originating_system_id": "123456"
                  }
                ],
                "x-parser-schema-id": "<anonymous-schema-94>"
              },
              "additionalProperty": {
                "title": "additionalProperty",
                "type": "object",
                "description": "additionalProperty are",
                "example": {
                  "supercrmuserid": 1234,
                  "doNotSell": true
                }
              },
              "comment": {
                "title": "comment",
                "type": "array",
                "description": "comments by, for or about the item",
                "x-range": "Comment",
                "items": {
                  "type": "object"
                },
                "example": [
                  {
                    "type": "Comment",
                    "text": "this is my comment.",
                    "author": {
                      "type": "Contact",
                      "name": "Bruce Wayne"
                    },
                    "about": {
                      "type": "PropertyListing",
                      "id": "https://example.com/listingid"
                    },
                    "dateCreated": "2019-07-15T05:24:05Z",
                    "dateModified": "2019-07-15T05:24:05Z"
                  }
                ]
              },
              "jobTitle": {
                "title": "jobTitle",
                "description": "The job title of the person (for example, Financial Manager).",
                "type": "string",
                "x-faker": "name.jobTitle",
                "examples": [
                  "CEO",
                  "Sales Manager",
                  "Escrow Officer",
                  "Transaction Coordinator",
                  "Director of Marketing",
                  "Senior Loan Officer",
                  "Loan Officer",
                  "Sanitation Engineer",
                  "Owner",
                  "Cofounder",
                  "Founder",
                  "President",
                  "Vice President of Sales",
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                  null
                ],
                "x-parser-schema-id": "<anonymous-schema-388>"
              },
              "contactGroup": {
                "type": "array",
                "items": {
                  "$id": "htttp://realestate.yodata.me/schema/ContactGroup.json",
                  "title": "ContactGroup",
                  "description": "groups the contact is a member of.",
                  "type": "object",
                  "required": [
                    "type",
                    "name"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "ContactGroup",
                        "Collection"
                      ]
                    },
                    "identifier": {
                      "title": "identifier",
                      "type": "object",
                      "description": "identifier assigned to a contact by the vendor who originally created the contact",
                      "examples": [
                        {
                          "salesforceid": "0031U00002XW1QWQA1"
                        },
                        {
                          "vendoraid": "123456"
                        },
                        {
                          "originating_system_id": "123456"
                        }
                      ],
                      "x-parser-schema-id": "<anonymous-schema-94>"
                    },
                    "name": {
                      "type": "string",
                      "examples": [
                        "Past Clients",
                        "Prospects",
                        "Leads",
                        "Referrals",
                        "Friends",
                        "Family",
                        "Neighbors",
                        "Business Associates",
                        "Personal"
                      ]
                    }
                  }
                }
              },
              "keywords": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "leadOwner": {
                "type": "object",
                "description": "lead owner",
                "x-range": [
                  "RealEstateAgent",
                  "RealEstateOrganization",
                  "RealEstateTeam"
                ],
                "example": {
                  "type": "RealEstateOrganization",
                  "name": "Gotham City Real Estate",
                  "id": "https://example.com/profile.card#me"
                }
              },
              "leadSource": {
                "type": "object",
                "description": "origin of the lead",
                "x-range": [
                  "MobileApplication",
                  "RealEstateOffice",
                  "RealEstateWebsite",
                  "Thing"
                ],
                "example": {
                  "id": "https://www.zillow.com/homedetails/1044-Siler-Pl-Berkeley-CA-94705/24820985_zpid/",
                  "type": "RealEstateWebsite",
                  "name": "Zillow",
                  "url": "https://zillow.com"
                }
              },
              "originatingSystem": {
                "type": "object",
                "x-range": [
                  "Thing"
                ],
                "description": "the original system where this item was created.  Can be of type Thing or any sub-type.",
                "examples": [
                  {
                    "type": "SoftwareApplication",
                    "name": "RDesk",
                    "description": "User Created.",
                    "url": "http://www.rdeskwebsite.com/"
                  }
                ]
              },
              "dateCreated": {
                "$id": "http://realestate.yodata.me/schema/dateCreated.yaml",
                "type": "string",
                "format": "date-time",
                "title": "Date Created",
                "description": "The date on which the item was created."
              },
              "dateModified": {
                "description": "The date on which the item was most recently modified or when the item's entry was modified within a DataFeed.",
                "type": "string",
                "format": "date-time",
                "x-parser-schema-id": "<anonymous-schema-136>"
              }
            },
            "x-parser-schema-id": "<anonymous-schema-130>"
          }
        ],
        "x-parser-schema-id": "Contact"
      },
      "ContactPoint": {
        "$id": "htttp://realestate.yodata.me/schema/ContactPoint.json",
        "title": "ContactPoint",
        "description": "A point of contact for the entity. By convention in the real estate domain, ContactPoints\nare preferred over telephone, email, and faxNumber so the ContactPoint.name property can be used to label values\nfor example, Work Telephone, Home, as named contactPoint values.\n",
        "type": "object",
        "required": [
          "type",
          "name"
        ],
        "minProperties": 3,
        "properties": {
          "type": {
            "type": "string",
            "const": "ContactPoint",
            "x-parser-schema-id": "<anonymous-schema-110>"
          },
          "name": {
            "type": "string",
            "description": "a label for the contactPoint, i.e. 'Work', or 'Home'",
            "examples": [
              "Work",
              "Home",
              "Vacation",
              "Bob's Cell",
              "Alice's Work"
            ],
            "x-parser-schema-id": "<anonymous-schema-111>"
          },
          "telephone": {
            "type": "string",
            "x-faker": "phone.phoneNumber",
            "examples": [
              "555-555-5555",
              "555-555-5555 x123",
              "555-555-5555 ext. 123",
              "+1-555-555-5555"
            ],
            "x-parser-schema-id": "<anonymous-schema-112>"
          },
          "faxNumber": {
            "type": "string",
            "x-faker": "phone.phoneNumber",
            "examples": [
              "555-555-5555",
              "555-555-5555 x123",
              "555-555-5555 ext. 123",
              "+1-555-555-5555"
            ],
            "x-parser-schema-id": "<anonymous-schema-113>"
          },
          "email": {
            "description": "an email address for the item.",
            "type": "string",
            "format": "email",
            "x-faker": "internet.email",
            "examples": [
              "bob@example.com",
              "alice@example.com"
            ],
            "x-parser-schema-id": "<anonymous-schema-114>"
          },
          "url": {
            "description": "primary URL for the item.",
            "type": "string",
            "format": "uri",
            "example": "https://www.facebook.com/hallandoates",
            "x-parser-schema-id": "<anonymous-schema-115>"
          }
        },
        "x-parser-schema-id": "ContactPoint"
      },
      "ContactSummary": {
        "title": "ContactSummary",
        "x-range": "ContactSummary",
        "description": "minimal schema of a customer for report messages",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "\"ContactSummary\"",
            "enum": [
              "ContactSummaryReport"
            ],
            "x-parser-schema-id": "<anonymous-schema-609>"
          },
          "batchId": {
            "type": "string",
            "description": "BATCH-ID",
            "example": "0001",
            "x-parser-schema-id": "<anonymous-schema-610>"
          },
          "author": {
            "type": "string",
            "format": "uri",
            "description": "OFFICE-ID",
            "example": "https://{officeid}.example.com/profile/card#me",
            "x-parser-schema-id": "<anonymous-schema-611>"
          },
          "transactionType": {
            "type": "string",
            "description": "TRANS-TYPE",
            "x-range": "TransactionType",
            "example": "SalesTransactionType",
            "x-parser-schema-id": "<anonymous-schema-612>"
          },
          "transactionId": {
            "type": "string",
            "description": "TRANS-NO",
            "example": "0000097123",
            "x-parser-schema-id": "<anonymous-schema-613>"
          },
          "transactionRole": {
            "type": "string",
            "x-range": [
              "Buyer",
              "Seller",
              "BuyerAgent",
              "ListingAgent"
            ],
            "enum": [
              "Buyer",
              "Seller"
            ],
            "x-parser-schema-id": "<anonymous-schema-614>"
          },
          "position": {
            "type": "number",
            "description": "ADJUSTMENT-SEQUENCE",
            "example": 1,
            "x-parser-schema-id": "<anonymous-schema-615>"
          },
          "assoicatedAgent": {
            "type": "string",
            "format": "uri",
            "description": "ASSOC-ID",
            "example": "https://{userid}.example.com/profile/card#me",
            "x-parser-schema-id": "<anonymous-schema-616>"
          },
          "object": {
            "type": "object",
            "description": "the Customer",
            "x-range": [
              "Person",
              "Organization"
            ],
            "properties": {
              "type": {
                "type": "string",
                "description": "The item type (Linked-Data @type)",
                "x-parser-schema-id": "<anonymous-schema-618>"
              },
              "givenName": {
                "type": "string",
                "description": "First Name of a person",
                "x-faker": "name.firstName",
                "examples": [
                  "John",
                  "Jane",
                  "Mary",
                  "Joseph",
                  "William",
                  "David",
                  "Richard",
                  "Charles",
                  "Thomas",
                  "Christopher",
                  "Daniel",
                  "Matthew",
                  "Anthony",
                  "Donald",
                  "Mark",
                  "Paul",
                  "Steven",
                  "Andrew",
                  "Kenneth",
                  "George",
                  "Joshua",
                  "Kevin",
                  "Brian",
                  "Edward",
                  "Ronald",
                  "Timothy",
                  "Jason",
                  "Jeffrey",
                  "Ryan",
                  "Jacob"
                ],
                "x-parser-schema-id": "<anonymous-schema-118>"
              },
              "additionalName": {
                "type": "string",
                "description": "CUSTOMER-MIDDLE-INITIAL",
                "example": "M",
                "x-parser-schema-id": "<anonymous-schema-619>"
              },
              "familyName": {
                "$id": "htttp://realestate.yodata.me/schema/familyName.yaml",
                "type": "string",
                "title": "Family Name",
                "description": "Last Name of a person",
                "x-faker": "name.lastName",
                "maxLength": 50,
                "externalDocs": {
                  "description": "Family Name",
                  "url": "https://schema.org/familyName"
                },
                "examples": [
                  "Smith",
                  "Jones",
                  "Parker",
                  "Monk",
                  "Brown",
                  "Miller",
                  "Davis",
                  "Wilson",
                  "Fitzgerald",
                  "Johnson",
                  "Williams"
                ]
              },
              "gender": {
                "type": "string",
                "description": "gender of the Customer (why?)",
                "example": "M",
                "x-parser-schema-id": "<anonymous-schema-620>"
              }
            },
            "x-parser-schema-id": "<anonymous-schema-617>"
          }
        },
        "x-parser-schema-id": "ContactSummary"
      },
      "DigitalDocument": {
        "type": "object",
        "title": "DigitalDocument",
        "x-range": "DigitalDocument",
        "description": "an electronic file.",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "DigitalDocument"
            ],
            "x-parser-schema-id": "<anonymous-schema-621>"
          },
          "id": {
            "type": "string",
            "example": "http://user.example.com/public/logo/archive.zip",
            "x-parser-schema-id": "<anonymous-schema-622>"
          },
          "name": {
            "type": "string",
            "description": "document name or title",
            "example": "archive.zip",
            "x-parser-schema-id": "<anonymous-schema-623>"
          },
          "encodingFormat": {
            "type": "string",
            "description": "[ISO Media Type](https://www.iana.org/assignments/media-types/media-types.xhtml)",
            "example": "application/zip",
            "x-parser-schema-id": "<anonymous-schema-624>"
          },
          "about": {
            "type": "object",
            "description": "subject of the Document",
            "x-range": "Thing",
            "example": {
              "type": "RealEstateTransaction",
              "identifier": {
                "bmsTransactionId": "xxxx"
              }
            },
            "x-parser-schema-id": "<anonymous-schema-625>"
          },
          "url": {
            "type": "string",
            "description": "public URL of the object",
            "example": "https://example.com",
            "x-parser-schema-id": "<anonymous-schema-626>"
          }
        },
        "x-parser-schema-id": "DigitalDocument"
      },
      "EmailMessage": {
        "allOf": [
          {
            "allOf": [
              {
                "$id": "http://realestate.yodata.me/schema/Thing",
                "type": "object",
                "title": "Thing",
                "summary": "The root type of all Things.",
                "required": [
                  "type"
                ],
                "propertyNames": {
                  "pattern": "^[a-z@$][a-zA-Z0-9-_]+$",
                  "x-parser-schema-id": "<anonymous-schema-274>"
                },
                "properties": {
                  "type": {
                    "type": "string",
                    "pattern": "^[A-Z][a-zA-Z0-9]+$",
                    "description": "The item type (Linked-Data @type)",
                    "x-parser-schema-id": "<anonymous-schema-272>"
                  },
                  "@id": {
                    "type": "string",
                    "format": "uri",
                    "description": "the liked data uri for the Thing",
                    "x-parser-schema-id": "<anonymous-schema-273>"
                  }
                },
                "x-parser-schema-id": "Thing"
              },
              {
                "title": "CreativeWork",
                "description": "A creative work, including books, movies, photographs, software programs, etc.",
                "properties": {
                  "type": {
                    "enum": [
                      "CreativeWork"
                    ]
                  },
                  "name": {
                    "type": "string",
                    "description": "name of the work.",
                    "example": "Market Report 1008 Mountain Gate Road"
                  },
                  "description": {
                    "type": "string",
                    "description": "description of the item",
                    "example": "Dolor accusamus rerum nemo non omnis. Nam labore pariatur eius omnis sit."
                  },
                  "creator": {
                    "description": "creator / author of the work",
                    "type": "string",
                    "format": "uri",
                    "example": "http://user.example.com/profile/card"
                  },
                  "dateCreated": {
                    "description": "The date on which the CreativeWork was created or the item was added to a DataFeed.",
                    "type": "string",
                    "format": "date-time"
                  },
                  "dateModified": {
                    "description": "The date on which the CreativeWork was most recently modified or when the item's entry was modified within a DataFeed.",
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-628>"
              }
            ],
            "x-parser-schema-id": "<anonymous-schema-627>"
          },
          {
            "title": "EmailMessage",
            "x-range": "EamilMessage",
            "description": "an email message",
            "properties": {
              "type": {
                "type": "string",
                "description": "EmailMessage",
                "enum": [
                  "EmailMessage"
                ],
                "example": "EmailMessage"
              },
              "sender": {
                "type": "string",
                "format": "uri",
                "description": "ref to the sender",
                "example": "http://user.example.com/profile/card"
              },
              "messageAttachment": {
                "description": "message attachments",
                "x-range": "DigitalDocument",
                "type": "array",
                "items": {
                  "type": "object",
                  "title": "DigitalDocument",
                  "x-range": "DigitalDocument",
                  "description": "an electronic file.",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "DigitalDocument"
                      ],
                      "x-parser-schema-id": "<anonymous-schema-621>"
                    },
                    "id": {
                      "type": "string",
                      "example": "http://user.example.com/public/logo/archive.zip",
                      "x-parser-schema-id": "<anonymous-schema-622>"
                    },
                    "name": {
                      "type": "string",
                      "description": "document name or title",
                      "example": "archive.zip",
                      "x-parser-schema-id": "<anonymous-schema-623>"
                    },
                    "encodingFormat": {
                      "type": "string",
                      "description": "[ISO Media Type](https://www.iana.org/assignments/media-types/media-types.xhtml)",
                      "example": "application/zip",
                      "x-parser-schema-id": "<anonymous-schema-624>"
                    },
                    "about": {
                      "type": "object",
                      "description": "subject of the Document",
                      "x-range": "Thing",
                      "example": {
                        "type": "RealEstateTransaction",
                        "identifier": {
                          "bmsTransactionId": "xxxx"
                        }
                      },
                      "x-parser-schema-id": "<anonymous-schema-625>"
                    },
                    "url": {
                      "type": "string",
                      "description": "public URL of the object",
                      "example": "https://example.com",
                      "x-parser-schema-id": "<anonymous-schema-626>"
                    }
                  },
                  "x-parser-schema-id": "DigitalDocument"
                }
              },
              "dateSent": {
                "type": "string",
                "format": "date-time",
                "description": "The date/time at which the message was sent"
              },
              "dateReceived": {
                "type": "string",
                "format": "date-time",
                "description": "The date/time at which the message was received"
              },
              "dateRead": {
                "type": "string",
                "format": "date-time",
                "description": "The date/time at which the message was first viewed"
              },
              "toRecipient": {
                "type": "array",
                "description": "direct recipient of the message",
                "items": {
                  "type": "string",
                  "example": "user@example.com"
                }
              },
              "ccRecipient": {
                "type": "array",
                "description": "direct recipient of the message",
                "items": {
                  "type": "string",
                  "example": "user@example.com"
                }
              },
              "bccRecipient": {
                "type": "array",
                "description": "direct recipient of the message",
                "items": {
                  "type": "string",
                  "example": "user@example.com"
                }
              }
            },
            "x-parser-schema-id": "<anonymous-schema-629>"
          }
        ],
        "x-parser-schema-id": "EmailMessage"
      },
      "Event": {
        "type": "object",
        "title": "Event",
        "description": "An event happening at a certain time and location",
        "x-range": "Event",
        "properties": {
          "type": {
            "type": "string",
            "description": "The item type (Linked-Data @type)",
            "example": "Event",
            "x-parser-schema-id": "<anonymous-schema-530>"
          },
          "name": {
            "type": "string",
            "description": "name of the event",
            "example": "Property Showing 1007 Mountain Gate Rd",
            "x-parser-schema-id": "<anonymous-schema-531>"
          },
          "description": {
            "type": "string",
            "description": "event message content",
            "example": "an example meeting request for 4:00PM to 4:30PM.",
            "x-parser-schema-id": "<anonymous-schema-532>"
          },
          "about": {
            "type": "object",
            "description": "a subject of the meeting or event",
            "example": {
              "type": "PropertyListing",
              "originatingSystemName": "GOTHAM-MLS",
              "originatingSystemKey": "12345",
              "url": "https://{company-website-url}/{path-to-listing}",
              "streetAddress": "1007 Mountain Gate Rd",
              "addressRegion": "New Jersey",
              "addressLocality": "Gotham City",
              "postalCode": "10010",
              "addressCountry": "USA",
              "listingPrice": {
                "type": "PriceSpecification",
                "price": 7500000,
                "priceCurrency": "USD"
              }
            },
            "x-parser-schema-id": "<anonymous-schema-533>"
          },
          "startDate": {
            "description": "the start date-time (ISO 8601 formated)",
            "type": "string",
            "format": "date-time",
            "example": "2019-08-01T16:00Z",
            "x-parser-schema-id": "<anonymous-schema-534>"
          },
          "endDate": {
            "type": "string",
            "description": "the end date-time (ISO 8601 formated)",
            "format": "date-time",
            "example": "2019-08-01T16:30Z",
            "x-parser-schema-id": "<anonymous-schema-535>"
          },
          "organizer": {
            "title": "organizer",
            "description": "the event organizer",
            "type": "object",
            "example": {
              "type": "RealEstateAgent",
              "name": "Bruce Wayne",
              "id": "https://batman.example.com/profile/card#me"
            },
            "x-parser-schema-id": "<anonymous-schema-536>"
          }
        },
        "x-parser-schema-id": "Event"
      },
      "GeoCircle": {
        "x-range": "GeoCircle",
        "type": "object",
        "title": "GeoCircle",
        "description": "a circle with a mid point and radius",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "GeoCircle"
            ],
            "x-parser-schema-id": "<anonymous-schema-630>"
          },
          "geoMidpoint": {
            "title": "GeoCoordinates",
            "type": "object",
            "description": "a lat/long point.",
            "x-range": "GeoCoordinates",
            "properties": {
              "type": {
                "type": "string",
                "description": "GeoCordinates",
                "enum": [
                  "GeoCoordinates"
                ],
                "x-parser-schema-id": "<anonymous-schema-631>"
              },
              "longitude": {
                "type": "number",
                "description": "The longitude of a location.",
                "x-title": "longitude",
                "example": 73.98,
                "x-parser-schema-id": "<anonymous-schema-287>"
              },
              "latitude": {
                "type": "number",
                "description": "The latitude of a location.",
                "x-title": "latitude",
                "example": 40.75,
                "x-parser-schema-id": "<anonymous-schema-278>"
              }
            },
            "x-parser-schema-id": "GeoCoordinates"
          },
          "geoRadius": {
            "title": "geoRadius",
            "type": "object",
            "x-range": "QuantitativeValue",
            "description": "the radius of a geo-shape in meters if unitCode is not indicated",
            "example": {
              "type": "QuantitativeValue",
              "value": "10",
              "unitCode": "mi",
              "unitText": "miles"
            },
            "x-parser-schema-id": "<anonymous-schema-632>"
          }
        },
        "x-parser-schema-id": "GeoCircle"
      },
      "GeoCoordinates": {
        "title": "GeoCoordinates",
        "type": "object",
        "description": "a lat/long point.",
        "x-range": "GeoCoordinates",
        "properties": {
          "type": {
            "type": "string",
            "description": "GeoCordinates",
            "enum": [
              "GeoCoordinates"
            ],
            "x-parser-schema-id": "<anonymous-schema-631>"
          },
          "longitude": {
            "type": "number",
            "description": "The longitude of a location.",
            "x-title": "longitude",
            "example": 73.98,
            "x-parser-schema-id": "<anonymous-schema-287>"
          },
          "latitude": {
            "type": "number",
            "description": "The latitude of a location.",
            "x-title": "latitude",
            "example": 40.75,
            "x-parser-schema-id": "<anonymous-schema-278>"
          }
        },
        "x-parser-schema-id": "GeoCoordinates"
      },
      "GeoShape": {
        "title": "GeoShape",
        "type": "object",
        "x-range": [
          "GeoShape",
          "GeoCircle"
        ],
        "description": "a geo shape",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "GeoShape",
              "GeoCircle"
            ],
            "x-parser-schema-id": "<anonymous-schema-633>"
          },
          "geoMidpoint": {
            "title": "GeoCoordinates",
            "type": "object",
            "description": "a lat/long point.",
            "x-range": "GeoCoordinates",
            "properties": {
              "type": {
                "type": "string",
                "description": "GeoCordinates",
                "enum": [
                  "GeoCoordinates"
                ],
                "x-parser-schema-id": "<anonymous-schema-631>"
              },
              "longitude": {
                "type": "number",
                "description": "The longitude of a location.",
                "x-title": "longitude",
                "example": 73.98,
                "x-parser-schema-id": "<anonymous-schema-287>"
              },
              "latitude": {
                "type": "number",
                "description": "The latitude of a location.",
                "x-title": "latitude",
                "example": 40.75,
                "x-parser-schema-id": "<anonymous-schema-278>"
              }
            },
            "x-parser-schema-id": "GeoCoordinates"
          },
          "geoRadius": {
            "title": "geoRadius",
            "type": "object",
            "x-range": "QuantitativeValue",
            "description": "the radius of a geo-shape in meters if unitCode is not indicated",
            "example": {
              "type": "QuantitativeValue",
              "value": "10",
              "unitCode": "mi",
              "unitText": "miles"
            },
            "x-parser-schema-id": "<anonymous-schema-632>"
          },
          "box": {
            "type": "string",
            "title": "box",
            "description": "A box is the area enclosed by the rectangle formed by two points. The first point is the lower corner, the second point is the upper corner. A box is expressed as two points separated by a space character.",
            "example": "(33.5697,-117.775),(33.6018,-117.707)",
            "x-parser-schema-id": "<anonymous-schema-634>"
          }
        },
        "x-parser-schema-id": "GeoShape"
      },
      "ImageObject": {
        "allOf": [
          {
            "title": "MediaObject",
            "description": "an image, video or document availble for download",
            "x-subclass": [
              "ImageObject",
              "DigitalDocument"
            ],
            "allOf": [
              {
                "$id": "http://realestate.yodata.me/schema/Thing",
                "type": "object",
                "title": "Thing",
                "summary": "The root type of all Things.",
                "required": [
                  "type"
                ],
                "propertyNames": {
                  "pattern": "^[a-z@$][a-zA-Z0-9-_]+$",
                  "x-parser-schema-id": "<anonymous-schema-274>"
                },
                "properties": {
                  "type": {
                    "type": "string",
                    "pattern": "^[A-Z][a-zA-Z0-9]+$",
                    "description": "The item type (Linked-Data @type)",
                    "x-parser-schema-id": "<anonymous-schema-272>"
                  },
                  "@id": {
                    "type": "string",
                    "format": "uri",
                    "description": "the liked data uri for the Thing",
                    "x-parser-schema-id": "<anonymous-schema-273>"
                  }
                },
                "x-parser-schema-id": "Thing"
              },
              {
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "MediaObject",
                      "ImageObject",
                      "DigitalDocument"
                    ]
                  },
                  "id": {
                    "description": "the URL to access the item.",
                    "example": "http://user.example.com/public/logo/fileName.zip",
                    "type": "string",
                    "format": "uri"
                  },
                  "name": {
                    "type": "string",
                    "description": "the file name of the object.",
                    "example": "fileName.zip"
                  },
                  "encodingFormat": {
                    "type": "string",
                    "description": "MIME type",
                    "example": "application/zip"
                  },
                  "about": {
                    "type": "string",
                    "format": "uri",
                    "description": "URI to the subject of the image or logo",
                    "example": "http://user.example.com/profile/card#me"
                  },
                  "url": {
                    "type": "string",
                    "format": "uri",
                    "description": "URL of the image content",
                    "example": "http://user.example.com/public/profile/image.jpg"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-275>"
              }
            ],
            "x-parser-schema-id": "MediaObject"
          },
          {
            "title": "ImageObject",
            "x-range": "ImageObject",
            "properties": {
              "type": {
                "enum": [
                  "ImageObject"
                ],
                "example": "ImageObject"
              },
              "id": {
                "example": "http://user.example.com/public/logo/image.jpg"
              },
              "name": {
                "example": "image.jpg"
              },
              "encodingFormat": {
                "example": "image/jpeg"
              }
            },
            "x-parser-schema-id": "<anonymous-schema-276>"
          }
        ],
        "x-parser-schema-id": "ImageObject"
      },
      "Language": {
        "$id": "htttp://realestate.yodata.me/schema/Language.yaml",
        "description": "a written or spoken Language",
        "title": "Language",
        "type": "object",
        "required": [
          "type",
          "name",
          "additionalName"
        ],
        "properties": {
          "type": {
            "type": "string",
            "const": "Language",
            "x-parser-schema-id": "<anonymous-schema-124>"
          },
          "name": {
            "type": "string",
            "description": "the display name of the language",
            "x-parser-schema-id": "<anonymous-schema-125>"
          },
          "additionalName": {
            "type": "string",
            "description": "BCP 47 language code",
            "x-parser-schema-id": "<anonymous-schema-126>"
          }
        },
        "examples": [
          {
            "type": "Language",
            "name": "English",
            "additionalName": "en-us"
          },
          {
            "type": "Language",
            "name": "Spanish",
            "additionalName": "es"
          },
          {
            "type": "Language",
            "name": "French",
            "additionalName": "fr"
          },
          {
            "type": "Language",
            "name": "German",
            "additionalName": "de"
          },
          {
            "type": "Language",
            "name": "Italian",
            "additionalName": "it"
          },
          {
            "type": "Language",
            "name": "Japanese",
            "additionalName": "ja"
          },
          {
            "type": "Language",
            "name": "Korean",
            "additionalName": "ko"
          },
          {
            "type": "Language",
            "name": "Portuguese",
            "additionalName": "pt"
          },
          {
            "type": "Language",
            "name": "Russian",
            "additionalName": "ru"
          },
          {
            "type": "Language",
            "name": "Chinese",
            "additionalName": "zh"
          },
          {
            "type": "Language",
            "name": "Arabic",
            "additionalName": "ar"
          },
          {
            "type": "Language",
            "name": "Hindi",
            "additionalName": "hi"
          },
          {
            "type": "Language",
            "name": "Bengali",
            "additionalName": "bn"
          },
          {
            "type": "Language",
            "name": "Portuguese",
            "additionalName": "pt"
          }
        ],
        "x-parser-schema-id": "Language"
      },
      "Lead": {
        "title": "Lead",
        "type": "object",
        "x-range": "Lead",
        "description": "a sales opportunity (object) offered by a sender to a recipient.",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "Lead"
            ],
            "description": "Lead",
            "x-parser-schema-id": "<anonymous-schema-209>"
          },
          "identifier": {
            "title": "identifier",
            "type": "object",
            "description": "identifier assigned to a contact by the vendor who originally created the contact",
            "examples": [
              {
                "salesforceid": "0031U00002XW1QWQA1"
              },
              {
                "vendoraid": "123456"
              },
              {
                "originating_system_id": "123456"
              }
            ],
            "x-parser-schema-id": "<anonymous-schema-94>"
          },
          "object": {
            "description": "the lead (Contact)",
            "x-range": [
              "Contact"
            ],
            "type": "object",
            "example": {
              "type": "Contact",
              "name": "Joe Smith",
              "telephone": "731-620-9877 x6155",
              "email": "Giuseppe.Lang62@hotmail.com"
            },
            "x-parser-schema-id": "<anonymous-schema-210>"
          },
          "recipient": {
            "description": "the lead recipient",
            "type": "string",
            "format": "uri",
            "example": "http://{lead-recipient}.example.com/profile/card#me",
            "x-parser-schema-id": "<anonymous-schema-211>"
          },
          "sender": {
            "description": "the lead provider",
            "type": "string",
            "format": "uri",
            "example": "http://{lead-sender}.example.com/profile/card#me",
            "x-parser-schema-id": "<anonymous-schema-212>"
          },
          "owner": {
            "description": "the original owner of the lead",
            "x-range": [
              "RealEstateOrganization",
              "RealEstateAgent",
              "Person"
            ],
            "type": "string",
            "format": "uri",
            "example": "http://{lead-owner}.example.com/profile/card#me",
            "x-parser-schema-id": "<anonymous-schema-213>"
          },
          "dateAccepted": {
            "type": "string",
            "description": "The date/time the item was accepted by the recipient",
            "x-range": "DateTime",
            "example": "2019-11-25T04:23:32.000Z",
            "x-parser-schema-id": "<anonymous-schema-214>"
          },
          "dateRejected": {
            "type": "string",
            "format": "date-time",
            "description": "The date/time the item was rejected by the recipient",
            "x-parser-schema-id": "<anonymous-schema-215>"
          },
          "dateSent": {
            "description": "the date the lead was sent",
            "type": "string",
            "format": "date-time",
            "x-parser-schema-id": "<anonymous-schema-216>"
          },
          "dateReceived": {
            "type": "string",
            "description": "The date/time the item was received by it's recipient",
            "x-range": "DateTime",
            "example": "2019-11-25T04:23:32.000Z",
            "x-parser-schema-id": "<anonymous-schema-217>"
          },
          "leadSource": {
            "description": "lead origin, may be a website event or a thing such as a website, zillow, mobile applicaton.",
            "x-range": [
              "Action",
              "RealEstateWebSite",
              "MobileApplication"
            ],
            "type": "array",
            "items": {
              "type": "object",
              "example": {
                "type": "AskAction",
                "object": {
                  "type": "Question",
                  "text": "Help me I'm trapped inside documentation."
                }
              },
              "x-parser-schema-id": "<anonymous-schema-219>"
            },
            "x-parser-schema-id": "<anonymous-schema-218>"
          }
        },
        "x-parser-schema-id": "Lead"
      },
      "LogAction": {
        "title": "LogAction",
        "type": "object",
        "description": "a LogAction should be produced at the end of service execution",
        "required": [
          "type",
          "actionStatus"
        ],
        "properties": {
          "type": {
            "type": "string",
            "description": "the action type (LogAction)",
            "x-parser-schema-id": "<anonymous-schema-635>"
          },
          "actionStatus": {
            "type": "string",
            "description": "CompletedActionStatus | FailedActionStatus",
            "enum": [
              "CompletedActionStatus",
              "FailedActionStatus"
            ],
            "x-parser-schema-id": "<anonymous-schema-636>"
          },
          "object": {
            "type": "object",
            "description": "the data input",
            "example": {
              "topic": "realestate/contact#add",
              "data": {
                "type": "AddAction",
                "object": {
                  "name": "Bob Smith",
                  "email": "bob@example.com"
                }
              }
            },
            "x-parser-schema-id": "<anonymous-schema-637>"
          },
          "result": {
            "type": "object",
            "description": "the output of a sucessful execution",
            "x-parser-schema-id": "<anonymous-schema-638>"
          },
          "error": {
            "type": "object",
            "description": "details the error of an unsucessful execution",
            "properties": {
              "message": {
                "description": "the error message",
                "type": "string",
                "example": "sorry dave",
                "x-parser-schema-id": "<anonymous-schema-640>"
              },
              "stack": {
                "description": "the error stack",
                "type": "string",
                "x-parser-schema-id": "<anonymous-schema-641>"
              }
            },
            "x-parser-schema-id": "<anonymous-schema-639>"
          }
        },
        "x-parser-schema-id": "LogAction"
      },
      "ListingOffer": {
        "$id": "http://realestate.yodata.me/schemas/ListingOffer.yaml",
        "type": "object",
        "title": "Listing Offer",
        "description": "an offer is made to buy a PropertyListing",
        "name": "ListingOffer",
        "required": [
          "type",
          "agent",
          "object",
          "recipient",
          "offerPrice"
        ],
        "properties": {
          "type": {
            "const": "ListingOffer",
            "x-parser-schema-id": "<anonymous-schema-502>"
          },
          "agent": {
            "type": "object",
            "description": "a website user/visitor",
            "x-range": [
              "Contact",
              "Person"
            ],
            "example": {
              "type": "Contact",
              "name": "Bruce Wayne",
              "givenName": "Bruce",
              "familyName": "Wayne",
              "email": "batman@example.com",
              "telephone": "1+888-867-5309",
              "identifier": {
                "hsfconsumerid": "xxxxxxxxxxxxx"
              },
              "sameAs": {
                "amcecrmid": "1234567",
                "salesForceId": "xxxxxxxxxxxxx"
              }
            },
            "x-parser-schema-id": "<anonymous-schema-503>"
          },
          "offerPrice": {
            "description": "the offer price or range",
            "type": "object",
            "title": "PriceSpecification",
            "x-range": "PriceSpecification",
            "properties": {
              "type": {
                "type": "string",
                "description": "PriceSpecification",
                "enum": [
                  "PriceSpecification"
                ],
                "x-parser-schema-id": "<anonymous-schema-505>"
              },
              "minPrice": {
                "type": "number",
                "description": "the low price offered if price is a range.",
                "example": 75000,
                "x-parser-schema-id": "<anonymous-schema-506>"
              },
              "maxPrice": {
                "type": "number",
                "description": "the high price offered if price is a range.",
                "example": 100000,
                "x-parser-schema-id": "<anonymous-schema-507>"
              },
              "price": {
                "type": "number",
                "description": "the offer price.",
                "example": 75000,
                "x-parser-schema-id": "<anonymous-schema-508>"
              },
              "priceCurrency": {
                "type": "string",
                "description": "use ISO4217",
                "example": "USD",
                "x-parser-schema-id": "<anonymous-schema-509>"
              }
            },
            "x-parser-schema-id": "<anonymous-schema-504>"
          },
          "propertyListing": {
            "type": "object",
            "description": "the listing on which the offer is made.",
            "example": {
              "type": "PropertyListing",
              "originatingSystemName": "GOTHAM-MLS",
              "originatingSystemKey": "12345",
              "url": "https://{company-website-url}/{path-to-listing}",
              "streetAddress": "1007 Mountain Gate Rd",
              "addressRegion": "New Jersey",
              "addressLocality": "Gotham City",
              "postalCode": "10010",
              "addressCountry": "USA",
              "listingPrice": {
                "type": "PriceSpecification",
                "price": 7500000,
                "priceCurrency": "USD"
              }
            },
            "x-parser-schema-id": "<anonymous-schema-510>"
          },
          "recipient": {
            "description": "listing agent or offer recipient",
            "oneOf": [
              {
                "$id": "http://realestate.yodata.me/schema/RealEstateAgent",
                "title": "RealEstateAgent",
                "description": "A real estate agent who represents buyers and sellers",
                "type": "object",
                "additionalProperties": true,
                "properties": {
                  "type": {
                    "type": "string",
                    "const": "RealEstateAgent",
                    "x-parser-schema-id": "<anonymous-schema-369>"
                  },
                  "additionalName": {
                    "title": "additionalName",
                    "description": "any other name(s) associated with the entity, i.e. nickname, middle name, maiden name, etc. For multiple names, use a comma without space as a separator.",
                    "type": "string",
                    "examples": [
                      "Johnny,John",
                      "Prince,The Artist Formerly Known as Prince,The Artist",
                      "Babs,Barbara",
                      "Katheryn Elizabeth Hudson,Katy Perry",
                      "Destiny Hope Cyrus,Miley Cyrus"
                    ],
                    "x-parser-schema-id": "<anonymous-schema-116>"
                  },
                  "address": {
                    "type": "object",
                    "x-range": "PostalAddress",
                    "description": "A physical address.",
                    "example": {
                      "type": "PostalAddress",
                      "name": "Home",
                      "addressCountry": "USA",
                      "addressCounty": "Gotham County",
                      "addressLocality": "Gotham City",
                      "addressRegion": "New Jersey",
                      "addressSubdivision": "Gotham Heights",
                      "postalCode": "10010",
                      "postOfficeBoxNumber": "Box 1234",
                      "streetAddress": "1007 Mountain Gate Rd"
                    },
                    "x-parser-schema-id": "<anonymous-schema-370>"
                  },
                  "certification": {
                    "type": "object",
                    "title": "Certification",
                    "description": "A certification issued by an organization to an individual or business.",
                    "x-range": "Certification",
                    "properties": {
                      "type": {
                        "description": "Certification",
                        "type": "string",
                        "enum": [
                          "Certification"
                        ],
                        "x-parser-schema-id": "<anonymous-schema-372>"
                      },
                      "name": {
                        "type": "string",
                        "description": "the name of the Certification",
                        "example": "e-Agent Certified",
                        "x-parser-schema-id": "<anonymous-schema-373>"
                      },
                      "issuedBy": {
                        "type": "object",
                        "x-range": "RealEstateOrganization",
                        "description": "the issuing authority",
                        "properties": {
                          "type": {
                            "enum": [
                              "RealEstateOrganization"
                            ],
                            "type": "string",
                            "description": "The item type (Linked-Data @type)",
                            "x-parser-schema-id": "<anonymous-schema-375>"
                          },
                          "id": {
                            "example": "https://example.com/profile/card#me",
                            "type": "string",
                            "format": "uri",
                            "description": "Linked-Data URI (@id)",
                            "x-parser-schema-id": "<anonymous-schema-376>"
                          },
                          "name": {
                            "type": "string",
                            "description": "name of the issuing organization",
                            "example": "Gotham City Real Estate",
                            "x-parser-schema-id": "<anonymous-schema-377>"
                          }
                        },
                        "x-parser-schema-id": "<anonymous-schema-374>"
                      },
                      "issuedTo": {
                        "x-range": "RealEstateAgent",
                        "type": "object",
                        "description": "the subject",
                        "properties": {
                          "type": {
                            "enum": [
                              "RealEstateAgent"
                            ],
                            "type": "string",
                            "description": "The item type (Linked-Data @type)",
                            "x-parser-schema-id": "<anonymous-schema-379>"
                          },
                          "id": {
                            "type": "string",
                            "format": "uri",
                            "description": "Linked-Data URI (@id)",
                            "x-parser-schema-id": "<anonymous-schema-380>"
                          },
                          "name": {
                            "type": "string",
                            "description": "the name of the item",
                            "x-parser-schema-id": "<anonymous-schema-92>"
                          }
                        },
                        "x-parser-schema-id": "<anonymous-schema-378>"
                      }
                    },
                    "x-parser-schema-id": "<anonymous-schema-371>"
                  },
                  "contactPoint": {
                    "$id": "htttp://realestate.yodata.me/schema/ContactPoint.json",
                    "title": "ContactPoint",
                    "description": "A point of contact for the entity. By convention in the real estate domain, ContactPoints\nare preferred over telephone, email, and faxNumber so the ContactPoint.name property can be used to label values\nfor example, Work Telephone, Home, as named contactPoint values.\n",
                    "type": "object",
                    "required": [
                      "type",
                      "name"
                    ],
                    "minProperties": 3,
                    "properties": {
                      "type": {
                        "type": "string",
                        "const": "ContactPoint",
                        "x-parser-schema-id": "<anonymous-schema-381>"
                      },
                      "name": {
                        "type": "string",
                        "description": "a label for the contactPoint, i.e. 'Work', or 'Home'",
                        "examples": [
                          "Work",
                          "Home",
                          "Vacation",
                          "Bob's Cell",
                          "Alice's Work"
                        ],
                        "x-parser-schema-id": "<anonymous-schema-382>"
                      },
                      "telephone": {
                        "type": "string",
                        "x-faker": "phone.phoneNumber",
                        "examples": [
                          "555-555-5555",
                          "555-555-5555 x123",
                          "555-555-5555 ext. 123",
                          "+1-555-555-5555"
                        ],
                        "x-parser-schema-id": "<anonymous-schema-383>"
                      },
                      "faxNumber": {
                        "type": "string",
                        "x-faker": "phone.phoneNumber",
                        "examples": [
                          "555-555-5555",
                          "555-555-5555 x123",
                          "555-555-5555 ext. 123",
                          "+1-555-555-5555"
                        ],
                        "x-parser-schema-id": "<anonymous-schema-384>"
                      },
                      "email": {
                        "description": "an email address for the item.",
                        "type": "string",
                        "format": "email",
                        "x-faker": "internet.email",
                        "examples": [
                          "bob@example.com",
                          "alice@example.com"
                        ],
                        "x-parser-schema-id": "<anonymous-schema-385>"
                      },
                      "url": {
                        "description": "primary URL for the item.",
                        "type": "string",
                        "format": "uri",
                        "example": "https://www.facebook.com/hallandoates",
                        "x-parser-schema-id": "<anonymous-schema-386>"
                      }
                    }
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "x-faker": "internet.email",
                    "x-parser-schema-id": "<anonymous-schema-93>"
                  },
                  "familyName": {
                    "$id": "htttp://realestate.yodata.me/schema/familyName.yaml",
                    "type": "string",
                    "title": "Family Name",
                    "description": "Last Name of a person",
                    "x-faker": "name.lastName",
                    "maxLength": 50,
                    "externalDocs": {
                      "description": "Family Name",
                      "url": "https://schema.org/familyName"
                    },
                    "examples": [
                      "Smith",
                      "Jones",
                      "Parker",
                      "Monk",
                      "Brown",
                      "Miller",
                      "Davis",
                      "Wilson",
                      "Fitzgerald",
                      "Johnson",
                      "Williams"
                    ]
                  },
                  "givenName": {
                    "type": "string",
                    "description": "First Name of a person",
                    "x-faker": "name.firstName",
                    "examples": [
                      "John",
                      "Jane",
                      "Mary",
                      "Joseph",
                      "William",
                      "David",
                      "Richard",
                      "Charles",
                      "Thomas",
                      "Christopher",
                      "Daniel",
                      "Matthew",
                      "Anthony",
                      "Donald",
                      "Mark",
                      "Paul",
                      "Steven",
                      "Andrew",
                      "Kenneth",
                      "George",
                      "Joshua",
                      "Kevin",
                      "Brian",
                      "Edward",
                      "Ronald",
                      "Timothy",
                      "Jason",
                      "Jeffrey",
                      "Ryan",
                      "Jacob"
                    ],
                    "x-parser-schema-id": "<anonymous-schema-118>"
                  },
                  "id": {
                    "type": "string",
                    "format": "uri",
                    "description": "Linked-Data URI (@id)",
                    "x-parser-schema-id": "<anonymous-schema-380>"
                  },
                  "identifier": {
                    "title": "identifier",
                    "type": "object",
                    "description": "identifier assigned to a contact by the vendor who originally created the contact",
                    "examples": [
                      {
                        "salesforceid": "0031U00002XW1QWQA1"
                      },
                      {
                        "vendoraid": "123456"
                      },
                      {
                        "originating_system_id": "123456"
                      }
                    ],
                    "x-parser-schema-id": "<anonymous-schema-94>"
                  },
                  "image": {
                    "title": "image",
                    "description": "an ImageObject or URI reference to an image on the web.",
                    "type": "array",
                    "x-range": [
                      "ImageObject"
                    ],
                    "items": [
                      {
                        "type": "object",
                        "allOf": [
                          {
                            "title": "MediaObject",
                            "description": "an image, video or document availble for download",
                            "x-subclass": [
                              "ImageObject",
                              "DigitalDocument"
                            ],
                            "allOf": [
                              {
                                "$id": "http://realestate.yodata.me/schema/Thing",
                                "type": "object",
                                "title": "Thing",
                                "summary": "The root type of all Things.",
                                "required": [
                                  "type"
                                ],
                                "propertyNames": {
                                  "pattern": "^[a-z@$][a-zA-Z0-9-_]+$",
                                  "x-parser-schema-id": "<anonymous-schema-274>"
                                },
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "pattern": "^[A-Z][a-zA-Z0-9]+$",
                                    "description": "The item type (Linked-Data @type)",
                                    "x-parser-schema-id": "<anonymous-schema-272>"
                                  },
                                  "@id": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "the liked data uri for the Thing",
                                    "x-parser-schema-id": "<anonymous-schema-273>"
                                  }
                                },
                                "x-parser-schema-id": "Thing"
                              },
                              {
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "MediaObject",
                                      "ImageObject",
                                      "DigitalDocument"
                                    ]
                                  },
                                  "id": {
                                    "description": "the URL to access the item.",
                                    "example": "http://user.example.com/public/logo/fileName.zip",
                                    "type": "string",
                                    "format": "uri"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "the file name of the object.",
                                    "example": "fileName.zip"
                                  },
                                  "encodingFormat": {
                                    "type": "string",
                                    "description": "MIME type",
                                    "example": "application/zip"
                                  },
                                  "about": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "URI to the subject of the image or logo",
                                    "example": "http://user.example.com/profile/card#me"
                                  },
                                  "url": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "URL of the image content",
                                    "example": "http://user.example.com/public/profile/image.jpg"
                                  }
                                },
                                "x-parser-schema-id": "<anonymous-schema-275>"
                              }
                            ],
                            "x-parser-schema-id": "MediaObject"
                          },
                          {
                            "title": "ImageObject",
                            "x-range": "ImageObject",
                            "properties": {
                              "type": {
                                "enum": [
                                  "ImageObject"
                                ],
                                "example": "ImageObject"
                              },
                              "id": {
                                "example": "http://user.example.com/public/logo/image.jpg"
                              },
                              "name": {
                                "example": "image.jpg"
                              },
                              "encodingFormat": {
                                "example": "image/jpeg"
                              }
                            },
                            "x-parser-schema-id": "<anonymous-schema-276>"
                          }
                        ],
                        "x-parser-schema-id": "<anonymous-schema-271>"
                      }
                    ],
                    "x-parser-schema-id": "<anonymous-schema-270>"
                  },
                  "jobTitle": {
                    "type": "array",
                    "items": {
                      "title": "jobTitle",
                      "description": "The job title of the person (for example, Financial Manager).",
                      "type": "string",
                      "x-faker": "name.jobTitle",
                      "examples": [
                        "CEO",
                        "Sales Manager",
                        "Escrow Officer",
                        "Transaction Coordinator",
                        "Director of Marketing",
                        "Senior Loan Officer",
                        "Loan Officer",
                        "Sanitation Engineer",
                        "Owner",
                        "Cofounder",
                        "Founder",
                        "President",
                        "Vice President of Sales",
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null
                      ],
                      "x-parser-schema-id": "<anonymous-schema-388>"
                    },
                    "x-parser-schema-id": "<anonymous-schema-387>"
                  },
                  "memberOf": {
                    "title": "memberOf",
                    "description": "an Organization (or ProgramMembership) to which this Person or Organization belongs.",
                    "type": "array",
                    "x-range": [
                      "OrganizationRole",
                      "URI"
                    ],
                    "items": {
                      "anyOf": [
                        {
                          "title": "OrganizationRole",
                          "type": "object",
                          "description": "describes a role played by a member and a group or organization.",
                          "properties": {
                            "type": {
                              "type": "string",
                              "description": "a role played by the member in the memberOf group",
                              "enum": [
                                "OrganizationRole"
                              ],
                              "x-parser-schema-id": "<anonymous-schema-391>"
                            },
                            "roleName": {
                              "type": "string",
                              "description": "the role name",
                              "example": "Owner",
                              "x-parser-schema-id": "<anonymous-schema-392>"
                            },
                            "memberOf": {
                              "description": "the org or group where the role is performed",
                              "type": "object",
                              "example": {
                                "type": "RealEstateOrganization",
                                "id": "http://orgid.example.com/profile/card#me"
                              },
                              "x-parser-schema-id": "<anonymous-schema-393>"
                            },
                            "member": {
                              "description": "member object or id",
                              "type": "string",
                              "format": "uri",
                              "example": "https://memberid.example.com/profile/card#me",
                              "x-parser-schema-id": "<anonymous-schema-394>"
                            },
                            "startDate": {
                              "type": "string",
                              "format": "date-time",
                              "description": "date the member began performing this role",
                              "x-parser-schema-id": "<anonymous-schema-395>"
                            },
                            "endDate": {
                              "type": "string",
                              "format": "date-time",
                              "description": "date the member stopped performing the role",
                              "x-parser-schema-id": "<anonymous-schema-396>"
                            }
                          },
                          "x-parser-schema-id": "OrganizationRole"
                        },
                        {
                          "type": "string",
                          "format": "uri",
                          "x-parser-schema-id": "<anonymous-schema-397>"
                        }
                      ],
                      "x-parser-schema-id": "<anonymous-schema-390>"
                    },
                    "x-parser-schema-id": "<anonymous-schema-389>"
                  },
                  "name": {
                    "type": "string",
                    "description": "the name of the item",
                    "x-parser-schema-id": "<anonymous-schema-92>"
                  },
                  "parentOrganization": {
                    "$id": "http://realestate.yodata.me/schema/parentOrganization",
                    "title": "parentOrganization",
                    "description": "organizations of which this org is a part.",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uri",
                      "x-parser-schema-id": "<anonymous-schema-398>"
                    }
                  },
                  "permit": {
                    "title": "Permit",
                    "description": "A permit issued by an organization to an individual or business.",
                    "type": "object",
                    "x-hasSubclass": [
                      "RealEstateLicense"
                    ],
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Permit type.",
                        "enum": [
                          "Permit"
                        ],
                        "x-parser-schema-id": "<anonymous-schema-400>"
                      },
                      "name": {
                        "type": "string",
                        "description": "Common or display value of the Permit.",
                        "example": "DRE Number",
                        "x-parser-schema-id": "<anonymous-schema-401>"
                      },
                      "issuedBy": {
                        "type": "object",
                        "x-range": "Organization",
                        "description": "The issuing authority",
                        "example": {
                          "type": "State",
                          "name": "California"
                        },
                        "x-parser-schema-id": "<anonymous-schema-402>"
                      },
                      "issuedThrough": {
                        "type": "object",
                        "description": "the service through which the permit was granted",
                        "example": {
                          "type": "Service",
                          "name": "Department of Real Estate"
                        },
                        "x-parser-schema-id": "<anonymous-schema-403>"
                      },
                      "validIn": {
                        "type": "object",
                        "x-range": "Place",
                        "x-parser-schema-id": "<anonymous-schema-404>"
                      },
                      "validFrom": {
                        "type": "string",
                        "format": "date-time",
                        "description": "start date",
                        "x-parser-schema-id": "<anonymous-schema-405>"
                      },
                      "validUntil": {
                        "type": "string",
                        "format": "date-time",
                        "description": "end date",
                        "x-parser-schema-id": "<anonymous-schema-406>"
                      }
                    },
                    "x-parser-schema-id": "<anonymous-schema-399>"
                  },
                  "subOrganization": {
                    "$id": "http://realestate.yodata.me/schema/subOrganization",
                    "title": "subOrganization",
                    "description": "child organizations of the organization",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uri",
                      "x-parser-schema-id": "<anonymous-schema-407>"
                    }
                  },
                  "url": {
                    "title": "url",
                    "type": "string",
                    "format": "uri",
                    "description": "URL of the item.",
                    "x-parser-schema-id": "<anonymous-schema-408>"
                  }
                },
                "x-parser-schema-id": "RealEstateAgent"
              },
              {
                "title": "Person",
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "x-parser-schema-id": "<anonymous-schema-95>"
                  },
                  "affiliation": {
                    "description": "An organization that this person is affiliated with",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uri",
                      "example": "https://example.com/profile/card#me",
                      "x-parser-schema-id": "<anonymous-schema-97>"
                    },
                    "x-parser-schema-id": "<anonymous-schema-96>"
                  },
                  "address": {
                    "type": "array",
                    "items": {
                      "$id": "http://realestate.yodata.me/schemas/PostalAddress.yaml",
                      "title": "PostalAddress",
                      "type": "object",
                      "description": "A physical address.",
                      "properties": {
                        "type": {
                          "type": "string",
                          "const": "PostalAddress",
                          "x-parser-schema-id": "<anonymous-schema-99>"
                        },
                        "streetAddress": {
                          "type": "string",
                          "description": "the street number and name.",
                          "x-faker": "address.streetAddress",
                          "examples": [
                            "5046 Ottis Point",
                            "166 Marion Burg",
                            "93044 Haley Stream"
                          ],
                          "x-parser-schema-id": "<anonymous-schema-100>"
                        },
                        "postOfficeBoxNumber": {
                          "type": "string",
                          "description": "The post office box number for PO box addresses.",
                          "x-faker": "address.secondaryAddress",
                          "examples": [
                            "Box 1234",
                            "Apt. 161",
                            "Apt. 623"
                          ],
                          "x-parser-schema-id": "<anonymous-schema-101>"
                        },
                        "addressRegion": {
                          "type": "string",
                          "description": "State or Province.",
                          "x-faker": "address.state",
                          "examples": [
                            "New Jersey",
                            "California",
                            "MI",
                            null
                          ],
                          "x-parser-schema-id": "<anonymous-schema-102>"
                        },
                        "addressLocality": {
                          "type": "string",
                          "description": "City, Township.",
                          "x-faker": "address.city",
                          "examples": [
                            "Gotham City",
                            "Kulasmouth",
                            "Heidistad",
                            "Altamonte Springs",
                            "West Ahmed",
                            "Blaiseview"
                          ],
                          "x-parser-schema-id": "<anonymous-schema-103>"
                        },
                        "postalCode": {
                          "type": "string",
                          "description": "Zip/Post Code",
                          "x-faker": "address.zipCode",
                          "examples": [
                            "10010",
                            "38859",
                            "40387",
                            "50239-7698",
                            null
                          ],
                          "x-parser-schema-id": "<anonymous-schema-104>"
                        },
                        "addressCountry": {
                          "type": "string",
                          "description": "The country. For example, USA. You can also provide the two-letter ISO 3166-1 alpha-2 country code.",
                          "examples": [
                            "USA",
                            "TH",
                            "NZ",
                            "EG",
                            "SJ",
                            "VN"
                          ],
                          "x-faker": "address.countryCode",
                          "x-parser-schema-id": "<anonymous-schema-105>"
                        },
                        "addressCounty": {
                          "type": "string",
                          "description": "the county (us real estate extension)",
                          "faker": "address.county",
                          "examples": [
                            "Gotham County",
                            "Buckinghamshire",
                            "Borders",
                            null
                          ],
                          "x-parser-schema-id": "<anonymous-schema-106>"
                        },
                        "addressSubdivision": {
                          "type": "string",
                          "description": "the subdivision or neighborhood (us real estate extension)",
                          "x-faker": "address.streetName",
                          "examples": [
                            "Gotham Heights",
                            "South Kensington",
                            "SOMA (South of Market)",
                            "Nob Hill"
                          ],
                          "x-parser-schema-id": "<anonymous-schema-107>"
                        }
                      },
                      "x-parser-schema-id": "PostalAddress"
                    },
                    "x-parser-schema-id": "<anonymous-schema-98>"
                  },
                  "birthDate": {
                    "description": "date of birth.",
                    "type": "string",
                    "format": "date",
                    "x-parser-schema-id": "<anonymous-schema-108>"
                  },
                  "contactPoint": {
                    "description": "contact points for the person",
                    "type": "array",
                    "items": {
                      "$id": "htttp://realestate.yodata.me/schema/ContactPoint.json",
                      "title": "ContactPoint",
                      "description": "A point of contact for the entity. By convention in the real estate domain, ContactPoints\nare preferred over telephone, email, and faxNumber so the ContactPoint.name property can be used to label values\nfor example, Work Telephone, Home, as named contactPoint values.\n",
                      "type": "object",
                      "required": [
                        "type",
                        "name"
                      ],
                      "minProperties": 3,
                      "properties": {
                        "type": {
                          "type": "string",
                          "const": "ContactPoint",
                          "x-parser-schema-id": "<anonymous-schema-110>"
                        },
                        "name": {
                          "type": "string",
                          "description": "a label for the contactPoint, i.e. 'Work', or 'Home'",
                          "examples": [
                            "Work",
                            "Home",
                            "Vacation",
                            "Bob's Cell",
                            "Alice's Work"
                          ],
                          "x-parser-schema-id": "<anonymous-schema-111>"
                        },
                        "telephone": {
                          "type": "string",
                          "x-faker": "phone.phoneNumber",
                          "examples": [
                            "555-555-5555",
                            "555-555-5555 x123",
                            "555-555-5555 ext. 123",
                            "+1-555-555-5555"
                          ],
                          "x-parser-schema-id": "<anonymous-schema-112>"
                        },
                        "faxNumber": {
                          "type": "string",
                          "x-faker": "phone.phoneNumber",
                          "examples": [
                            "555-555-5555",
                            "555-555-5555 x123",
                            "555-555-5555 ext. 123",
                            "+1-555-555-5555"
                          ],
                          "x-parser-schema-id": "<anonymous-schema-113>"
                        },
                        "email": {
                          "description": "an email address for the item.",
                          "type": "string",
                          "format": "email",
                          "x-faker": "internet.email",
                          "examples": [
                            "bob@example.com",
                            "alice@example.com"
                          ],
                          "x-parser-schema-id": "<anonymous-schema-114>"
                        },
                        "url": {
                          "description": "primary URL for the item.",
                          "type": "string",
                          "format": "uri",
                          "example": "https://www.facebook.com/hallandoates",
                          "x-parser-schema-id": "<anonymous-schema-115>"
                        }
                      },
                      "x-parser-schema-id": "ContactPoint"
                    },
                    "x-parser-schema-id": "<anonymous-schema-109>"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "x-faker": "internet.email",
                    "x-parser-schema-id": "<anonymous-schema-93>"
                  },
                  "additionalName": {
                    "title": "additionalName",
                    "description": "any other name(s) associated with the entity, i.e. nickname, middle name, maiden name, etc. For multiple names, use a comma without space as a separator.",
                    "type": "string",
                    "examples": [
                      "Johnny,John",
                      "Prince,The Artist Formerly Known as Prince,The Artist",
                      "Babs,Barbara",
                      "Katheryn Elizabeth Hudson,Katy Perry",
                      "Destiny Hope Cyrus,Miley Cyrus"
                    ],
                    "x-parser-schema-id": "<anonymous-schema-116>"
                  },
                  "familyName": {
                    "$id": "htttp://realestate.yodata.me/schema/familyName.yaml",
                    "type": "string",
                    "title": "Family Name",
                    "description": "Last Name of a person",
                    "x-faker": "name.lastName",
                    "maxLength": 50,
                    "externalDocs": {
                      "description": "Family Name",
                      "url": "https://schema.org/familyName"
                    },
                    "examples": [
                      "Smith",
                      "Jones",
                      "Parker",
                      "Monk",
                      "Brown",
                      "Miller",
                      "Davis",
                      "Wilson",
                      "Fitzgerald",
                      "Johnson",
                      "Williams"
                    ]
                  },
                  "faxNumber": {
                    "type": "string",
                    "description": "Do people still use fax machines?",
                    "x-faker": "phone.phoneNumber",
                    "x-parser-schema-id": "<anonymous-schema-117>"
                  },
                  "givenName": {
                    "type": "string",
                    "description": "First Name of a person",
                    "x-faker": "name.firstName",
                    "examples": [
                      "John",
                      "Jane",
                      "Mary",
                      "Joseph",
                      "William",
                      "David",
                      "Richard",
                      "Charles",
                      "Thomas",
                      "Christopher",
                      "Daniel",
                      "Matthew",
                      "Anthony",
                      "Donald",
                      "Mark",
                      "Paul",
                      "Steven",
                      "Andrew",
                      "Kenneth",
                      "George",
                      "Joshua",
                      "Kevin",
                      "Brian",
                      "Edward",
                      "Ronald",
                      "Timothy",
                      "Jason",
                      "Jeffrey",
                      "Ryan",
                      "Jacob"
                    ],
                    "x-parser-schema-id": "<anonymous-schema-118>"
                  },
                  "honorificPrefix": {
                    "title": "honorificPrefix",
                    "description": "An honorific prefix preceding a Person's name such as Dr/Mrs/Mr.",
                    "type": "string",
                    "example": "Dr",
                    "x-parser-schema-id": "<anonymous-schema-119>"
                  },
                  "honorificSuffix": {
                    "title": "honorificSuffix",
                    "description": "An honorific title following a person's name like M.D.",
                    "type": "string",
                    "example": "Esq",
                    "x-parser-schema-id": "<anonymous-schema-120>"
                  },
                  "jobTitle": {
                    "title": "jobTitle",
                    "description": "job tiles associated with the item",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "x-parser-schema-id": "<anonymous-schema-122>"
                    },
                    "example": [
                      "Chief Data Officer",
                      "Sanitation Engineer"
                    ],
                    "x-parser-schema-id": "<anonymous-schema-121>"
                  },
                  "knowsLanguage": {
                    "description": "languages spoken by the person",
                    "type": "array",
                    "items": {
                      "$id": "htttp://realestate.yodata.me/schema/Language.yaml",
                      "description": "a written or spoken Language",
                      "title": "Language",
                      "type": "object",
                      "required": [
                        "type",
                        "name",
                        "additionalName"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "const": "Language",
                          "x-parser-schema-id": "<anonymous-schema-124>"
                        },
                        "name": {
                          "type": "string",
                          "description": "the display name of the language",
                          "x-parser-schema-id": "<anonymous-schema-125>"
                        },
                        "additionalName": {
                          "type": "string",
                          "description": "BCP 47 language code",
                          "x-parser-schema-id": "<anonymous-schema-126>"
                        }
                      },
                      "examples": [
                        {
                          "type": "Language",
                          "name": "English",
                          "additionalName": "en-us"
                        },
                        {
                          "type": "Language",
                          "name": "Spanish",
                          "additionalName": "es"
                        },
                        {
                          "type": "Language",
                          "name": "French",
                          "additionalName": "fr"
                        },
                        {
                          "type": "Language",
                          "name": "German",
                          "additionalName": "de"
                        },
                        {
                          "type": "Language",
                          "name": "Italian",
                          "additionalName": "it"
                        },
                        {
                          "type": "Language",
                          "name": "Japanese",
                          "additionalName": "ja"
                        },
                        {
                          "type": "Language",
                          "name": "Korean",
                          "additionalName": "ko"
                        },
                        {
                          "type": "Language",
                          "name": "Portuguese",
                          "additionalName": "pt"
                        },
                        {
                          "type": "Language",
                          "name": "Russian",
                          "additionalName": "ru"
                        },
                        {
                          "type": "Language",
                          "name": "Chinese",
                          "additionalName": "zh"
                        },
                        {
                          "type": "Language",
                          "name": "Arabic",
                          "additionalName": "ar"
                        },
                        {
                          "type": "Language",
                          "name": "Hindi",
                          "additionalName": "hi"
                        },
                        {
                          "type": "Language",
                          "name": "Bengali",
                          "additionalName": "bn"
                        },
                        {
                          "type": "Language",
                          "name": "Portuguese",
                          "additionalName": "pt"
                        }
                      ],
                      "x-parser-schema-id": "Language"
                    },
                    "x-parser-schema-id": "<anonymous-schema-123>"
                  },
                  "name": {
                    "description": "Full name of the person.",
                    "type": "string",
                    "x-faker": "name.findName",
                    "x-parser-schema-id": "<anonymous-schema-127>"
                  },
                  "telephone": {
                    "type": "string",
                    "description": "Primary phone number.",
                    "example": "+15558675309",
                    "x-parser-schema-id": "<anonymous-schema-128>"
                  },
                  "worksFor": {
                    "type": "string",
                    "description": "Organizations the person works for.",
                    "x-faker": "company.companyName",
                    "x-parser-schema-id": "<anonymous-schema-129>"
                  }
                },
                "x-parser-schema-id": "Person"
              }
            ],
            "example": {
              "type": "RealEstateAgent",
              "name": "Randy RealEstateAgent",
              "id": "https://{agentid}.example.com/profile/card#me"
            },
            "x-parser-schema-id": "<anonymous-schema-511>"
          }
        },
        "x-parser-schema-id": "ListingOffer"
      },
      "ListingReport": {
        "$id": "http://realestate.yodata.me/schemas/ListingReport.yaml",
        "title": "ListingReport",
        "description": "summary report of listing inventory count",
        "x-range": "ListingReport",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "RECORD-TYPE",
            "example": "ListingReport",
            "x-parser-schema-id": "<anonymous-schema-642>"
          },
          "batchId": {
            "type": "string",
            "description": "BATCH-ID",
            "x-parser-schema-id": "<anonymous-schema-643>"
          },
          "reportingOfficeId": {
            "type": "string",
            "format": "uri",
            "description": "OFFICE-ID",
            "example": "https://{officeid}.example.com/profile/card#me",
            "x-parser-schema-id": "<anonymous-schema-644>"
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time",
            "description": "YEAR-MONTH",
            "x-parser-schema-id": "<anonymous-schema-645>"
          },
          "listingsAddedCount": {
            "type": "number",
            "description": "LISTINGS-TAKEN",
            "x-parser-schema-id": "<anonymous-schema-646>"
          },
          "totalListingsCount": {
            "type": "number",
            "description": "LISTINGS-INVENTORY",
            "x-parser-schema-id": "<anonymous-schema-647>"
          }
        },
        "x-parser-schema-id": "ListingReport"
      },
      "MarketingProgram": {
        "title": "MarketingProgram",
        "description": "A collection of pre-defined activities which take place over a period of time or in a regular, ongoing schedule.",
        "type": "object",
        "properties": {
          "type": {
            "const": "MarketingProgram",
            "x-parser-schema-id": "<anonymous-schema-648>"
          },
          "name": {
            "type": "string",
            "description": "the name of the item",
            "example": "Market Activity Report for 508 Homeward Avenue",
            "x-parser-schema-id": "<anonymous-schema-649>"
          },
          "identifier": {
            "title": "identifier",
            "type": "object",
            "description": "identifier assigned to a contact by the vendor who originally created the contact",
            "examples": [
              {
                "salesforceid": "0031U00002XW1QWQA1"
              },
              {
                "vendoraid": "123456"
              },
              {
                "originating_system_id": "123456"
              }
            ],
            "x-parser-schema-id": "<anonymous-schema-94>"
          },
          "member": {
            "type": "array",
            "x-range": [
              "ProgramMembership"
            ],
            "items": {
              "title": "ProgramMembership",
              "description": "describes membership relation between a member (Person) and a MarketingProgram",
              "type": "object",
              "properties": {
                "type": {
                  "const": "ProgramMembership",
                  "x-parser-schema-id": "<anonymous-schema-651>"
                },
                "role": {
                  "type": "string",
                  "enum": [
                    "member",
                    "owner"
                  ],
                  "x-parser-schema-id": "<anonymous-schema-652>"
                },
                "member": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "const": "Contact",
                      "x-parser-schema-id": "<anonymous-schema-654>"
                    },
                    "name": {
                      "type": "string",
                      "x-parser-schema-id": "<anonymous-schema-655>"
                    },
                    "identifier": {
                      "title": "identifier",
                      "type": "object",
                      "description": "identifier assigned to a contact by the vendor who originally created the contact",
                      "examples": [
                        {
                          "salesforceid": "0031U00002XW1QWQA1"
                        },
                        {
                          "vendoraid": "123456"
                        },
                        {
                          "originating_system_id": "123456"
                        }
                      ],
                      "x-parser-schema-id": "<anonymous-schema-94>"
                    }
                  },
                  "x-parser-schema-id": "<anonymous-schema-653>"
                },
                "memberOf": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "const": "MarketingProgram",
                      "x-parser-schema-id": "<anonymous-schema-657>"
                    },
                    "name": {
                      "type": "string",
                      "example": "Market Activity Report 508 Homewood Ave",
                      "x-parser-schema-id": "<anonymous-schema-658>"
                    },
                    "identifier": {
                      "title": "identifier",
                      "type": "object",
                      "description": "identifier assigned to a contact by the vendor who originally created the contact",
                      "examples": [
                        {
                          "salesforceid": "0031U00002XW1QWQA1"
                        },
                        {
                          "vendoraid": "123456"
                        },
                        {
                          "originating_system_id": "123456"
                        }
                      ],
                      "x-parser-schema-id": "<anonymous-schema-94>"
                    }
                  },
                  "x-parser-schema-id": "<anonymous-schema-656>"
                }
              },
              "x-parser-schema-id": "ProgramMembership"
            },
            "x-parser-schema-id": "<anonymous-schema-650>"
          },
          "creator": {
            "description": "creator / author of the item",
            "type": "string",
            "format": "uri",
            "x-parser-schema-id": "<anonymous-schema-659>"
          },
          "dateCreated": {
            "$id": "http://realestate.yodata.me/schema/dateCreated.yaml",
            "type": "string",
            "format": "date-time",
            "title": "Date Created",
            "description": "The date on which the item was created."
          },
          "dateModified": {
            "description": "The date on which the item was most recently modified or when the item's entry was modified within a DataFeed.",
            "type": "string",
            "format": "date-time",
            "x-parser-schema-id": "<anonymous-schema-136>"
          },
          "about": {
            "type": "object",
            "description": "a physical location",
            "title": "Place",
            "x-range": [
              "Place",
              "City",
              "State",
              "PostalCode",
              "GeoCircle",
              "GeoShape"
            ],
            "properties": {
              "type": {
                "type": "string",
                "description": "The item type (Linked-Data @type)",
                "enum": [
                  "Place"
                ],
                "x-parser-schema-id": "<anonymous-schema-660>"
              },
              "address": {
                "type": "object",
                "x-range": "PostalAddress",
                "description": "A physical address.",
                "example": {
                  "type": "PostalAddress",
                  "name": "Home",
                  "addressCountry": "USA",
                  "addressCounty": "Gotham County",
                  "addressLocality": "Gotham City",
                  "addressRegion": "New Jersey",
                  "addressSubdivision": "Gotham Heights",
                  "postalCode": "10010",
                  "postOfficeBoxNumber": "Box 1234",
                  "streetAddress": "1007 Mountain Gate Rd"
                },
                "x-parser-schema-id": "<anonymous-schema-661>"
              },
              "geo": {
                "type": "object",
                "description": "a geo shape (circle or box)",
                "x-range": [
                  "GeoCircle",
                  "GeoShape"
                ],
                "example": {
                  "type": "GeoShape",
                  "geoMidpoint": {
                    "type": "GeoCoordinates,",
                    "longitude": "73.98",
                    "latitude": "40.75"
                  },
                  "geoRadius": {
                    "type": "QuantitativeValue,",
                    "value": "10,",
                    "unitCode": "mi,",
                    "unitText": "miles"
                  },
                  "box": "(33.5697,-117.775),(33.6018,-117.707)"
                },
                "x-parser-schema-id": "<anonymous-schema-662>"
              }
            },
            "x-parser-schema-id": "Place"
          }
        },
        "x-parser-schema-id": "MarketingProgram"
      },
      "MediaObject": {
        "title": "MediaObject",
        "description": "an image, video or document availble for download",
        "x-subclass": [
          "ImageObject",
          "DigitalDocument"
        ],
        "allOf": [
          {
            "$id": "http://realestate.yodata.me/schema/Thing",
            "type": "object",
            "title": "Thing",
            "summary": "The root type of all Things.",
            "required": [
              "type"
            ],
            "propertyNames": {
              "pattern": "^[a-z@$][a-zA-Z0-9-_]+$",
              "x-parser-schema-id": "<anonymous-schema-274>"
            },
            "properties": {
              "type": {
                "type": "string",
                "pattern": "^[A-Z][a-zA-Z0-9]+$",
                "description": "The item type (Linked-Data @type)",
                "x-parser-schema-id": "<anonymous-schema-272>"
              },
              "@id": {
                "type": "string",
                "format": "uri",
                "description": "the liked data uri for the Thing",
                "x-parser-schema-id": "<anonymous-schema-273>"
              }
            },
            "x-parser-schema-id": "Thing"
          },
          {
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "MediaObject",
                  "ImageObject",
                  "DigitalDocument"
                ]
              },
              "id": {
                "description": "the URL to access the item.",
                "example": "http://user.example.com/public/logo/fileName.zip",
                "type": "string",
                "format": "uri"
              },
              "name": {
                "type": "string",
                "description": "the file name of the object.",
                "example": "fileName.zip"
              },
              "encodingFormat": {
                "type": "string",
                "description": "MIME type",
                "example": "application/zip"
              },
              "about": {
                "type": "string",
                "format": "uri",
                "description": "URI to the subject of the image or logo",
                "example": "http://user.example.com/profile/card#me"
              },
              "url": {
                "type": "string",
                "format": "uri",
                "description": "URL of the image content",
                "example": "http://user.example.com/public/profile/image.jpg"
              }
            },
            "x-parser-schema-id": "<anonymous-schema-275>"
          }
        ],
        "x-parser-schema-id": "MediaObject"
      },
      "MLSMembership": {
        "allOf": [
          {
            "title": "OrganizationRole",
            "type": "object",
            "description": "describes a role played by a member and a group or organization.",
            "properties": {
              "type": {
                "type": "string",
                "description": "a role played by the member in the memberOf group",
                "enum": [
                  "OrganizationRole"
                ],
                "x-parser-schema-id": "<anonymous-schema-391>"
              },
              "roleName": {
                "type": "string",
                "description": "the role name",
                "example": "Owner",
                "x-parser-schema-id": "<anonymous-schema-392>"
              },
              "memberOf": {
                "description": "the org or group where the role is performed",
                "type": "object",
                "example": {
                  "type": "RealEstateOrganization",
                  "id": "http://orgid.example.com/profile/card#me"
                },
                "x-parser-schema-id": "<anonymous-schema-393>"
              },
              "member": {
                "description": "member object or id",
                "type": "string",
                "format": "uri",
                "example": "https://memberid.example.com/profile/card#me",
                "x-parser-schema-id": "<anonymous-schema-394>"
              },
              "startDate": {
                "type": "string",
                "format": "date-time",
                "description": "date the member began performing this role",
                "x-parser-schema-id": "<anonymous-schema-395>"
              },
              "endDate": {
                "type": "string",
                "format": "date-time",
                "description": "date the member stopped performing the role",
                "x-parser-schema-id": "<anonymous-schema-396>"
              }
            },
            "x-parser-schema-id": "OrganizationRole"
          },
          {
            "type": "object",
            "title": "MLSMembership",
            "description": "a membership relationship",
            "properties": {
              "type": {
                "type": "string",
                "description": "an MLS member relationship",
                "enum": [
                  "MLSMembership"
                ],
                "example": "MLSMembership",
                "x-parser-schema-id": "<anonymous-schema-664>"
              },
              "roleName": {
                "type": "string",
                "example": "MLSMember",
                "x-parser-schema-id": "<anonymous-schema-665>"
              },
              "memberOf": {
                "type": "object",
                "x-range": "MultipleListingService",
                "example": {
                  "type": "MultipleListingService",
                  "name": "GreatScottMLS"
                },
                "x-parser-schema-id": "<anonymous-schema-666>"
              },
              "member": {
                "type": "string",
                "format": "uri",
                "example": "https://{agent}.example.com/profile/card#me",
                "x-parser-schema-id": "<anonymous-schema-667>"
              },
              "memberId": {
                "type": "string",
                "description": "the user's MLSID",
                "example": "memberid123",
                "x-parser-schema-id": "<anonymous-schema-668>"
              }
            },
            "x-parser-schema-id": "<anonymous-schema-663>"
          }
        ],
        "x-parser-schema-id": "MLSMembership"
      },
      "MonetaryAmount": {
        "type": "object",
        "title": "MonetaryAmount",
        "x-range": "MonetaryAmount",
        "required": [
          "type",
          "value",
          "currency"
        ],
        "properties": {
          "type": {
            "type": "string",
            "description": "MonetaryAmount",
            "enum": [
              "MonetaryAmount"
            ],
            "x-parser-schema-id": "<anonymous-schema-669>"
          },
          "minValue": {
            "type": "number",
            "description": "the lower limit of the range",
            "example": 2400000,
            "x-parser-schema-id": "<anonymous-schema-670>"
          },
          "maxValue": {
            "type": "number",
            "description": "the upper limit of the range",
            "example": 3200000,
            "x-parser-schema-id": "<anonymous-schema-671>"
          },
          "value": {
            "type": "number",
            "description": "the actual or expected value",
            "example": 2700000,
            "x-parser-schema-id": "<anonymous-schema-672>"
          },
          "currency": {
            "type": "string",
            "description": "use ISO4217 country codes",
            "maxLength": 3,
            "example": "USD",
            "x-parser-schema-id": "<anonymous-schema-673>"
          }
        },
        "x-parser-schema-id": "MonetaryAmount"
      },
      "MultipleListingService": {
        "allOf": [
          {
            "allOf": [
              {
                "$id": "http://realestate.yodata.me/schema/Thing",
                "type": "object",
                "title": "Thing",
                "summary": "The root type of all Things.",
                "required": [
                  "type"
                ],
                "propertyNames": {
                  "pattern": "^[a-z@$][a-zA-Z0-9-_]+$",
                  "x-parser-schema-id": "<anonymous-schema-274>"
                },
                "properties": {
                  "type": {
                    "type": "string",
                    "pattern": "^[A-Z][a-zA-Z0-9]+$",
                    "description": "The item type (Linked-Data @type)",
                    "x-parser-schema-id": "<anonymous-schema-272>"
                  },
                  "@id": {
                    "type": "string",
                    "format": "uri",
                    "description": "the liked data uri for the Thing",
                    "x-parser-schema-id": "<anonymous-schema-273>"
                  }
                },
                "x-parser-schema-id": "Thing"
              },
              {
                "x-kind": "Organization",
                "x-parser-schema-id": "<anonymous-schema-410>"
              },
              {
                "x-hasSubclass": [
                  "RealEstateOrganization",
                  "RealEstateOffice",
                  "RealEstateAgent"
                ],
                "x-parser-schema-id": "<anonymous-schema-411>"
              },
              {
                "x-subClassOf": [
                  "https://schema.org/Organization"
                ],
                "properties": {
                  "address": {
                    "type": "object",
                    "x-range": "PostalAddress",
                    "description": "A physical address.",
                    "example": {
                      "type": "PostalAddress",
                      "name": "Home",
                      "addressCountry": "USA",
                      "addressCounty": "Gotham County",
                      "addressLocality": "Gotham City",
                      "addressRegion": "New Jersey",
                      "addressSubdivision": "Gotham Heights",
                      "postalCode": "10010",
                      "postOfficeBoxNumber": "Box 1234",
                      "streetAddress": "1007 Mountain Gate Rd"
                    },
                    "x-parser-schema-id": "<anonymous-schema-370>"
                  },
                  "availableLanguage": {
                    "title": "availableLanguage",
                    "type": "array",
                    "description": "Please use one of the language codes from the IETF BCP 47 standard.",
                    "x-range": "Language",
                    "items": {
                      "$id": "htttp://realestate.yodata.me/schema/Language.yaml",
                      "description": "a written or spoken Language",
                      "title": "Language",
                      "type": "object",
                      "required": [
                        "type",
                        "name",
                        "additionalName"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "const": "Language",
                          "x-parser-schema-id": "<anonymous-schema-124>"
                        },
                        "name": {
                          "type": "string",
                          "description": "the display name of the language",
                          "x-parser-schema-id": "<anonymous-schema-125>"
                        },
                        "additionalName": {
                          "type": "string",
                          "description": "BCP 47 language code",
                          "x-parser-schema-id": "<anonymous-schema-126>"
                        }
                      },
                      "examples": [
                        {
                          "type": "Language",
                          "name": "English",
                          "additionalName": "en-us"
                        },
                        {
                          "type": "Language",
                          "name": "Spanish",
                          "additionalName": "es"
                        },
                        {
                          "type": "Language",
                          "name": "French",
                          "additionalName": "fr"
                        },
                        {
                          "type": "Language",
                          "name": "German",
                          "additionalName": "de"
                        },
                        {
                          "type": "Language",
                          "name": "Italian",
                          "additionalName": "it"
                        },
                        {
                          "type": "Language",
                          "name": "Japanese",
                          "additionalName": "ja"
                        },
                        {
                          "type": "Language",
                          "name": "Korean",
                          "additionalName": "ko"
                        },
                        {
                          "type": "Language",
                          "name": "Portuguese",
                          "additionalName": "pt"
                        },
                        {
                          "type": "Language",
                          "name": "Russian",
                          "additionalName": "ru"
                        },
                        {
                          "type": "Language",
                          "name": "Chinese",
                          "additionalName": "zh"
                        },
                        {
                          "type": "Language",
                          "name": "Arabic",
                          "additionalName": "ar"
                        },
                        {
                          "type": "Language",
                          "name": "Hindi",
                          "additionalName": "hi"
                        },
                        {
                          "type": "Language",
                          "name": "Bengali",
                          "additionalName": "bn"
                        },
                        {
                          "type": "Language",
                          "name": "Portuguese",
                          "additionalName": "pt"
                        }
                      ],
                      "x-parser-schema-id": "Language"
                    }
                  },
                  "branchCode": {
                    "description": "A short textual code that uniquely identifies a place of business.",
                    "example": "for BHHS profile events, see additionalProperty.OfficeId",
                    "type": "string"
                  },
                  "certification": {
                    "$id": "http://realestate.yodata.me/schema/certification",
                    "title": "certifications",
                    "description": "certifications granted to a person or organization",
                    "type": "array",
                    "items": [
                      {
                        "type": "object",
                        "title": "Certification",
                        "description": "A certification issued by an organization to an individual or business.",
                        "x-range": "Certification",
                        "properties": {
                          "type": {
                            "description": "Certification",
                            "type": "string",
                            "enum": [
                              "Certification"
                            ],
                            "x-parser-schema-id": "<anonymous-schema-594>"
                          },
                          "name": {
                            "type": "string",
                            "description": "the name of the Certification",
                            "example": "e-Agent Certified",
                            "x-parser-schema-id": "<anonymous-schema-595>"
                          },
                          "issuedBy": {
                            "type": "object",
                            "x-range": "RealEstateOrganization",
                            "description": "the issuing authority",
                            "properties": {
                              "type": {
                                "enum": [
                                  "RealEstateOrganization"
                                ],
                                "type": "string",
                                "description": "The item type (Linked-Data @type)",
                                "x-parser-schema-id": "<anonymous-schema-375>"
                              },
                              "id": {
                                "example": "https://example.com/profile/card#me",
                                "type": "string",
                                "format": "uri",
                                "description": "Linked-Data URI (@id)",
                                "x-parser-schema-id": "<anonymous-schema-376>"
                              },
                              "name": {
                                "type": "string",
                                "description": "name of the issuing organization",
                                "example": "Gotham City Real Estate",
                                "x-parser-schema-id": "<anonymous-schema-377>"
                              }
                            },
                            "x-parser-schema-id": "<anonymous-schema-374>"
                          },
                          "issuedTo": {
                            "x-range": "RealEstateAgent",
                            "type": "object",
                            "description": "the subject",
                            "properties": {
                              "type": {
                                "enum": [
                                  "RealEstateAgent"
                                ],
                                "type": "string",
                                "description": "The item type (Linked-Data @type)",
                                "x-parser-schema-id": "<anonymous-schema-379>"
                              },
                              "id": {
                                "type": "string",
                                "format": "uri",
                                "description": "Linked-Data URI (@id)",
                                "x-parser-schema-id": "<anonymous-schema-380>"
                              },
                              "name": {
                                "type": "string",
                                "description": "the name of the item",
                                "x-parser-schema-id": "<anonymous-schema-92>"
                              }
                            },
                            "x-parser-schema-id": "<anonymous-schema-596>"
                          }
                        },
                        "x-parser-schema-id": "Certification"
                      }
                    ]
                  },
                  "contactPoint": {
                    "$id": "http://realestate.yodata.me/definitions/contactPoint.json",
                    "type": "array",
                    "description": "a named point of contact - telephone, email, faxNumber, and/or url for the entity",
                    "items": {
                      "$id": "htttp://realestate.yodata.me/schema/ContactPoint.json",
                      "title": "ContactPoint",
                      "description": "A point of contact for the entity. By convention in the real estate domain, ContactPoints\nare preferred over telephone, email, and faxNumber so the ContactPoint.name property can be used to label values\nfor example, Work Telephone, Home, as named contactPoint values.\n",
                      "type": "object",
                      "required": [
                        "type",
                        "name"
                      ],
                      "minProperties": 3,
                      "properties": {
                        "type": {
                          "type": "string",
                          "const": "ContactPoint",
                          "x-parser-schema-id": "<anonymous-schema-110>"
                        },
                        "name": {
                          "type": "string",
                          "description": "a label for the contactPoint, i.e. 'Work', or 'Home'",
                          "examples": [
                            "Work",
                            "Home",
                            "Vacation",
                            "Bob's Cell",
                            "Alice's Work"
                          ],
                          "x-parser-schema-id": "<anonymous-schema-111>"
                        },
                        "telephone": {
                          "type": "string",
                          "x-faker": "phone.phoneNumber",
                          "examples": [
                            "555-555-5555",
                            "555-555-5555 x123",
                            "555-555-5555 ext. 123",
                            "+1-555-555-5555"
                          ],
                          "x-parser-schema-id": "<anonymous-schema-112>"
                        },
                        "faxNumber": {
                          "type": "string",
                          "x-faker": "phone.phoneNumber",
                          "examples": [
                            "555-555-5555",
                            "555-555-5555 x123",
                            "555-555-5555 ext. 123",
                            "+1-555-555-5555"
                          ],
                          "x-parser-schema-id": "<anonymous-schema-113>"
                        },
                        "email": {
                          "description": "an email address for the item.",
                          "type": "string",
                          "format": "email",
                          "x-faker": "internet.email",
                          "examples": [
                            "bob@example.com",
                            "alice@example.com"
                          ],
                          "x-parser-schema-id": "<anonymous-schema-114>"
                        },
                        "url": {
                          "description": "primary URL for the item.",
                          "type": "string",
                          "format": "uri",
                          "example": "https://www.facebook.com/hallandoates",
                          "x-parser-schema-id": "<anonymous-schema-115>"
                        }
                      },
                      "x-parser-schema-id": "ContactPoint"
                    }
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "x-faker": "internet.email",
                    "x-parser-schema-id": "<anonymous-schema-93>"
                  },
                  "faxNumber": {
                    "type": "string",
                    "description": "Do people still use fax machines?",
                    "x-faker": "phone.phoneNumber",
                    "x-parser-schema-id": "<anonymous-schema-117>"
                  },
                  "image": {
                    "title": "image",
                    "description": "an ImageObject or URI reference to an image on the web.",
                    "type": "array",
                    "x-range": [
                      "ImageObject"
                    ],
                    "items": [
                      {
                        "type": "object",
                        "allOf": [
                          {
                            "title": "MediaObject",
                            "description": "an image, video or document availble for download",
                            "x-subclass": [
                              "ImageObject",
                              "DigitalDocument"
                            ],
                            "allOf": [
                              {
                                "$id": "http://realestate.yodata.me/schema/Thing",
                                "type": "object",
                                "title": "Thing",
                                "summary": "The root type of all Things.",
                                "required": [
                                  "type"
                                ],
                                "propertyNames": {
                                  "pattern": "^[a-z@$][a-zA-Z0-9-_]+$",
                                  "x-parser-schema-id": "<anonymous-schema-274>"
                                },
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "pattern": "^[A-Z][a-zA-Z0-9]+$",
                                    "description": "The item type (Linked-Data @type)",
                                    "x-parser-schema-id": "<anonymous-schema-272>"
                                  },
                                  "@id": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "the liked data uri for the Thing",
                                    "x-parser-schema-id": "<anonymous-schema-273>"
                                  }
                                },
                                "x-parser-schema-id": "Thing"
                              },
                              {
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "MediaObject",
                                      "ImageObject",
                                      "DigitalDocument"
                                    ]
                                  },
                                  "id": {
                                    "description": "the URL to access the item.",
                                    "example": "http://user.example.com/public/logo/fileName.zip",
                                    "type": "string",
                                    "format": "uri"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "the file name of the object.",
                                    "example": "fileName.zip"
                                  },
                                  "encodingFormat": {
                                    "type": "string",
                                    "description": "MIME type",
                                    "example": "application/zip"
                                  },
                                  "about": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "URI to the subject of the image or logo",
                                    "example": "http://user.example.com/profile/card#me"
                                  },
                                  "url": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "URL of the image content",
                                    "example": "http://user.example.com/public/profile/image.jpg"
                                  }
                                },
                                "x-parser-schema-id": "<anonymous-schema-275>"
                              }
                            ],
                            "x-parser-schema-id": "MediaObject"
                          },
                          {
                            "title": "ImageObject",
                            "x-range": "ImageObject",
                            "properties": {
                              "type": {
                                "enum": [
                                  "ImageObject"
                                ],
                                "example": "ImageObject"
                              },
                              "id": {
                                "example": "http://user.example.com/public/logo/image.jpg"
                              },
                              "name": {
                                "example": "image.jpg"
                              },
                              "encodingFormat": {
                                "example": "image/jpeg"
                              }
                            },
                            "x-parser-schema-id": "<anonymous-schema-276>"
                          }
                        ],
                        "x-parser-schema-id": "<anonymous-schema-271>"
                      }
                    ]
                  },
                  "logo": {
                    "description": "a logo associated with the organization.",
                    "items": {
                      "allOf": [
                        {
                          "type": "object",
                          "title": "DigitalDocument",
                          "x-range": "DigitalDocument",
                          "description": "an electronic file.",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "DigitalDocument"
                              ],
                              "x-parser-schema-id": "<anonymous-schema-621>"
                            },
                            "id": {
                              "type": "string",
                              "example": "http://user.example.com/public/logo/archive.zip",
                              "x-parser-schema-id": "<anonymous-schema-622>"
                            },
                            "name": {
                              "type": "string",
                              "description": "document name or title",
                              "example": "archive.zip",
                              "x-parser-schema-id": "<anonymous-schema-623>"
                            },
                            "encodingFormat": {
                              "type": "string",
                              "description": "[ISO Media Type](https://www.iana.org/assignments/media-types/media-types.xhtml)",
                              "example": "application/zip",
                              "x-parser-schema-id": "<anonymous-schema-624>"
                            },
                            "about": {
                              "type": "object",
                              "description": "subject of the Document",
                              "x-range": "Thing",
                              "example": {
                                "type": "RealEstateTransaction",
                                "identifier": {
                                  "bmsTransactionId": "xxxx"
                                }
                              },
                              "x-parser-schema-id": "<anonymous-schema-625>"
                            },
                            "url": {
                              "type": "string",
                              "description": "public URL of the object",
                              "example": "https://example.com",
                              "x-parser-schema-id": "<anonymous-schema-626>"
                            }
                          },
                          "x-parser-schema-id": "DigitalDocument"
                        },
                        {
                          "description": "an associated logo",
                          "type": "object"
                        }
                      ],
                      "type": "object"
                    },
                    "type": "array",
                    "x-range": [
                      "ImageObject",
                      "DigitalDocument"
                    ]
                  },
                  "name": {
                    "description": "Name or DBA.",
                    "type": "string"
                  },
                  "parentOrganization": {
                    "items": {
                      "format": "uri",
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "subOrganization": {
                    "description": "a child organization",
                    "x-range": [
                      "RealEstateOrganization"
                    ],
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uri",
                      "example": "http://org.example.com/profile/card#me"
                    }
                  },
                  "telephone": {
                    "type": "string",
                    "description": "Primary phone number.",
                    "example": "+15558675309",
                    "x-parser-schema-id": "<anonymous-schema-128>"
                  },
                  "type": {
                    "enum": [
                      "Organization"
                    ],
                    "type": "string"
                  },
                  "url": {
                    "description": "primary website/url for the entity.",
                    "format": "uri",
                    "type": "string"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-412>"
              }
            ],
            "x-parser-schema-id": "Organization"
          },
          {
            "title": "MultipleListingService",
            "x-hideProps": true,
            "x-subClassOf": "Organization",
            "type": "object",
            "description": "A multiple listing service (MLS, also multiple listing system or multiple listings service) is a suite of services that real estate brokers use to establish contractual offers of compensation (among brokers) and accumulate and disseminate information to enable appraisals. A multiple listing service's database and software is used by real estate brokers in real estate (or aircraft broker[1] in other industries for example), representing sellers under a listing contract to widely share information about properties with other brokers who may represent potential buyers or wish to work with a seller's broker in finding a buyer for the property or asset. The listing data stored in a multiple listing service's database is the proprietary information of the broker who has obtained a listing agreement with a property's seller.\n",
            "properties": {
              "type": {
                "enum": [
                  "MultipleListingService"
                ],
                "x-parser-schema-id": "<anonymous-schema-675>"
              },
              "identifier": {
                "title": "identifier",
                "type": "object",
                "description": "identifier assigned to a contact by the vendor who originally created the contact",
                "examples": [
                  {
                    "salesforceid": "0031U00002XW1QWQA1"
                  },
                  {
                    "vendoraid": "123456"
                  },
                  {
                    "originating_system_id": "123456"
                  }
                ],
                "x-parser-schema-id": "<anonymous-schema-94>"
              }
            },
            "example": {
              "type": "MultipleListingService",
              "name": "MLSListings",
              "identifier": {
                "resoouid": "M00000101",
                "bhhsmlsid": "xxxxxx"
              }
            },
            "x-parser-schema-id": "<anonymous-schema-674>"
          }
        ],
        "x-parser-schema-id": "MultipleListingService"
      },
      "Organization": {
        "allOf": [
          {
            "$id": "http://realestate.yodata.me/schema/Thing",
            "type": "object",
            "title": "Thing",
            "summary": "The root type of all Things.",
            "required": [
              "type"
            ],
            "propertyNames": {
              "pattern": "^[a-z@$][a-zA-Z0-9-_]+$",
              "x-parser-schema-id": "<anonymous-schema-274>"
            },
            "properties": {
              "type": {
                "type": "string",
                "pattern": "^[A-Z][a-zA-Z0-9]+$",
                "description": "The item type (Linked-Data @type)",
                "x-parser-schema-id": "<anonymous-schema-272>"
              },
              "@id": {
                "type": "string",
                "format": "uri",
                "description": "the liked data uri for the Thing",
                "x-parser-schema-id": "<anonymous-schema-273>"
              }
            },
            "x-parser-schema-id": "Thing"
          },
          {
            "x-kind": "Organization",
            "x-parser-schema-id": "<anonymous-schema-410>"
          },
          {
            "x-hasSubclass": [
              "RealEstateOrganization",
              "RealEstateOffice",
              "RealEstateAgent"
            ],
            "x-parser-schema-id": "<anonymous-schema-411>"
          },
          {
            "x-subClassOf": [
              "https://schema.org/Organization"
            ],
            "properties": {
              "address": {
                "type": "object",
                "x-range": "PostalAddress",
                "description": "A physical address.",
                "example": {
                  "type": "PostalAddress",
                  "name": "Home",
                  "addressCountry": "USA",
                  "addressCounty": "Gotham County",
                  "addressLocality": "Gotham City",
                  "addressRegion": "New Jersey",
                  "addressSubdivision": "Gotham Heights",
                  "postalCode": "10010",
                  "postOfficeBoxNumber": "Box 1234",
                  "streetAddress": "1007 Mountain Gate Rd"
                },
                "x-parser-schema-id": "<anonymous-schema-370>"
              },
              "availableLanguage": {
                "title": "availableLanguage",
                "type": "array",
                "description": "Please use one of the language codes from the IETF BCP 47 standard.",
                "x-range": "Language",
                "items": {
                  "$id": "htttp://realestate.yodata.me/schema/Language.yaml",
                  "description": "a written or spoken Language",
                  "title": "Language",
                  "type": "object",
                  "required": [
                    "type",
                    "name",
                    "additionalName"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "const": "Language",
                      "x-parser-schema-id": "<anonymous-schema-124>"
                    },
                    "name": {
                      "type": "string",
                      "description": "the display name of the language",
                      "x-parser-schema-id": "<anonymous-schema-125>"
                    },
                    "additionalName": {
                      "type": "string",
                      "description": "BCP 47 language code",
                      "x-parser-schema-id": "<anonymous-schema-126>"
                    }
                  },
                  "examples": [
                    {
                      "type": "Language",
                      "name": "English",
                      "additionalName": "en-us"
                    },
                    {
                      "type": "Language",
                      "name": "Spanish",
                      "additionalName": "es"
                    },
                    {
                      "type": "Language",
                      "name": "French",
                      "additionalName": "fr"
                    },
                    {
                      "type": "Language",
                      "name": "German",
                      "additionalName": "de"
                    },
                    {
                      "type": "Language",
                      "name": "Italian",
                      "additionalName": "it"
                    },
                    {
                      "type": "Language",
                      "name": "Japanese",
                      "additionalName": "ja"
                    },
                    {
                      "type": "Language",
                      "name": "Korean",
                      "additionalName": "ko"
                    },
                    {
                      "type": "Language",
                      "name": "Portuguese",
                      "additionalName": "pt"
                    },
                    {
                      "type": "Language",
                      "name": "Russian",
                      "additionalName": "ru"
                    },
                    {
                      "type": "Language",
                      "name": "Chinese",
                      "additionalName": "zh"
                    },
                    {
                      "type": "Language",
                      "name": "Arabic",
                      "additionalName": "ar"
                    },
                    {
                      "type": "Language",
                      "name": "Hindi",
                      "additionalName": "hi"
                    },
                    {
                      "type": "Language",
                      "name": "Bengali",
                      "additionalName": "bn"
                    },
                    {
                      "type": "Language",
                      "name": "Portuguese",
                      "additionalName": "pt"
                    }
                  ],
                  "x-parser-schema-id": "Language"
                }
              },
              "branchCode": {
                "description": "A short textual code that uniquely identifies a place of business.",
                "example": "for BHHS profile events, see additionalProperty.OfficeId",
                "type": "string"
              },
              "certification": {
                "$id": "http://realestate.yodata.me/schema/certification",
                "title": "certifications",
                "description": "certifications granted to a person or organization",
                "type": "array",
                "items": [
                  {
                    "type": "object",
                    "title": "Certification",
                    "description": "A certification issued by an organization to an individual or business.",
                    "x-range": "Certification",
                    "properties": {
                      "type": {
                        "description": "Certification",
                        "type": "string",
                        "enum": [
                          "Certification"
                        ],
                        "x-parser-schema-id": "<anonymous-schema-594>"
                      },
                      "name": {
                        "type": "string",
                        "description": "the name of the Certification",
                        "example": "e-Agent Certified",
                        "x-parser-schema-id": "<anonymous-schema-595>"
                      },
                      "issuedBy": {
                        "type": "object",
                        "x-range": "RealEstateOrganization",
                        "description": "the issuing authority",
                        "properties": {
                          "type": {
                            "enum": [
                              "RealEstateOrganization"
                            ],
                            "type": "string",
                            "description": "The item type (Linked-Data @type)",
                            "x-parser-schema-id": "<anonymous-schema-375>"
                          },
                          "id": {
                            "example": "https://example.com/profile/card#me",
                            "type": "string",
                            "format": "uri",
                            "description": "Linked-Data URI (@id)",
                            "x-parser-schema-id": "<anonymous-schema-376>"
                          },
                          "name": {
                            "type": "string",
                            "description": "name of the issuing organization",
                            "example": "Gotham City Real Estate",
                            "x-parser-schema-id": "<anonymous-schema-377>"
                          }
                        },
                        "x-parser-schema-id": "<anonymous-schema-374>"
                      },
                      "issuedTo": {
                        "x-range": "RealEstateAgent",
                        "type": "object",
                        "description": "the subject",
                        "properties": {
                          "type": {
                            "enum": [
                              "RealEstateAgent"
                            ],
                            "type": "string",
                            "description": "The item type (Linked-Data @type)",
                            "x-parser-schema-id": "<anonymous-schema-379>"
                          },
                          "id": {
                            "type": "string",
                            "format": "uri",
                            "description": "Linked-Data URI (@id)",
                            "x-parser-schema-id": "<anonymous-schema-380>"
                          },
                          "name": {
                            "type": "string",
                            "description": "the name of the item",
                            "x-parser-schema-id": "<anonymous-schema-92>"
                          }
                        },
                        "x-parser-schema-id": "<anonymous-schema-596>"
                      }
                    },
                    "x-parser-schema-id": "Certification"
                  }
                ]
              },
              "contactPoint": {
                "$id": "http://realestate.yodata.me/definitions/contactPoint.json",
                "type": "array",
                "description": "a named point of contact - telephone, email, faxNumber, and/or url for the entity",
                "items": {
                  "$id": "htttp://realestate.yodata.me/schema/ContactPoint.json",
                  "title": "ContactPoint",
                  "description": "A point of contact for the entity. By convention in the real estate domain, ContactPoints\nare preferred over telephone, email, and faxNumber so the ContactPoint.name property can be used to label values\nfor example, Work Telephone, Home, as named contactPoint values.\n",
                  "type": "object",
                  "required": [
                    "type",
                    "name"
                  ],
                  "minProperties": 3,
                  "properties": {
                    "type": {
                      "type": "string",
                      "const": "ContactPoint",
                      "x-parser-schema-id": "<anonymous-schema-110>"
                    },
                    "name": {
                      "type": "string",
                      "description": "a label for the contactPoint, i.e. 'Work', or 'Home'",
                      "examples": [
                        "Work",
                        "Home",
                        "Vacation",
                        "Bob's Cell",
                        "Alice's Work"
                      ],
                      "x-parser-schema-id": "<anonymous-schema-111>"
                    },
                    "telephone": {
                      "type": "string",
                      "x-faker": "phone.phoneNumber",
                      "examples": [
                        "555-555-5555",
                        "555-555-5555 x123",
                        "555-555-5555 ext. 123",
                        "+1-555-555-5555"
                      ],
                      "x-parser-schema-id": "<anonymous-schema-112>"
                    },
                    "faxNumber": {
                      "type": "string",
                      "x-faker": "phone.phoneNumber",
                      "examples": [
                        "555-555-5555",
                        "555-555-5555 x123",
                        "555-555-5555 ext. 123",
                        "+1-555-555-5555"
                      ],
                      "x-parser-schema-id": "<anonymous-schema-113>"
                    },
                    "email": {
                      "description": "an email address for the item.",
                      "type": "string",
                      "format": "email",
                      "x-faker": "internet.email",
                      "examples": [
                        "bob@example.com",
                        "alice@example.com"
                      ],
                      "x-parser-schema-id": "<anonymous-schema-114>"
                    },
                    "url": {
                      "description": "primary URL for the item.",
                      "type": "string",
                      "format": "uri",
                      "example": "https://www.facebook.com/hallandoates",
                      "x-parser-schema-id": "<anonymous-schema-115>"
                    }
                  },
                  "x-parser-schema-id": "ContactPoint"
                }
              },
              "email": {
                "type": "string",
                "format": "email",
                "x-faker": "internet.email",
                "x-parser-schema-id": "<anonymous-schema-93>"
              },
              "faxNumber": {
                "type": "string",
                "description": "Do people still use fax machines?",
                "x-faker": "phone.phoneNumber",
                "x-parser-schema-id": "<anonymous-schema-117>"
              },
              "image": {
                "title": "image",
                "description": "an ImageObject or URI reference to an image on the web.",
                "type": "array",
                "x-range": [
                  "ImageObject"
                ],
                "items": [
                  {
                    "type": "object",
                    "allOf": [
                      {
                        "title": "MediaObject",
                        "description": "an image, video or document availble for download",
                        "x-subclass": [
                          "ImageObject",
                          "DigitalDocument"
                        ],
                        "allOf": [
                          {
                            "$id": "http://realestate.yodata.me/schema/Thing",
                            "type": "object",
                            "title": "Thing",
                            "summary": "The root type of all Things.",
                            "required": [
                              "type"
                            ],
                            "propertyNames": {
                              "pattern": "^[a-z@$][a-zA-Z0-9-_]+$",
                              "x-parser-schema-id": "<anonymous-schema-274>"
                            },
                            "properties": {
                              "type": {
                                "type": "string",
                                "pattern": "^[A-Z][a-zA-Z0-9]+$",
                                "description": "The item type (Linked-Data @type)",
                                "x-parser-schema-id": "<anonymous-schema-272>"
                              },
                              "@id": {
                                "type": "string",
                                "format": "uri",
                                "description": "the liked data uri for the Thing",
                                "x-parser-schema-id": "<anonymous-schema-273>"
                              }
                            },
                            "x-parser-schema-id": "Thing"
                          },
                          {
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "MediaObject",
                                  "ImageObject",
                                  "DigitalDocument"
                                ]
                              },
                              "id": {
                                "description": "the URL to access the item.",
                                "example": "http://user.example.com/public/logo/fileName.zip",
                                "type": "string",
                                "format": "uri"
                              },
                              "name": {
                                "type": "string",
                                "description": "the file name of the object.",
                                "example": "fileName.zip"
                              },
                              "encodingFormat": {
                                "type": "string",
                                "description": "MIME type",
                                "example": "application/zip"
                              },
                              "about": {
                                "type": "string",
                                "format": "uri",
                                "description": "URI to the subject of the image or logo",
                                "example": "http://user.example.com/profile/card#me"
                              },
                              "url": {
                                "type": "string",
                                "format": "uri",
                                "description": "URL of the image content",
                                "example": "http://user.example.com/public/profile/image.jpg"
                              }
                            },
                            "x-parser-schema-id": "<anonymous-schema-275>"
                          }
                        ],
                        "x-parser-schema-id": "MediaObject"
                      },
                      {
                        "title": "ImageObject",
                        "x-range": "ImageObject",
                        "properties": {
                          "type": {
                            "enum": [
                              "ImageObject"
                            ],
                            "example": "ImageObject"
                          },
                          "id": {
                            "example": "http://user.example.com/public/logo/image.jpg"
                          },
                          "name": {
                            "example": "image.jpg"
                          },
                          "encodingFormat": {
                            "example": "image/jpeg"
                          }
                        },
                        "x-parser-schema-id": "<anonymous-schema-276>"
                      }
                    ],
                    "x-parser-schema-id": "<anonymous-schema-271>"
                  }
                ]
              },
              "logo": {
                "description": "a logo associated with the organization.",
                "items": {
                  "allOf": [
                    {
                      "type": "object",
                      "title": "DigitalDocument",
                      "x-range": "DigitalDocument",
                      "description": "an electronic file.",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "DigitalDocument"
                          ],
                          "x-parser-schema-id": "<anonymous-schema-621>"
                        },
                        "id": {
                          "type": "string",
                          "example": "http://user.example.com/public/logo/archive.zip",
                          "x-parser-schema-id": "<anonymous-schema-622>"
                        },
                        "name": {
                          "type": "string",
                          "description": "document name or title",
                          "example": "archive.zip",
                          "x-parser-schema-id": "<anonymous-schema-623>"
                        },
                        "encodingFormat": {
                          "type": "string",
                          "description": "[ISO Media Type](https://www.iana.org/assignments/media-types/media-types.xhtml)",
                          "example": "application/zip",
                          "x-parser-schema-id": "<anonymous-schema-624>"
                        },
                        "about": {
                          "type": "object",
                          "description": "subject of the Document",
                          "x-range": "Thing",
                          "example": {
                            "type": "RealEstateTransaction",
                            "identifier": {
                              "bmsTransactionId": "xxxx"
                            }
                          },
                          "x-parser-schema-id": "<anonymous-schema-625>"
                        },
                        "url": {
                          "type": "string",
                          "description": "public URL of the object",
                          "example": "https://example.com",
                          "x-parser-schema-id": "<anonymous-schema-626>"
                        }
                      },
                      "x-parser-schema-id": "DigitalDocument"
                    },
                    {
                      "description": "an associated logo",
                      "type": "object"
                    }
                  ],
                  "type": "object"
                },
                "type": "array",
                "x-range": [
                  "ImageObject",
                  "DigitalDocument"
                ]
              },
              "name": {
                "description": "Name or DBA.",
                "type": "string"
              },
              "parentOrganization": {
                "items": {
                  "format": "uri",
                  "type": "string"
                },
                "type": "array"
              },
              "subOrganization": {
                "description": "a child organization",
                "x-range": [
                  "RealEstateOrganization"
                ],
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uri",
                  "example": "http://org.example.com/profile/card#me"
                }
              },
              "telephone": {
                "type": "string",
                "description": "Primary phone number.",
                "example": "+15558675309",
                "x-parser-schema-id": "<anonymous-schema-128>"
              },
              "type": {
                "enum": [
                  "Organization"
                ],
                "type": "string"
              },
              "url": {
                "description": "primary website/url for the entity.",
                "format": "uri",
                "type": "string"
              }
            },
            "x-parser-schema-id": "<anonymous-schema-412>"
          }
        ],
        "x-parser-schema-id": "Organization"
      },
      "OrganizationRole": {
        "title": "OrganizationRole",
        "type": "object",
        "description": "describes a role played by a member and a group or organization.",
        "properties": {
          "type": {
            "type": "string",
            "description": "a role played by the member in the memberOf group",
            "enum": [
              "OrganizationRole"
            ],
            "x-parser-schema-id": "<anonymous-schema-391>"
          },
          "roleName": {
            "type": "string",
            "description": "the role name",
            "example": "Owner",
            "x-parser-schema-id": "<anonymous-schema-392>"
          },
          "memberOf": {
            "description": "the org or group where the role is performed",
            "type": "object",
            "example": {
              "type": "RealEstateOrganization",
              "id": "http://orgid.example.com/profile/card#me"
            },
            "x-parser-schema-id": "<anonymous-schema-393>"
          },
          "member": {
            "description": "member object or id",
            "type": "string",
            "format": "uri",
            "example": "https://memberid.example.com/profile/card#me",
            "x-parser-schema-id": "<anonymous-schema-394>"
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "description": "date the member began performing this role",
            "x-parser-schema-id": "<anonymous-schema-395>"
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "description": "date the member stopped performing the role",
            "x-parser-schema-id": "<anonymous-schema-396>"
          }
        },
        "x-parser-schema-id": "OrganizationRole"
      },
      "Permit": {
        "title": "Permit",
        "description": "A permit issued by an organization to an individual or business.",
        "type": "object",
        "x-hasSubclass": [
          "RealEstateLicense"
        ],
        "properties": {
          "type": {
            "type": "string",
            "description": "Permit type.",
            "enum": [
              "Permit"
            ],
            "x-parser-schema-id": "<anonymous-schema-676>"
          },
          "name": {
            "type": "string",
            "description": "Common or display value of the Permit.",
            "example": "DRE Number",
            "x-parser-schema-id": "<anonymous-schema-677>"
          },
          "issuedBy": {
            "type": "object",
            "x-range": "Organization",
            "description": "The issuing authority",
            "example": {
              "type": "State",
              "name": "California"
            },
            "x-parser-schema-id": "<anonymous-schema-678>"
          },
          "issuedThrough": {
            "type": "object",
            "description": "the service through which the permit was granted",
            "example": {
              "type": "Service",
              "name": "Department of Real Estate"
            },
            "x-parser-schema-id": "<anonymous-schema-679>"
          },
          "validIn": {
            "type": "object",
            "x-range": "Place",
            "x-parser-schema-id": "<anonymous-schema-680>"
          },
          "validFrom": {
            "type": "string",
            "format": "date-time",
            "description": "start date",
            "x-parser-schema-id": "<anonymous-schema-681>"
          },
          "validUntil": {
            "type": "string",
            "format": "date-time",
            "description": "end date",
            "x-parser-schema-id": "<anonymous-schema-682>"
          }
        },
        "x-parser-schema-id": "Permit"
      },
      "Person": {
        "title": "Person",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "x-parser-schema-id": "<anonymous-schema-95>"
          },
          "affiliation": {
            "description": "An organization that this person is affiliated with",
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri",
              "example": "https://example.com/profile/card#me",
              "x-parser-schema-id": "<anonymous-schema-97>"
            },
            "x-parser-schema-id": "<anonymous-schema-96>"
          },
          "address": {
            "type": "array",
            "items": {
              "$id": "http://realestate.yodata.me/schemas/PostalAddress.yaml",
              "title": "PostalAddress",
              "type": "object",
              "description": "A physical address.",
              "properties": {
                "type": {
                  "type": "string",
                  "const": "PostalAddress",
                  "x-parser-schema-id": "<anonymous-schema-99>"
                },
                "streetAddress": {
                  "type": "string",
                  "description": "the street number and name.",
                  "x-faker": "address.streetAddress",
                  "examples": [
                    "5046 Ottis Point",
                    "166 Marion Burg",
                    "93044 Haley Stream"
                  ],
                  "x-parser-schema-id": "<anonymous-schema-100>"
                },
                "postOfficeBoxNumber": {
                  "type": "string",
                  "description": "The post office box number for PO box addresses.",
                  "x-faker": "address.secondaryAddress",
                  "examples": [
                    "Box 1234",
                    "Apt. 161",
                    "Apt. 623"
                  ],
                  "x-parser-schema-id": "<anonymous-schema-101>"
                },
                "addressRegion": {
                  "type": "string",
                  "description": "State or Province.",
                  "x-faker": "address.state",
                  "examples": [
                    "New Jersey",
                    "California",
                    "MI",
                    null
                  ],
                  "x-parser-schema-id": "<anonymous-schema-102>"
                },
                "addressLocality": {
                  "type": "string",
                  "description": "City, Township.",
                  "x-faker": "address.city",
                  "examples": [
                    "Gotham City",
                    "Kulasmouth",
                    "Heidistad",
                    "Altamonte Springs",
                    "West Ahmed",
                    "Blaiseview"
                  ],
                  "x-parser-schema-id": "<anonymous-schema-103>"
                },
                "postalCode": {
                  "type": "string",
                  "description": "Zip/Post Code",
                  "x-faker": "address.zipCode",
                  "examples": [
                    "10010",
                    "38859",
                    "40387",
                    "50239-7698",
                    null
                  ],
                  "x-parser-schema-id": "<anonymous-schema-104>"
                },
                "addressCountry": {
                  "type": "string",
                  "description": "The country. For example, USA. You can also provide the two-letter ISO 3166-1 alpha-2 country code.",
                  "examples": [
                    "USA",
                    "TH",
                    "NZ",
                    "EG",
                    "SJ",
                    "VN"
                  ],
                  "x-faker": "address.countryCode",
                  "x-parser-schema-id": "<anonymous-schema-105>"
                },
                "addressCounty": {
                  "type": "string",
                  "description": "the county (us real estate extension)",
                  "faker": "address.county",
                  "examples": [
                    "Gotham County",
                    "Buckinghamshire",
                    "Borders",
                    null
                  ],
                  "x-parser-schema-id": "<anonymous-schema-106>"
                },
                "addressSubdivision": {
                  "type": "string",
                  "description": "the subdivision or neighborhood (us real estate extension)",
                  "x-faker": "address.streetName",
                  "examples": [
                    "Gotham Heights",
                    "South Kensington",
                    "SOMA (South of Market)",
                    "Nob Hill"
                  ],
                  "x-parser-schema-id": "<anonymous-schema-107>"
                }
              },
              "x-parser-schema-id": "PostalAddress"
            },
            "x-parser-schema-id": "<anonymous-schema-98>"
          },
          "birthDate": {
            "description": "date of birth.",
            "type": "string",
            "format": "date",
            "x-parser-schema-id": "<anonymous-schema-108>"
          },
          "contactPoint": {
            "description": "contact points for the person",
            "type": "array",
            "items": {
              "$id": "htttp://realestate.yodata.me/schema/ContactPoint.json",
              "title": "ContactPoint",
              "description": "A point of contact for the entity. By convention in the real estate domain, ContactPoints\nare preferred over telephone, email, and faxNumber so the ContactPoint.name property can be used to label values\nfor example, Work Telephone, Home, as named contactPoint values.\n",
              "type": "object",
              "required": [
                "type",
                "name"
              ],
              "minProperties": 3,
              "properties": {
                "type": {
                  "type": "string",
                  "const": "ContactPoint",
                  "x-parser-schema-id": "<anonymous-schema-110>"
                },
                "name": {
                  "type": "string",
                  "description": "a label for the contactPoint, i.e. 'Work', or 'Home'",
                  "examples": [
                    "Work",
                    "Home",
                    "Vacation",
                    "Bob's Cell",
                    "Alice's Work"
                  ],
                  "x-parser-schema-id": "<anonymous-schema-111>"
                },
                "telephone": {
                  "type": "string",
                  "x-faker": "phone.phoneNumber",
                  "examples": [
                    "555-555-5555",
                    "555-555-5555 x123",
                    "555-555-5555 ext. 123",
                    "+1-555-555-5555"
                  ],
                  "x-parser-schema-id": "<anonymous-schema-112>"
                },
                "faxNumber": {
                  "type": "string",
                  "x-faker": "phone.phoneNumber",
                  "examples": [
                    "555-555-5555",
                    "555-555-5555 x123",
                    "555-555-5555 ext. 123",
                    "+1-555-555-5555"
                  ],
                  "x-parser-schema-id": "<anonymous-schema-113>"
                },
                "email": {
                  "description": "an email address for the item.",
                  "type": "string",
                  "format": "email",
                  "x-faker": "internet.email",
                  "examples": [
                    "bob@example.com",
                    "alice@example.com"
                  ],
                  "x-parser-schema-id": "<anonymous-schema-114>"
                },
                "url": {
                  "description": "primary URL for the item.",
                  "type": "string",
                  "format": "uri",
                  "example": "https://www.facebook.com/hallandoates",
                  "x-parser-schema-id": "<anonymous-schema-115>"
                }
              },
              "x-parser-schema-id": "ContactPoint"
            },
            "x-parser-schema-id": "<anonymous-schema-109>"
          },
          "email": {
            "type": "string",
            "format": "email",
            "x-faker": "internet.email",
            "x-parser-schema-id": "<anonymous-schema-93>"
          },
          "additionalName": {
            "title": "additionalName",
            "description": "any other name(s) associated with the entity, i.e. nickname, middle name, maiden name, etc. For multiple names, use a comma without space as a separator.",
            "type": "string",
            "examples": [
              "Johnny,John",
              "Prince,The Artist Formerly Known as Prince,The Artist",
              "Babs,Barbara",
              "Katheryn Elizabeth Hudson,Katy Perry",
              "Destiny Hope Cyrus,Miley Cyrus"
            ],
            "x-parser-schema-id": "<anonymous-schema-116>"
          },
          "familyName": {
            "$id": "htttp://realestate.yodata.me/schema/familyName.yaml",
            "type": "string",
            "title": "Family Name",
            "description": "Last Name of a person",
            "x-faker": "name.lastName",
            "maxLength": 50,
            "externalDocs": {
              "description": "Family Name",
              "url": "https://schema.org/familyName"
            },
            "examples": [
              "Smith",
              "Jones",
              "Parker",
              "Monk",
              "Brown",
              "Miller",
              "Davis",
              "Wilson",
              "Fitzgerald",
              "Johnson",
              "Williams"
            ]
          },
          "faxNumber": {
            "type": "string",
            "description": "Do people still use fax machines?",
            "x-faker": "phone.phoneNumber",
            "x-parser-schema-id": "<anonymous-schema-117>"
          },
          "givenName": {
            "type": "string",
            "description": "First Name of a person",
            "x-faker": "name.firstName",
            "examples": [
              "John",
              "Jane",
              "Mary",
              "Joseph",
              "William",
              "David",
              "Richard",
              "Charles",
              "Thomas",
              "Christopher",
              "Daniel",
              "Matthew",
              "Anthony",
              "Donald",
              "Mark",
              "Paul",
              "Steven",
              "Andrew",
              "Kenneth",
              "George",
              "Joshua",
              "Kevin",
              "Brian",
              "Edward",
              "Ronald",
              "Timothy",
              "Jason",
              "Jeffrey",
              "Ryan",
              "Jacob"
            ],
            "x-parser-schema-id": "<anonymous-schema-118>"
          },
          "honorificPrefix": {
            "title": "honorificPrefix",
            "description": "An honorific prefix preceding a Person's name such as Dr/Mrs/Mr.",
            "type": "string",
            "example": "Dr",
            "x-parser-schema-id": "<anonymous-schema-119>"
          },
          "honorificSuffix": {
            "title": "honorificSuffix",
            "description": "An honorific title following a person's name like M.D.",
            "type": "string",
            "example": "Esq",
            "x-parser-schema-id": "<anonymous-schema-120>"
          },
          "jobTitle": {
            "title": "jobTitle",
            "description": "job tiles associated with the item",
            "type": "array",
            "items": {
              "type": "string",
              "x-parser-schema-id": "<anonymous-schema-122>"
            },
            "example": [
              "Chief Data Officer",
              "Sanitation Engineer"
            ],
            "x-parser-schema-id": "<anonymous-schema-121>"
          },
          "knowsLanguage": {
            "description": "languages spoken by the person",
            "type": "array",
            "items": {
              "$id": "htttp://realestate.yodata.me/schema/Language.yaml",
              "description": "a written or spoken Language",
              "title": "Language",
              "type": "object",
              "required": [
                "type",
                "name",
                "additionalName"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "const": "Language",
                  "x-parser-schema-id": "<anonymous-schema-124>"
                },
                "name": {
                  "type": "string",
                  "description": "the display name of the language",
                  "x-parser-schema-id": "<anonymous-schema-125>"
                },
                "additionalName": {
                  "type": "string",
                  "description": "BCP 47 language code",
                  "x-parser-schema-id": "<anonymous-schema-126>"
                }
              },
              "examples": [
                {
                  "type": "Language",
                  "name": "English",
                  "additionalName": "en-us"
                },
                {
                  "type": "Language",
                  "name": "Spanish",
                  "additionalName": "es"
                },
                {
                  "type": "Language",
                  "name": "French",
                  "additionalName": "fr"
                },
                {
                  "type": "Language",
                  "name": "German",
                  "additionalName": "de"
                },
                {
                  "type": "Language",
                  "name": "Italian",
                  "additionalName": "it"
                },
                {
                  "type": "Language",
                  "name": "Japanese",
                  "additionalName": "ja"
                },
                {
                  "type": "Language",
                  "name": "Korean",
                  "additionalName": "ko"
                },
                {
                  "type": "Language",
                  "name": "Portuguese",
                  "additionalName": "pt"
                },
                {
                  "type": "Language",
                  "name": "Russian",
                  "additionalName": "ru"
                },
                {
                  "type": "Language",
                  "name": "Chinese",
                  "additionalName": "zh"
                },
                {
                  "type": "Language",
                  "name": "Arabic",
                  "additionalName": "ar"
                },
                {
                  "type": "Language",
                  "name": "Hindi",
                  "additionalName": "hi"
                },
                {
                  "type": "Language",
                  "name": "Bengali",
                  "additionalName": "bn"
                },
                {
                  "type": "Language",
                  "name": "Portuguese",
                  "additionalName": "pt"
                }
              ],
              "x-parser-schema-id": "Language"
            },
            "x-parser-schema-id": "<anonymous-schema-123>"
          },
          "name": {
            "description": "Full name of the person.",
            "type": "string",
            "x-faker": "name.findName",
            "x-parser-schema-id": "<anonymous-schema-127>"
          },
          "telephone": {
            "type": "string",
            "description": "Primary phone number.",
            "example": "+15558675309",
            "x-parser-schema-id": "<anonymous-schema-128>"
          },
          "worksFor": {
            "type": "string",
            "description": "Organizations the person works for.",
            "x-faker": "company.companyName",
            "x-parser-schema-id": "<anonymous-schema-129>"
          }
        },
        "x-parser-schema-id": "Person"
      },
      "Place": {
        "type": "object",
        "description": "a physical location",
        "title": "Place",
        "x-range": [
          "Place",
          "City",
          "State",
          "PostalCode",
          "GeoCircle",
          "GeoShape"
        ],
        "properties": {
          "type": {
            "type": "string",
            "description": "The item type (Linked-Data @type)",
            "enum": [
              "Place"
            ],
            "x-parser-schema-id": "<anonymous-schema-660>"
          },
          "address": {
            "type": "object",
            "x-range": "PostalAddress",
            "description": "A physical address.",
            "example": {
              "type": "PostalAddress",
              "name": "Home",
              "addressCountry": "USA",
              "addressCounty": "Gotham County",
              "addressLocality": "Gotham City",
              "addressRegion": "New Jersey",
              "addressSubdivision": "Gotham Heights",
              "postalCode": "10010",
              "postOfficeBoxNumber": "Box 1234",
              "streetAddress": "1007 Mountain Gate Rd"
            },
            "x-parser-schema-id": "<anonymous-schema-661>"
          },
          "geo": {
            "type": "object",
            "description": "a geo shape (circle or box)",
            "x-range": [
              "GeoCircle",
              "GeoShape"
            ],
            "example": {
              "type": "GeoShape",
              "geoMidpoint": {
                "type": "GeoCoordinates,",
                "longitude": "73.98",
                "latitude": "40.75"
              },
              "geoRadius": {
                "type": "QuantitativeValue,",
                "value": "10,",
                "unitCode": "mi,",
                "unitText": "miles"
              },
              "box": "(33.5697,-117.775),(33.6018,-117.707)"
            },
            "x-parser-schema-id": "<anonymous-schema-662>"
          }
        },
        "x-parser-schema-id": "Place"
      },
      "Plan": {
        "title": "Plan",
        "type": "object",
        "description": "a collection of related tasks",
        "required": [
          "type",
          "identifier",
          "name"
        ],
        "x-range": "Plan",
        "properties": {
          "type": {
            "const": "Plan",
            "x-parser-schema-id": "<anonymous-schema-160>"
          },
          "identifier": {
            "title": "identifier",
            "type": "object",
            "description": "identifier assigned to a contact by the vendor who originally created the contact",
            "examples": [
              {
                "salesforceid": "0031U00002XW1QWQA1"
              },
              {
                "vendoraid": "123456"
              },
              {
                "originating_system_id": "123456"
              }
            ],
            "x-parser-schema-id": "<anonymous-schema-94>"
          },
          "name": {
            "type": "string",
            "description": "name of the plan",
            "examples": [
              "my awesome plan",
              "annoying but effective plan",
              "plan to take over the world",
              "birthdays and anniversaries plan"
            ],
            "x-parser-schema-id": "<anonymous-schema-155>"
          },
          "description": {
            "type": "string",
            "description": "description of the item",
            "example": "this is the description of my awesome plan",
            "x-parser-schema-id": "<anonymous-schema-161>"
          },
          "member": {
            "type": "array",
            "description": "tasks which make up the plan",
            "items": {
              "title": "Task",
              "type": "object",
              "description": "an action assigned to an agent, typically as part of a set of interdependent tasks in a Plan",
              "x-range": "Task",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "The item type (Linked-Data @type)",
                  "enum": [
                    "Task"
                  ],
                  "x-parser-schema-id": "<anonymous-schema-163>"
                },
                "identifier": {
                  "title": "identifier",
                  "type": "object",
                  "description": "identifier assigned to a contact by the vendor who originally created the contact",
                  "examples": [
                    {
                      "salesforceid": "0031U00002XW1QWQA1"
                    },
                    {
                      "vendoraid": "123456"
                    },
                    {
                      "originating_system_id": "123456"
                    }
                  ],
                  "example": {
                    "redEvent_ID": "23445"
                  },
                  "x-parser-schema-id": "<anonymous-schema-164>"
                },
                "actionStatus": {
                  "example": "PotentialActionStatus",
                  "type": "string",
                  "description": "disposition of the Action at the time of this action message.",
                  "x-range": [
                    "CompletedActionStatus",
                    "FailedActionStatus",
                    "ActiveActionStatus",
                    "PotentialActionStatus"
                  ],
                  "enum": [
                    "CompletedActionStatus",
                    "FailedActionStatus",
                    "ActiveActionStatus",
                    "PotentialActionStatus"
                  ],
                  "x-parser-schema-id": "<anonymous-schema-165>"
                },
                "memberOf": {
                  "type": "object",
                  "x-range": "Plan",
                  "description": "a plan the task is associated with",
                  "example": {
                    "type": "Plan",
                    "identifier": {
                      "redPlan_ID": "xxxx"
                    }
                  },
                  "x-parser-schema-id": "<anonymous-schema-166>"
                },
                "agent": {
                  "type": "object",
                  "description": "the party who completed, or will complete the task",
                  "x-range": [
                    "Person",
                    "Organization",
                    "RealEstateAgent",
                    "Contact"
                  ],
                  "example": {
                    "type": "RealEstateAgent",
                    "id": "http://user.example.com/profile/card#me"
                  },
                  "x-parser-schema-id": "<anonymous-schema-167>"
                },
                "participant": {
                  "x-title": "participant",
                  "x-range": [
                    "Person",
                    "RealEstateAgent",
                    "RealEstateTeam",
                    "RealEstateOrganization"
                  ],
                  "description": "Other co-agents with a direct or indirect interest in the action.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "x-parser-schema-id": "<anonymous-schema-169>"
                  },
                  "example": [
                    {
                      "type": "Contact",
                      "name": "Bruce Wayne",
                      "email": "bruce@example.com",
                      "identifier": {
                        "redContact_GUID": "92d0a096-457e-4643-ace8-fa95b6bdb1c5"
                      }
                    }
                  ],
                  "x-parser-schema-id": "<anonymous-schema-168>"
                },
                "name": {
                  "type": "string",
                  "description": "name or title",
                  "example": "Call Ricky",
                  "x-parser-schema-id": "<anonymous-schema-170>"
                },
                "description": {
                  "type": "string",
                  "description": "task detailed description",
                  "example": "Agenda 1. Something 2. Something Else ...",
                  "x-parser-schema-id": "<anonymous-schema-171>"
                },
                "keywords": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "x-parser-schema-id": "<anonymous-schema-173>"
                  },
                  "x-parser-schema-id": "<anonymous-schema-172>"
                },
                "dateDue": {
                  "description": "the due date-time (ISO 8601 formated)",
                  "type": "string",
                  "format": "date-time",
                  "x-parser-schema-id": "<anonymous-schema-174>"
                },
                "dateCompleted": {
                  "type": "string",
                  "format": "date-time",
                  "description": "date the task was completed",
                  "x-parser-schema-id": "<anonymous-schema-175>"
                },
                "location": {
                  "type": "object",
                  "description": "the physical location where an event takes place",
                  "x-range": [
                    "Place"
                  ],
                  "example": {
                    "type": "Place",
                    "address": {
                      "streetAddress": "1007 Mountain Gate Rd",
                      "addressLocality": "Gotham City",
                      "addressRegion": "NJ",
                      "postalCode": "10007",
                      "addressCounty": "Gotham addressCounty",
                      "addressSubdivision": "Gotham Heights"
                    }
                  },
                  "x-parser-schema-id": "<anonymous-schema-176>"
                }
              },
              "x-parser-schema-id": "Task"
            },
            "x-parser-schema-id": "<anonymous-schema-162>"
          },
          "creator": {
            "title": "creator",
            "description": "the item creator",
            "x-range": [
              "Person",
              "Organization"
            ],
            "example": "http://agent.example.com/profile/card#me",
            "x-parser-schema-id": "<anonymous-schema-177>"
          },
          "dateCreated": {
            "$id": "http://realestate.yodata.me/schema/dateCreated.yaml",
            "type": "string",
            "format": "date-time",
            "title": "Date Created",
            "description": "The date on which the item was created."
          },
          "dateModified": {
            "description": "The date on which the item was most recently modified or when the item's entry was modified within a DataFeed.",
            "type": "string",
            "format": "date-time",
            "x-parser-schema-id": "<anonymous-schema-136>"
          },
          "dateCompleted": {
            "description": "The date on which the item was created.",
            "type": "string",
            "format": "date-time",
            "x-parser-schema-id": "<anonymous-schema-178>"
          }
        },
        "x-parser-schema-id": "Plan"
      },
      "PostalAddress": {
        "$id": "http://realestate.yodata.me/schemas/PostalAddress.yaml",
        "title": "PostalAddress",
        "type": "object",
        "description": "A physical address.",
        "properties": {
          "type": {
            "type": "string",
            "const": "PostalAddress",
            "x-parser-schema-id": "<anonymous-schema-99>"
          },
          "streetAddress": {
            "type": "string",
            "description": "the street number and name.",
            "x-faker": "address.streetAddress",
            "examples": [
              "5046 Ottis Point",
              "166 Marion Burg",
              "93044 Haley Stream"
            ],
            "x-parser-schema-id": "<anonymous-schema-100>"
          },
          "postOfficeBoxNumber": {
            "type": "string",
            "description": "The post office box number for PO box addresses.",
            "x-faker": "address.secondaryAddress",
            "examples": [
              "Box 1234",
              "Apt. 161",
              "Apt. 623"
            ],
            "x-parser-schema-id": "<anonymous-schema-101>"
          },
          "addressRegion": {
            "type": "string",
            "description": "State or Province.",
            "x-faker": "address.state",
            "examples": [
              "New Jersey",
              "California",
              "MI",
              null
            ],
            "x-parser-schema-id": "<anonymous-schema-102>"
          },
          "addressLocality": {
            "type": "string",
            "description": "City, Township.",
            "x-faker": "address.city",
            "examples": [
              "Gotham City",
              "Kulasmouth",
              "Heidistad",
              "Altamonte Springs",
              "West Ahmed",
              "Blaiseview"
            ],
            "x-parser-schema-id": "<anonymous-schema-103>"
          },
          "postalCode": {
            "type": "string",
            "description": "Zip/Post Code",
            "x-faker": "address.zipCode",
            "examples": [
              "10010",
              "38859",
              "40387",
              "50239-7698",
              null
            ],
            "x-parser-schema-id": "<anonymous-schema-104>"
          },
          "addressCountry": {
            "type": "string",
            "description": "The country. For example, USA. You can also provide the two-letter ISO 3166-1 alpha-2 country code.",
            "examples": [
              "USA",
              "TH",
              "NZ",
              "EG",
              "SJ",
              "VN"
            ],
            "x-faker": "address.countryCode",
            "x-parser-schema-id": "<anonymous-schema-105>"
          },
          "addressCounty": {
            "type": "string",
            "description": "the county (us real estate extension)",
            "faker": "address.county",
            "examples": [
              "Gotham County",
              "Buckinghamshire",
              "Borders",
              null
            ],
            "x-parser-schema-id": "<anonymous-schema-106>"
          },
          "addressSubdivision": {
            "type": "string",
            "description": "the subdivision or neighborhood (us real estate extension)",
            "x-faker": "address.streetName",
            "examples": [
              "Gotham Heights",
              "South Kensington",
              "SOMA (South of Market)",
              "Nob Hill"
            ],
            "x-parser-schema-id": "<anonymous-schema-107>"
          }
        },
        "x-parser-schema-id": "PostalAddress"
      },
      "PotentialActionStatus": {
        "type": "string",
        "description": "A description of an action that is allowed and might happen in the future.",
        "example": "PotentialActionStatus",
        "x-parser-schema-id": "PotentialActionStatus"
      },
      "PriceSpecification": {
        "type": "object",
        "title": "PriceSpecification",
        "x-range": "PriceSpecification",
        "description": "a price offered for transfer of ownership of an item",
        "properties": {
          "type": {
            "type": "string",
            "description": "PriceSpecification",
            "enum": [
              "PriceSpecification"
            ],
            "x-parser-schema-id": "<anonymous-schema-505>"
          },
          "minPrice": {
            "type": "number",
            "description": "the low price offered if price is a range.",
            "example": 75000,
            "x-parser-schema-id": "<anonymous-schema-506>"
          },
          "maxPrice": {
            "type": "number",
            "description": "the high price offered if price is a range.",
            "example": 100000,
            "x-parser-schema-id": "<anonymous-schema-507>"
          },
          "price": {
            "type": "number",
            "description": "the offer price.",
            "example": 75000,
            "x-parser-schema-id": "<anonymous-schema-508>"
          },
          "priceCurrency": {
            "type": "string",
            "description": "use ISO4217",
            "example": "USD",
            "x-parser-schema-id": "<anonymous-schema-509>"
          }
        },
        "x-parser-schema-id": "PriceSpecification"
      },
      "Profile": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uri",
            "description": "document uri",
            "example": "https://user.example.com/profile/card",
            "x-parser-schema-id": "<anonymous-schema-683>"
          },
          "type": {
            "type": "string",
            "enum": [
              "ProfileDocument"
            ],
            "x-parser-schema-id": "<anonymous-schema-684>"
          },
          "#me": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uri",
                "example": "https://user.example.com/profile/card#me",
                "x-parser-schema-id": "<anonymous-schema-686>"
              },
              "type": {
                "type": "string",
                "example": "SoftwareApplication",
                "x-parser-schema-id": "<anonymous-schema-687>"
              },
              "inbox": {
                "description": "discoverable uri to your LDN inbox",
                "type": "string",
                "example": "/inbox/",
                "x-parser-schema-id": "<anonymous-schema-688>"
              },
              "outbox": {
                "description": "discoverable uri to your LDN outbox",
                "type": "string",
                "example": "/outbox/",
                "x-parser-schema-id": "<anonymous-schema-689>"
              },
              "storage": {
                "description": "uri to your linked-data storage root",
                "type": "string",
                "example": "/",
                "x-parser-schema-id": "<anonymous-schema-690>"
              },
              "preferencesFile": {
                "description": "discoverable uri for shared application preferences",
                "type": "string",
                "example": "/settings/prefs",
                "x-parser-schema-id": "<anonymous-schema-691>"
              },
              "account": {
                "description": "discoverable solid:account root",
                "type": "string",
                "example": "/",
                "x-parser-schema-id": "<anonymous-schema-692>"
              },
              "privateTypeIndex": {
                "description": "type index for your private use",
                "type": "string",
                "example": "/settings/privateTypeIndex",
                "x-parser-schema-id": "<anonymous-schema-693>"
              },
              "publicTypeIndex": {
                "description": "shared, discoverable type index",
                "type": "string",
                "example": "/settings/publicTypeIndex",
                "x-parser-schema-id": "<anonymous-schema-694>"
              }
            },
            "x-parser-schema-id": "<anonymous-schema-685>"
          }
        },
        "x-parser-schema-id": "Profile"
      },
      "ProgramMembership": {
        "title": "ProgramMembership",
        "description": "describes membership relation between a member (Person) and a MarketingProgram",
        "type": "object",
        "properties": {
          "type": {
            "const": "ProgramMembership",
            "x-parser-schema-id": "<anonymous-schema-651>"
          },
          "role": {
            "type": "string",
            "enum": [
              "member",
              "owner"
            ],
            "x-parser-schema-id": "<anonymous-schema-652>"
          },
          "member": {
            "type": "object",
            "properties": {
              "type": {
                "const": "Contact",
                "x-parser-schema-id": "<anonymous-schema-654>"
              },
              "name": {
                "type": "string",
                "x-parser-schema-id": "<anonymous-schema-655>"
              },
              "identifier": {
                "title": "identifier",
                "type": "object",
                "description": "identifier assigned to a contact by the vendor who originally created the contact",
                "examples": [
                  {
                    "salesforceid": "0031U00002XW1QWQA1"
                  },
                  {
                    "vendoraid": "123456"
                  },
                  {
                    "originating_system_id": "123456"
                  }
                ],
                "x-parser-schema-id": "<anonymous-schema-94>"
              }
            },
            "x-parser-schema-id": "<anonymous-schema-653>"
          },
          "memberOf": {
            "type": "object",
            "properties": {
              "type": {
                "const": "MarketingProgram",
                "x-parser-schema-id": "<anonymous-schema-657>"
              },
              "name": {
                "type": "string",
                "example": "Market Activity Report 508 Homewood Ave",
                "x-parser-schema-id": "<anonymous-schema-658>"
              },
              "identifier": {
                "title": "identifier",
                "type": "object",
                "description": "identifier assigned to a contact by the vendor who originally created the contact",
                "examples": [
                  {
                    "salesforceid": "0031U00002XW1QWQA1"
                  },
                  {
                    "vendoraid": "123456"
                  },
                  {
                    "originating_system_id": "123456"
                  }
                ],
                "x-parser-schema-id": "<anonymous-schema-94>"
              }
            },
            "x-parser-schema-id": "<anonymous-schema-656>"
          }
        },
        "x-parser-schema-id": "ProgramMembership"
      },
      "PropertyListing": {
        "title": "PropertyListing",
        "type": "object",
        "x-range": "PropertyListing",
        "description": "a real estate property listed for sale",
        "properties": {
          "type": {
            "enum": [
              "PropertyListing"
            ],
            "type": "string",
            "x-parser-schema-id": "<anonymous-schema-263>"
          },
          "addressCountry": {
            "type": "string",
            "description": "two-letter ISO 3166-1 alpha-2 country code",
            "example": "US",
            "enum": [
              "CA",
              "DE",
              "GR",
              "IN",
              "IT",
              "MX",
              "PE",
              "PT",
              "ES",
              "AE",
              "GB",
              "US"
            ],
            "x-parser-schema-id": "<anonymous-schema-264>"
          },
          "addressLocality": {
            "type": "string",
            "description": "City, Township.",
            "example": "Gotham City",
            "maxLength": 50,
            "x-parser-schema-id": "<anonymous-schema-265>"
          },
          "addressRegion": {
            "type": "string",
            "description": "State or Province.",
            "example": "New Jersey",
            "maxLength": 3,
            "x-parser-schema-id": "<anonymous-schema-266>"
          },
          "buyerAgent": {
            "description": "the buyer's RealEstateAgent",
            "example": {
              "email": "butch.byers@example.com",
              "identifier": {
                "agentKey": "xxxx"
              },
              "name": "Butch Byers",
              "type": "RealEstateAgent"
            },
            "type": "object",
            "x-range": "RealEstateAgent",
            "x-parser-schema-id": "<anonymous-schema-267>"
          },
          "buyerOffice": {
            "description": "the buyer's RealEstateOffice",
            "example": {
              "email": "gcr@example.com",
              "identifier": {
                "officeKey": "grc1"
              },
              "name": "Gotham City Real Estate",
              "type": "RealEstateOffice"
            },
            "type": "object",
            "x-range": "RealEstateOffice",
            "x-parser-schema-id": "<anonymous-schema-268>"
          },
          "closeDate": {
            "title": "closeDate",
            "type": "string",
            "format": "date-time",
            "description": "With for-sale listings, the date the purchase agreement was fulfilled. With lease listings, the date the requirements were fulfilled, such as contract and/or deposit.",
            "x-range": "DateTime",
            "x-parser-schema-id": "<anonymous-schema-269>"
          },
          "image": {
            "title": "image",
            "description": "an ImageObject or URI reference to an image on the web.",
            "type": "array",
            "x-range": [
              "ImageObject"
            ],
            "items": [
              {
                "type": "object",
                "allOf": [
                  {
                    "title": "MediaObject",
                    "description": "an image, video or document availble for download",
                    "x-subclass": [
                      "ImageObject",
                      "DigitalDocument"
                    ],
                    "allOf": [
                      {
                        "$id": "http://realestate.yodata.me/schema/Thing",
                        "type": "object",
                        "title": "Thing",
                        "summary": "The root type of all Things.",
                        "required": [
                          "type"
                        ],
                        "propertyNames": {
                          "pattern": "^[a-z@$][a-zA-Z0-9-_]+$",
                          "x-parser-schema-id": "<anonymous-schema-274>"
                        },
                        "properties": {
                          "type": {
                            "type": "string",
                            "pattern": "^[A-Z][a-zA-Z0-9]+$",
                            "description": "The item type (Linked-Data @type)",
                            "x-parser-schema-id": "<anonymous-schema-272>"
                          },
                          "@id": {
                            "type": "string",
                            "format": "uri",
                            "description": "the liked data uri for the Thing",
                            "x-parser-schema-id": "<anonymous-schema-273>"
                          }
                        },
                        "x-parser-schema-id": "Thing"
                      },
                      {
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "MediaObject",
                              "ImageObject",
                              "DigitalDocument"
                            ]
                          },
                          "id": {
                            "description": "the URL to access the item.",
                            "example": "http://user.example.com/public/logo/fileName.zip",
                            "type": "string",
                            "format": "uri"
                          },
                          "name": {
                            "type": "string",
                            "description": "the file name of the object.",
                            "example": "fileName.zip"
                          },
                          "encodingFormat": {
                            "type": "string",
                            "description": "MIME type",
                            "example": "application/zip"
                          },
                          "about": {
                            "type": "string",
                            "format": "uri",
                            "description": "URI to the subject of the image or logo",
                            "example": "http://user.example.com/profile/card#me"
                          },
                          "url": {
                            "type": "string",
                            "format": "uri",
                            "description": "URL of the image content",
                            "example": "http://user.example.com/public/profile/image.jpg"
                          }
                        },
                        "x-parser-schema-id": "<anonymous-schema-275>"
                      }
                    ],
                    "x-parser-schema-id": "MediaObject"
                  },
                  {
                    "title": "ImageObject",
                    "x-range": "ImageObject",
                    "properties": {
                      "type": {
                        "enum": [
                          "ImageObject"
                        ],
                        "example": "ImageObject"
                      },
                      "id": {
                        "example": "http://user.example.com/public/logo/image.jpg"
                      },
                      "name": {
                        "example": "image.jpg"
                      },
                      "encodingFormat": {
                        "example": "image/jpeg"
                      }
                    },
                    "x-parser-schema-id": "<anonymous-schema-276>"
                  }
                ],
                "x-parser-schema-id": "<anonymous-schema-271>"
              }
            ],
            "x-parser-schema-id": "<anonymous-schema-270>"
          },
          "internetAddressDisplayYN": {
            "enum": [
              "Y",
              "N"
            ],
            "type": "string",
            "x-parser-schema-id": "<anonymous-schema-277>"
          },
          "latitude": {
            "type": "number",
            "description": "The latitude of a location.",
            "x-title": "latitude",
            "example": 40.75,
            "x-parser-schema-id": "<anonymous-schema-278>"
          },
          "listingAgent": {
            "type": "object",
            "description": "the agent/broker representing the seller in a real estate transaction",
            "x-range": [
              "RealEstateAgent",
              "RealEstateOrganization"
            ],
            "example": {
              "type": "RealEstateAgent",
              "name": "Lori Listagent",
              "telephone": "1-252-574-0160",
              "email": "lorilistagent@example.com"
            },
            "x-parser-schema-id": "<anonymous-schema-279>"
          },
          "listingContractDate": {
            "description": "The effective date of the agreement between the seller and the seller's broker.",
            "format": "date-time",
            "type": "string",
            "x-parser-schema-id": "<anonymous-schema-280>"
          },
          "listingId": {
            "description": "the local identifier for the listing",
            "example": "GOTHAM-MLS+12345",
            "type": "string",
            "x-parser-schema-id": "<anonymous-schema-281>"
          },
          "listingOffice": {
            "description": "the listing office",
            "example": {
              "name": "Gotham City Real Estate",
              "type": "RealEstateOffice"
            },
            "type": "object",
            "x-range": "RealEstateOrganization",
            "x-parser-schema-id": "<anonymous-schema-282>"
          },
          "listingOriginatingSystem": {
            "description": "The place where the item is originally input by the user.",
            "example": {
              "identifier": {
                "bhhsmlsid": "xxxx",
                "resoouid": "not-yet-available"
              },
              "name": "MLSListings",
              "type": "MultipleListingService"
            },
            "type": "object",
            "x-range": "MultipleListingService",
            "x-subPropertyOf": "instrument",
            "x-parser-schema-id": "<anonymous-schema-283>"
          },
          "listingPrice": {
            "type": "object",
            "x-range": "PriceSpecification",
            "example": {
              "type": "PriceSpecification",
              "price": 75000,
              "priceCurrency": "USD"
            },
            "x-parser-schema-id": "<anonymous-schema-284>"
          },
          "listingStatus": {
            "enum": [
              "Active",
              "Pending",
              "Sold",
              "Canceled",
              "Prelisted",
              "OffMarket",
              "Private"
            ],
            "type": "string",
            "x-parser-schema-id": "<anonymous-schema-285>"
          },
          "livingArea": {
            "description": "property indoor space",
            "example": {
              "type": "QuantitativeValue",
              "unitCode": "SqFt",
              "unitText": "Square Feet",
              "value": 1500
            },
            "type": "object",
            "x-range": "QuantitativeValue",
            "x-parser-schema-id": "<anonymous-schema-286>"
          },
          "longitude": {
            "type": "number",
            "description": "The longitude of a location.",
            "x-title": "longitude",
            "example": 73.98,
            "x-parser-schema-id": "<anonymous-schema-287>"
          },
          "lotSize": {
            "description": "outdoor space minValue, maxValue",
            "example": {
              "type": "QuantitativeValue",
              "unitCode": "AC",
              "unitText": "Acres",
              "value": 0.5
            },
            "type": "object",
            "x-range": "QuantitativeValue",
            "x-parser-schema-id": "<anonymous-schema-288>"
          },
          "numberOfBathrooms": {
            "description": "the number of bathrooms",
            "example": "2",
            "type": "string",
            "x-parser-schema-id": "<anonymous-schema-289>"
          },
          "numberOfBedrooms": {
            "description": "the number of bedrooms",
            "example": "3",
            "type": "string",
            "x-parser-schema-id": "<anonymous-schema-290>"
          },
          "numberOfRooms": {
            "description": "the total number of rooms in the building",
            "example": "7",
            "type": "string",
            "x-parser-schema-id": "<anonymous-schema-291>"
          },
          "originatingSystemKey": {
            "description": "the listing identifier from the original MLS, aka MLSID.",
            "example": 12345,
            "type": "string",
            "x-parser-schema-id": "<anonymous-schema-292>"
          },
          "originatingSystemName": {
            "description": "the name of the MLS where the listing was originally input",
            "example": "GOTHAM-MLS",
            "type": "string",
            "x-parser-schema-id": "<anonymous-schema-293>"
          },
          "postalCode": {
            "type": "string",
            "description": "Zip/Post Code",
            "example": "10010",
            "maxLength": 12,
            "x-parser-schema-id": "<anonymous-schema-294>"
          },
          "propertySubType": {
            "title": "propertySubType",
            "type": "string",
            "x-range": "PropertySubType",
            "description": "RESO property sub-type (see range for allowed values)",
            "enum": [
              "ApartmentPropertyType",
              "BoatSlipPropertyType",
              "CabinPropertyType",
              "CondominiumPropertyType",
              "DeededParkingPropertyType",
              "DuplexPropertyType",
              "FarmPropertyType",
              "ManufacturedHomePropertyType",
              "ManufacturedOnLandPropertyType",
              "MobileHomePropertyType",
              "OwnYourOwnPropertyType",
              "QuadruplexPropertyType",
              "RanchPropertyType",
              "SingleFamilyPropertyType",
              "StockCooperativePropertyType",
              "TimesharePropertyType",
              "TownhousePropertyType",
              "TriplexPropertyType",
              "AgriculturePropertyType",
              "BusinessPropertyType",
              "HotelMotelPropertyType",
              "IndustrialPropertyType",
              "MixedUsePropertyType",
              "MultiFamilyPropertyType",
              "OfficePropertyType",
              "RetailPropertyType",
              "UnimprovedLandPropertyType",
              "WarehousePropertyType"
            ],
            "x-parser-schema-id": "<anonymous-schema-295>"
          },
          "propertyType": {
            "type": "string",
            "description": "RESO property type (see range for allowed values)",
            "x-range": "PropertyType",
            "minLength": 4,
            "maxLength": 4,
            "enum": [
              "RESI",
              "RLSE",
              "RINC",
              "LAND",
              "MOBI",
              "FARM",
              "COMS",
              "COML",
              "BUSO"
            ],
            "x-parser-schema-id": "<anonymous-schema-296>"
          },
          "purchaseContractDate": {
            "description": "With for-sale listings, the date an offer was accepted and the listing was no longer on market. With lease listings this may represent a meeting of the minds to lease, but some contractual requirements are yet to be fulfilled, such as contract signing or receipt of the deposit.",
            "format": "date-time",
            "type": "string",
            "x-parser-schema-id": "<anonymous-schema-297>"
          },
          "stories": {
            "type": "number",
            "description": "he number of floors in the property",
            "example": 2,
            "x-parser-schema-id": "<anonymous-schema-298>"
          },
          "streetAddress": {
            "type": "string",
            "description": "the street address",
            "example": "1007 Mountain Gate Rd",
            "maxLength": 75,
            "x-parser-schema-id": "<anonymous-schema-299>"
          },
          "universalPropertyId": {
            "type": "string",
            "title": "universalPropertyId",
            "description": "The Universal Property Identifier is a unique identifier for all real property in the US and Canada.  It is based on country and local identification methods and is limited to real property.  For cases such as shares of real property, units, and other more granular cases, please utilize the UniversalPropertySubId.",
            "example": "US-04015-N-R-11022331-N",
            "x-parser-schema-id": "<anonymous-schema-300>"
          },
          "url": {
            "title": "url",
            "type": "string",
            "format": "uri",
            "description": "URL of the item.",
            "example": "https://www.example.com/homedetails/1007-Mountain-Gate-Rd-Gotham-City-Gotham/10007",
            "x-parser-schema-id": "<anonymous-schema-301>"
          },
          "yearBuilt": {
            "type": "number",
            "description": "the year the structure was created",
            "example": 1988,
            "x-parser-schema-id": "<anonymous-schema-302>"
          }
        },
        "x-parser-schema-id": "PropertyListing"
      },
      "PropertySearch": {
        "title": "PropertySearch",
        "x-range": "PropertySearch",
        "type": "object",
        "description": "property search parameters",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "PropertySearch"
            ],
            "x-parser-schema-id": "<anonymous-schema-695>"
          },
          "name": {
            "type": "string",
            "description": "name of the search, input by the user or generated automatically",
            "example": "3+ beds in Gotham City",
            "x-parser-schema-id": "<anonymous-schema-696>"
          },
          "description": {
            "type": "string",
            "description": "optional search description input by the user or generated automatically",
            "example": "((city=Gotham),(Bedrooms=3+))",
            "x-parser-schema-id": "<anonymous-schema-697>"
          },
          "propertyType": {
            "type": "string",
            "description": "RESO property type (see range for allowed values)",
            "x-range": "PropertyType",
            "minLength": 4,
            "maxLength": 4,
            "enum": [
              "RESI",
              "RLSE",
              "RINC",
              "LAND",
              "MOBI",
              "FARM",
              "COMS",
              "COML",
              "BUSO"
            ],
            "x-parser-schema-id": "<anonymous-schema-296>"
          },
          "propertySubType": {
            "title": "PropertySubType",
            "type": "object",
            "description": "Property sub-type enumeration values derived from RESO data dictionary.",
            "example": {
              "propertySubType": "ApartmentPropertyType"
            },
            "properties": {
              "ApartmentPropertyType": {
                "type": "string",
                "description": "Apartment",
                "x-parser-schema-id": "<anonymous-schema-698>"
              },
              "BoatSlipPropertyType": {
                "type": "string",
                "description": "Boat Slip",
                "x-parser-schema-id": "<anonymous-schema-699>"
              },
              "CabinPropertyType": {
                "type": "string",
                "description": "Cabin",
                "x-parser-schema-id": "<anonymous-schema-700>"
              },
              "CondominiumPropertyType": {
                "type": "string",
                "description": "Condominium",
                "x-parser-schema-id": "<anonymous-schema-701>"
              },
              "DeededParkingPropertyType": {
                "type": "string",
                "description": "Deeded Parking",
                "x-parser-schema-id": "<anonymous-schema-702>"
              },
              "DuplexPropertyType": {
                "type": "string",
                "description": "Residential Duplex",
                "x-parser-schema-id": "<anonymous-schema-703>"
              },
              "FarmPropertyType": {
                "type": "string",
                "description": "Farm Property Type",
                "x-parser-schema-id": "<anonymous-schema-704>"
              },
              "ManufacturedHomePropertyType": {
                "type": "string",
                "description": "Manufactured Home",
                "x-parser-schema-id": "<anonymous-schema-705>"
              },
              "ManufacturedOnLandPropertyType": {
                "type": "string",
                "description": "Manufactured Home + Land",
                "x-parser-schema-id": "<anonymous-schema-706>"
              },
              "MobileHomePropertyType": {
                "type": "string",
                "description": "Mobile Home",
                "x-parser-schema-id": "<anonymous-schema-707>"
              },
              "OwnYourOwnPropertyType": {
                "type": "string",
                "description": "RESO Own Your Own Property",
                "x-parser-schema-id": "<anonymous-schema-708>"
              },
              "QuadruplexPropertyType": {
                "type": "string",
                "description": "A residential property with four units",
                "x-parser-schema-id": "<anonymous-schema-709>"
              },
              "RanchPropertyType": {
                "type": "string",
                "description": "A Ranch",
                "x-parser-schema-id": "<anonymous-schema-710>"
              },
              "SingleFamilyPropertyType": {
                "type": "string",
                "description": "Single Family Residence",
                "x-parser-schema-id": "<anonymous-schema-711>"
              },
              "StockCooperativePropertyType": {
                "type": "string",
                "description": "Stock Co-op.",
                "x-parser-schema-id": "<anonymous-schema-712>"
              },
              "TimesharePropertyType": {
                "type": "string",
                "description": "Timeshare",
                "x-parser-schema-id": "<anonymous-schema-713>"
              },
              "TownhousePropertyType": {
                "type": "string",
                "description": "Townhouse",
                "x-parser-schema-id": "<anonymous-schema-714>"
              },
              "TriplexPropertyType": {
                "type": "string",
                "description": "A residential property with 3 separate units",
                "x-parser-schema-id": "<anonymous-schema-715>"
              },
              "AgriculturePropertyType": {
                "type": "string",
                "description": "An agriculture property.",
                "x-parser-schema-id": "<anonymous-schema-716>"
              },
              "BusinessPropertyType": {
                "type": "string",
                "description": "a residential property zoned for business operation",
                "x-parser-schema-id": "<anonymous-schema-717>"
              },
              "HotelMotelPropertyType": {
                "type": "string",
                "description": "Hotel property for sale.",
                "x-parser-schema-id": "<anonymous-schema-718>"
              },
              "IndustrialPropertyType": {
                "type": "string",
                "description": "Industrial property",
                "x-parser-schema-id": "<anonymous-schema-719>"
              },
              "MixedUsePropertyType": {
                "type": "string",
                "description": "Residential/Commercial property",
                "x-parser-schema-id": "<anonymous-schema-720>"
              },
              "MultiFamilyPropertyType": {
                "type": "string",
                "description": "A single building with multiple units",
                "x-parser-schema-id": "<anonymous-schema-721>"
              },
              "OfficePropertyType": {
                "type": "string",
                "description": "An office.",
                "x-parser-schema-id": "<anonymous-schema-722>"
              },
              "RetailPropertyType": {
                "type": "string",
                "description": "Retail property",
                "x-parser-schema-id": "<anonymous-schema-723>"
              },
              "UnimprovedLandPropertyType": {
                "type": "string",
                "description": "Land for sale",
                "x-parser-schema-id": "<anonymous-schema-724>"
              },
              "WarehousePropertyType": {
                "type": "string",
                "description": "A Warehouse property type.",
                "x-parser-schema-id": "<anonymous-schema-725>"
              }
            },
            "x-parser-schema-id": "PropertySubType"
          },
          "listingStatus": {
            "type": "string",
            "description": "RESO Listing Status Code",
            "x-range": [
              "ActiveListingStatus",
              "PendingListingStatus",
              "SoldListingStatus",
              "ContingentListingStatus"
            ],
            "example": "ActiveListingStatus,ContingentListingStatus",
            "x-parser-schema-id": "<anonymous-schema-726>"
          },
          "location": {
            "type": "object",
            "description": "a physical location",
            "title": "Place",
            "x-range": [
              "Place",
              "City",
              "State",
              "PostalCode",
              "GeoCircle",
              "GeoShape"
            ],
            "properties": {
              "type": {
                "type": "string",
                "description": "The item type (Linked-Data @type)",
                "enum": [
                  "Place"
                ],
                "x-parser-schema-id": "<anonymous-schema-660>"
              },
              "address": {
                "type": "object",
                "x-range": "PostalAddress",
                "description": "A physical address.",
                "example": {
                  "type": "PostalAddress",
                  "name": "Home",
                  "addressCountry": "USA",
                  "addressCounty": "Gotham County",
                  "addressLocality": "Gotham City",
                  "addressRegion": "New Jersey",
                  "addressSubdivision": "Gotham Heights",
                  "postalCode": "10010",
                  "postOfficeBoxNumber": "Box 1234",
                  "streetAddress": "1007 Mountain Gate Rd"
                },
                "x-parser-schema-id": "<anonymous-schema-661>"
              },
              "geo": {
                "type": "object",
                "description": "a geo shape (circle or box)",
                "x-range": [
                  "GeoCircle",
                  "GeoShape"
                ],
                "example": {
                  "type": "GeoShape",
                  "geoMidpoint": {
                    "type": "GeoCoordinates,",
                    "longitude": "73.98",
                    "latitude": "40.75"
                  },
                  "geoRadius": {
                    "type": "QuantitativeValue,",
                    "value": "10,",
                    "unitCode": "mi,",
                    "unitText": "miles"
                  },
                  "box": "(33.5697,-117.775),(33.6018,-117.707)"
                },
                "x-parser-schema-id": "<anonymous-schema-662>"
              }
            },
            "x-parser-schema-id": "Place"
          },
          "price": {
            "type": "object",
            "title": "PriceSpecification",
            "x-range": "PriceSpecification",
            "description": "a price offered for transfer of ownership of an item",
            "properties": {
              "type": {
                "type": "string",
                "description": "PriceSpecification",
                "enum": [
                  "PriceSpecification"
                ],
                "x-parser-schema-id": "<anonymous-schema-505>"
              },
              "minPrice": {
                "type": "number",
                "description": "the low price offered if price is a range.",
                "example": 75000,
                "x-parser-schema-id": "<anonymous-schema-506>"
              },
              "maxPrice": {
                "type": "number",
                "description": "the high price offered if price is a range.",
                "example": 100000,
                "x-parser-schema-id": "<anonymous-schema-507>"
              },
              "price": {
                "type": "number",
                "description": "the offer price.",
                "example": 75000,
                "x-parser-schema-id": "<anonymous-schema-508>"
              },
              "priceCurrency": {
                "type": "string",
                "description": "use ISO4217",
                "example": "USD",
                "x-parser-schema-id": "<anonymous-schema-509>"
              }
            },
            "x-parser-schema-id": "<anonymous-schema-727>"
          },
          "bedrooms": {
            "description": "number of bedrooms (range)",
            "type": "object",
            "x-range": "QuantitativeValue",
            "example": {
              "type": "QuantitativeValue",
              "minValue": 0,
              "maxValue": 4,
              "unitCode": "BD",
              "unitText": "Bedrooms"
            },
            "x-parser-schema-id": "<anonymous-schema-728>"
          },
          "bathrooms": {
            "description": "number of bathrooms (range)",
            "type": "object",
            "x-range": "QuantitativeValue",
            "example": {
              "type": "QuantitativeValue",
              "minValue": 2,
              "unitCode": "BA",
              "unitText": "Bathrooms"
            },
            "x-parser-schema-id": "<anonymous-schema-729>"
          },
          "livingArea": {
            "description": "property indoor space",
            "type": "object",
            "x-range": "QuantitativeValue",
            "example": {
              "type": "QuantitativeValue",
              "minValue": 1500,
              "unitCode": "SqFt",
              "unitText": "Square Feet"
            },
            "x-parser-schema-id": "<anonymous-schema-730>"
          },
          "lotSize": {
            "description": "outdoor space minValue, maxValue",
            "type": "object",
            "x-range": "QuantitativeValue",
            "example": {
              "type": "QuantitativeValue",
              "minValue": 0.5,
              "unitCode": "AC",
              "unitText": "Acres"
            },
            "x-parser-schema-id": "<anonymous-schema-731>"
          }
        },
        "x-parser-schema-id": "PropertySearch"
      },
      "PropertyType": {
        "title": "PropertyType",
        "x-range": "PropertyType",
        "description": "RESO property type enumeration values",
        "type": "object",
        "properties": {
          "RESI": {
            "type": "string",
            "description": "Residential",
            "x-parser-schema-id": "<anonymous-schema-732>"
          },
          "RLSE": {
            "type": "string",
            "description": "Residential Property Lease",
            "x-parser-schema-id": "<anonymous-schema-733>"
          },
          "RINC": {
            "type": "string",
            "description": "Residential Income",
            "x-parser-schema-id": "<anonymous-schema-734>"
          },
          "LAND": {
            "type": "string",
            "description": "Land",
            "x-parser-schema-id": "<anonymous-schema-735>"
          },
          "MOBI": {
            "type": "string",
            "description": "Mobile home",
            "x-parser-schema-id": "<anonymous-schema-736>"
          },
          "FARM": {
            "type": "string",
            "description": "Farm Residential",
            "x-parser-schema-id": "<anonymous-schema-737>"
          },
          "COMS": {
            "type": "string",
            "description": "commercial standard applies",
            "x-parser-schema-id": "<anonymous-schema-738>"
          },
          "BUSO": {
            "type": "string",
            "description": "Business Opportunity",
            "x-parser-schema-id": "<anonymous-schema-739>"
          }
        },
        "example": {
          "propertyType": "RESI"
        },
        "x-parser-schema-id": "PropertyType"
      },
      "PropertySubType": {
        "title": "PropertySubType",
        "type": "object",
        "description": "Property sub-type enumeration values derived from RESO data dictionary.",
        "example": {
          "propertySubType": "ApartmentPropertyType"
        },
        "properties": {
          "ApartmentPropertyType": {
            "type": "string",
            "description": "Apartment",
            "x-parser-schema-id": "<anonymous-schema-698>"
          },
          "BoatSlipPropertyType": {
            "type": "string",
            "description": "Boat Slip",
            "x-parser-schema-id": "<anonymous-schema-699>"
          },
          "CabinPropertyType": {
            "type": "string",
            "description": "Cabin",
            "x-parser-schema-id": "<anonymous-schema-700>"
          },
          "CondominiumPropertyType": {
            "type": "string",
            "description": "Condominium",
            "x-parser-schema-id": "<anonymous-schema-701>"
          },
          "DeededParkingPropertyType": {
            "type": "string",
            "description": "Deeded Parking",
            "x-parser-schema-id": "<anonymous-schema-702>"
          },
          "DuplexPropertyType": {
            "type": "string",
            "description": "Residential Duplex",
            "x-parser-schema-id": "<anonymous-schema-703>"
          },
          "FarmPropertyType": {
            "type": "string",
            "description": "Farm Property Type",
            "x-parser-schema-id": "<anonymous-schema-704>"
          },
          "ManufacturedHomePropertyType": {
            "type": "string",
            "description": "Manufactured Home",
            "x-parser-schema-id": "<anonymous-schema-705>"
          },
          "ManufacturedOnLandPropertyType": {
            "type": "string",
            "description": "Manufactured Home + Land",
            "x-parser-schema-id": "<anonymous-schema-706>"
          },
          "MobileHomePropertyType": {
            "type": "string",
            "description": "Mobile Home",
            "x-parser-schema-id": "<anonymous-schema-707>"
          },
          "OwnYourOwnPropertyType": {
            "type": "string",
            "description": "RESO Own Your Own Property",
            "x-parser-schema-id": "<anonymous-schema-708>"
          },
          "QuadruplexPropertyType": {
            "type": "string",
            "description": "A residential property with four units",
            "x-parser-schema-id": "<anonymous-schema-709>"
          },
          "RanchPropertyType": {
            "type": "string",
            "description": "A Ranch",
            "x-parser-schema-id": "<anonymous-schema-710>"
          },
          "SingleFamilyPropertyType": {
            "type": "string",
            "description": "Single Family Residence",
            "x-parser-schema-id": "<anonymous-schema-711>"
          },
          "StockCooperativePropertyType": {
            "type": "string",
            "description": "Stock Co-op.",
            "x-parser-schema-id": "<anonymous-schema-712>"
          },
          "TimesharePropertyType": {
            "type": "string",
            "description": "Timeshare",
            "x-parser-schema-id": "<anonymous-schema-713>"
          },
          "TownhousePropertyType": {
            "type": "string",
            "description": "Townhouse",
            "x-parser-schema-id": "<anonymous-schema-714>"
          },
          "TriplexPropertyType": {
            "type": "string",
            "description": "A residential property with 3 separate units",
            "x-parser-schema-id": "<anonymous-schema-715>"
          },
          "AgriculturePropertyType": {
            "type": "string",
            "description": "An agriculture property.",
            "x-parser-schema-id": "<anonymous-schema-716>"
          },
          "BusinessPropertyType": {
            "type": "string",
            "description": "a residential property zoned for business operation",
            "x-parser-schema-id": "<anonymous-schema-717>"
          },
          "HotelMotelPropertyType": {
            "type": "string",
            "description": "Hotel property for sale.",
            "x-parser-schema-id": "<anonymous-schema-718>"
          },
          "IndustrialPropertyType": {
            "type": "string",
            "description": "Industrial property",
            "x-parser-schema-id": "<anonymous-schema-719>"
          },
          "MixedUsePropertyType": {
            "type": "string",
            "description": "Residential/Commercial property",
            "x-parser-schema-id": "<anonymous-schema-720>"
          },
          "MultiFamilyPropertyType": {
            "type": "string",
            "description": "A single building with multiple units",
            "x-parser-schema-id": "<anonymous-schema-721>"
          },
          "OfficePropertyType": {
            "type": "string",
            "description": "An office.",
            "x-parser-schema-id": "<anonymous-schema-722>"
          },
          "RetailPropertyType": {
            "type": "string",
            "description": "Retail property",
            "x-parser-schema-id": "<anonymous-schema-723>"
          },
          "UnimprovedLandPropertyType": {
            "type": "string",
            "description": "Land for sale",
            "x-parser-schema-id": "<anonymous-schema-724>"
          },
          "WarehousePropertyType": {
            "type": "string",
            "description": "A Warehouse property type.",
            "x-parser-schema-id": "<anonymous-schema-725>"
          }
        },
        "x-parser-schema-id": "PropertySubType"
      },
      "PropertyValue": {
        "type": "object",
        "title": "PropertyValue",
        "description": "a key/value pair, used for maintaining state outside of the current context",
        "required": [
          "type",
          "propertyID",
          "value"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "PropertyValue"
            ],
            "x-parser-schema-id": "<anonymous-schema-740>"
          },
          "propertyID": {
            "type": "string",
            "example": "UserID",
            "x-parser-schema-id": "<anonymous-schema-741>"
          },
          "value": {
            "type": "string",
            "example": "@bobjones",
            "x-parser-schema-id": "<anonymous-schema-742>"
          }
        },
        "x-parser-schema-id": "PropertyValue"
      },
      "PropertyValueReport": {
        "type": "object",
        "title": "PropertyValueReport",
        "x-range": "PropertyValueReport",
        "description": "an automated property value esmation",
        "properties": {
          "type": {
            "type": "string",
            "description": "PropertyValueReport",
            "enum": [
              "PropertyValueReport"
            ],
            "x-parser-schema-id": "<anonymous-schema-743>"
          },
          "name": {
            "type": "string",
            "description": "document name or title",
            "example": "LOT:45 DIST:33 CITY/MUNI/TWP:LADUE LINDWORTH...",
            "x-parser-schema-id": "<anonymous-schema-744>"
          },
          "dateCreated": {
            "$id": "http://realestate.yodata.me/schema/dateCreated.yaml",
            "type": "string",
            "format": "date-time",
            "title": "Date Created",
            "description": "The date on which the item was created."
          },
          "result": {
            "type": "object",
            "title": "MonetaryAmount",
            "x-range": "MonetaryAmount",
            "required": [
              "type",
              "value",
              "currency"
            ],
            "properties": {
              "type": {
                "type": "string",
                "description": "MonetaryAmount",
                "enum": [
                  "MonetaryAmount"
                ],
                "x-parser-schema-id": "<anonymous-schema-669>"
              },
              "minValue": {
                "type": "number",
                "description": "the lower limit of the range",
                "example": 2400000,
                "x-parser-schema-id": "<anonymous-schema-670>"
              },
              "maxValue": {
                "type": "number",
                "description": "the upper limit of the range",
                "example": 3200000,
                "x-parser-schema-id": "<anonymous-schema-671>"
              },
              "value": {
                "type": "number",
                "description": "the actual or expected value",
                "example": 2700000,
                "x-parser-schema-id": "<anonymous-schema-672>"
              },
              "currency": {
                "type": "string",
                "description": "use ISO4217 country codes",
                "maxLength": 3,
                "example": "USD",
                "x-parser-schema-id": "<anonymous-schema-673>"
              }
            },
            "description": "the estimated value of the property",
            "x-parser-schema-id": "<anonymous-schema-745>"
          },
          "about": {
            "allOf": [
              {
                "title": "RealEstateProperty",
                "x-range": "RealEstateProperty",
                "description": "a property in the real estate transaction context",
                "type": "object",
                "required": [
                  "type",
                  "propertyType"
                ],
                "properties": {
                  "type": {
                    "description": "\"RealEstateProperty\"",
                    "enum": [
                      "RealEstateProperty"
                    ],
                    "type": "string",
                    "x-parser-schema-id": "<anonymous-schema-747>"
                  },
                  "propertyType": {
                    "type": "string",
                    "description": "RESO property type (see range for allowed values)",
                    "x-range": "PropertyType",
                    "minLength": 4,
                    "maxLength": 4,
                    "enum": [
                      "RESI",
                      "RLSE",
                      "RINC",
                      "LAND",
                      "MOBI",
                      "FARM",
                      "COMS",
                      "COML",
                      "BUSO"
                    ],
                    "x-parser-schema-id": "<anonymous-schema-296>"
                  },
                  "addressCountry": {
                    "type": "string",
                    "description": "two-letter ISO 3166-1 alpha-2 country code",
                    "example": "US",
                    "enum": [
                      "CA",
                      "DE",
                      "GR",
                      "IN",
                      "IT",
                      "MX",
                      "PE",
                      "PT",
                      "ES",
                      "AE",
                      "GB",
                      "US"
                    ],
                    "x-parser-schema-id": "<anonymous-schema-264>"
                  },
                  "addressLocality": {
                    "type": "string",
                    "description": "City, Township.",
                    "example": "Gotham City",
                    "maxLength": 50,
                    "x-parser-schema-id": "<anonymous-schema-265>"
                  },
                  "addressRegion": {
                    "type": "string",
                    "description": "State or Province.",
                    "example": "New Jersey",
                    "maxLength": 3,
                    "x-parser-schema-id": "<anonymous-schema-266>"
                  },
                  "apn": {
                    "type": "string",
                    "description": "Assessors Parcel Number",
                    "example": "ABC-12345-XX-XXXX",
                    "x-parser-schema-id": "<anonymous-schema-748>"
                  },
                  "image": {
                    "title": "image",
                    "description": "an ImageObject or URI reference to an image on the web.",
                    "type": "array",
                    "x-range": [
                      "ImageObject"
                    ],
                    "items": [
                      {
                        "type": "object",
                        "allOf": [
                          {
                            "title": "MediaObject",
                            "description": "an image, video or document availble for download",
                            "x-subclass": [
                              "ImageObject",
                              "DigitalDocument"
                            ],
                            "allOf": [
                              {
                                "$id": "http://realestate.yodata.me/schema/Thing",
                                "type": "object",
                                "title": "Thing",
                                "summary": "The root type of all Things.",
                                "required": [
                                  "type"
                                ],
                                "propertyNames": {
                                  "pattern": "^[a-z@$][a-zA-Z0-9-_]+$",
                                  "x-parser-schema-id": "<anonymous-schema-274>"
                                },
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "pattern": "^[A-Z][a-zA-Z0-9]+$",
                                    "description": "The item type (Linked-Data @type)",
                                    "x-parser-schema-id": "<anonymous-schema-272>"
                                  },
                                  "@id": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "the liked data uri for the Thing",
                                    "x-parser-schema-id": "<anonymous-schema-273>"
                                  }
                                },
                                "x-parser-schema-id": "Thing"
                              },
                              {
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "MediaObject",
                                      "ImageObject",
                                      "DigitalDocument"
                                    ]
                                  },
                                  "id": {
                                    "description": "the URL to access the item.",
                                    "example": "http://user.example.com/public/logo/fileName.zip",
                                    "type": "string",
                                    "format": "uri"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "the file name of the object.",
                                    "example": "fileName.zip"
                                  },
                                  "encodingFormat": {
                                    "type": "string",
                                    "description": "MIME type",
                                    "example": "application/zip"
                                  },
                                  "about": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "URI to the subject of the image or logo",
                                    "example": "http://user.example.com/profile/card#me"
                                  },
                                  "url": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "URL of the image content",
                                    "example": "http://user.example.com/public/profile/image.jpg"
                                  }
                                },
                                "x-parser-schema-id": "<anonymous-schema-275>"
                              }
                            ],
                            "x-parser-schema-id": "MediaObject"
                          },
                          {
                            "title": "ImageObject",
                            "x-range": "ImageObject",
                            "properties": {
                              "type": {
                                "enum": [
                                  "ImageObject"
                                ],
                                "example": "ImageObject"
                              },
                              "id": {
                                "example": "http://user.example.com/public/logo/image.jpg"
                              },
                              "name": {
                                "example": "image.jpg"
                              },
                              "encodingFormat": {
                                "example": "image/jpeg"
                              }
                            },
                            "x-parser-schema-id": "<anonymous-schema-276>"
                          }
                        ],
                        "x-parser-schema-id": "<anonymous-schema-271>"
                      }
                    ],
                    "x-parser-schema-id": "<anonymous-schema-270>"
                  },
                  "latitude": {
                    "type": "number",
                    "description": "The latitude of a location.",
                    "x-title": "latitude",
                    "example": 40.75,
                    "x-parser-schema-id": "<anonymous-schema-278>"
                  },
                  "listingId": {
                    "description": "the local identifier for the listing (MLS #)",
                    "type": "string",
                    "x-parser-schema-id": "<anonymous-schema-749>"
                  },
                  "livingArea": {
                    "description": "property indoor space",
                    "example": {
                      "type": "QuantitativeValue",
                      "unitCode": "SqFt",
                      "unitText": "Square Feet",
                      "value": 1500
                    },
                    "type": "object",
                    "x-range": "QuantitativeValue",
                    "x-parser-schema-id": "<anonymous-schema-750>"
                  },
                  "longitude": {
                    "type": "number",
                    "description": "The longitude of a location.",
                    "x-title": "longitude",
                    "example": 73.98,
                    "x-parser-schema-id": "<anonymous-schema-287>"
                  },
                  "lotSize": {
                    "description": "outdoor space minValue, maxValue",
                    "example": {
                      "type": "QuantitativeValue",
                      "unitCode": "AC",
                      "unitText": "Acres",
                      "value": 0.5
                    },
                    "type": "object",
                    "x-range": "QuantitativeValue",
                    "x-parser-schema-id": "<anonymous-schema-751>"
                  },
                  "numberOfBathrooms": {
                    "description": "the number of bathrooms",
                    "example": "2",
                    "type": "string",
                    "x-parser-schema-id": "<anonymous-schema-752>"
                  },
                  "numberOfBedrooms": {
                    "description": "the number of bedrooms",
                    "example": "3",
                    "type": "string",
                    "x-parser-schema-id": "<anonymous-schema-753>"
                  },
                  "numberOfRooms": {
                    "description": "the total number of rooms in the building",
                    "type": "string",
                    "example": 7,
                    "x-parser-schema-id": "<anonymous-schema-754>"
                  },
                  "postalCode": {
                    "type": "string",
                    "description": "Zip/Post Code",
                    "example": "10010",
                    "maxLength": 12,
                    "x-parser-schema-id": "<anonymous-schema-294>"
                  },
                  "propertySubType": {
                    "title": "propertySubType",
                    "type": "string",
                    "x-range": "PropertySubType",
                    "description": "RESO property sub-type (see range for allowed values)",
                    "enum": [
                      "ApartmentPropertyType",
                      "BoatSlipPropertyType",
                      "CabinPropertyType",
                      "CondominiumPropertyType",
                      "DeededParkingPropertyType",
                      "DuplexPropertyType",
                      "FarmPropertyType",
                      "ManufacturedHomePropertyType",
                      "ManufacturedOnLandPropertyType",
                      "MobileHomePropertyType",
                      "OwnYourOwnPropertyType",
                      "QuadruplexPropertyType",
                      "RanchPropertyType",
                      "SingleFamilyPropertyType",
                      "StockCooperativePropertyType",
                      "TimesharePropertyType",
                      "TownhousePropertyType",
                      "TriplexPropertyType",
                      "AgriculturePropertyType",
                      "BusinessPropertyType",
                      "HotelMotelPropertyType",
                      "IndustrialPropertyType",
                      "MixedUsePropertyType",
                      "MultiFamilyPropertyType",
                      "OfficePropertyType",
                      "RetailPropertyType",
                      "UnimprovedLandPropertyType",
                      "WarehousePropertyType"
                    ],
                    "x-parser-schema-id": "<anonymous-schema-295>"
                  },
                  "stories": {
                    "type": "number",
                    "description": "he number of floors in the property",
                    "example": 2,
                    "x-parser-schema-id": "<anonymous-schema-298>"
                  },
                  "streetAddress": {
                    "type": "string",
                    "description": "the street address",
                    "example": "1007 Mountain Gate Rd",
                    "maxLength": 75,
                    "x-parser-schema-id": "<anonymous-schema-299>"
                  },
                  "yearBuilt": {
                    "type": "number",
                    "description": "the year the structure was created",
                    "example": 1988,
                    "x-parser-schema-id": "<anonymous-schema-302>"
                  }
                },
                "x-parser-schema-id": "RealEstateProperty"
              },
              {
                "description": "the subject property",
                "x-parser-schema-id": "<anonymous-schema-755>"
              },
              {
                "properties": {
                  "additionalProperty": {
                    "example": {
                      "heating": null,
                      "cooling": null,
                      "isForeclosure": null,
                      "isShortsale": null,
                      "score": 7,
                      "parcelId": null,
                      "averageSalePrice": {
                        "type": "PriceSpecification",
                        "price": 7500000,
                        "priceCurrency": "USD"
                      },
                      "nonDisclosureProperty": false,
                      "taxAssessedValue": {
                        "@type": "MonetaryAmount",
                        "amount": "100000",
                        "currency": "USD"
                      },
                      "taxAssessedYear": 2021,
                      "inHouseCompanyListingUrl": null,
                      "inHouseCompanyListingEvent": null,
                      "neighborhoodMetrics": null,
                      "neighborhoodName": "DEER CREEK WOODS",
                      "neighborhoodKey": null,
                      "useNeighborhoodDataForCharts": false,
                      "ownerName": "Bob Jones",
                      "ownerOccupied": "Y",
                      "ownersEstimatedEquity": {
                        "@type": "MonetaryAmount",
                        "amount": "100000",
                        "currency": "USD"
                      },
                      "firstLoanPrice": {
                        "@type": "MonetaryAmount",
                        "amount": "100000",
                        "currency": "USD"
                      },
                      "firstLoanLenderName": "",
                      "secondLoanPrice": {
                        "@type": "MonetaryAmount",
                        "amount": null,
                        "currency": null
                      },
                      "secondLoanLenderName": "N/A",
                      "lastRefinanceLoanVal1": {
                        "@type": "MonetaryAmount",
                        "amount": "100000",
                        "currency": "USD"
                      },
                      "lastRefinanceLenderName1": "N/A",
                      "lastRefinanceLoanVal2": {
                        "@type": "MonetaryAmount",
                        "amount": null,
                        "currency": null
                      },
                      "lastRefinanceLenderName2": "N/A",
                      "Title_Company": ""
                    }
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-756>"
              }
            ],
            "x-parser-schema-id": "<anonymous-schema-746>"
          }
        },
        "x-parser-schema-id": "PropertyValueReport"
      },
      "QuantitativeValue": {
        "title": "QuantitativeValue",
        "type": "object",
        "description": "A point value or interval.",
        "x-range": "QuantitativeValue",
        "properties": {
          "type": {
            "type": "string",
            "description": "QuantitativeValue",
            "enum": [
              "QuantitativeValue"
            ],
            "x-parser-schema-id": "<anonymous-schema-757>"
          },
          "value": {
            "type": "number",
            "description": "the value (if a static value)",
            "x-parser-schema-id": "<anonymous-schema-758>"
          },
          "minValue": {
            "type": "number",
            "description": "the lower value of a range",
            "x-parser-schema-id": "<anonymous-schema-759>"
          },
          "maxValue": {
            "type": "number",
            "description": "the upper value of a range",
            "x-parser-schema-id": "<anonymous-schema-760>"
          },
          "unitCode": {
            "type": "string",
            "description": "unit code (RESO or UN/CEFACT)",
            "example": "AC",
            "x-parser-schema-id": "<anonymous-schema-761>"
          },
          "unitText": {
            "type": "string",
            "description": "unit code in common text",
            "example": "acres",
            "x-parser-schema-id": "<anonymous-schema-762>"
          }
        },
        "x-parser-schema-id": "QuantitativeValue"
      },
      "Question": {
        "type": "object",
        "description": "A specific question - e.g. from a user seeking answers online, or collected in a Frequently Asked Questions (FAQ) document.",
        "title": "Question",
        "properties": {
          "type": {
            "const": "Question",
            "x-parser-schema-id": "<anonymous-schema-496>"
          },
          "text": {
            "$id": "http://realestate.yodata.me/schema/text.yaml",
            "title": "text",
            "type": "string",
            "examples": [
              "Populus debet control notitia sua",
              "Aspicio pinguem in his vestimentis?",
              "Et id ipsum vitae.",
              "Amici, Romani et cives, aures vestras mihi praebe",
              "Heus, ego iustus occurrit tibi et hoc est insanus, sed hic numerus meus est, ut me vocas fortasse."
            ]
          }
        },
        "x-parser-schema-id": "Question"
      },
      "RealEstateAgent": {
        "$id": "http://realestate.yodata.me/schema/RealEstateAgent",
        "title": "RealEstateAgent",
        "description": "A real estate agent who represents buyers and sellers",
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "type": {
            "type": "string",
            "const": "RealEstateAgent",
            "x-parser-schema-id": "<anonymous-schema-369>"
          },
          "additionalName": {
            "title": "additionalName",
            "description": "any other name(s) associated with the entity, i.e. nickname, middle name, maiden name, etc. For multiple names, use a comma without space as a separator.",
            "type": "string",
            "examples": [
              "Johnny,John",
              "Prince,The Artist Formerly Known as Prince,The Artist",
              "Babs,Barbara",
              "Katheryn Elizabeth Hudson,Katy Perry",
              "Destiny Hope Cyrus,Miley Cyrus"
            ],
            "x-parser-schema-id": "<anonymous-schema-116>"
          },
          "address": {
            "type": "object",
            "x-range": "PostalAddress",
            "description": "A physical address.",
            "example": {
              "type": "PostalAddress",
              "name": "Home",
              "addressCountry": "USA",
              "addressCounty": "Gotham County",
              "addressLocality": "Gotham City",
              "addressRegion": "New Jersey",
              "addressSubdivision": "Gotham Heights",
              "postalCode": "10010",
              "postOfficeBoxNumber": "Box 1234",
              "streetAddress": "1007 Mountain Gate Rd"
            },
            "x-parser-schema-id": "<anonymous-schema-370>"
          },
          "certification": {
            "type": "object",
            "title": "Certification",
            "description": "A certification issued by an organization to an individual or business.",
            "x-range": "Certification",
            "properties": {
              "type": {
                "description": "Certification",
                "type": "string",
                "enum": [
                  "Certification"
                ],
                "x-parser-schema-id": "<anonymous-schema-372>"
              },
              "name": {
                "type": "string",
                "description": "the name of the Certification",
                "example": "e-Agent Certified",
                "x-parser-schema-id": "<anonymous-schema-373>"
              },
              "issuedBy": {
                "type": "object",
                "x-range": "RealEstateOrganization",
                "description": "the issuing authority",
                "properties": {
                  "type": {
                    "enum": [
                      "RealEstateOrganization"
                    ],
                    "type": "string",
                    "description": "The item type (Linked-Data @type)",
                    "x-parser-schema-id": "<anonymous-schema-375>"
                  },
                  "id": {
                    "example": "https://example.com/profile/card#me",
                    "type": "string",
                    "format": "uri",
                    "description": "Linked-Data URI (@id)",
                    "x-parser-schema-id": "<anonymous-schema-376>"
                  },
                  "name": {
                    "type": "string",
                    "description": "name of the issuing organization",
                    "example": "Gotham City Real Estate",
                    "x-parser-schema-id": "<anonymous-schema-377>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-374>"
              },
              "issuedTo": {
                "x-range": "RealEstateAgent",
                "type": "object",
                "description": "the subject",
                "properties": {
                  "type": {
                    "enum": [
                      "RealEstateAgent"
                    ],
                    "type": "string",
                    "description": "The item type (Linked-Data @type)",
                    "x-parser-schema-id": "<anonymous-schema-379>"
                  },
                  "id": {
                    "type": "string",
                    "format": "uri",
                    "description": "Linked-Data URI (@id)",
                    "x-parser-schema-id": "<anonymous-schema-380>"
                  },
                  "name": {
                    "type": "string",
                    "description": "the name of the item",
                    "x-parser-schema-id": "<anonymous-schema-92>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-378>"
              }
            },
            "x-parser-schema-id": "<anonymous-schema-371>"
          },
          "contactPoint": {
            "$id": "htttp://realestate.yodata.me/schema/ContactPoint.json",
            "title": "ContactPoint",
            "description": "A point of contact for the entity. By convention in the real estate domain, ContactPoints\nare preferred over telephone, email, and faxNumber so the ContactPoint.name property can be used to label values\nfor example, Work Telephone, Home, as named contactPoint values.\n",
            "type": "object",
            "required": [
              "type",
              "name"
            ],
            "minProperties": 3,
            "properties": {
              "type": {
                "type": "string",
                "const": "ContactPoint",
                "x-parser-schema-id": "<anonymous-schema-381>"
              },
              "name": {
                "type": "string",
                "description": "a label for the contactPoint, i.e. 'Work', or 'Home'",
                "examples": [
                  "Work",
                  "Home",
                  "Vacation",
                  "Bob's Cell",
                  "Alice's Work"
                ],
                "x-parser-schema-id": "<anonymous-schema-382>"
              },
              "telephone": {
                "type": "string",
                "x-faker": "phone.phoneNumber",
                "examples": [
                  "555-555-5555",
                  "555-555-5555 x123",
                  "555-555-5555 ext. 123",
                  "+1-555-555-5555"
                ],
                "x-parser-schema-id": "<anonymous-schema-383>"
              },
              "faxNumber": {
                "type": "string",
                "x-faker": "phone.phoneNumber",
                "examples": [
                  "555-555-5555",
                  "555-555-5555 x123",
                  "555-555-5555 ext. 123",
                  "+1-555-555-5555"
                ],
                "x-parser-schema-id": "<anonymous-schema-384>"
              },
              "email": {
                "description": "an email address for the item.",
                "type": "string",
                "format": "email",
                "x-faker": "internet.email",
                "examples": [
                  "bob@example.com",
                  "alice@example.com"
                ],
                "x-parser-schema-id": "<anonymous-schema-385>"
              },
              "url": {
                "description": "primary URL for the item.",
                "type": "string",
                "format": "uri",
                "example": "https://www.facebook.com/hallandoates",
                "x-parser-schema-id": "<anonymous-schema-386>"
              }
            }
          },
          "email": {
            "type": "string",
            "format": "email",
            "x-faker": "internet.email",
            "x-parser-schema-id": "<anonymous-schema-93>"
          },
          "familyName": {
            "$id": "htttp://realestate.yodata.me/schema/familyName.yaml",
            "type": "string",
            "title": "Family Name",
            "description": "Last Name of a person",
            "x-faker": "name.lastName",
            "maxLength": 50,
            "externalDocs": {
              "description": "Family Name",
              "url": "https://schema.org/familyName"
            },
            "examples": [
              "Smith",
              "Jones",
              "Parker",
              "Monk",
              "Brown",
              "Miller",
              "Davis",
              "Wilson",
              "Fitzgerald",
              "Johnson",
              "Williams"
            ]
          },
          "givenName": {
            "type": "string",
            "description": "First Name of a person",
            "x-faker": "name.firstName",
            "examples": [
              "John",
              "Jane",
              "Mary",
              "Joseph",
              "William",
              "David",
              "Richard",
              "Charles",
              "Thomas",
              "Christopher",
              "Daniel",
              "Matthew",
              "Anthony",
              "Donald",
              "Mark",
              "Paul",
              "Steven",
              "Andrew",
              "Kenneth",
              "George",
              "Joshua",
              "Kevin",
              "Brian",
              "Edward",
              "Ronald",
              "Timothy",
              "Jason",
              "Jeffrey",
              "Ryan",
              "Jacob"
            ],
            "x-parser-schema-id": "<anonymous-schema-118>"
          },
          "id": {
            "type": "string",
            "format": "uri",
            "description": "Linked-Data URI (@id)",
            "x-parser-schema-id": "<anonymous-schema-380>"
          },
          "identifier": {
            "title": "identifier",
            "type": "object",
            "description": "identifier assigned to a contact by the vendor who originally created the contact",
            "examples": [
              {
                "salesforceid": "0031U00002XW1QWQA1"
              },
              {
                "vendoraid": "123456"
              },
              {
                "originating_system_id": "123456"
              }
            ],
            "x-parser-schema-id": "<anonymous-schema-94>"
          },
          "image": {
            "title": "image",
            "description": "an ImageObject or URI reference to an image on the web.",
            "type": "array",
            "x-range": [
              "ImageObject"
            ],
            "items": [
              {
                "type": "object",
                "allOf": [
                  {
                    "title": "MediaObject",
                    "description": "an image, video or document availble for download",
                    "x-subclass": [
                      "ImageObject",
                      "DigitalDocument"
                    ],
                    "allOf": [
                      {
                        "$id": "http://realestate.yodata.me/schema/Thing",
                        "type": "object",
                        "title": "Thing",
                        "summary": "The root type of all Things.",
                        "required": [
                          "type"
                        ],
                        "propertyNames": {
                          "pattern": "^[a-z@$][a-zA-Z0-9-_]+$",
                          "x-parser-schema-id": "<anonymous-schema-274>"
                        },
                        "properties": {
                          "type": {
                            "type": "string",
                            "pattern": "^[A-Z][a-zA-Z0-9]+$",
                            "description": "The item type (Linked-Data @type)",
                            "x-parser-schema-id": "<anonymous-schema-272>"
                          },
                          "@id": {
                            "type": "string",
                            "format": "uri",
                            "description": "the liked data uri for the Thing",
                            "x-parser-schema-id": "<anonymous-schema-273>"
                          }
                        },
                        "x-parser-schema-id": "Thing"
                      },
                      {
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "MediaObject",
                              "ImageObject",
                              "DigitalDocument"
                            ]
                          },
                          "id": {
                            "description": "the URL to access the item.",
                            "example": "http://user.example.com/public/logo/fileName.zip",
                            "type": "string",
                            "format": "uri"
                          },
                          "name": {
                            "type": "string",
                            "description": "the file name of the object.",
                            "example": "fileName.zip"
                          },
                          "encodingFormat": {
                            "type": "string",
                            "description": "MIME type",
                            "example": "application/zip"
                          },
                          "about": {
                            "type": "string",
                            "format": "uri",
                            "description": "URI to the subject of the image or logo",
                            "example": "http://user.example.com/profile/card#me"
                          },
                          "url": {
                            "type": "string",
                            "format": "uri",
                            "description": "URL of the image content",
                            "example": "http://user.example.com/public/profile/image.jpg"
                          }
                        },
                        "x-parser-schema-id": "<anonymous-schema-275>"
                      }
                    ],
                    "x-parser-schema-id": "MediaObject"
                  },
                  {
                    "title": "ImageObject",
                    "x-range": "ImageObject",
                    "properties": {
                      "type": {
                        "enum": [
                          "ImageObject"
                        ],
                        "example": "ImageObject"
                      },
                      "id": {
                        "example": "http://user.example.com/public/logo/image.jpg"
                      },
                      "name": {
                        "example": "image.jpg"
                      },
                      "encodingFormat": {
                        "example": "image/jpeg"
                      }
                    },
                    "x-parser-schema-id": "<anonymous-schema-276>"
                  }
                ],
                "x-parser-schema-id": "<anonymous-schema-271>"
              }
            ],
            "x-parser-schema-id": "<anonymous-schema-270>"
          },
          "jobTitle": {
            "type": "array",
            "items": {
              "title": "jobTitle",
              "description": "The job title of the person (for example, Financial Manager).",
              "type": "string",
              "x-faker": "name.jobTitle",
              "examples": [
                "CEO",
                "Sales Manager",
                "Escrow Officer",
                "Transaction Coordinator",
                "Director of Marketing",
                "Senior Loan Officer",
                "Loan Officer",
                "Sanitation Engineer",
                "Owner",
                "Cofounder",
                "Founder",
                "President",
                "Vice President of Sales",
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null
              ],
              "x-parser-schema-id": "<anonymous-schema-388>"
            },
            "x-parser-schema-id": "<anonymous-schema-387>"
          },
          "memberOf": {
            "title": "memberOf",
            "description": "an Organization (or ProgramMembership) to which this Person or Organization belongs.",
            "type": "array",
            "x-range": [
              "OrganizationRole",
              "URI"
            ],
            "items": {
              "anyOf": [
                {
                  "title": "OrganizationRole",
                  "type": "object",
                  "description": "describes a role played by a member and a group or organization.",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "a role played by the member in the memberOf group",
                      "enum": [
                        "OrganizationRole"
                      ],
                      "x-parser-schema-id": "<anonymous-schema-391>"
                    },
                    "roleName": {
                      "type": "string",
                      "description": "the role name",
                      "example": "Owner",
                      "x-parser-schema-id": "<anonymous-schema-392>"
                    },
                    "memberOf": {
                      "description": "the org or group where the role is performed",
                      "type": "object",
                      "example": {
                        "type": "RealEstateOrganization",
                        "id": "http://orgid.example.com/profile/card#me"
                      },
                      "x-parser-schema-id": "<anonymous-schema-393>"
                    },
                    "member": {
                      "description": "member object or id",
                      "type": "string",
                      "format": "uri",
                      "example": "https://memberid.example.com/profile/card#me",
                      "x-parser-schema-id": "<anonymous-schema-394>"
                    },
                    "startDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "date the member began performing this role",
                      "x-parser-schema-id": "<anonymous-schema-395>"
                    },
                    "endDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "date the member stopped performing the role",
                      "x-parser-schema-id": "<anonymous-schema-396>"
                    }
                  },
                  "x-parser-schema-id": "OrganizationRole"
                },
                {
                  "type": "string",
                  "format": "uri",
                  "x-parser-schema-id": "<anonymous-schema-397>"
                }
              ],
              "x-parser-schema-id": "<anonymous-schema-390>"
            },
            "x-parser-schema-id": "<anonymous-schema-389>"
          },
          "name": {
            "type": "string",
            "description": "the name of the item",
            "x-parser-schema-id": "<anonymous-schema-92>"
          },
          "parentOrganization": {
            "$id": "http://realestate.yodata.me/schema/parentOrganization",
            "title": "parentOrganization",
            "description": "organizations of which this org is a part.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri",
              "x-parser-schema-id": "<anonymous-schema-398>"
            }
          },
          "permit": {
            "title": "Permit",
            "description": "A permit issued by an organization to an individual or business.",
            "type": "object",
            "x-hasSubclass": [
              "RealEstateLicense"
            ],
            "properties": {
              "type": {
                "type": "string",
                "description": "Permit type.",
                "enum": [
                  "Permit"
                ],
                "x-parser-schema-id": "<anonymous-schema-400>"
              },
              "name": {
                "type": "string",
                "description": "Common or display value of the Permit.",
                "example": "DRE Number",
                "x-parser-schema-id": "<anonymous-schema-401>"
              },
              "issuedBy": {
                "type": "object",
                "x-range": "Organization",
                "description": "The issuing authority",
                "example": {
                  "type": "State",
                  "name": "California"
                },
                "x-parser-schema-id": "<anonymous-schema-402>"
              },
              "issuedThrough": {
                "type": "object",
                "description": "the service through which the permit was granted",
                "example": {
                  "type": "Service",
                  "name": "Department of Real Estate"
                },
                "x-parser-schema-id": "<anonymous-schema-403>"
              },
              "validIn": {
                "type": "object",
                "x-range": "Place",
                "x-parser-schema-id": "<anonymous-schema-404>"
              },
              "validFrom": {
                "type": "string",
                "format": "date-time",
                "description": "start date",
                "x-parser-schema-id": "<anonymous-schema-405>"
              },
              "validUntil": {
                "type": "string",
                "format": "date-time",
                "description": "end date",
                "x-parser-schema-id": "<anonymous-schema-406>"
              }
            },
            "x-parser-schema-id": "<anonymous-schema-399>"
          },
          "subOrganization": {
            "$id": "http://realestate.yodata.me/schema/subOrganization",
            "title": "subOrganization",
            "description": "child organizations of the organization",
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri",
              "x-parser-schema-id": "<anonymous-schema-407>"
            }
          },
          "url": {
            "title": "url",
            "type": "string",
            "format": "uri",
            "description": "URL of the item.",
            "x-parser-schema-id": "<anonymous-schema-408>"
          }
        },
        "x-parser-schema-id": "RealEstateAgent"
      },
      "RealEstateLicense": {
        "title": "RealEstateLicense",
        "type": "object",
        "description": "Real estate licenses, authorizations issued by state governments, give agents and brokers the legal ability to represent a home seller or buyer in the process of buying or selling real estate.",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "RealEstateLicense"
            ],
            "description": "RealEstateLicense",
            "x-parser-schema-id": "<anonymous-schema-763>"
          },
          "name": {
            "type": "string",
            "description": "display value, i.e. 'CA-DRE# 02068375'",
            "example": "CA-DRE# 02068375",
            "x-parser-schema-id": "<anonymous-schema-764>"
          },
          "issuedTo": {
            "type": "object",
            "description": "the license recipient",
            "x-range": [
              "RealEstateAgent",
              "RealEstateOrganization"
            ],
            "example": {
              "type": "RealEstateAgent",
              "id": "http://{agentid}.example.com/profile/card#me"
            },
            "x-parser-schema-id": "<anonymous-schema-765>"
          },
          "issuedBy": {
            "type": "object",
            "description": "the issuing organization or service",
            "x-range": [
              "State",
              "Organization",
              "AdministrativeArea"
            ],
            "example": {
              "type": "State",
              "name": "California"
            },
            "x-parser-schema-id": "<anonymous-schema-766>"
          },
          "issuedThrough": {
            "x-range": [
              "Organization"
            ],
            "description": "The service through with the permit was granted.",
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "Service",
                "x-parser-schema-id": "<anonymous-schema-768>"
              },
              "name": {
                "type": "string",
                "example": "California Department of Real Estate",
                "x-parser-schema-id": "<anonymous-schema-769>"
              }
            },
            "x-parser-schema-id": "<anonymous-schema-767>"
          },
          "validIn": {
            "type": "object",
            "description": "the state where the RealEstateLicense is valid",
            "x-range": [
              "State",
              "City",
              "GeographicArea",
              "PostalCode"
            ],
            "example": {
              "type": "State",
              "name": "California"
            },
            "x-parser-schema-id": "<anonymous-schema-770>"
          },
          "validFrom": {
            "type": "string",
            "format": "date-time",
            "description": "the first date and time on which the license is valid.",
            "x-parser-schema-id": "<anonymous-schema-771>"
          },
          "validUntil": {
            "type": "string",
            "format": "date-time",
            "description": "the last date and time on which the license is valid.",
            "x-parser-schema-id": "<anonymous-schema-772>"
          }
        },
        "x-parser-schema-id": "RealEstateLicense"
      },
      "RealEstateOffice": {
        "type": "object",
        "description": "A real estate office / place of business.",
        "allOf": [
          {
            "allOf": [
              {
                "allOf": [
                  {
                    "$id": "http://realestate.yodata.me/schema/Thing",
                    "type": "object",
                    "title": "Thing",
                    "summary": "The root type of all Things.",
                    "required": [
                      "type"
                    ],
                    "propertyNames": {
                      "pattern": "^[a-z@$][a-zA-Z0-9-_]+$",
                      "x-parser-schema-id": "<anonymous-schema-274>"
                    },
                    "properties": {
                      "type": {
                        "type": "string",
                        "pattern": "^[A-Z][a-zA-Z0-9]+$",
                        "description": "The item type (Linked-Data @type)",
                        "x-parser-schema-id": "<anonymous-schema-272>"
                      },
                      "@id": {
                        "type": "string",
                        "format": "uri",
                        "description": "the liked data uri for the Thing",
                        "x-parser-schema-id": "<anonymous-schema-273>"
                      }
                    },
                    "x-parser-schema-id": "Thing"
                  },
                  {
                    "x-kind": "Organization",
                    "x-parser-schema-id": "<anonymous-schema-410>"
                  },
                  {
                    "x-hasSubclass": [
                      "RealEstateOrganization",
                      "RealEstateOffice",
                      "RealEstateAgent"
                    ],
                    "x-parser-schema-id": "<anonymous-schema-411>"
                  },
                  {
                    "x-subClassOf": [
                      "https://schema.org/Organization"
                    ],
                    "properties": {
                      "address": {
                        "type": "object",
                        "x-range": "PostalAddress",
                        "description": "A physical address.",
                        "example": {
                          "type": "PostalAddress",
                          "name": "Home",
                          "addressCountry": "USA",
                          "addressCounty": "Gotham County",
                          "addressLocality": "Gotham City",
                          "addressRegion": "New Jersey",
                          "addressSubdivision": "Gotham Heights",
                          "postalCode": "10010",
                          "postOfficeBoxNumber": "Box 1234",
                          "streetAddress": "1007 Mountain Gate Rd"
                        },
                        "x-parser-schema-id": "<anonymous-schema-370>"
                      },
                      "availableLanguage": {
                        "title": "availableLanguage",
                        "type": "array",
                        "description": "Please use one of the language codes from the IETF BCP 47 standard.",
                        "x-range": "Language",
                        "items": {
                          "$id": "htttp://realestate.yodata.me/schema/Language.yaml",
                          "description": "a written or spoken Language",
                          "title": "Language",
                          "type": "object",
                          "required": [
                            "type",
                            "name",
                            "additionalName"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "Language",
                              "x-parser-schema-id": "<anonymous-schema-124>"
                            },
                            "name": {
                              "type": "string",
                              "description": "the display name of the language",
                              "x-parser-schema-id": "<anonymous-schema-125>"
                            },
                            "additionalName": {
                              "type": "string",
                              "description": "BCP 47 language code",
                              "x-parser-schema-id": "<anonymous-schema-126>"
                            }
                          },
                          "examples": [
                            {
                              "type": "Language",
                              "name": "English",
                              "additionalName": "en-us"
                            },
                            {
                              "type": "Language",
                              "name": "Spanish",
                              "additionalName": "es"
                            },
                            {
                              "type": "Language",
                              "name": "French",
                              "additionalName": "fr"
                            },
                            {
                              "type": "Language",
                              "name": "German",
                              "additionalName": "de"
                            },
                            {
                              "type": "Language",
                              "name": "Italian",
                              "additionalName": "it"
                            },
                            {
                              "type": "Language",
                              "name": "Japanese",
                              "additionalName": "ja"
                            },
                            {
                              "type": "Language",
                              "name": "Korean",
                              "additionalName": "ko"
                            },
                            {
                              "type": "Language",
                              "name": "Portuguese",
                              "additionalName": "pt"
                            },
                            {
                              "type": "Language",
                              "name": "Russian",
                              "additionalName": "ru"
                            },
                            {
                              "type": "Language",
                              "name": "Chinese",
                              "additionalName": "zh"
                            },
                            {
                              "type": "Language",
                              "name": "Arabic",
                              "additionalName": "ar"
                            },
                            {
                              "type": "Language",
                              "name": "Hindi",
                              "additionalName": "hi"
                            },
                            {
                              "type": "Language",
                              "name": "Bengali",
                              "additionalName": "bn"
                            },
                            {
                              "type": "Language",
                              "name": "Portuguese",
                              "additionalName": "pt"
                            }
                          ],
                          "x-parser-schema-id": "Language"
                        }
                      },
                      "branchCode": {
                        "description": "A short textual code that uniquely identifies a place of business.",
                        "example": "for BHHS profile events, see additionalProperty.OfficeId",
                        "type": "string"
                      },
                      "certification": {
                        "$id": "http://realestate.yodata.me/schema/certification",
                        "title": "certifications",
                        "description": "certifications granted to a person or organization",
                        "type": "array",
                        "items": [
                          {
                            "type": "object",
                            "title": "Certification",
                            "description": "A certification issued by an organization to an individual or business.",
                            "x-range": "Certification",
                            "properties": {
                              "type": {
                                "description": "Certification",
                                "type": "string",
                                "enum": [
                                  "Certification"
                                ],
                                "x-parser-schema-id": "<anonymous-schema-594>"
                              },
                              "name": {
                                "type": "string",
                                "description": "the name of the Certification",
                                "example": "e-Agent Certified",
                                "x-parser-schema-id": "<anonymous-schema-595>"
                              },
                              "issuedBy": {
                                "type": "object",
                                "x-range": "RealEstateOrganization",
                                "description": "the issuing authority",
                                "properties": {
                                  "type": {
                                    "enum": [
                                      "RealEstateOrganization"
                                    ],
                                    "type": "string",
                                    "description": "The item type (Linked-Data @type)",
                                    "x-parser-schema-id": "<anonymous-schema-375>"
                                  },
                                  "id": {
                                    "example": "https://example.com/profile/card#me",
                                    "type": "string",
                                    "format": "uri",
                                    "description": "Linked-Data URI (@id)",
                                    "x-parser-schema-id": "<anonymous-schema-376>"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "name of the issuing organization",
                                    "example": "Gotham City Real Estate",
                                    "x-parser-schema-id": "<anonymous-schema-377>"
                                  }
                                },
                                "x-parser-schema-id": "<anonymous-schema-374>"
                              },
                              "issuedTo": {
                                "x-range": "RealEstateAgent",
                                "type": "object",
                                "description": "the subject",
                                "properties": {
                                  "type": {
                                    "enum": [
                                      "RealEstateAgent"
                                    ],
                                    "type": "string",
                                    "description": "The item type (Linked-Data @type)",
                                    "x-parser-schema-id": "<anonymous-schema-379>"
                                  },
                                  "id": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "Linked-Data URI (@id)",
                                    "x-parser-schema-id": "<anonymous-schema-380>"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "the name of the item",
                                    "x-parser-schema-id": "<anonymous-schema-92>"
                                  }
                                },
                                "x-parser-schema-id": "<anonymous-schema-596>"
                              }
                            },
                            "x-parser-schema-id": "Certification"
                          }
                        ]
                      },
                      "contactPoint": {
                        "$id": "http://realestate.yodata.me/definitions/contactPoint.json",
                        "type": "array",
                        "description": "a named point of contact - telephone, email, faxNumber, and/or url for the entity",
                        "items": {
                          "$id": "htttp://realestate.yodata.me/schema/ContactPoint.json",
                          "title": "ContactPoint",
                          "description": "A point of contact for the entity. By convention in the real estate domain, ContactPoints\nare preferred over telephone, email, and faxNumber so the ContactPoint.name property can be used to label values\nfor example, Work Telephone, Home, as named contactPoint values.\n",
                          "type": "object",
                          "required": [
                            "type",
                            "name"
                          ],
                          "minProperties": 3,
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "ContactPoint",
                              "x-parser-schema-id": "<anonymous-schema-110>"
                            },
                            "name": {
                              "type": "string",
                              "description": "a label for the contactPoint, i.e. 'Work', or 'Home'",
                              "examples": [
                                "Work",
                                "Home",
                                "Vacation",
                                "Bob's Cell",
                                "Alice's Work"
                              ],
                              "x-parser-schema-id": "<anonymous-schema-111>"
                            },
                            "telephone": {
                              "type": "string",
                              "x-faker": "phone.phoneNumber",
                              "examples": [
                                "555-555-5555",
                                "555-555-5555 x123",
                                "555-555-5555 ext. 123",
                                "+1-555-555-5555"
                              ],
                              "x-parser-schema-id": "<anonymous-schema-112>"
                            },
                            "faxNumber": {
                              "type": "string",
                              "x-faker": "phone.phoneNumber",
                              "examples": [
                                "555-555-5555",
                                "555-555-5555 x123",
                                "555-555-5555 ext. 123",
                                "+1-555-555-5555"
                              ],
                              "x-parser-schema-id": "<anonymous-schema-113>"
                            },
                            "email": {
                              "description": "an email address for the item.",
                              "type": "string",
                              "format": "email",
                              "x-faker": "internet.email",
                              "examples": [
                                "bob@example.com",
                                "alice@example.com"
                              ],
                              "x-parser-schema-id": "<anonymous-schema-114>"
                            },
                            "url": {
                              "description": "primary URL for the item.",
                              "type": "string",
                              "format": "uri",
                              "example": "https://www.facebook.com/hallandoates",
                              "x-parser-schema-id": "<anonymous-schema-115>"
                            }
                          },
                          "x-parser-schema-id": "ContactPoint"
                        }
                      },
                      "email": {
                        "type": "string",
                        "format": "email",
                        "x-faker": "internet.email",
                        "x-parser-schema-id": "<anonymous-schema-93>"
                      },
                      "faxNumber": {
                        "type": "string",
                        "description": "Do people still use fax machines?",
                        "x-faker": "phone.phoneNumber",
                        "x-parser-schema-id": "<anonymous-schema-117>"
                      },
                      "image": {
                        "title": "image",
                        "description": "an ImageObject or URI reference to an image on the web.",
                        "type": "array",
                        "x-range": [
                          "ImageObject"
                        ],
                        "items": [
                          {
                            "type": "object",
                            "allOf": [
                              {
                                "title": "MediaObject",
                                "description": "an image, video or document availble for download",
                                "x-subclass": [
                                  "ImageObject",
                                  "DigitalDocument"
                                ],
                                "allOf": [
                                  {
                                    "$id": "http://realestate.yodata.me/schema/Thing",
                                    "type": "object",
                                    "title": "Thing",
                                    "summary": "The root type of all Things.",
                                    "required": [
                                      "type"
                                    ],
                                    "propertyNames": {
                                      "pattern": "^[a-z@$][a-zA-Z0-9-_]+$",
                                      "x-parser-schema-id": "<anonymous-schema-274>"
                                    },
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "pattern": "^[A-Z][a-zA-Z0-9]+$",
                                        "description": "The item type (Linked-Data @type)",
                                        "x-parser-schema-id": "<anonymous-schema-272>"
                                      },
                                      "@id": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "the liked data uri for the Thing",
                                        "x-parser-schema-id": "<anonymous-schema-273>"
                                      }
                                    },
                                    "x-parser-schema-id": "Thing"
                                  },
                                  {
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "MediaObject",
                                          "ImageObject",
                                          "DigitalDocument"
                                        ]
                                      },
                                      "id": {
                                        "description": "the URL to access the item.",
                                        "example": "http://user.example.com/public/logo/fileName.zip",
                                        "type": "string",
                                        "format": "uri"
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "the file name of the object.",
                                        "example": "fileName.zip"
                                      },
                                      "encodingFormat": {
                                        "type": "string",
                                        "description": "MIME type",
                                        "example": "application/zip"
                                      },
                                      "about": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "URI to the subject of the image or logo",
                                        "example": "http://user.example.com/profile/card#me"
                                      },
                                      "url": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "URL of the image content",
                                        "example": "http://user.example.com/public/profile/image.jpg"
                                      }
                                    },
                                    "x-parser-schema-id": "<anonymous-schema-275>"
                                  }
                                ],
                                "x-parser-schema-id": "MediaObject"
                              },
                              {
                                "title": "ImageObject",
                                "x-range": "ImageObject",
                                "properties": {
                                  "type": {
                                    "enum": [
                                      "ImageObject"
                                    ],
                                    "example": "ImageObject"
                                  },
                                  "id": {
                                    "example": "http://user.example.com/public/logo/image.jpg"
                                  },
                                  "name": {
                                    "example": "image.jpg"
                                  },
                                  "encodingFormat": {
                                    "example": "image/jpeg"
                                  }
                                },
                                "x-parser-schema-id": "<anonymous-schema-276>"
                              }
                            ],
                            "x-parser-schema-id": "<anonymous-schema-271>"
                          }
                        ]
                      },
                      "logo": {
                        "description": "a logo associated with the organization.",
                        "items": {
                          "allOf": [
                            {
                              "type": "object",
                              "title": "DigitalDocument",
                              "x-range": "DigitalDocument",
                              "description": "an electronic file.",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "DigitalDocument"
                                  ],
                                  "x-parser-schema-id": "<anonymous-schema-621>"
                                },
                                "id": {
                                  "type": "string",
                                  "example": "http://user.example.com/public/logo/archive.zip",
                                  "x-parser-schema-id": "<anonymous-schema-622>"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "document name or title",
                                  "example": "archive.zip",
                                  "x-parser-schema-id": "<anonymous-schema-623>"
                                },
                                "encodingFormat": {
                                  "type": "string",
                                  "description": "[ISO Media Type](https://www.iana.org/assignments/media-types/media-types.xhtml)",
                                  "example": "application/zip",
                                  "x-parser-schema-id": "<anonymous-schema-624>"
                                },
                                "about": {
                                  "type": "object",
                                  "description": "subject of the Document",
                                  "x-range": "Thing",
                                  "example": {
                                    "type": "RealEstateTransaction",
                                    "identifier": {
                                      "bmsTransactionId": "xxxx"
                                    }
                                  },
                                  "x-parser-schema-id": "<anonymous-schema-625>"
                                },
                                "url": {
                                  "type": "string",
                                  "description": "public URL of the object",
                                  "example": "https://example.com",
                                  "x-parser-schema-id": "<anonymous-schema-626>"
                                }
                              },
                              "x-parser-schema-id": "DigitalDocument"
                            },
                            {
                              "description": "an associated logo",
                              "type": "object"
                            }
                          ],
                          "type": "object"
                        },
                        "type": "array",
                        "x-range": [
                          "ImageObject",
                          "DigitalDocument"
                        ]
                      },
                      "name": {
                        "description": "Name or DBA.",
                        "type": "string"
                      },
                      "parentOrganization": {
                        "items": {
                          "format": "uri",
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "subOrganization": {
                        "description": "a child organization",
                        "x-range": [
                          "RealEstateOrganization"
                        ],
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uri",
                          "example": "http://org.example.com/profile/card#me"
                        }
                      },
                      "telephone": {
                        "type": "string",
                        "description": "Primary phone number.",
                        "example": "+15558675309",
                        "x-parser-schema-id": "<anonymous-schema-128>"
                      },
                      "type": {
                        "enum": [
                          "Organization"
                        ],
                        "type": "string"
                      },
                      "url": {
                        "description": "primary website/url for the entity.",
                        "format": "uri",
                        "type": "string"
                      }
                    },
                    "x-parser-schema-id": "<anonymous-schema-412>"
                  }
                ],
                "x-parser-schema-id": "Organization"
              },
              {
                "title": "RealEstateOrganization",
                "description": "A real estate franchisor, broker or business",
                "x-range": "RealEstateOrganization",
                "properties": {
                  "type": {
                    "description": "RealEstateOrganzation",
                    "enum": [
                      "RealEstateOrganization",
                      "RealEstateOffice",
                      "RealEstateAgent"
                    ],
                    "example": "RealEstateOrganization"
                  },
                  "areaServed": {
                    "type": "object",
                    "description": "the physical areas that make up the ServiceArea",
                    "x-range": [
                      "City",
                      "PostalCodeArea"
                    ],
                    "example": {
                      "type": "PostalCode",
                      "postalCode": "91371",
                      "addressLocality": "Woodland Hills",
                      "addressCounty": "Los Angeles",
                      "addressRegion": "CA",
                      "addressCountry": "US"
                    }
                  },
                  "description": {
                    "example": "The number on Gotham City Real Estate Company since 1940",
                    "type": "string",
                    "description": "description of the item."
                  },
                  "parentOrganization": {
                    "type": "array",
                    "x-range": "RealEstateOrganization",
                    "description": "A franchisor or affiliate network of which this organization plays a membership role.",
                    "items": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "numberOfSubOrganizations": {
                    "type": "number",
                    "description": "the number of offices for an affiliate."
                  },
                  "member": {
                    "title": "member",
                    "description": "A member of an Organization or a ProgramMembership. Organizations can be members of organizations; ProgramMembership is typically for individuals.",
                    "type": "array",
                    "x-range": [
                      "OrganizationRole",
                      "URI"
                    ],
                    "items": {
                      "anyOf": [
                        {
                          "title": "OrganizationRole",
                          "type": "object",
                          "description": "describes a role played by a member and a group or organization.",
                          "properties": {
                            "type": {
                              "type": "string",
                              "description": "a role played by the member in the memberOf group",
                              "enum": [
                                "OrganizationRole"
                              ],
                              "x-parser-schema-id": "<anonymous-schema-391>"
                            },
                            "roleName": {
                              "type": "string",
                              "description": "the role name",
                              "example": "Owner",
                              "x-parser-schema-id": "<anonymous-schema-392>"
                            },
                            "memberOf": {
                              "description": "the org or group where the role is performed",
                              "type": "object",
                              "example": {
                                "type": "RealEstateOrganization",
                                "id": "http://orgid.example.com/profile/card#me"
                              },
                              "x-parser-schema-id": "<anonymous-schema-393>"
                            },
                            "member": {
                              "description": "member object or id",
                              "type": "string",
                              "format": "uri",
                              "example": "https://memberid.example.com/profile/card#me",
                              "x-parser-schema-id": "<anonymous-schema-394>"
                            },
                            "startDate": {
                              "type": "string",
                              "format": "date-time",
                              "description": "date the member began performing this role",
                              "x-parser-schema-id": "<anonymous-schema-395>"
                            },
                            "endDate": {
                              "type": "string",
                              "format": "date-time",
                              "description": "date the member stopped performing the role",
                              "x-parser-schema-id": "<anonymous-schema-396>"
                            }
                          },
                          "x-parser-schema-id": "OrganizationRole"
                        },
                        {
                          "type": "string",
                          "format": "uri"
                        }
                      ]
                    }
                  },
                  "memberOf": {
                    "x-range": [
                      "OrganizationRole",
                      "MLSMembership"
                    ],
                    "description": "An Organization (or ProgramMembership) to which this Person or Organization belongs.",
                    "type": "array",
                    "items": {
                      "allOf": [
                        {
                          "title": "OrganizationRole",
                          "type": "object",
                          "description": "describes a role played by a member and a group or organization.",
                          "properties": {
                            "type": {
                              "type": "string",
                              "description": "a role played by the member in the memberOf group",
                              "enum": [
                                "OrganizationRole"
                              ],
                              "x-parser-schema-id": "<anonymous-schema-391>"
                            },
                            "roleName": {
                              "type": "string",
                              "description": "the role name",
                              "example": "Owner",
                              "x-parser-schema-id": "<anonymous-schema-392>"
                            },
                            "memberOf": {
                              "description": "the org or group where the role is performed",
                              "type": "object",
                              "example": {
                                "type": "RealEstateOrganization",
                                "id": "http://orgid.example.com/profile/card#me"
                              },
                              "x-parser-schema-id": "<anonymous-schema-393>"
                            },
                            "member": {
                              "description": "member object or id",
                              "type": "string",
                              "format": "uri",
                              "example": "https://memberid.example.com/profile/card#me",
                              "x-parser-schema-id": "<anonymous-schema-394>"
                            },
                            "startDate": {
                              "type": "string",
                              "format": "date-time",
                              "description": "date the member began performing this role",
                              "x-parser-schema-id": "<anonymous-schema-395>"
                            },
                            "endDate": {
                              "type": "string",
                              "format": "date-time",
                              "description": "date the member stopped performing the role",
                              "x-parser-schema-id": "<anonymous-schema-396>"
                            }
                          },
                          "x-parser-schema-id": "OrganizationRole"
                        },
                        {
                          "type": "object",
                          "title": "MLSMembership",
                          "description": "a membership relationship",
                          "properties": {
                            "type": {
                              "type": "string",
                              "description": "an MLS member relationship",
                              "enum": [
                                "MLSMembership"
                              ],
                              "example": "MLSMembership",
                              "x-parser-schema-id": "<anonymous-schema-664>"
                            },
                            "roleName": {
                              "type": "string",
                              "example": "MLSMember",
                              "x-parser-schema-id": "<anonymous-schema-665>"
                            },
                            "memberOf": {
                              "type": "object",
                              "x-range": "MultipleListingService",
                              "example": {
                                "type": "MultipleListingService",
                                "name": "GreatScottMLS"
                              },
                              "x-parser-schema-id": "<anonymous-schema-666>"
                            },
                            "member": {
                              "type": "string",
                              "format": "uri",
                              "example": "https://{agent}.example.com/profile/card#me",
                              "x-parser-schema-id": "<anonymous-schema-667>"
                            },
                            "memberId": {
                              "type": "string",
                              "description": "the user's MLSID",
                              "example": "memberid123",
                              "x-parser-schema-id": "<anonymous-schema-668>"
                            }
                          },
                          "x-parser-schema-id": "<anonymous-schema-663>"
                        }
                      ],
                      "x-parser-schema-id": "MLSMembership"
                    }
                  },
                  "permit": {
                    "type": "array",
                    "x-range": "RealEstateLicense",
                    "items": {
                      "type": "object",
                      "example": {
                        "type": "RealEstateLicense",
                        "name": "CA-DRE# 02068375",
                        "identifier": {
                          "type": "PropertyValue",
                          "name": "CA-DRE",
                          "value": "02068375"
                        },
                        "issuedBy": {
                          "type": "State",
                          "name": "California"
                        },
                        "issuedThrough": {
                          "type": "Service",
                          "name": "California Department of Real Estate"
                        },
                        "validIn": {
                          "type": "State",
                          "name": "California"
                        },
                        "validFrom": "2019-07-07T10:55:02Z",
                        "validUntil": "2019-07-07T10:55:02Z"
                      }
                    }
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-414>"
              }
            ],
            "x-parser-schema-id": "RealEstateOrganization"
          },
          {
            "title": "RealEstateOffice",
            "properties": {
              "type": {
                "type": "string",
                "description": "RealEstateOffice",
                "enum": [
                  "RealEstateOffice"
                ]
              },
              "contactPoint": {
                "description": "department or role specific contact points, i.e. relocation.",
                "example": [
                  {
                    "type": "ContactPoint",
                    "name": "Relocation",
                    "telephone": "1-245-880-8222",
                    "faxNumber": "958-530-3473",
                    "email": "relocation@example.com"
                  }
                ]
              },
              "description": {
                "example": "The number on Gotham City Real Estate Company since 1940"
              },
              "parentOrganization": {
                "description": "Office broker or franchisor.",
                "x-range": "RealEstateOrganization"
              },
              "subOrganization": {
                "type": "array",
                "x-range": "RealEstateAgent",
                "description": "Agents and teams associated with the office.",
                "items": {
                  "type": "string",
                  "format": "uri"
                }
              },
              "geoCoordinates": {
                "title": "GeoCoordinates",
                "type": "object",
                "description": "a lat/long point.",
                "x-range": "GeoCoordinates",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "GeoCordinates",
                    "enum": [
                      "GeoCoordinates"
                    ],
                    "x-parser-schema-id": "<anonymous-schema-631>"
                  },
                  "longitude": {
                    "type": "number",
                    "description": "The longitude of a location.",
                    "x-title": "longitude",
                    "example": 73.98,
                    "x-parser-schema-id": "<anonymous-schema-287>"
                  },
                  "latitude": {
                    "type": "number",
                    "description": "The latitude of a location.",
                    "x-title": "latitude",
                    "example": 40.75,
                    "x-parser-schema-id": "<anonymous-schema-278>"
                  }
                }
              }
            },
            "x-parser-schema-id": "<anonymous-schema-773>"
          }
        ],
        "x-parser-schema-id": "RealEstateOffice"
      },
      "RealEstateOrganization": {
        "allOf": [
          {
            "allOf": [
              {
                "$id": "http://realestate.yodata.me/schema/Thing",
                "type": "object",
                "title": "Thing",
                "summary": "The root type of all Things.",
                "required": [
                  "type"
                ],
                "propertyNames": {
                  "pattern": "^[a-z@$][a-zA-Z0-9-_]+$",
                  "x-parser-schema-id": "<anonymous-schema-274>"
                },
                "properties": {
                  "type": {
                    "type": "string",
                    "pattern": "^[A-Z][a-zA-Z0-9]+$",
                    "description": "The item type (Linked-Data @type)",
                    "x-parser-schema-id": "<anonymous-schema-272>"
                  },
                  "@id": {
                    "type": "string",
                    "format": "uri",
                    "description": "the liked data uri for the Thing",
                    "x-parser-schema-id": "<anonymous-schema-273>"
                  }
                },
                "x-parser-schema-id": "Thing"
              },
              {
                "x-kind": "Organization",
                "x-parser-schema-id": "<anonymous-schema-410>"
              },
              {
                "x-hasSubclass": [
                  "RealEstateOrganization",
                  "RealEstateOffice",
                  "RealEstateAgent"
                ],
                "x-parser-schema-id": "<anonymous-schema-411>"
              },
              {
                "x-subClassOf": [
                  "https://schema.org/Organization"
                ],
                "properties": {
                  "address": {
                    "type": "object",
                    "x-range": "PostalAddress",
                    "description": "A physical address.",
                    "example": {
                      "type": "PostalAddress",
                      "name": "Home",
                      "addressCountry": "USA",
                      "addressCounty": "Gotham County",
                      "addressLocality": "Gotham City",
                      "addressRegion": "New Jersey",
                      "addressSubdivision": "Gotham Heights",
                      "postalCode": "10010",
                      "postOfficeBoxNumber": "Box 1234",
                      "streetAddress": "1007 Mountain Gate Rd"
                    },
                    "x-parser-schema-id": "<anonymous-schema-370>"
                  },
                  "availableLanguage": {
                    "title": "availableLanguage",
                    "type": "array",
                    "description": "Please use one of the language codes from the IETF BCP 47 standard.",
                    "x-range": "Language",
                    "items": {
                      "$id": "htttp://realestate.yodata.me/schema/Language.yaml",
                      "description": "a written or spoken Language",
                      "title": "Language",
                      "type": "object",
                      "required": [
                        "type",
                        "name",
                        "additionalName"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "const": "Language",
                          "x-parser-schema-id": "<anonymous-schema-124>"
                        },
                        "name": {
                          "type": "string",
                          "description": "the display name of the language",
                          "x-parser-schema-id": "<anonymous-schema-125>"
                        },
                        "additionalName": {
                          "type": "string",
                          "description": "BCP 47 language code",
                          "x-parser-schema-id": "<anonymous-schema-126>"
                        }
                      },
                      "examples": [
                        {
                          "type": "Language",
                          "name": "English",
                          "additionalName": "en-us"
                        },
                        {
                          "type": "Language",
                          "name": "Spanish",
                          "additionalName": "es"
                        },
                        {
                          "type": "Language",
                          "name": "French",
                          "additionalName": "fr"
                        },
                        {
                          "type": "Language",
                          "name": "German",
                          "additionalName": "de"
                        },
                        {
                          "type": "Language",
                          "name": "Italian",
                          "additionalName": "it"
                        },
                        {
                          "type": "Language",
                          "name": "Japanese",
                          "additionalName": "ja"
                        },
                        {
                          "type": "Language",
                          "name": "Korean",
                          "additionalName": "ko"
                        },
                        {
                          "type": "Language",
                          "name": "Portuguese",
                          "additionalName": "pt"
                        },
                        {
                          "type": "Language",
                          "name": "Russian",
                          "additionalName": "ru"
                        },
                        {
                          "type": "Language",
                          "name": "Chinese",
                          "additionalName": "zh"
                        },
                        {
                          "type": "Language",
                          "name": "Arabic",
                          "additionalName": "ar"
                        },
                        {
                          "type": "Language",
                          "name": "Hindi",
                          "additionalName": "hi"
                        },
                        {
                          "type": "Language",
                          "name": "Bengali",
                          "additionalName": "bn"
                        },
                        {
                          "type": "Language",
                          "name": "Portuguese",
                          "additionalName": "pt"
                        }
                      ],
                      "x-parser-schema-id": "Language"
                    }
                  },
                  "branchCode": {
                    "description": "A short textual code that uniquely identifies a place of business.",
                    "example": "for BHHS profile events, see additionalProperty.OfficeId",
                    "type": "string"
                  },
                  "certification": {
                    "$id": "http://realestate.yodata.me/schema/certification",
                    "title": "certifications",
                    "description": "certifications granted to a person or organization",
                    "type": "array",
                    "items": [
                      {
                        "type": "object",
                        "title": "Certification",
                        "description": "A certification issued by an organization to an individual or business.",
                        "x-range": "Certification",
                        "properties": {
                          "type": {
                            "description": "Certification",
                            "type": "string",
                            "enum": [
                              "Certification"
                            ],
                            "x-parser-schema-id": "<anonymous-schema-594>"
                          },
                          "name": {
                            "type": "string",
                            "description": "the name of the Certification",
                            "example": "e-Agent Certified",
                            "x-parser-schema-id": "<anonymous-schema-595>"
                          },
                          "issuedBy": {
                            "type": "object",
                            "x-range": "RealEstateOrganization",
                            "description": "the issuing authority",
                            "properties": {
                              "type": {
                                "enum": [
                                  "RealEstateOrganization"
                                ],
                                "type": "string",
                                "description": "The item type (Linked-Data @type)",
                                "x-parser-schema-id": "<anonymous-schema-375>"
                              },
                              "id": {
                                "example": "https://example.com/profile/card#me",
                                "type": "string",
                                "format": "uri",
                                "description": "Linked-Data URI (@id)",
                                "x-parser-schema-id": "<anonymous-schema-376>"
                              },
                              "name": {
                                "type": "string",
                                "description": "name of the issuing organization",
                                "example": "Gotham City Real Estate",
                                "x-parser-schema-id": "<anonymous-schema-377>"
                              }
                            },
                            "x-parser-schema-id": "<anonymous-schema-374>"
                          },
                          "issuedTo": {
                            "x-range": "RealEstateAgent",
                            "type": "object",
                            "description": "the subject",
                            "properties": {
                              "type": {
                                "enum": [
                                  "RealEstateAgent"
                                ],
                                "type": "string",
                                "description": "The item type (Linked-Data @type)",
                                "x-parser-schema-id": "<anonymous-schema-379>"
                              },
                              "id": {
                                "type": "string",
                                "format": "uri",
                                "description": "Linked-Data URI (@id)",
                                "x-parser-schema-id": "<anonymous-schema-380>"
                              },
                              "name": {
                                "type": "string",
                                "description": "the name of the item",
                                "x-parser-schema-id": "<anonymous-schema-92>"
                              }
                            },
                            "x-parser-schema-id": "<anonymous-schema-596>"
                          }
                        },
                        "x-parser-schema-id": "Certification"
                      }
                    ]
                  },
                  "contactPoint": {
                    "$id": "http://realestate.yodata.me/definitions/contactPoint.json",
                    "type": "array",
                    "description": "a named point of contact - telephone, email, faxNumber, and/or url for the entity",
                    "items": {
                      "$id": "htttp://realestate.yodata.me/schema/ContactPoint.json",
                      "title": "ContactPoint",
                      "description": "A point of contact for the entity. By convention in the real estate domain, ContactPoints\nare preferred over telephone, email, and faxNumber so the ContactPoint.name property can be used to label values\nfor example, Work Telephone, Home, as named contactPoint values.\n",
                      "type": "object",
                      "required": [
                        "type",
                        "name"
                      ],
                      "minProperties": 3,
                      "properties": {
                        "type": {
                          "type": "string",
                          "const": "ContactPoint",
                          "x-parser-schema-id": "<anonymous-schema-110>"
                        },
                        "name": {
                          "type": "string",
                          "description": "a label for the contactPoint, i.e. 'Work', or 'Home'",
                          "examples": [
                            "Work",
                            "Home",
                            "Vacation",
                            "Bob's Cell",
                            "Alice's Work"
                          ],
                          "x-parser-schema-id": "<anonymous-schema-111>"
                        },
                        "telephone": {
                          "type": "string",
                          "x-faker": "phone.phoneNumber",
                          "examples": [
                            "555-555-5555",
                            "555-555-5555 x123",
                            "555-555-5555 ext. 123",
                            "+1-555-555-5555"
                          ],
                          "x-parser-schema-id": "<anonymous-schema-112>"
                        },
                        "faxNumber": {
                          "type": "string",
                          "x-faker": "phone.phoneNumber",
                          "examples": [
                            "555-555-5555",
                            "555-555-5555 x123",
                            "555-555-5555 ext. 123",
                            "+1-555-555-5555"
                          ],
                          "x-parser-schema-id": "<anonymous-schema-113>"
                        },
                        "email": {
                          "description": "an email address for the item.",
                          "type": "string",
                          "format": "email",
                          "x-faker": "internet.email",
                          "examples": [
                            "bob@example.com",
                            "alice@example.com"
                          ],
                          "x-parser-schema-id": "<anonymous-schema-114>"
                        },
                        "url": {
                          "description": "primary URL for the item.",
                          "type": "string",
                          "format": "uri",
                          "example": "https://www.facebook.com/hallandoates",
                          "x-parser-schema-id": "<anonymous-schema-115>"
                        }
                      },
                      "x-parser-schema-id": "ContactPoint"
                    }
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "x-faker": "internet.email",
                    "x-parser-schema-id": "<anonymous-schema-93>"
                  },
                  "faxNumber": {
                    "type": "string",
                    "description": "Do people still use fax machines?",
                    "x-faker": "phone.phoneNumber",
                    "x-parser-schema-id": "<anonymous-schema-117>"
                  },
                  "image": {
                    "title": "image",
                    "description": "an ImageObject or URI reference to an image on the web.",
                    "type": "array",
                    "x-range": [
                      "ImageObject"
                    ],
                    "items": [
                      {
                        "type": "object",
                        "allOf": [
                          {
                            "title": "MediaObject",
                            "description": "an image, video or document availble for download",
                            "x-subclass": [
                              "ImageObject",
                              "DigitalDocument"
                            ],
                            "allOf": [
                              {
                                "$id": "http://realestate.yodata.me/schema/Thing",
                                "type": "object",
                                "title": "Thing",
                                "summary": "The root type of all Things.",
                                "required": [
                                  "type"
                                ],
                                "propertyNames": {
                                  "pattern": "^[a-z@$][a-zA-Z0-9-_]+$",
                                  "x-parser-schema-id": "<anonymous-schema-274>"
                                },
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "pattern": "^[A-Z][a-zA-Z0-9]+$",
                                    "description": "The item type (Linked-Data @type)",
                                    "x-parser-schema-id": "<anonymous-schema-272>"
                                  },
                                  "@id": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "the liked data uri for the Thing",
                                    "x-parser-schema-id": "<anonymous-schema-273>"
                                  }
                                },
                                "x-parser-schema-id": "Thing"
                              },
                              {
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "MediaObject",
                                      "ImageObject",
                                      "DigitalDocument"
                                    ]
                                  },
                                  "id": {
                                    "description": "the URL to access the item.",
                                    "example": "http://user.example.com/public/logo/fileName.zip",
                                    "type": "string",
                                    "format": "uri"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "the file name of the object.",
                                    "example": "fileName.zip"
                                  },
                                  "encodingFormat": {
                                    "type": "string",
                                    "description": "MIME type",
                                    "example": "application/zip"
                                  },
                                  "about": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "URI to the subject of the image or logo",
                                    "example": "http://user.example.com/profile/card#me"
                                  },
                                  "url": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "URL of the image content",
                                    "example": "http://user.example.com/public/profile/image.jpg"
                                  }
                                },
                                "x-parser-schema-id": "<anonymous-schema-275>"
                              }
                            ],
                            "x-parser-schema-id": "MediaObject"
                          },
                          {
                            "title": "ImageObject",
                            "x-range": "ImageObject",
                            "properties": {
                              "type": {
                                "enum": [
                                  "ImageObject"
                                ],
                                "example": "ImageObject"
                              },
                              "id": {
                                "example": "http://user.example.com/public/logo/image.jpg"
                              },
                              "name": {
                                "example": "image.jpg"
                              },
                              "encodingFormat": {
                                "example": "image/jpeg"
                              }
                            },
                            "x-parser-schema-id": "<anonymous-schema-276>"
                          }
                        ],
                        "x-parser-schema-id": "<anonymous-schema-271>"
                      }
                    ]
                  },
                  "logo": {
                    "description": "a logo associated with the organization.",
                    "items": {
                      "allOf": [
                        {
                          "type": "object",
                          "title": "DigitalDocument",
                          "x-range": "DigitalDocument",
                          "description": "an electronic file.",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "DigitalDocument"
                              ],
                              "x-parser-schema-id": "<anonymous-schema-621>"
                            },
                            "id": {
                              "type": "string",
                              "example": "http://user.example.com/public/logo/archive.zip",
                              "x-parser-schema-id": "<anonymous-schema-622>"
                            },
                            "name": {
                              "type": "string",
                              "description": "document name or title",
                              "example": "archive.zip",
                              "x-parser-schema-id": "<anonymous-schema-623>"
                            },
                            "encodingFormat": {
                              "type": "string",
                              "description": "[ISO Media Type](https://www.iana.org/assignments/media-types/media-types.xhtml)",
                              "example": "application/zip",
                              "x-parser-schema-id": "<anonymous-schema-624>"
                            },
                            "about": {
                              "type": "object",
                              "description": "subject of the Document",
                              "x-range": "Thing",
                              "example": {
                                "type": "RealEstateTransaction",
                                "identifier": {
                                  "bmsTransactionId": "xxxx"
                                }
                              },
                              "x-parser-schema-id": "<anonymous-schema-625>"
                            },
                            "url": {
                              "type": "string",
                              "description": "public URL of the object",
                              "example": "https://example.com",
                              "x-parser-schema-id": "<anonymous-schema-626>"
                            }
                          },
                          "x-parser-schema-id": "DigitalDocument"
                        },
                        {
                          "description": "an associated logo",
                          "type": "object"
                        }
                      ],
                      "type": "object"
                    },
                    "type": "array",
                    "x-range": [
                      "ImageObject",
                      "DigitalDocument"
                    ]
                  },
                  "name": {
                    "description": "Name or DBA.",
                    "type": "string"
                  },
                  "parentOrganization": {
                    "items": {
                      "format": "uri",
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "subOrganization": {
                    "description": "a child organization",
                    "x-range": [
                      "RealEstateOrganization"
                    ],
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uri",
                      "example": "http://org.example.com/profile/card#me"
                    }
                  },
                  "telephone": {
                    "type": "string",
                    "description": "Primary phone number.",
                    "example": "+15558675309",
                    "x-parser-schema-id": "<anonymous-schema-128>"
                  },
                  "type": {
                    "enum": [
                      "Organization"
                    ],
                    "type": "string"
                  },
                  "url": {
                    "description": "primary website/url for the entity.",
                    "format": "uri",
                    "type": "string"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-412>"
              }
            ],
            "x-parser-schema-id": "Organization"
          },
          {
            "title": "RealEstateOrganization",
            "description": "A real estate franchisor, broker or business",
            "x-range": "RealEstateOrganization",
            "properties": {
              "type": {
                "description": "RealEstateOrganzation",
                "enum": [
                  "RealEstateOrganization",
                  "RealEstateOffice",
                  "RealEstateAgent"
                ],
                "example": "RealEstateOrganization"
              },
              "areaServed": {
                "type": "object",
                "description": "the physical areas that make up the ServiceArea",
                "x-range": [
                  "City",
                  "PostalCodeArea"
                ],
                "example": {
                  "type": "PostalCode",
                  "postalCode": "91371",
                  "addressLocality": "Woodland Hills",
                  "addressCounty": "Los Angeles",
                  "addressRegion": "CA",
                  "addressCountry": "US"
                }
              },
              "description": {
                "example": "The number on Gotham City Real Estate Company since 1940",
                "type": "string",
                "description": "description of the item."
              },
              "parentOrganization": {
                "type": "array",
                "x-range": "RealEstateOrganization",
                "description": "A franchisor or affiliate network of which this organization plays a membership role.",
                "items": {
                  "type": "string",
                  "format": "uri"
                }
              },
              "numberOfSubOrganizations": {
                "type": "number",
                "description": "the number of offices for an affiliate."
              },
              "member": {
                "title": "member",
                "description": "A member of an Organization or a ProgramMembership. Organizations can be members of organizations; ProgramMembership is typically for individuals.",
                "type": "array",
                "x-range": [
                  "OrganizationRole",
                  "URI"
                ],
                "items": {
                  "anyOf": [
                    {
                      "title": "OrganizationRole",
                      "type": "object",
                      "description": "describes a role played by a member and a group or organization.",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "a role played by the member in the memberOf group",
                          "enum": [
                            "OrganizationRole"
                          ],
                          "x-parser-schema-id": "<anonymous-schema-391>"
                        },
                        "roleName": {
                          "type": "string",
                          "description": "the role name",
                          "example": "Owner",
                          "x-parser-schema-id": "<anonymous-schema-392>"
                        },
                        "memberOf": {
                          "description": "the org or group where the role is performed",
                          "type": "object",
                          "example": {
                            "type": "RealEstateOrganization",
                            "id": "http://orgid.example.com/profile/card#me"
                          },
                          "x-parser-schema-id": "<anonymous-schema-393>"
                        },
                        "member": {
                          "description": "member object or id",
                          "type": "string",
                          "format": "uri",
                          "example": "https://memberid.example.com/profile/card#me",
                          "x-parser-schema-id": "<anonymous-schema-394>"
                        },
                        "startDate": {
                          "type": "string",
                          "format": "date-time",
                          "description": "date the member began performing this role",
                          "x-parser-schema-id": "<anonymous-schema-395>"
                        },
                        "endDate": {
                          "type": "string",
                          "format": "date-time",
                          "description": "date the member stopped performing the role",
                          "x-parser-schema-id": "<anonymous-schema-396>"
                        }
                      },
                      "x-parser-schema-id": "OrganizationRole"
                    },
                    {
                      "type": "string",
                      "format": "uri"
                    }
                  ]
                }
              },
              "memberOf": {
                "x-range": [
                  "OrganizationRole",
                  "MLSMembership"
                ],
                "description": "An Organization (or ProgramMembership) to which this Person or Organization belongs.",
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "title": "OrganizationRole",
                      "type": "object",
                      "description": "describes a role played by a member and a group or organization.",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "a role played by the member in the memberOf group",
                          "enum": [
                            "OrganizationRole"
                          ],
                          "x-parser-schema-id": "<anonymous-schema-391>"
                        },
                        "roleName": {
                          "type": "string",
                          "description": "the role name",
                          "example": "Owner",
                          "x-parser-schema-id": "<anonymous-schema-392>"
                        },
                        "memberOf": {
                          "description": "the org or group where the role is performed",
                          "type": "object",
                          "example": {
                            "type": "RealEstateOrganization",
                            "id": "http://orgid.example.com/profile/card#me"
                          },
                          "x-parser-schema-id": "<anonymous-schema-393>"
                        },
                        "member": {
                          "description": "member object or id",
                          "type": "string",
                          "format": "uri",
                          "example": "https://memberid.example.com/profile/card#me",
                          "x-parser-schema-id": "<anonymous-schema-394>"
                        },
                        "startDate": {
                          "type": "string",
                          "format": "date-time",
                          "description": "date the member began performing this role",
                          "x-parser-schema-id": "<anonymous-schema-395>"
                        },
                        "endDate": {
                          "type": "string",
                          "format": "date-time",
                          "description": "date the member stopped performing the role",
                          "x-parser-schema-id": "<anonymous-schema-396>"
                        }
                      },
                      "x-parser-schema-id": "OrganizationRole"
                    },
                    {
                      "type": "object",
                      "title": "MLSMembership",
                      "description": "a membership relationship",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "an MLS member relationship",
                          "enum": [
                            "MLSMembership"
                          ],
                          "example": "MLSMembership",
                          "x-parser-schema-id": "<anonymous-schema-664>"
                        },
                        "roleName": {
                          "type": "string",
                          "example": "MLSMember",
                          "x-parser-schema-id": "<anonymous-schema-665>"
                        },
                        "memberOf": {
                          "type": "object",
                          "x-range": "MultipleListingService",
                          "example": {
                            "type": "MultipleListingService",
                            "name": "GreatScottMLS"
                          },
                          "x-parser-schema-id": "<anonymous-schema-666>"
                        },
                        "member": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://{agent}.example.com/profile/card#me",
                          "x-parser-schema-id": "<anonymous-schema-667>"
                        },
                        "memberId": {
                          "type": "string",
                          "description": "the user's MLSID",
                          "example": "memberid123",
                          "x-parser-schema-id": "<anonymous-schema-668>"
                        }
                      },
                      "x-parser-schema-id": "<anonymous-schema-663>"
                    }
                  ],
                  "x-parser-schema-id": "MLSMembership"
                }
              },
              "permit": {
                "type": "array",
                "x-range": "RealEstateLicense",
                "items": {
                  "type": "object",
                  "example": {
                    "type": "RealEstateLicense",
                    "name": "CA-DRE# 02068375",
                    "identifier": {
                      "type": "PropertyValue",
                      "name": "CA-DRE",
                      "value": "02068375"
                    },
                    "issuedBy": {
                      "type": "State",
                      "name": "California"
                    },
                    "issuedThrough": {
                      "type": "Service",
                      "name": "California Department of Real Estate"
                    },
                    "validIn": {
                      "type": "State",
                      "name": "California"
                    },
                    "validFrom": "2019-07-07T10:55:02Z",
                    "validUntil": "2019-07-07T10:55:02Z"
                  }
                }
              }
            },
            "x-parser-schema-id": "<anonymous-schema-414>"
          }
        ],
        "x-parser-schema-id": "RealEstateOrganization"
      },
      "RealEstateProperty": {
        "title": "RealEstateProperty",
        "x-range": "RealEstateProperty",
        "description": "a property in the real estate transaction context",
        "type": "object",
        "required": [
          "type",
          "propertyType"
        ],
        "properties": {
          "type": {
            "description": "\"RealEstateProperty\"",
            "enum": [
              "RealEstateProperty"
            ],
            "type": "string",
            "x-parser-schema-id": "<anonymous-schema-747>"
          },
          "propertyType": {
            "type": "string",
            "description": "RESO property type (see range for allowed values)",
            "x-range": "PropertyType",
            "minLength": 4,
            "maxLength": 4,
            "enum": [
              "RESI",
              "RLSE",
              "RINC",
              "LAND",
              "MOBI",
              "FARM",
              "COMS",
              "COML",
              "BUSO"
            ],
            "x-parser-schema-id": "<anonymous-schema-296>"
          },
          "addressCountry": {
            "type": "string",
            "description": "two-letter ISO 3166-1 alpha-2 country code",
            "example": "US",
            "enum": [
              "CA",
              "DE",
              "GR",
              "IN",
              "IT",
              "MX",
              "PE",
              "PT",
              "ES",
              "AE",
              "GB",
              "US"
            ],
            "x-parser-schema-id": "<anonymous-schema-264>"
          },
          "addressLocality": {
            "type": "string",
            "description": "City, Township.",
            "example": "Gotham City",
            "maxLength": 50,
            "x-parser-schema-id": "<anonymous-schema-265>"
          },
          "addressRegion": {
            "type": "string",
            "description": "State or Province.",
            "example": "New Jersey",
            "maxLength": 3,
            "x-parser-schema-id": "<anonymous-schema-266>"
          },
          "apn": {
            "type": "string",
            "description": "Assessors Parcel Number",
            "example": "ABC-12345-XX-XXXX",
            "x-parser-schema-id": "<anonymous-schema-748>"
          },
          "image": {
            "title": "image",
            "description": "an ImageObject or URI reference to an image on the web.",
            "type": "array",
            "x-range": [
              "ImageObject"
            ],
            "items": [
              {
                "type": "object",
                "allOf": [
                  {
                    "title": "MediaObject",
                    "description": "an image, video or document availble for download",
                    "x-subclass": [
                      "ImageObject",
                      "DigitalDocument"
                    ],
                    "allOf": [
                      {
                        "$id": "http://realestate.yodata.me/schema/Thing",
                        "type": "object",
                        "title": "Thing",
                        "summary": "The root type of all Things.",
                        "required": [
                          "type"
                        ],
                        "propertyNames": {
                          "pattern": "^[a-z@$][a-zA-Z0-9-_]+$",
                          "x-parser-schema-id": "<anonymous-schema-274>"
                        },
                        "properties": {
                          "type": {
                            "type": "string",
                            "pattern": "^[A-Z][a-zA-Z0-9]+$",
                            "description": "The item type (Linked-Data @type)",
                            "x-parser-schema-id": "<anonymous-schema-272>"
                          },
                          "@id": {
                            "type": "string",
                            "format": "uri",
                            "description": "the liked data uri for the Thing",
                            "x-parser-schema-id": "<anonymous-schema-273>"
                          }
                        },
                        "x-parser-schema-id": "Thing"
                      },
                      {
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "MediaObject",
                              "ImageObject",
                              "DigitalDocument"
                            ]
                          },
                          "id": {
                            "description": "the URL to access the item.",
                            "example": "http://user.example.com/public/logo/fileName.zip",
                            "type": "string",
                            "format": "uri"
                          },
                          "name": {
                            "type": "string",
                            "description": "the file name of the object.",
                            "example": "fileName.zip"
                          },
                          "encodingFormat": {
                            "type": "string",
                            "description": "MIME type",
                            "example": "application/zip"
                          },
                          "about": {
                            "type": "string",
                            "format": "uri",
                            "description": "URI to the subject of the image or logo",
                            "example": "http://user.example.com/profile/card#me"
                          },
                          "url": {
                            "type": "string",
                            "format": "uri",
                            "description": "URL of the image content",
                            "example": "http://user.example.com/public/profile/image.jpg"
                          }
                        },
                        "x-parser-schema-id": "<anonymous-schema-275>"
                      }
                    ],
                    "x-parser-schema-id": "MediaObject"
                  },
                  {
                    "title": "ImageObject",
                    "x-range": "ImageObject",
                    "properties": {
                      "type": {
                        "enum": [
                          "ImageObject"
                        ],
                        "example": "ImageObject"
                      },
                      "id": {
                        "example": "http://user.example.com/public/logo/image.jpg"
                      },
                      "name": {
                        "example": "image.jpg"
                      },
                      "encodingFormat": {
                        "example": "image/jpeg"
                      }
                    },
                    "x-parser-schema-id": "<anonymous-schema-276>"
                  }
                ],
                "x-parser-schema-id": "<anonymous-schema-271>"
              }
            ],
            "x-parser-schema-id": "<anonymous-schema-270>"
          },
          "latitude": {
            "type": "number",
            "description": "The latitude of a location.",
            "x-title": "latitude",
            "example": 40.75,
            "x-parser-schema-id": "<anonymous-schema-278>"
          },
          "listingId": {
            "description": "the local identifier for the listing (MLS #)",
            "type": "string",
            "x-parser-schema-id": "<anonymous-schema-749>"
          },
          "livingArea": {
            "description": "property indoor space",
            "example": {
              "type": "QuantitativeValue",
              "unitCode": "SqFt",
              "unitText": "Square Feet",
              "value": 1500
            },
            "type": "object",
            "x-range": "QuantitativeValue",
            "x-parser-schema-id": "<anonymous-schema-750>"
          },
          "longitude": {
            "type": "number",
            "description": "The longitude of a location.",
            "x-title": "longitude",
            "example": 73.98,
            "x-parser-schema-id": "<anonymous-schema-287>"
          },
          "lotSize": {
            "description": "outdoor space minValue, maxValue",
            "example": {
              "type": "QuantitativeValue",
              "unitCode": "AC",
              "unitText": "Acres",
              "value": 0.5
            },
            "type": "object",
            "x-range": "QuantitativeValue",
            "x-parser-schema-id": "<anonymous-schema-751>"
          },
          "numberOfBathrooms": {
            "description": "the number of bathrooms",
            "example": "2",
            "type": "string",
            "x-parser-schema-id": "<anonymous-schema-752>"
          },
          "numberOfBedrooms": {
            "description": "the number of bedrooms",
            "example": "3",
            "type": "string",
            "x-parser-schema-id": "<anonymous-schema-753>"
          },
          "numberOfRooms": {
            "description": "the total number of rooms in the building",
            "type": "string",
            "example": 7,
            "x-parser-schema-id": "<anonymous-schema-754>"
          },
          "postalCode": {
            "type": "string",
            "description": "Zip/Post Code",
            "example": "10010",
            "maxLength": 12,
            "x-parser-schema-id": "<anonymous-schema-294>"
          },
          "propertySubType": {
            "title": "propertySubType",
            "type": "string",
            "x-range": "PropertySubType",
            "description": "RESO property sub-type (see range for allowed values)",
            "enum": [
              "ApartmentPropertyType",
              "BoatSlipPropertyType",
              "CabinPropertyType",
              "CondominiumPropertyType",
              "DeededParkingPropertyType",
              "DuplexPropertyType",
              "FarmPropertyType",
              "ManufacturedHomePropertyType",
              "ManufacturedOnLandPropertyType",
              "MobileHomePropertyType",
              "OwnYourOwnPropertyType",
              "QuadruplexPropertyType",
              "RanchPropertyType",
              "SingleFamilyPropertyType",
              "StockCooperativePropertyType",
              "TimesharePropertyType",
              "TownhousePropertyType",
              "TriplexPropertyType",
              "AgriculturePropertyType",
              "BusinessPropertyType",
              "HotelMotelPropertyType",
              "IndustrialPropertyType",
              "MixedUsePropertyType",
              "MultiFamilyPropertyType",
              "OfficePropertyType",
              "RetailPropertyType",
              "UnimprovedLandPropertyType",
              "WarehousePropertyType"
            ],
            "x-parser-schema-id": "<anonymous-schema-295>"
          },
          "stories": {
            "type": "number",
            "description": "he number of floors in the property",
            "example": 2,
            "x-parser-schema-id": "<anonymous-schema-298>"
          },
          "streetAddress": {
            "type": "string",
            "description": "the street address",
            "example": "1007 Mountain Gate Rd",
            "maxLength": 75,
            "x-parser-schema-id": "<anonymous-schema-299>"
          },
          "yearBuilt": {
            "type": "number",
            "description": "the year the structure was created",
            "example": 1988,
            "x-parser-schema-id": "<anonymous-schema-302>"
          }
        },
        "x-parser-schema-id": "RealEstateProperty"
      },
      "RealEstateTeam": {
        "allOf": [
          {
            "properties": {
              "id": {
                "type": "string",
                "example": "https://org.example.com/profile/card#me"
              }
            },
            "x-parser-schema-id": "<anonymous-schema-409>"
          },
          {
            "allOf": [
              {
                "$id": "http://realestate.yodata.me/schema/Thing",
                "type": "object",
                "title": "Thing",
                "summary": "The root type of all Things.",
                "required": [
                  "type"
                ],
                "propertyNames": {
                  "pattern": "^[a-z@$][a-zA-Z0-9-_]+$",
                  "x-parser-schema-id": "<anonymous-schema-274>"
                },
                "properties": {
                  "type": {
                    "type": "string",
                    "pattern": "^[A-Z][a-zA-Z0-9]+$",
                    "description": "The item type (Linked-Data @type)",
                    "x-parser-schema-id": "<anonymous-schema-272>"
                  },
                  "@id": {
                    "type": "string",
                    "format": "uri",
                    "description": "the liked data uri for the Thing",
                    "x-parser-schema-id": "<anonymous-schema-273>"
                  }
                },
                "x-parser-schema-id": "Thing"
              },
              {
                "x-kind": "Organization",
                "x-parser-schema-id": "<anonymous-schema-410>"
              },
              {
                "x-hasSubclass": [
                  "RealEstateOrganization",
                  "RealEstateOffice",
                  "RealEstateAgent"
                ],
                "x-parser-schema-id": "<anonymous-schema-411>"
              },
              {
                "x-subClassOf": [
                  "https://schema.org/Organization"
                ],
                "properties": {
                  "address": {
                    "type": "object",
                    "x-range": "PostalAddress",
                    "description": "A physical address.",
                    "example": {
                      "type": "PostalAddress",
                      "name": "Home",
                      "addressCountry": "USA",
                      "addressCounty": "Gotham County",
                      "addressLocality": "Gotham City",
                      "addressRegion": "New Jersey",
                      "addressSubdivision": "Gotham Heights",
                      "postalCode": "10010",
                      "postOfficeBoxNumber": "Box 1234",
                      "streetAddress": "1007 Mountain Gate Rd"
                    },
                    "x-parser-schema-id": "<anonymous-schema-370>"
                  },
                  "availableLanguage": {
                    "title": "availableLanguage",
                    "type": "array",
                    "description": "Please use one of the language codes from the IETF BCP 47 standard.",
                    "x-range": "Language",
                    "items": {
                      "$id": "htttp://realestate.yodata.me/schema/Language.yaml",
                      "description": "a written or spoken Language",
                      "title": "Language",
                      "type": "object",
                      "required": [
                        "type",
                        "name",
                        "additionalName"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "const": "Language",
                          "x-parser-schema-id": "<anonymous-schema-124>"
                        },
                        "name": {
                          "type": "string",
                          "description": "the display name of the language",
                          "x-parser-schema-id": "<anonymous-schema-125>"
                        },
                        "additionalName": {
                          "type": "string",
                          "description": "BCP 47 language code",
                          "x-parser-schema-id": "<anonymous-schema-126>"
                        }
                      },
                      "examples": [
                        {
                          "type": "Language",
                          "name": "English",
                          "additionalName": "en-us"
                        },
                        {
                          "type": "Language",
                          "name": "Spanish",
                          "additionalName": "es"
                        },
                        {
                          "type": "Language",
                          "name": "French",
                          "additionalName": "fr"
                        },
                        {
                          "type": "Language",
                          "name": "German",
                          "additionalName": "de"
                        },
                        {
                          "type": "Language",
                          "name": "Italian",
                          "additionalName": "it"
                        },
                        {
                          "type": "Language",
                          "name": "Japanese",
                          "additionalName": "ja"
                        },
                        {
                          "type": "Language",
                          "name": "Korean",
                          "additionalName": "ko"
                        },
                        {
                          "type": "Language",
                          "name": "Portuguese",
                          "additionalName": "pt"
                        },
                        {
                          "type": "Language",
                          "name": "Russian",
                          "additionalName": "ru"
                        },
                        {
                          "type": "Language",
                          "name": "Chinese",
                          "additionalName": "zh"
                        },
                        {
                          "type": "Language",
                          "name": "Arabic",
                          "additionalName": "ar"
                        },
                        {
                          "type": "Language",
                          "name": "Hindi",
                          "additionalName": "hi"
                        },
                        {
                          "type": "Language",
                          "name": "Bengali",
                          "additionalName": "bn"
                        },
                        {
                          "type": "Language",
                          "name": "Portuguese",
                          "additionalName": "pt"
                        }
                      ],
                      "x-parser-schema-id": "Language"
                    }
                  },
                  "branchCode": {
                    "description": "A short textual code that uniquely identifies a place of business.",
                    "example": "for BHHS profile events, see additionalProperty.OfficeId",
                    "type": "string"
                  },
                  "certification": {
                    "$id": "http://realestate.yodata.me/schema/certification",
                    "title": "certifications",
                    "description": "certifications granted to a person or organization",
                    "type": "array",
                    "items": [
                      {
                        "type": "object",
                        "title": "Certification",
                        "description": "A certification issued by an organization to an individual or business.",
                        "x-range": "Certification",
                        "properties": {
                          "type": {
                            "description": "Certification",
                            "type": "string",
                            "enum": [
                              "Certification"
                            ],
                            "x-parser-schema-id": "<anonymous-schema-594>"
                          },
                          "name": {
                            "type": "string",
                            "description": "the name of the Certification",
                            "example": "e-Agent Certified",
                            "x-parser-schema-id": "<anonymous-schema-595>"
                          },
                          "issuedBy": {
                            "type": "object",
                            "x-range": "RealEstateOrganization",
                            "description": "the issuing authority",
                            "properties": {
                              "type": {
                                "enum": [
                                  "RealEstateOrganization"
                                ],
                                "type": "string",
                                "description": "The item type (Linked-Data @type)",
                                "x-parser-schema-id": "<anonymous-schema-375>"
                              },
                              "id": {
                                "example": "https://example.com/profile/card#me",
                                "type": "string",
                                "format": "uri",
                                "description": "Linked-Data URI (@id)",
                                "x-parser-schema-id": "<anonymous-schema-376>"
                              },
                              "name": {
                                "type": "string",
                                "description": "name of the issuing organization",
                                "example": "Gotham City Real Estate",
                                "x-parser-schema-id": "<anonymous-schema-377>"
                              }
                            },
                            "x-parser-schema-id": "<anonymous-schema-374>"
                          },
                          "issuedTo": {
                            "x-range": "RealEstateAgent",
                            "type": "object",
                            "description": "the subject",
                            "properties": {
                              "type": {
                                "enum": [
                                  "RealEstateAgent"
                                ],
                                "type": "string",
                                "description": "The item type (Linked-Data @type)",
                                "x-parser-schema-id": "<anonymous-schema-379>"
                              },
                              "id": {
                                "type": "string",
                                "format": "uri",
                                "description": "Linked-Data URI (@id)",
                                "x-parser-schema-id": "<anonymous-schema-380>"
                              },
                              "name": {
                                "type": "string",
                                "description": "the name of the item",
                                "x-parser-schema-id": "<anonymous-schema-92>"
                              }
                            },
                            "x-parser-schema-id": "<anonymous-schema-596>"
                          }
                        },
                        "x-parser-schema-id": "Certification"
                      }
                    ]
                  },
                  "contactPoint": {
                    "$id": "http://realestate.yodata.me/definitions/contactPoint.json",
                    "type": "array",
                    "description": "a named point of contact - telephone, email, faxNumber, and/or url for the entity",
                    "items": {
                      "$id": "htttp://realestate.yodata.me/schema/ContactPoint.json",
                      "title": "ContactPoint",
                      "description": "A point of contact for the entity. By convention in the real estate domain, ContactPoints\nare preferred over telephone, email, and faxNumber so the ContactPoint.name property can be used to label values\nfor example, Work Telephone, Home, as named contactPoint values.\n",
                      "type": "object",
                      "required": [
                        "type",
                        "name"
                      ],
                      "minProperties": 3,
                      "properties": {
                        "type": {
                          "type": "string",
                          "const": "ContactPoint",
                          "x-parser-schema-id": "<anonymous-schema-110>"
                        },
                        "name": {
                          "type": "string",
                          "description": "a label for the contactPoint, i.e. 'Work', or 'Home'",
                          "examples": [
                            "Work",
                            "Home",
                            "Vacation",
                            "Bob's Cell",
                            "Alice's Work"
                          ],
                          "x-parser-schema-id": "<anonymous-schema-111>"
                        },
                        "telephone": {
                          "type": "string",
                          "x-faker": "phone.phoneNumber",
                          "examples": [
                            "555-555-5555",
                            "555-555-5555 x123",
                            "555-555-5555 ext. 123",
                            "+1-555-555-5555"
                          ],
                          "x-parser-schema-id": "<anonymous-schema-112>"
                        },
                        "faxNumber": {
                          "type": "string",
                          "x-faker": "phone.phoneNumber",
                          "examples": [
                            "555-555-5555",
                            "555-555-5555 x123",
                            "555-555-5555 ext. 123",
                            "+1-555-555-5555"
                          ],
                          "x-parser-schema-id": "<anonymous-schema-113>"
                        },
                        "email": {
                          "description": "an email address for the item.",
                          "type": "string",
                          "format": "email",
                          "x-faker": "internet.email",
                          "examples": [
                            "bob@example.com",
                            "alice@example.com"
                          ],
                          "x-parser-schema-id": "<anonymous-schema-114>"
                        },
                        "url": {
                          "description": "primary URL for the item.",
                          "type": "string",
                          "format": "uri",
                          "example": "https://www.facebook.com/hallandoates",
                          "x-parser-schema-id": "<anonymous-schema-115>"
                        }
                      },
                      "x-parser-schema-id": "ContactPoint"
                    }
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "x-faker": "internet.email",
                    "x-parser-schema-id": "<anonymous-schema-93>"
                  },
                  "faxNumber": {
                    "type": "string",
                    "description": "Do people still use fax machines?",
                    "x-faker": "phone.phoneNumber",
                    "x-parser-schema-id": "<anonymous-schema-117>"
                  },
                  "image": {
                    "title": "image",
                    "description": "an ImageObject or URI reference to an image on the web.",
                    "type": "array",
                    "x-range": [
                      "ImageObject"
                    ],
                    "items": [
                      {
                        "type": "object",
                        "allOf": [
                          {
                            "title": "MediaObject",
                            "description": "an image, video or document availble for download",
                            "x-subclass": [
                              "ImageObject",
                              "DigitalDocument"
                            ],
                            "allOf": [
                              {
                                "$id": "http://realestate.yodata.me/schema/Thing",
                                "type": "object",
                                "title": "Thing",
                                "summary": "The root type of all Things.",
                                "required": [
                                  "type"
                                ],
                                "propertyNames": {
                                  "pattern": "^[a-z@$][a-zA-Z0-9-_]+$",
                                  "x-parser-schema-id": "<anonymous-schema-274>"
                                },
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "pattern": "^[A-Z][a-zA-Z0-9]+$",
                                    "description": "The item type (Linked-Data @type)",
                                    "x-parser-schema-id": "<anonymous-schema-272>"
                                  },
                                  "@id": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "the liked data uri for the Thing",
                                    "x-parser-schema-id": "<anonymous-schema-273>"
                                  }
                                },
                                "x-parser-schema-id": "Thing"
                              },
                              {
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "MediaObject",
                                      "ImageObject",
                                      "DigitalDocument"
                                    ]
                                  },
                                  "id": {
                                    "description": "the URL to access the item.",
                                    "example": "http://user.example.com/public/logo/fileName.zip",
                                    "type": "string",
                                    "format": "uri"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "the file name of the object.",
                                    "example": "fileName.zip"
                                  },
                                  "encodingFormat": {
                                    "type": "string",
                                    "description": "MIME type",
                                    "example": "application/zip"
                                  },
                                  "about": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "URI to the subject of the image or logo",
                                    "example": "http://user.example.com/profile/card#me"
                                  },
                                  "url": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "URL of the image content",
                                    "example": "http://user.example.com/public/profile/image.jpg"
                                  }
                                },
                                "x-parser-schema-id": "<anonymous-schema-275>"
                              }
                            ],
                            "x-parser-schema-id": "MediaObject"
                          },
                          {
                            "title": "ImageObject",
                            "x-range": "ImageObject",
                            "properties": {
                              "type": {
                                "enum": [
                                  "ImageObject"
                                ],
                                "example": "ImageObject"
                              },
                              "id": {
                                "example": "http://user.example.com/public/logo/image.jpg"
                              },
                              "name": {
                                "example": "image.jpg"
                              },
                              "encodingFormat": {
                                "example": "image/jpeg"
                              }
                            },
                            "x-parser-schema-id": "<anonymous-schema-276>"
                          }
                        ],
                        "x-parser-schema-id": "<anonymous-schema-271>"
                      }
                    ]
                  },
                  "logo": {
                    "description": "a logo associated with the organization.",
                    "items": {
                      "allOf": [
                        {
                          "type": "object",
                          "title": "DigitalDocument",
                          "x-range": "DigitalDocument",
                          "description": "an electronic file.",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "DigitalDocument"
                              ],
                              "x-parser-schema-id": "<anonymous-schema-621>"
                            },
                            "id": {
                              "type": "string",
                              "example": "http://user.example.com/public/logo/archive.zip",
                              "x-parser-schema-id": "<anonymous-schema-622>"
                            },
                            "name": {
                              "type": "string",
                              "description": "document name or title",
                              "example": "archive.zip",
                              "x-parser-schema-id": "<anonymous-schema-623>"
                            },
                            "encodingFormat": {
                              "type": "string",
                              "description": "[ISO Media Type](https://www.iana.org/assignments/media-types/media-types.xhtml)",
                              "example": "application/zip",
                              "x-parser-schema-id": "<anonymous-schema-624>"
                            },
                            "about": {
                              "type": "object",
                              "description": "subject of the Document",
                              "x-range": "Thing",
                              "example": {
                                "type": "RealEstateTransaction",
                                "identifier": {
                                  "bmsTransactionId": "xxxx"
                                }
                              },
                              "x-parser-schema-id": "<anonymous-schema-625>"
                            },
                            "url": {
                              "type": "string",
                              "description": "public URL of the object",
                              "example": "https://example.com",
                              "x-parser-schema-id": "<anonymous-schema-626>"
                            }
                          },
                          "x-parser-schema-id": "DigitalDocument"
                        },
                        {
                          "description": "an associated logo",
                          "type": "object"
                        }
                      ],
                      "type": "object"
                    },
                    "type": "array",
                    "x-range": [
                      "ImageObject",
                      "DigitalDocument"
                    ]
                  },
                  "name": {
                    "description": "Name or DBA.",
                    "type": "string"
                  },
                  "parentOrganization": {
                    "items": {
                      "format": "uri",
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "subOrganization": {
                    "description": "a child organization",
                    "x-range": [
                      "RealEstateOrganization"
                    ],
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uri",
                      "example": "http://org.example.com/profile/card#me"
                    }
                  },
                  "telephone": {
                    "type": "string",
                    "description": "Primary phone number.",
                    "example": "+15558675309",
                    "x-parser-schema-id": "<anonymous-schema-128>"
                  },
                  "type": {
                    "enum": [
                      "Organization"
                    ],
                    "type": "string"
                  },
                  "url": {
                    "description": "primary website/url for the entity.",
                    "format": "uri",
                    "type": "string"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-412>"
              }
            ],
            "x-parser-schema-id": "Organization"
          },
          {
            "title": "RealEstateTeam",
            "description": "A real estate team.",
            "properties": {
              "type": {
                "type": "string",
                "description": "RealEstateTeam",
                "enum": [
                  "RealEstateTeam"
                ]
              },
              "areaServed": {
                "type": "object",
                "description": "the physical areas that make up the ServiceArea",
                "x-range": [
                  "City",
                  "PostalCodeArea"
                ],
                "example": {
                  "type": "PostalCode",
                  "postalCode": "91371",
                  "addressLocality": "Woodland Hills",
                  "addressCounty": "Los Angeles",
                  "addressRegion": "CA",
                  "addressCountry": "US"
                }
              },
              "description": {
                "example": "The number on Gotham City Real Estate Company since 1940",
                "type": "string",
                "description": "description of the item."
              },
              "parentOrganization": {
                "x-range": "RealEstateOrganization",
                "description": "A franchisor or affiliate network of which this organization plays a membership role.",
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uri"
                }
              },
              "member": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "title": "OrganizationRole",
                      "type": "object",
                      "description": "describes a role played by a member and a group or organization.",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "a role played by the member in the memberOf group",
                          "enum": [
                            "OrganizationRole"
                          ],
                          "x-parser-schema-id": "<anonymous-schema-391>"
                        },
                        "roleName": {
                          "type": "string",
                          "description": "the role name",
                          "example": "Owner",
                          "x-parser-schema-id": "<anonymous-schema-392>"
                        },
                        "memberOf": {
                          "description": "the org or group where the role is performed",
                          "type": "object",
                          "example": {
                            "type": "RealEstateOrganization",
                            "id": "http://orgid.example.com/profile/card#me"
                          },
                          "x-parser-schema-id": "<anonymous-schema-393>"
                        },
                        "member": {
                          "description": "member object or id",
                          "type": "string",
                          "format": "uri",
                          "example": "https://memberid.example.com/profile/card#me",
                          "x-parser-schema-id": "<anonymous-schema-394>"
                        },
                        "startDate": {
                          "type": "string",
                          "format": "date-time",
                          "description": "date the member began performing this role",
                          "x-parser-schema-id": "<anonymous-schema-395>"
                        },
                        "endDate": {
                          "type": "string",
                          "format": "date-time",
                          "description": "date the member stopped performing the role",
                          "x-parser-schema-id": "<anonymous-schema-396>"
                        }
                      },
                      "x-parser-schema-id": "OrganizationRole"
                    },
                    {
                      "type": "object",
                      "title": "RealEstateTeamMembership",
                      "description": "a membership relationship.  Subclass of OrganizationRole",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "a member of a real estate team",
                          "enum": [
                            "RealEstateTeamMembership"
                          ],
                          "example": "RealEstateTeamMembership",
                          "x-parser-schema-id": "<anonymous-schema-431>"
                        },
                        "roleName": {
                          "type": "string",
                          "enum": [
                            "TeamMember",
                            "TeamAdmin",
                            "TeamOwner"
                          ],
                          "x-parser-schema-id": "<anonymous-schema-432>"
                        },
                        "memberOf": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://{team-id}.example.com/profile/card#me",
                          "x-parser-schema-id": "<anonymous-schema-433>"
                        },
                        "member": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://{agent}.example.com/profile/card#me",
                          "x-parser-schema-id": "<anonymous-schema-434>"
                        }
                      },
                      "x-parser-schema-id": "<anonymous-schema-430>"
                    }
                  ],
                  "x-parser-schema-id": "RealEstateTeamMembership"
                }
              }
            },
            "x-parser-schema-id": "<anonymous-schema-413>"
          }
        ],
        "x-parser-schema-id": "RealEstateTeam"
      },
      "RealEstateTeamMembership": {
        "allOf": [
          {
            "title": "OrganizationRole",
            "type": "object",
            "description": "describes a role played by a member and a group or organization.",
            "properties": {
              "type": {
                "type": "string",
                "description": "a role played by the member in the memberOf group",
                "enum": [
                  "OrganizationRole"
                ],
                "x-parser-schema-id": "<anonymous-schema-391>"
              },
              "roleName": {
                "type": "string",
                "description": "the role name",
                "example": "Owner",
                "x-parser-schema-id": "<anonymous-schema-392>"
              },
              "memberOf": {
                "description": "the org or group where the role is performed",
                "type": "object",
                "example": {
                  "type": "RealEstateOrganization",
                  "id": "http://orgid.example.com/profile/card#me"
                },
                "x-parser-schema-id": "<anonymous-schema-393>"
              },
              "member": {
                "description": "member object or id",
                "type": "string",
                "format": "uri",
                "example": "https://memberid.example.com/profile/card#me",
                "x-parser-schema-id": "<anonymous-schema-394>"
              },
              "startDate": {
                "type": "string",
                "format": "date-time",
                "description": "date the member began performing this role",
                "x-parser-schema-id": "<anonymous-schema-395>"
              },
              "endDate": {
                "type": "string",
                "format": "date-time",
                "description": "date the member stopped performing the role",
                "x-parser-schema-id": "<anonymous-schema-396>"
              }
            },
            "x-parser-schema-id": "OrganizationRole"
          },
          {
            "type": "object",
            "title": "RealEstateTeamMembership",
            "description": "a membership relationship.  Subclass of OrganizationRole",
            "properties": {
              "type": {
                "type": "string",
                "description": "a member of a real estate team",
                "enum": [
                  "RealEstateTeamMembership"
                ],
                "example": "RealEstateTeamMembership",
                "x-parser-schema-id": "<anonymous-schema-431>"
              },
              "roleName": {
                "type": "string",
                "enum": [
                  "TeamMember",
                  "TeamAdmin",
                  "TeamOwner"
                ],
                "x-parser-schema-id": "<anonymous-schema-432>"
              },
              "memberOf": {
                "type": "string",
                "format": "uri",
                "example": "https://{team-id}.example.com/profile/card#me",
                "x-parser-schema-id": "<anonymous-schema-433>"
              },
              "member": {
                "type": "string",
                "format": "uri",
                "example": "https://{agent}.example.com/profile/card#me",
                "x-parser-schema-id": "<anonymous-schema-434>"
              }
            },
            "x-parser-schema-id": "<anonymous-schema-430>"
          }
        ],
        "x-parser-schema-id": "RealEstateTeamMembership"
      },
      "RealEstateTransaction": {
        "$id": "RealEstateTransaction",
        "type": "object",
        "title": "RealEstateTransaction",
        "x-range": "RealEstateTransaction",
        "description": "describes a sale, purchase and transfer of a real estate property.",
        "required": [
          "type",
          "identifier",
          "additionalProperty",
          "transactionType",
          "reportingOffice",
          "totalSalesProductionGCI",
          "totalSalesProductionGCIDeduction",
          "object"
        ],
        "properties": {
          "type": {
            "const": "RealEstateTransaction",
            "x-parser-schema-id": "<anonymous-schema-774>"
          },
          "identifier": {
            "type": "object",
            "description": "the data producer's id for the transaction.",
            "required": [
              "bmsTransactionId"
            ],
            "properties": {
              "bmsTransactionId": {
                "type": "string",
                "maxLength": 12,
                "example": "0000074792",
                "x-parser-schema-id": "<anonymous-schema-776>"
              }
            },
            "x-parser-schema-id": "<anonymous-schema-775>"
          },
          "additionalProperty": {
            "type": "object",
            "description": "vendor/context specific custom properties",
            "required": [
              "batchId",
              "transactionSequence",
              "unimprovedLandFlag"
            ],
            "properties": {
              "batchId": {
                "type": "integer",
                "description": "identifies the batch for the current transaction",
                "example": 4136,
                "x-parser-schema-id": "<anonymous-schema-778>"
              },
              "transactionSequence": {
                "type": "integer",
                "description": "the sequentail order of this transaction report relative to previous reports of the the same RealEstateTransaction",
                "minimum": 0,
                "example": 1,
                "x-parser-schema-id": "<anonymous-schema-779>"
              },
              "unimprovedLandFlag": {
                "type": "boolean",
                "description": "true if the transaction subject property is an unimproved lot.",
                "x-parser-schema-id": "<anonymous-schema-780>"
              }
            },
            "x-parser-schema-id": "<anonymous-schema-777>"
          },
          "transactionStatus": {
            "type": "string",
            "description": "transaction status",
            "x-range": "TransactionStatus",
            "example": "ClosedTransactionStatus",
            "enum": [
              "PendingTransactionStatus",
              "ClosedTransactionStatus",
              "CanceledTransactionStatus"
            ],
            "x-parser-schema-id": "<anonymous-schema-781>"
          },
          "transactionType": {
            "type": "string",
            "description": "transaction type",
            "x-range": "TransactionType",
            "example": "ST",
            "enum": [
              "ST",
              "LS",
              "OI",
              "PM",
              "RF"
            ],
            "x-parser-schema-id": "<anonymous-schema-782>"
          },
          "reportingOffice": {
            "type": "string",
            "format": "uri",
            "description": "the reporting office",
            "example": "https://{officeid}.example.com/profile/card#me",
            "x-parser-schema-id": "<anonymous-schema-783>"
          },
          "listingOffice": {
            "type": "string",
            "format": "uri",
            "description": "the office representing the seller",
            "example": "https://{officeid}.example.com/profile/card#me",
            "x-parser-schema-id": "<anonymous-schema-784>"
          },
          "buyerOffice": {
            "type": "string",
            "format": "uri",
            "description": "the office representing the buyer",
            "example": "https://{officeid}.example.com/profile/card#me",
            "x-parser-schema-id": "<anonymous-schema-785>"
          },
          "commissionDate": {
            "type": "string",
            "format": "date-time",
            "x-range": "DateTime",
            "description": "date the purchase offer was presented",
            "x-parser-schema-id": "<anonymous-schema-786>"
          },
          "closeDate": {
            "type": "string",
            "format": "date-time",
            "x-range": "DateTime",
            "description": "With purchase the date the purchase agreement was fulfilled. With lease, the date the requirements were fulfilled, such as contract and/or deposit.",
            "x-parser-schema-id": "<anonymous-schema-787>"
          },
          "purchaseContractDate": {
            "type": "string",
            "format": "date-time",
            "description": "date of purchase agreement execution (aka sale date)",
            "x-range": "DateTime",
            "x-parser-schema-id": "<anonymous-schema-788>"
          },
          "closePrice": {
            "type": "object",
            "title": "MonetaryAmount",
            "x-range": "MonetaryAmount",
            "required": [
              "type",
              "value",
              "currency"
            ],
            "properties": {
              "type": {
                "type": "string",
                "description": "MonetaryAmount",
                "enum": [
                  "MonetaryAmount"
                ],
                "x-parser-schema-id": "<anonymous-schema-669>"
              },
              "minValue": {
                "type": "number",
                "description": "the lower limit of the range",
                "example": 2400000,
                "x-parser-schema-id": "<anonymous-schema-670>"
              },
              "maxValue": {
                "type": "number",
                "description": "the upper limit of the range",
                "example": 3200000,
                "x-parser-schema-id": "<anonymous-schema-671>"
              },
              "value": {
                "type": "number",
                "description": "the actual or expected value",
                "example": 2700000,
                "x-parser-schema-id": "<anonymous-schema-672>"
              },
              "currency": {
                "type": "string",
                "description": "use ISO4217 country codes",
                "maxLength": 3,
                "example": "USD",
                "x-parser-schema-id": "<anonymous-schema-673>"
              }
            },
            "description": "the final sale price of the subject",
            "example": {
              "type": "MonetaryAmount",
              "value": 123456.78,
              "currency": "USD"
            },
            "x-parser-schema-id": "<anonymous-schema-789>"
          },
          "totalSalesProductionGCI": {
            "type": "object",
            "title": "MonetaryAmount",
            "x-range": "MonetaryAmount",
            "required": [
              "type",
              "value",
              "currency"
            ],
            "properties": {
              "type": {
                "type": "string",
                "description": "MonetaryAmount",
                "enum": [
                  "MonetaryAmount"
                ],
                "x-parser-schema-id": "<anonymous-schema-669>"
              },
              "minValue": {
                "type": "number",
                "description": "the lower limit of the range",
                "example": 2400000,
                "x-parser-schema-id": "<anonymous-schema-670>"
              },
              "maxValue": {
                "type": "number",
                "description": "the upper limit of the range",
                "example": 3200000,
                "x-parser-schema-id": "<anonymous-schema-671>"
              },
              "value": {
                "type": "number",
                "description": "the actual or expected value",
                "example": 2700000,
                "x-parser-schema-id": "<anonymous-schema-672>"
              },
              "currency": {
                "type": "string",
                "description": "use ISO4217 country codes",
                "maxLength": 3,
                "example": "USD",
                "x-parser-schema-id": "<anonymous-schema-673>"
              }
            },
            "description": "the total gci of the transaction",
            "example": {
              "type": "MonetaryAmount",
              "value": 123456.78,
              "currency": "USD"
            },
            "x-parser-schema-id": "<anonymous-schema-790>"
          },
          "totalSalesProductionGCIDeduction": {
            "type": "object",
            "title": "MonetaryAmount",
            "x-range": "MonetaryAmount",
            "required": [
              "type",
              "value",
              "currency"
            ],
            "properties": {
              "type": {
                "type": "string",
                "description": "MonetaryAmount",
                "enum": [
                  "MonetaryAmount"
                ],
                "x-parser-schema-id": "<anonymous-schema-669>"
              },
              "minValue": {
                "type": "number",
                "description": "the lower limit of the range",
                "example": 2400000,
                "x-parser-schema-id": "<anonymous-schema-670>"
              },
              "maxValue": {
                "type": "number",
                "description": "the upper limit of the range",
                "example": 3200000,
                "x-parser-schema-id": "<anonymous-schema-671>"
              },
              "value": {
                "type": "number",
                "description": "the actual or expected value",
                "example": 2700000,
                "x-parser-schema-id": "<anonymous-schema-672>"
              },
              "currency": {
                "type": "string",
                "description": "use ISO4217 country codes",
                "maxLength": 3,
                "example": "USD",
                "x-parser-schema-id": "<anonymous-schema-673>"
              }
            },
            "description": "total gci deductions for the transaction",
            "example": {
              "type": "MonetaryAmount",
              "value": 1234.56,
              "currency": "USD"
            },
            "x-parser-schema-id": "<anonymous-schema-791>"
          },
          "object": {
            "title": "RealEstateProperty",
            "x-range": "RealEstateProperty",
            "description": "a property in the real estate transaction context",
            "type": "object",
            "required": [
              "type",
              "propertyType"
            ],
            "properties": {
              "type": {
                "description": "\"RealEstateProperty\"",
                "enum": [
                  "RealEstateProperty"
                ],
                "type": "string",
                "x-parser-schema-id": "<anonymous-schema-747>"
              },
              "propertyType": {
                "type": "string",
                "description": "RESO property type (see range for allowed values)",
                "x-range": "PropertyType",
                "minLength": 4,
                "maxLength": 4,
                "enum": [
                  "RESI",
                  "RLSE",
                  "RINC",
                  "LAND",
                  "MOBI",
                  "FARM",
                  "COMS",
                  "COML",
                  "BUSO"
                ],
                "x-parser-schema-id": "<anonymous-schema-296>"
              },
              "addressCountry": {
                "type": "string",
                "description": "two-letter ISO 3166-1 alpha-2 country code",
                "example": "US",
                "enum": [
                  "CA",
                  "DE",
                  "GR",
                  "IN",
                  "IT",
                  "MX",
                  "PE",
                  "PT",
                  "ES",
                  "AE",
                  "GB",
                  "US"
                ],
                "x-parser-schema-id": "<anonymous-schema-264>"
              },
              "addressLocality": {
                "type": "string",
                "description": "City, Township.",
                "example": "Gotham City",
                "maxLength": 50,
                "x-parser-schema-id": "<anonymous-schema-265>"
              },
              "addressRegion": {
                "type": "string",
                "description": "State or Province.",
                "example": "New Jersey",
                "maxLength": 3,
                "x-parser-schema-id": "<anonymous-schema-266>"
              },
              "apn": {
                "type": "string",
                "description": "Assessors Parcel Number",
                "example": "ABC-12345-XX-XXXX",
                "x-parser-schema-id": "<anonymous-schema-748>"
              },
              "image": {
                "title": "image",
                "description": "an ImageObject or URI reference to an image on the web.",
                "type": "array",
                "x-range": [
                  "ImageObject"
                ],
                "items": [
                  {
                    "type": "object",
                    "allOf": [
                      {
                        "title": "MediaObject",
                        "description": "an image, video or document availble for download",
                        "x-subclass": [
                          "ImageObject",
                          "DigitalDocument"
                        ],
                        "allOf": [
                          {
                            "$id": "http://realestate.yodata.me/schema/Thing",
                            "type": "object",
                            "title": "Thing",
                            "summary": "The root type of all Things.",
                            "required": [
                              "type"
                            ],
                            "propertyNames": {
                              "pattern": "^[a-z@$][a-zA-Z0-9-_]+$",
                              "x-parser-schema-id": "<anonymous-schema-274>"
                            },
                            "properties": {
                              "type": {
                                "type": "string",
                                "pattern": "^[A-Z][a-zA-Z0-9]+$",
                                "description": "The item type (Linked-Data @type)",
                                "x-parser-schema-id": "<anonymous-schema-272>"
                              },
                              "@id": {
                                "type": "string",
                                "format": "uri",
                                "description": "the liked data uri for the Thing",
                                "x-parser-schema-id": "<anonymous-schema-273>"
                              }
                            },
                            "x-parser-schema-id": "Thing"
                          },
                          {
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "MediaObject",
                                  "ImageObject",
                                  "DigitalDocument"
                                ]
                              },
                              "id": {
                                "description": "the URL to access the item.",
                                "example": "http://user.example.com/public/logo/fileName.zip",
                                "type": "string",
                                "format": "uri"
                              },
                              "name": {
                                "type": "string",
                                "description": "the file name of the object.",
                                "example": "fileName.zip"
                              },
                              "encodingFormat": {
                                "type": "string",
                                "description": "MIME type",
                                "example": "application/zip"
                              },
                              "about": {
                                "type": "string",
                                "format": "uri",
                                "description": "URI to the subject of the image or logo",
                                "example": "http://user.example.com/profile/card#me"
                              },
                              "url": {
                                "type": "string",
                                "format": "uri",
                                "description": "URL of the image content",
                                "example": "http://user.example.com/public/profile/image.jpg"
                              }
                            },
                            "x-parser-schema-id": "<anonymous-schema-275>"
                          }
                        ],
                        "x-parser-schema-id": "MediaObject"
                      },
                      {
                        "title": "ImageObject",
                        "x-range": "ImageObject",
                        "properties": {
                          "type": {
                            "enum": [
                              "ImageObject"
                            ],
                            "example": "ImageObject"
                          },
                          "id": {
                            "example": "http://user.example.com/public/logo/image.jpg"
                          },
                          "name": {
                            "example": "image.jpg"
                          },
                          "encodingFormat": {
                            "example": "image/jpeg"
                          }
                        },
                        "x-parser-schema-id": "<anonymous-schema-276>"
                      }
                    ],
                    "x-parser-schema-id": "<anonymous-schema-271>"
                  }
                ],
                "x-parser-schema-id": "<anonymous-schema-270>"
              },
              "latitude": {
                "type": "number",
                "description": "The latitude of a location.",
                "x-title": "latitude",
                "example": 40.75,
                "x-parser-schema-id": "<anonymous-schema-278>"
              },
              "listingId": {
                "description": "the local identifier for the listing (MLS #)",
                "type": "string",
                "x-parser-schema-id": "<anonymous-schema-749>"
              },
              "livingArea": {
                "description": "property indoor space",
                "example": {
                  "type": "QuantitativeValue",
                  "unitCode": "SqFt",
                  "unitText": "Square Feet",
                  "value": 1500
                },
                "type": "object",
                "x-range": "QuantitativeValue",
                "x-parser-schema-id": "<anonymous-schema-750>"
              },
              "longitude": {
                "type": "number",
                "description": "The longitude of a location.",
                "x-title": "longitude",
                "example": 73.98,
                "x-parser-schema-id": "<anonymous-schema-287>"
              },
              "lotSize": {
                "description": "outdoor space minValue, maxValue",
                "example": {
                  "type": "QuantitativeValue",
                  "unitCode": "AC",
                  "unitText": "Acres",
                  "value": 0.5
                },
                "type": "object",
                "x-range": "QuantitativeValue",
                "x-parser-schema-id": "<anonymous-schema-751>"
              },
              "numberOfBathrooms": {
                "description": "the number of bathrooms",
                "example": "2",
                "type": "string",
                "x-parser-schema-id": "<anonymous-schema-752>"
              },
              "numberOfBedrooms": {
                "description": "the number of bedrooms",
                "example": "3",
                "type": "string",
                "x-parser-schema-id": "<anonymous-schema-753>"
              },
              "numberOfRooms": {
                "description": "the total number of rooms in the building",
                "type": "string",
                "example": 7,
                "x-parser-schema-id": "<anonymous-schema-754>"
              },
              "postalCode": {
                "type": "string",
                "description": "Zip/Post Code",
                "example": "10010",
                "maxLength": 12,
                "x-parser-schema-id": "<anonymous-schema-294>"
              },
              "propertySubType": {
                "title": "propertySubType",
                "type": "string",
                "x-range": "PropertySubType",
                "description": "RESO property sub-type (see range for allowed values)",
                "enum": [
                  "ApartmentPropertyType",
                  "BoatSlipPropertyType",
                  "CabinPropertyType",
                  "CondominiumPropertyType",
                  "DeededParkingPropertyType",
                  "DuplexPropertyType",
                  "FarmPropertyType",
                  "ManufacturedHomePropertyType",
                  "ManufacturedOnLandPropertyType",
                  "MobileHomePropertyType",
                  "OwnYourOwnPropertyType",
                  "QuadruplexPropertyType",
                  "RanchPropertyType",
                  "SingleFamilyPropertyType",
                  "StockCooperativePropertyType",
                  "TimesharePropertyType",
                  "TownhousePropertyType",
                  "TriplexPropertyType",
                  "AgriculturePropertyType",
                  "BusinessPropertyType",
                  "HotelMotelPropertyType",
                  "IndustrialPropertyType",
                  "MixedUsePropertyType",
                  "MultiFamilyPropertyType",
                  "OfficePropertyType",
                  "RetailPropertyType",
                  "UnimprovedLandPropertyType",
                  "WarehousePropertyType"
                ],
                "x-parser-schema-id": "<anonymous-schema-295>"
              },
              "stories": {
                "type": "number",
                "description": "he number of floors in the property",
                "example": 2,
                "x-parser-schema-id": "<anonymous-schema-298>"
              },
              "streetAddress": {
                "type": "string",
                "description": "the street address",
                "example": "1007 Mountain Gate Rd",
                "maxLength": 75,
                "x-parser-schema-id": "<anonymous-schema-299>"
              },
              "yearBuilt": {
                "type": "number",
                "description": "the year the structure was created",
                "example": 1988,
                "x-parser-schema-id": "<anonymous-schema-302>"
              }
            },
            "x-parser-schema-id": "RealEstateProperty"
          },
          "referral": {
            "description": "referring agent details",
            "title": "Referral",
            "type": "object",
            "x-range": "Referral",
            "properties": {
              "type": {
                "type": "string",
                "description": "The item type (Linked-Data @type)",
                "enum": [
                  "Referral"
                ],
                "x-parser-schema-id": "<anonymous-schema-793>"
              },
              "additionalProperty": {
                "type": "object",
                "description": "context specific custom properties",
                "properties": {
                  "isReferralYN": {
                    "type": "string",
                    "description": "Y if transaction was a referral",
                    "enum": [
                      "Y",
                      "N"
                    ],
                    "x-parser-schema-id": "<anonymous-schema-795>"
                  },
                  "inNetworkReferralYN": {
                    "type": "string",
                    "description": "Y if transaction was referred by an in network agent",
                    "enum": [
                      "Y",
                      "N"
                    ],
                    "x-parser-schema-id": "<anonymous-schema-796>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-794>"
              },
              "referredBy": {
                "type": "object",
                "description": "the referring entity",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "the referring entity type i.e RealEstateOrganization, RealEstateAgent",
                    "enum": [
                      "RealEstateOrganization",
                      "RealEstateAgent",
                      "RealEstateOffice",
                      "Organization",
                      "Person"
                    ],
                    "x-parser-schema-id": "<anonymous-schema-798>"
                  },
                  "id": {
                    "type": "string",
                    "format": "uri",
                    "description": "Linked-Data URI (@id)",
                    "x-parser-schema-id": "<anonymous-schema-380>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-797>"
              }
            },
            "x-parser-schema-id": "<anonymous-schema-792>"
          },
          "participant": {
            "type": "array",
            "description": "parties with a direct or indirect interest or role in the transaction",
            "x-range": "TransactionParticipant",
            "items": {
              "$id": "TransactionParticipant",
              "title": "TransactionParticipant",
              "description": "a participant in a transaction, i.e. Buyer, Seller, etc...",
              "x-range": "TransactionParticipant",
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "const": "TransactionParticipant",
                  "x-parser-schema-id": "<anonymous-schema-800>"
                },
                "roleName": {
                  "type": "string",
                  "description": "the role of the participant in the transaction",
                  "examples": [
                    "Buyer",
                    "Seller"
                  ],
                  "x-parser-schema-id": "<anonymous-schema-801>"
                },
                "position": {
                  "type": "number",
                  "description": "numeric position for the participant/roleName.",
                  "example": 1,
                  "x-parser-schema-id": "<anonymous-schema-802>"
                },
                "givenName": {
                  "type": "string",
                  "description": "First Name of a person",
                  "x-faker": "name.firstName",
                  "examples": [
                    "John",
                    "Jane",
                    "Mary",
                    "Joseph",
                    "William",
                    "David",
                    "Richard",
                    "Charles",
                    "Thomas",
                    "Christopher",
                    "Daniel",
                    "Matthew",
                    "Anthony",
                    "Donald",
                    "Mark",
                    "Paul",
                    "Steven",
                    "Andrew",
                    "Kenneth",
                    "George",
                    "Joshua",
                    "Kevin",
                    "Brian",
                    "Edward",
                    "Ronald",
                    "Timothy",
                    "Jason",
                    "Jeffrey",
                    "Ryan",
                    "Jacob"
                  ],
                  "x-parser-schema-id": "<anonymous-schema-118>"
                },
                "familyName": {
                  "$id": "htttp://realestate.yodata.me/schema/familyName.yaml",
                  "type": "string",
                  "title": "Family Name",
                  "description": "Last Name of a person",
                  "x-faker": "name.lastName",
                  "maxLength": 50,
                  "externalDocs": {
                    "description": "Family Name",
                    "url": "https://schema.org/familyName"
                  },
                  "examples": [
                    "Smith",
                    "Jones",
                    "Parker",
                    "Monk",
                    "Brown",
                    "Miller",
                    "Davis",
                    "Wilson",
                    "Fitzgerald",
                    "Johnson",
                    "Williams"
                  ]
                },
                "additionalName": {
                  "type": "string",
                  "description": "middleName or alternate name of the Person",
                  "example": "Big",
                  "x-parser-schema-id": "<anonymous-schema-803>"
                },
                "email": {
                  "type": "string",
                  "format": "email",
                  "x-faker": "internet.email",
                  "x-parser-schema-id": "<anonymous-schema-93>"
                },
                "telephone": {
                  "type": "string",
                  "description": "Primary phone number.",
                  "example": "+15558675309",
                  "x-parser-schema-id": "<anonymous-schema-128>"
                },
                "affiliation": {
                  "type": "array",
                  "description": "person or organization associated with the participant",
                  "items": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://{agentid}.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-805>"
                  },
                  "x-parser-schema-id": "<anonymous-schema-804>"
                }
              },
              "x-parser-schema-id": "TransactionParticipant"
            },
            "x-parser-schema-id": "<anonymous-schema-799>"
          },
          "transactionEntry": {
            "type": "array",
            "description": "commissions and unit entries",
            "x-range": "TransactionEntry",
            "items": {
              "type": "object",
              "title": "TransactionEntry",
              "description": "describes a unit of sales credit in unit or commission value relative to a parent transaction",
              "x-range": "TransactionEntry",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "TransactionEntry",
                  "enum": [
                    "TransactionEntry"
                  ],
                  "x-parser-schema-id": "<anonymous-schema-807>"
                },
                "salesProductionUnit": {
                  "type": "number",
                  "minimum": 0.0001,
                  "maximum": 1,
                  "description": "the sales production units credited to the recipient",
                  "example": 0.5,
                  "x-parser-schema-id": "<anonymous-schema-808>"
                },
                "salesProductionGCI": {
                  "type": "object",
                  "title": "MonetaryAmount",
                  "x-range": "MonetaryAmount",
                  "required": [
                    "type",
                    "value",
                    "currency"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "MonetaryAmount",
                      "enum": [
                        "MonetaryAmount"
                      ],
                      "x-parser-schema-id": "<anonymous-schema-669>"
                    },
                    "minValue": {
                      "type": "number",
                      "description": "the lower limit of the range",
                      "example": 2400000,
                      "x-parser-schema-id": "<anonymous-schema-670>"
                    },
                    "maxValue": {
                      "type": "number",
                      "description": "the upper limit of the range",
                      "example": 3200000,
                      "x-parser-schema-id": "<anonymous-schema-671>"
                    },
                    "value": {
                      "type": "number",
                      "description": "the actual or expected value",
                      "example": 2700000,
                      "x-parser-schema-id": "<anonymous-schema-672>"
                    },
                    "currency": {
                      "type": "string",
                      "description": "use ISO4217 country codes",
                      "maxLength": 3,
                      "example": "USD",
                      "x-parser-schema-id": "<anonymous-schema-673>"
                    }
                  },
                  "description": "gross commission income credited to the recipient",
                  "example": {
                    "type": "MonetaryAmount",
                    "value": 1234.56,
                    "currency": "USD"
                  },
                  "x-parser-schema-id": "<anonymous-schema-809>"
                },
                "recipient": {
                  "description": "the agent credited with the sales production and who receives the value",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "typically a RealEstateAgent",
                      "example": "RealEstateAgent",
                      "x-parser-schema-id": "<anonymous-schema-811>"
                    },
                    "roleName": {
                      "type": "string",
                      "description": "enum: ListingAgent,BuyerAgent",
                      "enum": [
                        "ListingAgent",
                        "BuyerAgent"
                      ],
                      "x-parser-schema-id": "<anonymous-schema-812>"
                    },
                    "id": {
                      "type": "string",
                      "format": "uri",
                      "description": "Linked-Data URI (@id)",
                      "example": "https://{entityid}.example.com/profile/card#me",
                      "x-parser-schema-id": "<anonymous-schema-813>"
                    },
                    "identifier": {
                      "type": "object",
                      "description": "unique identifier of the recipient from the data producer",
                      "properties": {
                        "bmsAgentId": {
                          "type": "string",
                          "maxLength": 12,
                          "example": "1657897",
                          "x-parser-schema-id": "<anonymous-schema-815>"
                        }
                      },
                      "x-parser-schema-id": "<anonymous-schema-814>"
                    }
                  },
                  "x-parser-schema-id": "<anonymous-schema-810>"
                }
              },
              "x-parser-schema-id": "TransactionEntry"
            },
            "x-parser-schema-id": "<anonymous-schema-806>"
          },
          "document": {
            "type": "array",
            "description": "any documents, images, etc... related to the transaction.",
            "x-range": "DigitalDocument",
            "items": {
              "type": "object",
              "example": {
                "type": "DigitalDocument",
                "name": "Sales Contract",
                "encodingFormat": "application/zip",
                "about": {
                  "type": "Transaction",
                  "identifier": {
                    "guruTransactionId": "0000074792"
                  }
                },
                "url": "https://example.com/path/to/document.pdf"
              },
              "x-parser-schema-id": "<anonymous-schema-817>"
            },
            "x-parser-schema-id": "<anonymous-schema-816>"
          }
        },
        "x-parser-schema-id": "RealEstateTransaction"
      },
      "RealEstateWebsite": {
        "title": "RealEstateWebsite",
        "type": "object",
        "x-range": "RealEstateWebsite",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "RealEstateWebsite"
            ],
            "description": "RealEstateWebsite",
            "x-parser-schema-id": "<anonymous-schema-818>"
          },
          "about": {
            "type": "object",
            "description": "subject of the website",
            "x-range": [
              "RealEstateAgent",
              "RealEstateOffice",
              "RealEstateOrganization"
            ],
            "example": {
              "type": "RealEstateAgent",
              "id": "http://agent.example.com/profile/card#me"
            },
            "x-parser-schema-id": "<anonymous-schema-819>"
          },
          "url": {
            "title": "url",
            "type": "string",
            "format": "uri",
            "description": "URL of the item.",
            "x-parser-schema-id": "<anonymous-schema-408>"
          }
        },
        "x-parser-schema-id": "RealEstateWebsite"
      },
      "Referral": {
        "title": "Referral",
        "type": "object",
        "description": "describes a real estate referral from the referredBy (subProperty of agent) to the recipient",
        "x-range": "Referral",
        "properties": {
          "type": {
            "type": "string",
            "description": "The item type (Linked-Data @type)",
            "enum": [
              "Referral"
            ],
            "x-parser-schema-id": "<anonymous-schema-793>"
          },
          "additionalProperty": {
            "type": "object",
            "description": "context specific custom properties",
            "properties": {
              "isReferralYN": {
                "type": "string",
                "description": "Y if transaction was a referral",
                "enum": [
                  "Y",
                  "N"
                ],
                "x-parser-schema-id": "<anonymous-schema-795>"
              },
              "inNetworkReferralYN": {
                "type": "string",
                "description": "Y if transaction was referred by an in network agent",
                "enum": [
                  "Y",
                  "N"
                ],
                "x-parser-schema-id": "<anonymous-schema-796>"
              }
            },
            "x-parser-schema-id": "<anonymous-schema-794>"
          },
          "referredBy": {
            "type": "object",
            "description": "the referring entity",
            "properties": {
              "type": {
                "type": "string",
                "description": "the referring entity type i.e RealEstateOrganization, RealEstateAgent",
                "enum": [
                  "RealEstateOrganization",
                  "RealEstateAgent",
                  "RealEstateOffice",
                  "Organization",
                  "Person"
                ],
                "x-parser-schema-id": "<anonymous-schema-798>"
              },
              "id": {
                "type": "string",
                "format": "uri",
                "description": "Linked-Data URI (@id)",
                "x-parser-schema-id": "<anonymous-schema-380>"
              }
            },
            "x-parser-schema-id": "<anonymous-schema-797>"
          }
        },
        "x-parser-schema-id": "Referral"
      },
      "Schedule": {
        "title": "Schedule",
        "type": "object",
        "description": "A schedule defines a repeating time period used to describe a regularly occurring Event. At a minimum a schedule will specify repeatFrequency which describes the interval between occurences of the event. Additional information can be provided to specify the schedule more precisely. This includes identifying the day(s) of the week or month when the recurring event will take place, in addition to its start and end time. Schedules may also have start and end dates to indicate when they are active, e.g. to define a limited calendar of events.\n",
        "properties": {
          "type": {
            "type": "string",
            "description": "The item type (Linked-Data @type)",
            "x-parser-schema-id": "<anonymous-schema-618>"
          },
          "byDay": {
            "description": "Defines the day(s) of the week on which a recurring Event takes place",
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "Sunday",
                "Monday",
                "Tuesday",
                "Wednesday",
                "Thursday",
                "Friday"
              ],
              "x-parser-schema-id": "<anonymous-schema-821>"
            },
            "example": [
              "Monday",
              "Wednesday",
              "Friday"
            ],
            "x-parser-schema-id": "<anonymous-schema-820>"
          },
          "byMonth": {
            "description": "Defines the month(s) of the year on which a recurring Event takes place. Specified as an Integer between 1-12. January is 1.",
            "type": "array",
            "items": {
              "type": "number",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12
              ],
              "x-parser-schema-id": "<anonymous-schema-823>"
            },
            "example": [
              1
            ],
            "x-parser-schema-id": "<anonymous-schema-822>"
          },
          "byMonthDay": {
            "type": "array",
            "description": "Defines the day(s) of the month on which a recurring Event takes place. Specified as an Integer between 1-31.",
            "items": {
              "type": "number",
              "x-parser-schema-id": "<anonymous-schema-825>"
            },
            "x-parser-schema-id": "<anonymous-schema-824>"
          }
        },
        "x-parser-schema-id": "Schedule"
      },
      "Service": {
        "title": "Service",
        "description": "A service provided by an organization.",
        "x-kind": "Service",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "Service"
            ],
            "x-parser-schema-id": "<anonymous-schema-826>"
          },
          "name": {
            "type": "string",
            "description": "name of the service.",
            "x-parser-schema-id": "<anonymous-schema-827>"
          },
          "areaServed": {
            "type": "object",
            "description": "a physical location",
            "title": "Place",
            "x-range": [
              "Place",
              "City",
              "State",
              "PostalCode",
              "GeoCircle",
              "GeoShape"
            ],
            "properties": {
              "type": {
                "type": "string",
                "description": "The item type (Linked-Data @type)",
                "enum": [
                  "Place"
                ],
                "x-parser-schema-id": "<anonymous-schema-660>"
              },
              "address": {
                "type": "object",
                "x-range": "PostalAddress",
                "description": "A physical address.",
                "example": {
                  "type": "PostalAddress",
                  "name": "Home",
                  "addressCountry": "USA",
                  "addressCounty": "Gotham County",
                  "addressLocality": "Gotham City",
                  "addressRegion": "New Jersey",
                  "addressSubdivision": "Gotham Heights",
                  "postalCode": "10010",
                  "postOfficeBoxNumber": "Box 1234",
                  "streetAddress": "1007 Mountain Gate Rd"
                },
                "x-parser-schema-id": "<anonymous-schema-661>"
              },
              "geo": {
                "type": "object",
                "description": "a geo shape (circle or box)",
                "x-range": [
                  "GeoCircle",
                  "GeoShape"
                ],
                "example": {
                  "type": "GeoShape",
                  "geoMidpoint": {
                    "type": "GeoCoordinates,",
                    "longitude": "73.98",
                    "latitude": "40.75"
                  },
                  "geoRadius": {
                    "type": "QuantitativeValue,",
                    "value": "10,",
                    "unitCode": "mi,",
                    "unitText": "miles"
                  },
                  "box": "(33.5697,-117.775),(33.6018,-117.707)"
                },
                "x-parser-schema-id": "<anonymous-schema-662>"
              }
            },
            "x-parser-schema-id": "Place"
          }
        },
        "x-parser-schema-id": "Service"
      },
      "ServiceArea": {
        "title": "ServiceArea",
        "type": "object",
        "description": "an area when a provider provides a service. additional information available; see [Using Service Areas](/reference-using-service-area)",
        "x-kind": "ServiceArea",
        "properties": {
          "type": {
            "type": "string",
            "description": "\"ServiceArea\"",
            "enum": [
              "ServiceArea"
            ],
            "x-parser-schema-id": "<anonymous-schema-446>"
          },
          "kind": {
            "type": "string",
            "description": "ServiceArea sub-type.  City or PostalCode",
            "enum": [
              "City",
              "PostalCode"
            ],
            "example": "PostalCode",
            "x-parser-schema-id": "<anonymous-schema-447>"
          },
          "identifier": {
            "type": "object",
            "description": "vendor namespaced item identifiers, value should be stored and included in any future events that reference the same item.",
            "properties": {
              "bhhsESAId": {
                "type": "string",
                "description": "BHHS internal ESA ID",
                "x-parser-schema-id": "<anonymous-schema-449>"
              }
            },
            "x-parser-schema-id": "<anonymous-schema-448>"
          },
          "addressLocality": {
            "type": "string",
            "description": "City, Township.",
            "example": "Woodland Hills",
            "x-parser-schema-id": "<anonymous-schema-450>"
          },
          "postalCode": {
            "type": "string",
            "description": "Zip/Post Code",
            "example": "91371",
            "x-parser-schema-id": "<anonymous-schema-451>"
          },
          "addressRegion": {
            "type": "string",
            "description": "State or Province.",
            "example": "CA",
            "x-parser-schema-id": "<anonymous-schema-452>"
          },
          "addressCountry": {
            "type": "string",
            "description": "The country. For example, USA. You can also provide the two-letter ISO 3166-1 alpha-2 country code.",
            "example": "US",
            "x-parser-schema-id": "<anonymous-schema-453>"
          },
          "addressCounty": {
            "type": "string",
            "description": "the county (us real estate extension)",
            "example": "Los Angeles",
            "x-parser-schema-id": "<anonymous-schema-454>"
          },
          "provider": {
            "type": "object",
            "description": "a broker or company who provides service in the ServiceArea",
            "x-range": [
              "RealEstateOrganization"
            ],
            "properties": {
              "type": {
                "type": "string",
                "description": "\"RealEstateOrganization\"",
                "enum": [
                  "RealEstateOrganization"
                ],
                "x-parser-schema-id": "<anonymous-schema-456>"
              },
              "id": {
                "type": "string",
                "description": "profile URI",
                "example": "https://org.example.com/profile/card#me",
                "x-parser-schema-id": "<anonymous-schema-457>"
              }
            },
            "x-parser-schema-id": "<anonymous-schema-455>"
          },
          "additionalProperty": {
            "type": "object",
            "description": "BHHS specific ServiceArea properties",
            "properties": {
              "relocationOffice": {
                "type": "object",
                "description": "relocation office",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "The item type (Linked-Data @type)",
                    "enum": [
                      "RealEstateOffice"
                    ],
                    "x-parser-schema-id": "<anonymous-schema-460>"
                  },
                  "id": {
                    "type": "string",
                    "x-subPropertyOf": "identifier",
                    "example": "https://org.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-461>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-459>"
              },
              "weight": {
                "type": "integer",
                "description": "weight",
                "x-parser-schema-id": "<anonymous-schema-462>"
              },
              "officeInPostalCode": {
                "type": "boolean",
                "description": "true if the service area provider is physically located in the ServiceArea.",
                "x-parser-schema-id": "<anonymous-schema-463>"
              },
              "sortOrder": {
                "type": "integer",
                "description": "sort order",
                "x-parser-schema-id": "<anonymous-schema-464>"
              },
              "sentToConsumerSite": {
                "type": "boolean",
                "description": "sent to consumer site",
                "x-parser-schema-id": "<anonymous-schema-465>"
              },
              "sentToCompanyLocator": {
                "type": "boolean",
                "description": "sent to company locator",
                "x-parser-schema-id": "<anonymous-schema-466>"
              },
              "sentToReferralSolutions": {
                "type": "boolean",
                "description": "sent to referral solutions",
                "x-parser-schema-id": "<anonymous-schema-467>"
              },
              "luxuryPriceMinimum": {
                "description": "minimum price for a property listing in the area to be considered a luxury property",
                "type": "object",
                "x-range": "PriceSpecification",
                "example": {
                  "type": "PriceSpecification",
                  "price": 1000000,
                  "priceCurrency": "USD"
                },
                "x-parser-schema-id": "<anonymous-schema-468>"
              }
            },
            "x-parser-schema-id": "<anonymous-schema-458>"
          }
        },
        "x-parser-schema-id": "ServiceArea"
      },
      "State": {
        "title": "State",
        "x-range": "State",
        "description": "a State or Region",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "The item type (Linked-Data @type)",
            "enum": [
              "State"
            ],
            "x-parser-schema-id": "<anonymous-schema-828>"
          },
          "name": {
            "type": "string",
            "description": "the name of the item",
            "x-parser-schema-id": "<anonymous-schema-92>"
          }
        },
        "example": {
          "type": "State",
          "name": "New Jersey"
        },
        "x-parser-schema-id": "State"
      },
      "SubscribeAction": {
        "$id": "SubscribeAction",
        "allOf": [
          {
            "$id": "http://realestate.yodata.me/schema/Action",
            "title": "Action",
            "type": "object",
            "description": "An action performed by a direct agent and indirect participants upon a direct object. Optionally happens at a location with the help of an inanimate instrument. The execution of the action may produce a result. Specific action sub-type documentation specifies the exact expectation of each argument/role.",
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "description": "the action type",
                "type": "string",
                "x-parser-schema-id": "<anonymous-schema-354>"
              },
              "object": {
                "description": "item on which the action is carried out",
                "x-parser-schema-id": "<anonymous-schema-355>"
              }
            },
            "externalDocs": {
              "description": "schema.org/Action",
              "url": "https://schema.org/Action"
            },
            "x-parser-schema-id": "Action"
          },
          {
            "x-range": "SubscribeAction",
            "description": "the consumer (agent) has subscribed to content from the participant with roleName SubscriptionProvider.",
            "properties": {
              "type": {
                "enum": [
                  "SubscribeAction"
                ]
              },
              "agent": {
                "type": "object",
                "description": "the subscriber",
                "x-range": "Contact",
                "example": {
                  "type": "Contact",
                  "email": "bob@example.com",
                  "identifier": {
                    "hsfconsumerid": "D9AB8127-7D19-4C67-A514-9209F22F4511"
                  }
                }
              },
              "participant": {
                "description": "the subscription provider, an Agent, Team, Office or Organization",
                "x-range": [
                  "RealEstateAgent",
                  "RealEstateTeam",
                  "RealEstateOffice",
                  "RealEstateOrganization"
                ],
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "roleName": {
                      "type": "string",
                      "enum": [
                        "SubscriptionProvider"
                      ]
                    },
                    "id": {
                      "type": "string",
                      "format": "uri",
                      "example": "https://12345.example.com/profile/card#me"
                    },
                    "additionalProperty": {
                      "type": "object",
                      "properties": {
                        "isCompanyQueue": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            },
            "x-parser-schema-id": "<anonymous-schema-356>"
          }
        ],
        "x-parser-schema-id": "SubscribeAction"
      },
      "Task": {
        "title": "Task",
        "type": "object",
        "description": "an action assigned to an agent, typically as part of a set of interdependent tasks in a Plan",
        "x-range": "Task",
        "properties": {
          "type": {
            "type": "string",
            "description": "The item type (Linked-Data @type)",
            "enum": [
              "Task"
            ],
            "x-parser-schema-id": "<anonymous-schema-163>"
          },
          "identifier": {
            "title": "identifier",
            "type": "object",
            "description": "identifier assigned to a contact by the vendor who originally created the contact",
            "examples": [
              {
                "salesforceid": "0031U00002XW1QWQA1"
              },
              {
                "vendoraid": "123456"
              },
              {
                "originating_system_id": "123456"
              }
            ],
            "example": {
              "redEvent_ID": "23445"
            },
            "x-parser-schema-id": "<anonymous-schema-164>"
          },
          "actionStatus": {
            "example": "PotentialActionStatus",
            "type": "string",
            "description": "disposition of the Action at the time of this action message.",
            "x-range": [
              "CompletedActionStatus",
              "FailedActionStatus",
              "ActiveActionStatus",
              "PotentialActionStatus"
            ],
            "enum": [
              "CompletedActionStatus",
              "FailedActionStatus",
              "ActiveActionStatus",
              "PotentialActionStatus"
            ],
            "x-parser-schema-id": "<anonymous-schema-165>"
          },
          "memberOf": {
            "type": "object",
            "x-range": "Plan",
            "description": "a plan the task is associated with",
            "example": {
              "type": "Plan",
              "identifier": {
                "redPlan_ID": "xxxx"
              }
            },
            "x-parser-schema-id": "<anonymous-schema-166>"
          },
          "agent": {
            "type": "object",
            "description": "the party who completed, or will complete the task",
            "x-range": [
              "Person",
              "Organization",
              "RealEstateAgent",
              "Contact"
            ],
            "example": {
              "type": "RealEstateAgent",
              "id": "http://user.example.com/profile/card#me"
            },
            "x-parser-schema-id": "<anonymous-schema-167>"
          },
          "participant": {
            "x-title": "participant",
            "x-range": [
              "Person",
              "RealEstateAgent",
              "RealEstateTeam",
              "RealEstateOrganization"
            ],
            "description": "Other co-agents with a direct or indirect interest in the action.",
            "type": "array",
            "items": {
              "type": "object",
              "x-parser-schema-id": "<anonymous-schema-169>"
            },
            "example": [
              {
                "type": "Contact",
                "name": "Bruce Wayne",
                "email": "bruce@example.com",
                "identifier": {
                  "redContact_GUID": "92d0a096-457e-4643-ace8-fa95b6bdb1c5"
                }
              }
            ],
            "x-parser-schema-id": "<anonymous-schema-168>"
          },
          "name": {
            "type": "string",
            "description": "name or title",
            "example": "Call Ricky",
            "x-parser-schema-id": "<anonymous-schema-170>"
          },
          "description": {
            "type": "string",
            "description": "task detailed description",
            "example": "Agenda 1. Something 2. Something Else ...",
            "x-parser-schema-id": "<anonymous-schema-171>"
          },
          "keywords": {
            "type": "array",
            "items": {
              "type": "string",
              "x-parser-schema-id": "<anonymous-schema-173>"
            },
            "x-parser-schema-id": "<anonymous-schema-172>"
          },
          "dateDue": {
            "description": "the due date-time (ISO 8601 formated)",
            "type": "string",
            "format": "date-time",
            "x-parser-schema-id": "<anonymous-schema-174>"
          },
          "dateCompleted": {
            "type": "string",
            "format": "date-time",
            "description": "date the task was completed",
            "x-parser-schema-id": "<anonymous-schema-175>"
          },
          "location": {
            "type": "object",
            "description": "the physical location where an event takes place",
            "x-range": [
              "Place"
            ],
            "example": {
              "type": "Place",
              "address": {
                "streetAddress": "1007 Mountain Gate Rd",
                "addressLocality": "Gotham City",
                "addressRegion": "NJ",
                "postalCode": "10007",
                "addressCounty": "Gotham addressCounty",
                "addressSubdivision": "Gotham Heights"
              }
            },
            "x-parser-schema-id": "<anonymous-schema-176>"
          }
        },
        "x-parser-schema-id": "Task"
      },
      "Thing": {
        "$id": "http://realestate.yodata.me/schema/Thing",
        "type": "object",
        "title": "Thing",
        "summary": "The root type of all Things.",
        "required": [
          "type"
        ],
        "propertyNames": {
          "pattern": "^[a-z@$][a-zA-Z0-9-_]+$",
          "x-parser-schema-id": "<anonymous-schema-274>"
        },
        "properties": {
          "type": {
            "type": "string",
            "pattern": "^[A-Z][a-zA-Z0-9]+$",
            "description": "The item type (Linked-Data @type)",
            "x-parser-schema-id": "<anonymous-schema-272>"
          },
          "@id": {
            "type": "string",
            "format": "uri",
            "description": "the liked data uri for the Thing",
            "x-parser-schema-id": "<anonymous-schema-273>"
          }
        },
        "x-parser-schema-id": "Thing"
      },
      "TransactionEntry": {
        "type": "object",
        "title": "TransactionEntry",
        "description": "describes a unit of sales credit in unit or commission value relative to a parent transaction",
        "x-range": "TransactionEntry",
        "properties": {
          "type": {
            "type": "string",
            "description": "TransactionEntry",
            "enum": [
              "TransactionEntry"
            ],
            "x-parser-schema-id": "<anonymous-schema-807>"
          },
          "salesProductionUnit": {
            "type": "number",
            "minimum": 0.0001,
            "maximum": 1,
            "description": "the sales production units credited to the recipient",
            "example": 0.5,
            "x-parser-schema-id": "<anonymous-schema-808>"
          },
          "salesProductionGCI": {
            "type": "object",
            "title": "MonetaryAmount",
            "x-range": "MonetaryAmount",
            "required": [
              "type",
              "value",
              "currency"
            ],
            "properties": {
              "type": {
                "type": "string",
                "description": "MonetaryAmount",
                "enum": [
                  "MonetaryAmount"
                ],
                "x-parser-schema-id": "<anonymous-schema-669>"
              },
              "minValue": {
                "type": "number",
                "description": "the lower limit of the range",
                "example": 2400000,
                "x-parser-schema-id": "<anonymous-schema-670>"
              },
              "maxValue": {
                "type": "number",
                "description": "the upper limit of the range",
                "example": 3200000,
                "x-parser-schema-id": "<anonymous-schema-671>"
              },
              "value": {
                "type": "number",
                "description": "the actual or expected value",
                "example": 2700000,
                "x-parser-schema-id": "<anonymous-schema-672>"
              },
              "currency": {
                "type": "string",
                "description": "use ISO4217 country codes",
                "maxLength": 3,
                "example": "USD",
                "x-parser-schema-id": "<anonymous-schema-673>"
              }
            },
            "description": "gross commission income credited to the recipient",
            "example": {
              "type": "MonetaryAmount",
              "value": 1234.56,
              "currency": "USD"
            },
            "x-parser-schema-id": "<anonymous-schema-809>"
          },
          "recipient": {
            "description": "the agent credited with the sales production and who receives the value",
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "typically a RealEstateAgent",
                "example": "RealEstateAgent",
                "x-parser-schema-id": "<anonymous-schema-811>"
              },
              "roleName": {
                "type": "string",
                "description": "enum: ListingAgent,BuyerAgent",
                "enum": [
                  "ListingAgent",
                  "BuyerAgent"
                ],
                "x-parser-schema-id": "<anonymous-schema-812>"
              },
              "id": {
                "type": "string",
                "format": "uri",
                "description": "Linked-Data URI (@id)",
                "example": "https://{entityid}.example.com/profile/card#me",
                "x-parser-schema-id": "<anonymous-schema-813>"
              },
              "identifier": {
                "type": "object",
                "description": "unique identifier of the recipient from the data producer",
                "properties": {
                  "bmsAgentId": {
                    "type": "string",
                    "maxLength": 12,
                    "example": "1657897",
                    "x-parser-schema-id": "<anonymous-schema-815>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-814>"
              }
            },
            "x-parser-schema-id": "<anonymous-schema-810>"
          }
        },
        "x-parser-schema-id": "TransactionEntry"
      },
      "TransactionParticipant": {
        "$id": "TransactionParticipant",
        "title": "TransactionParticipant",
        "description": "a participant in a transaction, i.e. Buyer, Seller, etc...",
        "x-range": "TransactionParticipant",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "const": "TransactionParticipant",
            "x-parser-schema-id": "<anonymous-schema-800>"
          },
          "roleName": {
            "type": "string",
            "description": "the role of the participant in the transaction",
            "examples": [
              "Buyer",
              "Seller"
            ],
            "x-parser-schema-id": "<anonymous-schema-801>"
          },
          "position": {
            "type": "number",
            "description": "numeric position for the participant/roleName.",
            "example": 1,
            "x-parser-schema-id": "<anonymous-schema-802>"
          },
          "givenName": {
            "type": "string",
            "description": "First Name of a person",
            "x-faker": "name.firstName",
            "examples": [
              "John",
              "Jane",
              "Mary",
              "Joseph",
              "William",
              "David",
              "Richard",
              "Charles",
              "Thomas",
              "Christopher",
              "Daniel",
              "Matthew",
              "Anthony",
              "Donald",
              "Mark",
              "Paul",
              "Steven",
              "Andrew",
              "Kenneth",
              "George",
              "Joshua",
              "Kevin",
              "Brian",
              "Edward",
              "Ronald",
              "Timothy",
              "Jason",
              "Jeffrey",
              "Ryan",
              "Jacob"
            ],
            "x-parser-schema-id": "<anonymous-schema-118>"
          },
          "familyName": {
            "$id": "htttp://realestate.yodata.me/schema/familyName.yaml",
            "type": "string",
            "title": "Family Name",
            "description": "Last Name of a person",
            "x-faker": "name.lastName",
            "maxLength": 50,
            "externalDocs": {
              "description": "Family Name",
              "url": "https://schema.org/familyName"
            },
            "examples": [
              "Smith",
              "Jones",
              "Parker",
              "Monk",
              "Brown",
              "Miller",
              "Davis",
              "Wilson",
              "Fitzgerald",
              "Johnson",
              "Williams"
            ]
          },
          "additionalName": {
            "type": "string",
            "description": "middleName or alternate name of the Person",
            "example": "Big",
            "x-parser-schema-id": "<anonymous-schema-803>"
          },
          "email": {
            "type": "string",
            "format": "email",
            "x-faker": "internet.email",
            "x-parser-schema-id": "<anonymous-schema-93>"
          },
          "telephone": {
            "type": "string",
            "description": "Primary phone number.",
            "example": "+15558675309",
            "x-parser-schema-id": "<anonymous-schema-128>"
          },
          "affiliation": {
            "type": "array",
            "description": "person or organization associated with the participant",
            "items": {
              "type": "string",
              "format": "uri",
              "example": "https://{agentid}.example.com/profile/card#me",
              "x-parser-schema-id": "<anonymous-schema-805>"
            },
            "x-parser-schema-id": "<anonymous-schema-804>"
          }
        },
        "x-parser-schema-id": "TransactionParticipant"
      },
      "TransactionStatus": {
        "title": "TransactionStatus",
        "description": "Transaction Status Enumeration Values",
        "type": "object",
        "properties": {
          "PendingTransactionStatus": {
            "type": "string",
            "description": "Pending Status",
            "x-parser-schema-id": "<anonymous-schema-829>"
          },
          "ClosedTransactionStatus": {
            "type": "string",
            "description": "Closed Status",
            "x-parser-schema-id": "<anonymous-schema-830>"
          },
          "CanceledTransactionStatus": {
            "type": "string",
            "description": "Canceled Status",
            "x-parser-schema-id": "<anonymous-schema-831>"
          }
        },
        "example": {
          "transactionStatus": "ClosedTransactionStatus"
        },
        "x-parser-schema-id": "TransactionStatus"
      },
      "UnsubscribeAction": {
        "allOf": [
          {
            "$id": "http://realestate.yodata.me/schema/Action",
            "title": "Action",
            "type": "object",
            "description": "An action performed by a direct agent and indirect participants upon a direct object. Optionally happens at a location with the help of an inanimate instrument. The execution of the action may produce a result. Specific action sub-type documentation specifies the exact expectation of each argument/role.",
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "description": "the action type",
                "type": "string",
                "x-parser-schema-id": "<anonymous-schema-354>"
              },
              "object": {
                "description": "item on which the action is carried out",
                "x-parser-schema-id": "<anonymous-schema-355>"
              }
            },
            "externalDocs": {
              "description": "schema.org/Action",
              "url": "https://schema.org/Action"
            },
            "x-parser-schema-id": "Action"
          },
          {
            "x-range": "UnsubscribeAction",
            "description": "the consumer (agent) has unsubscribed to content from the participant with roleName SubscriptionProvider.",
            "properties": {
              "type": {
                "enum": [
                  "UnsubscribeAction"
                ]
              },
              "agent": {
                "type": "object",
                "description": "the subscriber",
                "x-range": "Contact",
                "example": {
                  "type": "Contact",
                  "email": "bob@example.com",
                  "identifier": {
                    "hsfconsumerid": "xxxxxxxxxxxxx"
                  }
                }
              },
              "participant": {
                "description": "the subscription provider, an Agent, Team, Office or Organization",
                "x-range": [
                  "RealEstateAgent",
                  "RealEstateTeam",
                  "RealEstateOffice",
                  "RealEstateOrganization"
                ],
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "roleName": {
                      "type": "string",
                      "enum": [
                        "SubscriptionProvider"
                      ]
                    },
                    "id": {
                      "type": "string",
                      "format": "uri",
                      "example": "https://12345.example.com/profile/card#me"
                    },
                    "additionalProperty": {
                      "type": "object",
                      "properties": {
                        "isCompanyQueue": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            },
            "x-parser-schema-id": "<anonymous-schema-360>"
          }
        ],
        "x-parser-schema-id": "UnsubscribeAction"
      },
      "BHHSTerms": {
        "title": "BHHSTerms",
        "type": "object",
        "description": "additional properties for BHHS.",
        "properties": {
          "contactPoint.name": {
            "type": "string",
            "enum": [
              "BHHSWebsiteURL",
              "BHHSWebsiteVanityURL"
            ],
            "x-parser-schema-id": "<anonymous-schema-832>"
          },
          "additionalProperty": {
            "type": "object",
            "properties": {
              "Status": {
                "type": "string",
                "x-subPropertyOf": "additionalProperty",
                "x-domain": [
                  "RealEstateOrganization",
                  "RealEstateOffice",
                  "RealEstateAgent"
                ],
                "enum": [
                  "Active",
                  "Inactive",
                  "Pre-Active"
                ],
                "x-parser-schema-id": "<anonymous-schema-834>"
              },
              "UserType": {
                "type": "string",
                "description": "employee type. For backward compatibility",
                "x-subPropertyOf": "additionalProperty",
                "x-domain": [
                  "RealEstateAgent"
                ],
                "x-parser-schema-id": "<anonymous-schema-835>"
              },
              "AffiliateID": {
                "type": "string",
                "description": "BHHS affiliate identifier",
                "x-subPropertyOf": "additionalProperty",
                "x-domain": [
                  "RealEstateAgent",
                  "RealEstateOffice"
                ],
                "x-parser-schema-id": "<anonymous-schema-836>"
              },
              "BrokerID": {
                "type": "string",
                "description": "BHHS affiliate identifier. For backward compatibility",
                "x-subPropertyOf": "additionalProperty",
                "x-domain": [
                  "RealEstateAgent",
                  "RealEstateOffice"
                ],
                "x-parser-schema-id": "<anonymous-schema-837>"
              },
              "OfficeID": {
                "type": "string",
                "description": "BHHS office identifier. For backward compatibility",
                "x-subPropertyOf": "additionalProperty",
                "x-domain": [
                  "RealEstateAgent"
                ],
                "x-parser-schema-id": "<anonymous-schema-838>"
              },
              "OfficeDBA": {
                "type": "string",
                "description": "name of office. For backward compatibility",
                "x-subPropertyOf": "additionalProperty",
                "x-domain": [
                  "RealEstateAgent"
                ],
                "x-parser-schema-id": "<anonymous-schema-839>"
              },
              "AffiliateStatus": {
                "type": "string",
                "description": "status of affiliate. For backward compatibility",
                "x-subPropertyOf": "additionalProperty",
                "x-domain": [
                  "RealEstateOrganization"
                ],
                "x-parser-schema-id": "<anonymous-schema-840>"
              },
              "OfficeStatus": {
                "type": "string",
                "description": "status of office. For backward compatibility",
                "x-subPropertyOf": "additionalProperty",
                "x-domain": [
                  "RealEstateAgent",
                  "RealEstateOffice"
                ],
                "x-parser-schema-id": "<anonymous-schema-841>"
              },
              "EmployeeType": {
                "type": "string",
                "description": "type of employee",
                "x-subPropertyOf": "additionalProperty",
                "x-domain": [
                  "RealEstateAgent"
                ],
                "enum": [
                  "Full Time Sales Professional",
                  "Part Time Sales Professional",
                  "Non-Agent",
                  "Marketing Team",
                  "In-House Admin. Profile"
                ],
                "x-parser-schema-id": "<anonymous-schema-842>"
              },
              "IsCompanyQueue": {
                "type": "boolean",
                "description": "if the real estate agent accepts company's lead",
                "x-subPropertyOf": "additionalProperty",
                "x-domain": [
                  "RealEstateAgent"
                ],
                "x-parser-schema-id": "<anonymous-schema-843>"
              },
              "agentWebsiteType": {
                "type": "string",
                "description": "agent's website type",
                "x-subPropertyOf": "additionalProperty",
                "x-domain": [
                  "RealEstateAgent"
                ],
                "enum": [
                  "Agent Profile",
                  "Agent Page with IDX Search"
                ],
                "x-parser-schema-id": "<anonymous-schema-844>"
              },
              "RoqLogicTCVersion": {
                "type": "string",
                "description": "version of RoqLogic terms and conditions agent accepted.",
                "x-subPropertyOf": "additionalProperty",
                "x-domain": [
                  "RealEstateAgent"
                ],
                "example": "TC-00035",
                "x-parser-schema-id": "<anonymous-schema-845>"
              },
              "bhhsLeadNotificationPreference": {
                "type": "object",
                "description": "lead notification preference",
                "x-subPropertyOf": "additionalProperty",
                "x-domain": [
                  "RealEstateAgent"
                ],
                "properties": {
                  "timeZone": {
                    "type": "string",
                    "example": [
                      "GMT+12:00 Fiji Time (Pacific/Fiji)"
                    ],
                    "x-parser-schema-id": "<anonymous-schema-847>"
                  },
                  "emailNotification": {
                    "type": "boolean",
                    "description": "if notification will be sent to sepcified email address",
                    "x-parser-schema-id": "<anonymous-schema-848>"
                  },
                  "textNotification": {
                    "type": "boolean",
                    "description": "if notification will be sent to sepcified phone number",
                    "x-parser-schema-id": "<anonymous-schema-849>"
                  },
                  "email": {
                    "type": "string",
                    "description": "email address that notification will be sent to",
                    "x-parser-schema-id": "<anonymous-schema-850>"
                  },
                  "telephone": {
                    "type": "string",
                    "description": "phone number that notification will be sent to",
                    "x-parser-schema-id": "<anonymous-schema-851>"
                  },
                  "leadNotificationSchedule": {
                    "type": "array",
                    "items": {
                      "title": "Schedule",
                      "type": "object",
                      "description": "A schedule defines a repeating time period used to describe a regularly occurring Event. At a minimum a schedule will specify repeatFrequency which describes the interval between occurences of the event. Additional information can be provided to specify the schedule more precisely. This includes identifying the day(s) of the week or month when the recurring event will take place, in addition to its start and end time. Schedules may also have start and end dates to indicate when they are active, e.g. to define a limited calendar of events.\n",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "The item type (Linked-Data @type)",
                          "x-parser-schema-id": "<anonymous-schema-618>"
                        },
                        "byDay": {
                          "description": "Defines the day(s) of the week on which a recurring Event takes place",
                          "type": "array",
                          "items": {
                            "type": "string",
                            "enum": [
                              "Sunday",
                              "Monday",
                              "Tuesday",
                              "Wednesday",
                              "Thursday",
                              "Friday"
                            ],
                            "x-parser-schema-id": "<anonymous-schema-821>"
                          },
                          "example": [
                            "Monday",
                            "Wednesday",
                            "Friday"
                          ],
                          "x-parser-schema-id": "<anonymous-schema-820>"
                        },
                        "byMonth": {
                          "description": "Defines the month(s) of the year on which a recurring Event takes place. Specified as an Integer between 1-12. January is 1.",
                          "type": "array",
                          "items": {
                            "type": "number",
                            "enum": [
                              1,
                              2,
                              3,
                              4,
                              5,
                              6,
                              7,
                              8,
                              9,
                              10,
                              11,
                              12
                            ],
                            "x-parser-schema-id": "<anonymous-schema-823>"
                          },
                          "example": [
                            1
                          ],
                          "x-parser-schema-id": "<anonymous-schema-822>"
                        },
                        "byMonthDay": {
                          "type": "array",
                          "description": "Defines the day(s) of the month on which a recurring Event takes place. Specified as an Integer between 1-31.",
                          "items": {
                            "type": "number",
                            "x-parser-schema-id": "<anonymous-schema-825>"
                          },
                          "x-parser-schema-id": "<anonymous-schema-824>"
                        }
                      },
                      "x-parser-schema-id": "<anonymous-schema-853>"
                    },
                    "x-parser-schema-id": "<anonymous-schema-852>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-846>"
              },
              "IsDisplayed": {
                "type": "boolean",
                "description": "if an affiliate/office/agent is listed in company/office/agent finder.",
                "x-subPropertyOf": "additionalProperty",
                "x-domain": [
                  "RealEstateOrganization",
                  "RealEstateOffice",
                  "RealEstateAgent"
                ],
                "x-parser-schema-id": "<anonymous-schema-854>"
              },
              "OfficeType": {
                "type": "string",
                "description": "type of office",
                "x-subPropertyOf": "additionalProperty",
                "x-domain": [
                  "RealEstateOffice"
                ],
                "enum": [
                  "Administrative Office",
                  "Branch Office",
                  "Kiosk",
                  "Primary Office",
                  "Srvice Center",
                  "Subdivision Sales Office"
                ],
                "x-parser-schema-id": "<anonymous-schema-855>"
              },
              "FullTimeCount": {
                "type": "integer",
                "description": "the number of full time sales professional",
                "x-subPropertyOf": "additionalProperty",
                "x-domain": [
                  "RealEstateOffice",
                  "RealEstateCompany"
                ],
                "x-parser-schema-id": "<anonymous-schema-856>"
              },
              "PartTimeCount": {
                "type": "integer",
                "description": "the number of part time sales professional",
                "x-subPropertyOf": "additionalProperty",
                "x-domain": [
                  "RealEstateOffice",
                  "RealEstateCompany"
                ],
                "x-parser-schema-id": "<anonymous-schema-857>"
              },
              "franchiseCommitmentNotes": {
                "type": "string",
                "x-subPropertyOf": "additionalProperty",
                "x-domain": [
                  "RealEstateOrganization"
                ],
                "x-parser-schema-id": "<anonymous-schema-858>"
              },
              "franchiseCommitment": {
                "type": "string",
                "x-subPropertyOf": "additionalProperty",
                "x-domain": [
                  "RealEstateOrganization"
                ],
                "x-parser-schema-id": "<anonymous-schema-859>"
              },
              "listingLeadsToListingAgent": {
                "type": "boolean",
                "x-subPropertyOf": "additionalProperty",
                "x-domain": [
                  "RealEstateOrganization"
                ],
                "x-parser-schema-id": "<anonymous-schema-860>"
              },
              "HSoACompany": {
                "type": "boolean",
                "description": "if company is owned by HSoA",
                "x-subPropertyOf": "additionalProperty",
                "x-domain": [
                  "RealEstateOrganization"
                ],
                "x-parser-schema-id": "<anonymous-schema-861>"
              },
              "unassignedLeadOwner": {
                "description": "agent whom affiliate leads are assigned to",
                "x-subPropertyOf": "identifier",
                "x-domain": [
                  "RealEstateOrganization"
                ],
                "x-parser-schema-id": "<anonymous-schema-862>"
              },
              "companyContactLastName": {
                "type": "string",
                "description": "last name of company contact",
                "x-domain": [
                  "RealEstateOrganization"
                ],
                "x-parser-schema-id": "<anonymous-schema-863>"
              },
              "companyContactFirstName": {
                "type": "string",
                "description": "first name of company contact",
                "x-domain": [
                  "RealEstateOrganization"
                ],
                "x-parser-schema-id": "<anonymous-schema-864>"
              },
              "companyCFO": {
                "type": "string",
                "description": "full name of company CFO",
                "x-domain": [
                  "RealEstateOrganization"
                ],
                "x-parser-schema-id": "<anonymous-schema-865>"
              },
              "primaryOffice": {
                "description": "primay office of company",
                "x-subPropertyOf": "identifier",
                "x-domain": [
                  "RealEstateOrganization"
                ],
                "x-parser-schema-id": "<anonymous-schema-866>"
              },
              "transactionReportingMethod": {
                "description": "method of reporting transaction",
                "type": "string",
                "x-domain": [
                  "RealEstateOrganization"
                ],
                "enum": [
                  "Batch File Upload",
                  "Direct Data Entry",
                  "Summary Reporting"
                ],
                "x-parser-schema-id": "<anonymous-schema-867>"
              },
              "databridgeVersion": {
                "description": "version of data bridge",
                "type": "string",
                "x-domain": [
                  "RealEstateOrganization"
                ],
                "enum": [
                  "DB4.0",
                  "DB3.0"
                ],
                "x-parser-schema-id": "<anonymous-schema-868>"
              },
              "systemDeactivationDate": {
                "type": "string",
                "format": "date-time",
                "x-domain": [
                  "RealEstateOrganization",
                  "RealEstateOffice"
                ],
                "x-parser-schema-id": "<anonymous-schema-869>"
              },
              "inactiveDate": {
                "type": "string",
                "format": "date-time",
                "x-domain": [
                  "RealEstateOrganization",
                  "RealEstateOffice"
                ],
                "x-parser-schema-id": "<anonymous-schema-870>"
              },
              "goLiveDate": {
                "type": "string",
                "format": "date-time",
                "x-domain": [
                  "RealEstateOrganization",
                  "RealEstateOffice"
                ],
                "x-parser-schema-id": "<anonymous-schema-871>"
              },
              "originalAffiliationDate": {
                "type": "string",
                "format": "date-time",
                "x-domain": [
                  "RealEstateOrganization"
                ],
                "x-parser-schema-id": "<anonymous-schema-872>"
              },
              "numberOfSubOrganizations": {
                "type": "integer",
                "x-domain": [
                  "RealEstateOrganization"
                ],
                "x-parser-schema-id": "<anonymous-schema-873>"
              },
              "PublicOffice": {
                "type": "string",
                "description": "office's public name",
                "x-domain": [
                  "RealEstateOffice"
                ],
                "x-parser-schema-id": "<anonymous-schema-874>"
              },
              "OfficeContact": {
                "description": "office contact",
                "x-subPropertyOf": "identifier",
                "x-domain": [
                  "RealEstateOffice"
                ],
                "x-parser-schema-id": "<anonymous-schema-875>"
              },
              "IsRelocationOffice": {
                "description": "if office is relocation office",
                "type": "boolean",
                "x-domain": [
                  "RealEstateOffice"
                ],
                "x-parser-schema-id": "<anonymous-schema-876>"
              },
              "PrimaryHomeStoryContact": {
                "description": "office primary Home Story contact",
                "x-subPropertyOf": "identifier",
                "x-domain": [
                  "RealEstateOffice"
                ],
                "x-parser-schema-id": "<anonymous-schema-877>"
              },
              "PrimaryHomeStoryContactEmail": {
                "description": "primary Home Story contact email",
                "type": "string",
                "x-domain": [
                  "RealEstateOffice"
                ],
                "x-parser-schema-id": "<anonymous-schema-878>"
              },
              "PrimaryRelocationContact": {
                "description": "office primary relocation contact",
                "x-subPropertyOf": "identifier",
                "x-domain": [
                  "RealEstateOffice"
                ],
                "x-parser-schema-id": "<anonymous-schema-879>"
              },
              "PrimaryRelocationContactEmail": {
                "description": "primary relocation contact email",
                "type": "string",
                "x-domain": [
                  "RealEstateOffice"
                ],
                "x-parser-schema-id": "<anonymous-schema-880>"
              },
              "PrimaryReferralContact": {
                "description": "office primary referral contact",
                "x-subPropertyOf": "identifier",
                "x-domain": [
                  "RealEstateOffice"
                ],
                "x-parser-schema-id": "<anonymous-schema-881>"
              },
              "PrimaryReferralContactEmail": {
                "description": "primary referral contact email",
                "type": "string",
                "x-domain": [
                  "RealEstateOffice"
                ],
                "x-parser-schema-id": "<anonymous-schema-882>"
              },
              "PrimaryREOContact": {
                "description": "office primary REO contact",
                "x-subPropertyOf": "identifier",
                "x-domain": [
                  "RealEstateOffice"
                ],
                "x-parser-schema-id": "<anonymous-schema-883>"
              },
              "PrimaryREOContactEmail": {
                "description": "primary REO contact email",
                "type": "string",
                "x-domain": [
                  "RealEstateOffice"
                ],
                "x-parser-schema-id": "<anonymous-schema-884>"
              },
              "transactionSequence": {
                "description": "The adjustment sequence number. Must be zeros if STR is closed but not an adjustment or if STR is open or canceled. If adjusting a closed transaction, the first adjustment must have 001 in the adjustment sequence, the second must have 002, the third, 003, etc. Sequence number cannot be equal or less than the last adjustment sequence number reported for the transaction if the Status has not changed.",
                "type": "string",
                "x-parser-schema-id": "<anonymous-schema-885>"
              },
              "unimprovedLandFlag": {
                "description": "A Yes/No flag identifying where or not the property involved in the transaction is considered unimproved land. Valid codes are Y = unimproved land  N= not an unimproved land",
                "type": "string",
                "x-parser-schema-id": "<anonymous-schema-886>"
              },
              "workingWithAgent": {
                "description": "is consumer already working with an Agent?",
                "type": "boolean",
                "x-parser-schema-id": "<anonymous-schema-887>"
              }
            },
            "x-parser-schema-id": "<anonymous-schema-833>"
          }
        },
        "x-parser-schema-id": "BHHSTerms"
      }
    }
  },
  "channels": {
    "award": {
      "publish": {
        "message": {
          "messageId": "award#publish",
          "name": "realestate/award#publish",
          "summary": "an award series was deleted",
          "contentType": "application/json",
          "payload": {
            "type": "object",
            "required": [
              "topic",
              "data"
            ],
            "properties": {
              "topic": {
                "type": "string",
                "enum": [
                  "realestate/award#seriescreate",
                  "realestate/award#seriesupdate",
                  "realestate/award#seriesdelete",
                  "realestate/award#create",
                  "realestate/award#delete",
                  "realestate/award#teamcreate",
                  "realestate/award#teamupdate",
                  "realestate/award#teamdelete",
                  "realestate/award#teammemberadd",
                  "realestate/award#teammemberremove"
                ],
                "x-parser-schema-id": "<anonymous-schema-2>"
              },
              "data": {
                "type": "object",
                "properties": {
                  "object": {
                    "oneOf": [
                      {
                        "title": "AwardSeries",
                        "type": "object",
                        "x-range": [
                          "AwardSeries"
                        ],
                        "description": "an award bestowed at regular intervals",
                        "properties": {
                          "type": {
                            "const": "AwardSeries",
                            "x-parser-schema-id": "<anonymous-schema-6>"
                          },
                          "name": {
                            "example": "Top 1% Club",
                            "description": "name of the series",
                            "type": "string",
                            "x-parser-schema-id": "<anonymous-schema-7>"
                          },
                          "description": {
                            "example": "Annual",
                            "type": "string",
                            "description": "description of the item.",
                            "x-parser-schema-id": "<anonymous-schema-8>"
                          },
                          "duration": {
                            "title": "duration",
                            "type": "string",
                            "format": "duration",
                            "description": "The duration of the item in ISO 8601 date format.",
                            "example": "R/P1Y",
                            "x-parser-schema-id": "<anonymous-schema-9>"
                          },
                          "startDate": {
                            "description": "the start date-time (ISO 8601 formated)",
                            "type": "string",
                            "format": "date-time",
                            "x-parser-schema-id": "<anonymous-schema-10>"
                          },
                          "endDate": {
                            "type": "string",
                            "description": "the end date-time (ISO 8601 formated)",
                            "format": "date-time",
                            "x-parser-schema-id": "<anonymous-schema-11>"
                          },
                          "id": {
                            "type": "string",
                            "format": "uri",
                            "x-parser-schema-id": "<anonymous-schema-12>"
                          },
                          "identifier": {
                            "example": {
                              "hsfAwardSeriesID": "xxxx"
                            },
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ],
                            "x-parser-schema-id": "<anonymous-schema-13>"
                          }
                        },
                        "x-parser-schema-id": "AwardSeries"
                      },
                      {
                        "title": "Award",
                        "type": "object",
                        "description": "An honor bestowed on one or mote _recipients_ by the message _agent_",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "Award"
                            ],
                            "description": "\"AwardAction\"",
                            "x-parser-schema-id": "<anonymous-schema-14>"
                          },
                          "name": {
                            "example": "Top 1%",
                            "description": "name of the award",
                            "type": "string",
                            "x-parser-schema-id": "<anonymous-schema-15>"
                          },
                          "dateAwarded": {
                            "type": "string",
                            "format": "date-time",
                            "description": "date the award was presented or announced.",
                            "x-range": "DateTime",
                            "example": "2019-11-25T04:23:32.000Z",
                            "x-parser-schema-id": "<anonymous-schema-16>"
                          },
                          "agent": {
                            "type": "string",
                            "format": "uri",
                            "description": "the agent that presented the award",
                            "x-parser-schema-id": "<anonymous-schema-17>"
                          },
                          "recipient": {
                            "type": "array",
                            "description": "recipients of the award",
                            "items": {
                              "type": "object",
                              "description": "the award recipient",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "RealEstateAgent",
                                    "RealEstateOffice",
                                    "RealEstateOrganization"
                                  ],
                                  "x-parser-schema-id": "<anonymous-schema-20>"
                                },
                                "id": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://user.example.com/profile/card#me",
                                  "x-parser-schema-id": "<anonymous-schema-21>"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "the name of the award recipient",
                                  "x-faker": "name.findName",
                                  "x-parser-schema-id": "<anonymous-schema-22>"
                                }
                              },
                              "required": [
                                "type",
                                "id",
                                "name"
                              ],
                              "x-parser-schema-id": "<anonymous-schema-19>"
                            },
                            "x-parser-schema-id": "<anonymous-schema-18>"
                          },
                          "identifier": {
                            "example": {
                              "hsfAwardId": "xxxx"
                            },
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ],
                            "x-parser-schema-id": "<anonymous-schema-23>"
                          }
                        },
                        "x-parser-schema-id": "Award"
                      },
                      {
                        "title": "AwardTeam",
                        "type": "object",
                        "x-range": "AwardTeam",
                        "description": "a Collection",
                        "required": [
                          "type",
                          "identifier"
                        ],
                        "properties": {
                          "type": {
                            "const": "AwardTeam",
                            "x-parser-schema-id": "<anonymous-schema-24>"
                          },
                          "name": {
                            "example": "Top Producer by Volume",
                            "type": "string",
                            "description": "the name of the item",
                            "x-parser-schema-id": "<anonymous-schema-25>"
                          },
                          "identifier": {
                            "example": {
                              "hsfTeamId": "xxxxx"
                            },
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ],
                            "x-parser-schema-id": "<anonymous-schema-26>"
                          },
                          "member": {
                            "description": "members of the AwardTeam",
                            "type": "array",
                            "items": {
                              "type": "string",
                              "format": "uri",
                              "examples": [
                                "http://12345.example.com/profile/card#me",
                                "http://ma302-001.example.com/profile/card#me",
                                "http://ma302.example.com/profile/card#me"
                              ],
                              "x-parser-schema-id": "<anonymous-schema-28>"
                            },
                            "x-parser-schema-id": "<anonymous-schema-27>"
                          }
                        },
                        "x-parser-schema-id": "AwardTeam"
                      },
                      {
                        "type": "string",
                        "format": "uri",
                        "example": "https://user.example.com/profile/card#me",
                        "x-parser-schema-id": "<anonymous-schema-29>"
                      }
                    ],
                    "x-parser-schema-id": "<anonymous-schema-5>"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "CreateAction",
                      "UpdateAction",
                      "DeleteAction",
                      "AddAction",
                      "RemoveAction"
                    ],
                    "x-parser-schema-id": "<anonymous-schema-4>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-3>"
              }
            },
            "x-parser-schema-id": "<anonymous-schema-1>"
          },
          "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
          "x-parser-original-payload": {
            "type": "object",
            "required": [
              "topic",
              "data"
            ],
            "properties": {
              "topic": {
                "type": "string",
                "enum": [
                  "realestate/award#seriescreate",
                  "realestate/award#seriesupdate",
                  "realestate/award#seriesdelete",
                  "realestate/award#create",
                  "realestate/award#delete",
                  "realestate/award#teamcreate",
                  "realestate/award#teamupdate",
                  "realestate/award#teamdelete",
                  "realestate/award#teammemberadd",
                  "realestate/award#teammemberremove"
                ]
              },
              "data": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "CreateAction",
                      "UpdateAction",
                      "DeleteAction",
                      "AddAction",
                      "RemoveAction"
                    ]
                  },
                  "object": {
                    "oneOf": [
                      {
                        "title": "AwardSeries",
                        "type": "object",
                        "x-range": [
                          "AwardSeries"
                        ],
                        "description": "an award bestowed at regular intervals",
                        "properties": {
                          "type": {
                            "const": "AwardSeries"
                          },
                          "name": {
                            "example": "Top 1% Club",
                            "description": "name of the series",
                            "type": "string"
                          },
                          "description": {
                            "example": "Annual",
                            "type": "string",
                            "description": "description of the item."
                          },
                          "duration": {
                            "title": "duration",
                            "type": "string",
                            "format": "duration",
                            "description": "The duration of the item in ISO 8601 date format.",
                            "example": "R/P1Y"
                          },
                          "startDate": {
                            "description": "the start date-time (ISO 8601 formated)",
                            "type": "string",
                            "format": "date-time"
                          },
                          "endDate": {
                            "type": "string",
                            "description": "the end date-time (ISO 8601 formated)",
                            "format": "date-time"
                          },
                          "id": {
                            "type": "string",
                            "format": "uri"
                          },
                          "identifier": {
                            "example": {
                              "hsfAwardSeriesID": "xxxx"
                            },
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ]
                          }
                        }
                      },
                      {
                        "title": "Award",
                        "type": "object",
                        "description": "An honor bestowed on one or mote _recipients_ by the message _agent_",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "Award"
                            ],
                            "description": "\"AwardAction\""
                          },
                          "name": {
                            "example": "Top 1%",
                            "description": "name of the award",
                            "type": "string"
                          },
                          "dateAwarded": {
                            "type": "string",
                            "format": "date-time",
                            "description": "date the award was presented or announced.",
                            "x-range": "DateTime",
                            "example": "2019-11-25T04:23:32.000Z"
                          },
                          "agent": {
                            "type": "string",
                            "format": "uri",
                            "description": "the agent that presented the award"
                          },
                          "recipient": {
                            "type": "array",
                            "description": "recipients of the award",
                            "items": {
                              "type": "object",
                              "description": "the award recipient",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "RealEstateAgent",
                                    "RealEstateOffice",
                                    "RealEstateOrganization"
                                  ]
                                },
                                "id": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://user.example.com/profile/card#me"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "the name of the award recipient",
                                  "x-faker": "name.findName"
                                }
                              },
                              "required": [
                                "type",
                                "id",
                                "name"
                              ]
                            }
                          },
                          "identifier": {
                            "example": {
                              "hsfAwardId": "xxxx"
                            },
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ]
                          }
                        }
                      },
                      {
                        "title": "AwardTeam",
                        "type": "object",
                        "x-range": "AwardTeam",
                        "description": "a Collection",
                        "required": [
                          "type",
                          "identifier"
                        ],
                        "properties": {
                          "type": {
                            "const": "AwardTeam"
                          },
                          "name": {
                            "example": "Top Producer by Volume",
                            "type": "string",
                            "description": "the name of the item"
                          },
                          "identifier": {
                            "example": {
                              "hsfTeamId": "xxxxx"
                            },
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ]
                          },
                          "member": {
                            "description": "members of the AwardTeam",
                            "type": "array",
                            "items": {
                              "type": "string",
                              "format": "uri",
                              "examples": [
                                "http://12345.example.com/profile/card#me",
                                "http://ma302-001.example.com/profile/card#me",
                                "http://ma302.example.com/profile/card#me"
                              ]
                            }
                          }
                        }
                      },
                      {
                        "type": "string",
                        "format": "uri",
                        "example": "https://user.example.com/profile/card#me"
                      }
                    ]
                  }
                }
              }
            }
          },
          "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
          "x-parser-message-parsed": true
        }
      },
      "subscribe": {
        "message": {
          "oneOf": [
            {
              "messageId": "award#delete",
              "name": "realestate/award#delete",
              "title": "award#delete",
              "summary": "award deleted",
              "contentType": "application/json",
              "tags": [
                {
                  "name": "action|delete"
                },
                {
                  "name": "topic|award"
                },
                {
                  "name": "domain|realestate"
                }
              ],
              "headers": {
                "$id": "subscription_headers",
                "title": "CloudEvent",
                "type": "object",
                "properties": {
                  "time": {
                    "type": "string",
                    "format": "date-time",
                    "description": "date & time the event was produced",
                    "x-parser-schema-id": "<anonymous-schema-30>"
                  },
                  "agent": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the event provider who sent the event via a subscription authorized to your service.",
                    "description": "if you are a multi-tenant app, then the agent is the user associated with the event data.\nany future events related to this message will be sent to the same agent/recipient\n",
                    "example": "https://andy_agent.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-31>"
                  },
                  "instrument": {
                    "type": "string",
                    "format": "uri",
                    "description": "the app or service that produced the event on behalf of the agent/user",
                    "example": "https://supercrm.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-32>"
                  },
                  "source": {
                    "type": "string",
                    "format": "uri",
                    "description": "an agent, team or organization who received a copy of the event",
                    "example": "https://bigbrandrealestate.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-33>"
                  },
                  "originalRecipient": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the original recipient of the event",
                    "description": "the originalRecipient helps you determine the subscription that delivered the event to you.\nif the originalRecipient is the same as the agent, then the you are subscribed to the agent.\nif the originalRecipient is different from the agent, then you are subscribed to the event source\n",
                    "example": "https://agentid.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-34>"
                  },
                  "id": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the event id",
                    "description": "the event id is a unique identifier for the event.\nall subscribers will receive the same event id.\n",
                    "example": "https://supercrm.example.com/publish/{eventid}",
                    "x-parser-schema-id": "<anonymous-schema-35>"
                  },
                  "@id": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the message id - the uri of the message in your inbox",
                    "example": "https://sumpercrm.example.com/inbox/{eventid}",
                    "x-parser-schema-id": "<anonymous-schema-36>"
                  }
                }
              },
              "payload": {
                "type": "object",
                "properties": {
                  "topic": {
                    "type": "string",
                    "const": "realestate/award#delete",
                    "x-parser-schema-id": "<anonymous-schema-38>"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "const": "DeleteAction",
                        "x-parser-schema-id": "<anonymous-schema-40>"
                      },
                      "agent": {
                        "type": "object",
                        "description": "the award presenter",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "RealEstateAgent",
                              "RealEstateOffice",
                              "RealEstateOrganization"
                            ],
                            "x-parser-schema-id": "<anonymous-schema-42>"
                          },
                          "id": {
                            "type": "string",
                            "format": "uri",
                            "example": "https://user.example.com/profile/card#me",
                            "x-parser-schema-id": "<anonymous-schema-43>"
                          },
                          "name": {
                            "type": "string",
                            "description": "the name of the award presenter",
                            "x-faker": "name.findName",
                            "x-parser-schema-id": "<anonymous-schema-44>"
                          }
                        },
                        "required": [
                          "type",
                          "id",
                          "name"
                        ],
                        "x-parser-schema-id": "<anonymous-schema-41>"
                      },
                      "identifier": {
                        "title": "identifier",
                        "type": "object",
                        "description": "identifier assigned to a contact by the vendor who originally created the contact",
                        "examples": [
                          {
                            "salesforceid": "0031U00002XW1QWQA1"
                          },
                          {
                            "vendoraid": "123456"
                          },
                          {
                            "originating_system_id": "123456"
                          }
                        ],
                        "example": {
                          "bhhsAwardId": "xxxx"
                        },
                        "x-parser-schema-id": "<anonymous-schema-45>"
                      }
                    },
                    "x-parser-schema-id": "<anonymous-schema-39>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-37>"
              },
              "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-original-payload": {
                "type": "object",
                "properties": {
                  "topic": {
                    "type": "string",
                    "const": "realestate/award#delete"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "const": "DeleteAction"
                      },
                      "agent": {
                        "type": "object",
                        "description": "the award presenter",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "RealEstateAgent",
                              "RealEstateOffice",
                              "RealEstateOrganization"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "format": "uri",
                            "example": "https://user.example.com/profile/card#me"
                          },
                          "name": {
                            "type": "string",
                            "description": "the name of the award presenter",
                            "x-faker": "name.findName"
                          }
                        },
                        "required": [
                          "type",
                          "id",
                          "name"
                        ]
                      },
                      "identifier": {
                        "title": "identifier",
                        "type": "object",
                        "description": "identifier assigned to a contact by the vendor who originally created the contact",
                        "examples": [
                          {
                            "salesforceid": "0031U00002XW1QWQA1"
                          },
                          {
                            "vendoraid": "123456"
                          },
                          {
                            "originating_system_id": "123456"
                          }
                        ],
                        "example": {
                          "bhhsAwardId": "xxxx"
                        }
                      }
                    }
                  }
                }
              },
              "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-message-parsed": true
            },
            {
              "messageId": "award#seriescreate",
              "name": "realestate/award#seriescreate",
              "summary": "a new award series was created",
              "headers": {
                "$id": "subscription_headers",
                "title": "CloudEvent",
                "type": "object",
                "properties": {
                  "time": {
                    "type": "string",
                    "format": "date-time",
                    "description": "date & time the event was produced",
                    "x-parser-schema-id": "<anonymous-schema-30>"
                  },
                  "agent": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the event provider who sent the event via a subscription authorized to your service.",
                    "description": "if you are a multi-tenant app, then the agent is the user associated with the event data.\nany future events related to this message will be sent to the same agent/recipient\n",
                    "example": "https://andy_agent.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-31>"
                  },
                  "instrument": {
                    "type": "string",
                    "format": "uri",
                    "description": "the app or service that produced the event on behalf of the agent/user",
                    "example": "https://supercrm.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-32>"
                  },
                  "source": {
                    "type": "string",
                    "format": "uri",
                    "description": "an agent, team or organization who received a copy of the event",
                    "example": "https://bigbrandrealestate.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-33>"
                  },
                  "originalRecipient": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the original recipient of the event",
                    "description": "the originalRecipient helps you determine the subscription that delivered the event to you.\nif the originalRecipient is the same as the agent, then the you are subscribed to the agent.\nif the originalRecipient is different from the agent, then you are subscribed to the event source\n",
                    "example": "https://agentid.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-34>"
                  },
                  "id": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the event id",
                    "description": "the event id is a unique identifier for the event.\nall subscribers will receive the same event id.\n",
                    "example": "https://supercrm.example.com/publish/{eventid}",
                    "x-parser-schema-id": "<anonymous-schema-35>"
                  },
                  "@id": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the message id - the uri of the message in your inbox",
                    "example": "https://sumpercrm.example.com/inbox/{eventid}",
                    "x-parser-schema-id": "<anonymous-schema-36>"
                  }
                }
              },
              "payload": {
                "type": "object",
                "properties": {
                  "topic": {
                    "type": "string",
                    "const": "realestate/award#seriescreate",
                    "x-parser-schema-id": "<anonymous-schema-47>"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "const": "CreateAction",
                        "x-parser-schema-id": "<anonymous-schema-49>"
                      },
                      "object": {
                        "title": "AwardSeries",
                        "type": "object",
                        "x-range": [
                          "AwardSeries"
                        ],
                        "description": "an award bestowed at regular intervals",
                        "properties": {
                          "type": {
                            "const": "AwardSeries",
                            "x-parser-schema-id": "<anonymous-schema-6>"
                          },
                          "name": {
                            "example": "Top 1% Club",
                            "description": "name of the series",
                            "type": "string",
                            "x-parser-schema-id": "<anonymous-schema-7>"
                          },
                          "description": {
                            "example": "Annual",
                            "type": "string",
                            "description": "description of the item.",
                            "x-parser-schema-id": "<anonymous-schema-8>"
                          },
                          "duration": {
                            "title": "duration",
                            "type": "string",
                            "format": "duration",
                            "description": "The duration of the item in ISO 8601 date format.",
                            "example": "R/P1Y",
                            "x-parser-schema-id": "<anonymous-schema-9>"
                          },
                          "startDate": {
                            "description": "the start date-time (ISO 8601 formated)",
                            "type": "string",
                            "format": "date-time",
                            "x-parser-schema-id": "<anonymous-schema-10>"
                          },
                          "endDate": {
                            "type": "string",
                            "description": "the end date-time (ISO 8601 formated)",
                            "format": "date-time",
                            "x-parser-schema-id": "<anonymous-schema-11>"
                          },
                          "id": {
                            "type": "string",
                            "format": "uri",
                            "x-parser-schema-id": "<anonymous-schema-12>"
                          },
                          "identifier": {
                            "example": {
                              "hsfAwardSeriesID": "xxxx"
                            },
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ],
                            "x-parser-schema-id": "<anonymous-schema-13>"
                          }
                        },
                        "x-parser-schema-id": "AwardSeries"
                      }
                    },
                    "x-parser-schema-id": "<anonymous-schema-48>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-46>"
              },
              "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-original-payload": {
                "type": "object",
                "properties": {
                  "topic": {
                    "type": "string",
                    "const": "realestate/award#seriescreate"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "const": "CreateAction"
                      },
                      "object": {
                        "title": "AwardSeries",
                        "type": "object",
                        "x-range": [
                          "AwardSeries"
                        ],
                        "description": "an award bestowed at regular intervals",
                        "properties": {
                          "type": {
                            "const": "AwardSeries"
                          },
                          "name": {
                            "example": "Top 1% Club",
                            "description": "name of the series",
                            "type": "string"
                          },
                          "description": {
                            "example": "Annual",
                            "type": "string",
                            "description": "description of the item."
                          },
                          "duration": {
                            "title": "duration",
                            "type": "string",
                            "format": "duration",
                            "description": "The duration of the item in ISO 8601 date format.",
                            "example": "R/P1Y"
                          },
                          "startDate": {
                            "description": "the start date-time (ISO 8601 formated)",
                            "type": "string",
                            "format": "date-time"
                          },
                          "endDate": {
                            "type": "string",
                            "description": "the end date-time (ISO 8601 formated)",
                            "format": "date-time"
                          },
                          "id": {
                            "type": "string",
                            "format": "uri"
                          },
                          "identifier": {
                            "example": {
                              "hsfAwardSeriesID": "xxxx"
                            },
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              },
              "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-message-parsed": true
            },
            {
              "messageId": "award#seriesdelete",
              "name": "realestate/award#seriesdelete",
              "summary": "an award series was deleted",
              "headers": {
                "$id": "subscription_headers",
                "title": "CloudEvent",
                "type": "object",
                "properties": {
                  "time": {
                    "type": "string",
                    "format": "date-time",
                    "description": "date & time the event was produced",
                    "x-parser-schema-id": "<anonymous-schema-30>"
                  },
                  "agent": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the event provider who sent the event via a subscription authorized to your service.",
                    "description": "if you are a multi-tenant app, then the agent is the user associated with the event data.\nany future events related to this message will be sent to the same agent/recipient\n",
                    "example": "https://andy_agent.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-31>"
                  },
                  "instrument": {
                    "type": "string",
                    "format": "uri",
                    "description": "the app or service that produced the event on behalf of the agent/user",
                    "example": "https://supercrm.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-32>"
                  },
                  "source": {
                    "type": "string",
                    "format": "uri",
                    "description": "an agent, team or organization who received a copy of the event",
                    "example": "https://bigbrandrealestate.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-33>"
                  },
                  "originalRecipient": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the original recipient of the event",
                    "description": "the originalRecipient helps you determine the subscription that delivered the event to you.\nif the originalRecipient is the same as the agent, then the you are subscribed to the agent.\nif the originalRecipient is different from the agent, then you are subscribed to the event source\n",
                    "example": "https://agentid.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-34>"
                  },
                  "id": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the event id",
                    "description": "the event id is a unique identifier for the event.\nall subscribers will receive the same event id.\n",
                    "example": "https://supercrm.example.com/publish/{eventid}",
                    "x-parser-schema-id": "<anonymous-schema-35>"
                  },
                  "@id": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the message id - the uri of the message in your inbox",
                    "example": "https://sumpercrm.example.com/inbox/{eventid}",
                    "x-parser-schema-id": "<anonymous-schema-36>"
                  }
                }
              },
              "payload": {
                "type": "object",
                "properties": {
                  "topic": {
                    "type": "string",
                    "const": "realestate/award#seriesdelete",
                    "x-parser-schema-id": "<anonymous-schema-51>"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "const": "DeleteAction",
                        "x-parser-schema-id": "<anonymous-schema-53>"
                      },
                      "object": {
                        "title": "AwardSeries",
                        "type": "object",
                        "x-range": [
                          "AwardSeries"
                        ],
                        "description": "an award bestowed at regular intervals",
                        "properties": {
                          "type": {
                            "const": "AwardSeries",
                            "x-parser-schema-id": "<anonymous-schema-6>"
                          },
                          "name": {
                            "example": "Top 1% Club",
                            "description": "name of the series",
                            "type": "string",
                            "x-parser-schema-id": "<anonymous-schema-7>"
                          },
                          "description": {
                            "example": "Annual",
                            "type": "string",
                            "description": "description of the item.",
                            "x-parser-schema-id": "<anonymous-schema-8>"
                          },
                          "duration": {
                            "title": "duration",
                            "type": "string",
                            "format": "duration",
                            "description": "The duration of the item in ISO 8601 date format.",
                            "example": "R/P1Y",
                            "x-parser-schema-id": "<anonymous-schema-9>"
                          },
                          "startDate": {
                            "description": "the start date-time (ISO 8601 formated)",
                            "type": "string",
                            "format": "date-time",
                            "x-parser-schema-id": "<anonymous-schema-10>"
                          },
                          "endDate": {
                            "type": "string",
                            "description": "the end date-time (ISO 8601 formated)",
                            "format": "date-time",
                            "x-parser-schema-id": "<anonymous-schema-11>"
                          },
                          "id": {
                            "type": "string",
                            "format": "uri",
                            "x-parser-schema-id": "<anonymous-schema-12>"
                          },
                          "identifier": {
                            "example": {
                              "hsfAwardSeriesID": "xxxx"
                            },
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ],
                            "x-parser-schema-id": "<anonymous-schema-13>"
                          }
                        },
                        "x-parser-schema-id": "AwardSeries"
                      }
                    },
                    "x-parser-schema-id": "<anonymous-schema-52>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-50>"
              },
              "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-original-payload": {
                "type": "object",
                "properties": {
                  "topic": {
                    "type": "string",
                    "const": "realestate/award#seriesdelete"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "const": "DeleteAction"
                      },
                      "object": {
                        "title": "AwardSeries",
                        "type": "object",
                        "x-range": [
                          "AwardSeries"
                        ],
                        "description": "an award bestowed at regular intervals",
                        "properties": {
                          "type": {
                            "const": "AwardSeries"
                          },
                          "name": {
                            "example": "Top 1% Club",
                            "description": "name of the series",
                            "type": "string"
                          },
                          "description": {
                            "example": "Annual",
                            "type": "string",
                            "description": "description of the item."
                          },
                          "duration": {
                            "title": "duration",
                            "type": "string",
                            "format": "duration",
                            "description": "The duration of the item in ISO 8601 date format.",
                            "example": "R/P1Y"
                          },
                          "startDate": {
                            "description": "the start date-time (ISO 8601 formated)",
                            "type": "string",
                            "format": "date-time"
                          },
                          "endDate": {
                            "type": "string",
                            "description": "the end date-time (ISO 8601 formated)",
                            "format": "date-time"
                          },
                          "id": {
                            "type": "string",
                            "format": "uri"
                          },
                          "identifier": {
                            "example": {
                              "hsfAwardSeriesID": "xxxx"
                            },
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              },
              "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-message-parsed": true
            },
            {
              "messageId": "award#seriesupdate",
              "name": "realestate/award#seriesupdate",
              "title": "award#seriesupdate",
              "summary": "an award series was updated",
              "contentType": "application/json",
              "tags": [
                {
                  "name": "action|update"
                },
                {
                  "name": "topic|award"
                },
                {
                  "name": "domain|realestate"
                }
              ],
              "headers": {
                "$id": "subscription_headers",
                "title": "CloudEvent",
                "type": "object",
                "properties": {
                  "time": {
                    "type": "string",
                    "format": "date-time",
                    "description": "date & time the event was produced",
                    "x-parser-schema-id": "<anonymous-schema-30>"
                  },
                  "agent": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the event provider who sent the event via a subscription authorized to your service.",
                    "description": "if you are a multi-tenant app, then the agent is the user associated with the event data.\nany future events related to this message will be sent to the same agent/recipient\n",
                    "example": "https://andy_agent.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-31>"
                  },
                  "instrument": {
                    "type": "string",
                    "format": "uri",
                    "description": "the app or service that produced the event on behalf of the agent/user",
                    "example": "https://supercrm.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-32>"
                  },
                  "source": {
                    "type": "string",
                    "format": "uri",
                    "description": "an agent, team or organization who received a copy of the event",
                    "example": "https://bigbrandrealestate.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-33>"
                  },
                  "originalRecipient": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the original recipient of the event",
                    "description": "the originalRecipient helps you determine the subscription that delivered the event to you.\nif the originalRecipient is the same as the agent, then the you are subscribed to the agent.\nif the originalRecipient is different from the agent, then you are subscribed to the event source\n",
                    "example": "https://agentid.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-34>"
                  },
                  "id": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the event id",
                    "description": "the event id is a unique identifier for the event.\nall subscribers will receive the same event id.\n",
                    "example": "https://supercrm.example.com/publish/{eventid}",
                    "x-parser-schema-id": "<anonymous-schema-35>"
                  },
                  "@id": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the message id - the uri of the message in your inbox",
                    "example": "https://sumpercrm.example.com/inbox/{eventid}",
                    "x-parser-schema-id": "<anonymous-schema-36>"
                  }
                }
              },
              "payload": {
                "type": "object",
                "properties": {
                  "topic": {
                    "type": "string",
                    "const": "realestate/award#seriesupdate",
                    "x-parser-schema-id": "<anonymous-schema-55>"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "const": "UpdateAction",
                        "x-parser-schema-id": "<anonymous-schema-57>"
                      },
                      "object": {
                        "title": "AwardSeries",
                        "type": "object",
                        "x-range": [
                          "AwardSeries"
                        ],
                        "description": "an award bestowed at regular intervals",
                        "properties": {
                          "type": {
                            "const": "AwardSeries",
                            "x-parser-schema-id": "<anonymous-schema-6>"
                          },
                          "name": {
                            "example": "Top 1% Club",
                            "description": "name of the series",
                            "type": "string",
                            "x-parser-schema-id": "<anonymous-schema-7>"
                          },
                          "description": {
                            "example": "Annual",
                            "type": "string",
                            "description": "description of the item.",
                            "x-parser-schema-id": "<anonymous-schema-8>"
                          },
                          "duration": {
                            "title": "duration",
                            "type": "string",
                            "format": "duration",
                            "description": "The duration of the item in ISO 8601 date format.",
                            "example": "R/P1Y",
                            "x-parser-schema-id": "<anonymous-schema-9>"
                          },
                          "startDate": {
                            "description": "the start date-time (ISO 8601 formated)",
                            "type": "string",
                            "format": "date-time",
                            "x-parser-schema-id": "<anonymous-schema-10>"
                          },
                          "endDate": {
                            "type": "string",
                            "description": "the end date-time (ISO 8601 formated)",
                            "format": "date-time",
                            "x-parser-schema-id": "<anonymous-schema-11>"
                          },
                          "id": {
                            "type": "string",
                            "format": "uri",
                            "x-parser-schema-id": "<anonymous-schema-12>"
                          },
                          "identifier": {
                            "example": {
                              "hsfAwardSeriesID": "xxxx"
                            },
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ],
                            "x-parser-schema-id": "<anonymous-schema-13>"
                          }
                        },
                        "x-parser-schema-id": "<anonymous-schema-58>"
                      }
                    },
                    "x-parser-schema-id": "<anonymous-schema-56>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-54>"
              },
              "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-original-payload": {
                "type": "object",
                "properties": {
                  "topic": {
                    "type": "string",
                    "const": "realestate/award#seriesupdate"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "const": "UpdateAction"
                      },
                      "object": {
                        "title": "AwardSeries",
                        "type": "object",
                        "x-range": [
                          "AwardSeries"
                        ],
                        "description": "an award bestowed at regular intervals",
                        "properties": {
                          "type": {
                            "const": "AwardSeries"
                          },
                          "name": {
                            "example": "Top 1% Club",
                            "description": "name of the series",
                            "type": "string"
                          },
                          "description": {
                            "example": "Annual",
                            "type": "string",
                            "description": "description of the item."
                          },
                          "duration": {
                            "title": "duration",
                            "type": "string",
                            "format": "duration",
                            "description": "The duration of the item in ISO 8601 date format.",
                            "example": "R/P1Y"
                          },
                          "startDate": {
                            "description": "the start date-time (ISO 8601 formated)",
                            "type": "string",
                            "format": "date-time"
                          },
                          "endDate": {
                            "type": "string",
                            "description": "the end date-time (ISO 8601 formated)",
                            "format": "date-time"
                          },
                          "id": {
                            "type": "string",
                            "format": "uri"
                          },
                          "identifier": {
                            "example": {
                              "hsfAwardSeriesID": "xxxx"
                            },
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              },
              "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-message-parsed": true
            },
            {
              "messageId": "award#teamcreate",
              "name": "realestate/award#teamcreate",
              "title": "award#teamcreate",
              "summary": "an award team was created",
              "contentType": "application/json",
              "tags": [
                {
                  "name": "action|create"
                },
                {
                  "name": "topic|award"
                },
                {
                  "name": "domain|realestate"
                }
              ],
              "headers": {
                "$id": "subscription_headers",
                "title": "CloudEvent",
                "type": "object",
                "properties": {
                  "time": {
                    "type": "string",
                    "format": "date-time",
                    "description": "date & time the event was produced",
                    "x-parser-schema-id": "<anonymous-schema-30>"
                  },
                  "agent": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the event provider who sent the event via a subscription authorized to your service.",
                    "description": "if you are a multi-tenant app, then the agent is the user associated with the event data.\nany future events related to this message will be sent to the same agent/recipient\n",
                    "example": "https://andy_agent.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-31>"
                  },
                  "instrument": {
                    "type": "string",
                    "format": "uri",
                    "description": "the app or service that produced the event on behalf of the agent/user",
                    "example": "https://supercrm.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-32>"
                  },
                  "source": {
                    "type": "string",
                    "format": "uri",
                    "description": "an agent, team or organization who received a copy of the event",
                    "example": "https://bigbrandrealestate.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-33>"
                  },
                  "originalRecipient": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the original recipient of the event",
                    "description": "the originalRecipient helps you determine the subscription that delivered the event to you.\nif the originalRecipient is the same as the agent, then the you are subscribed to the agent.\nif the originalRecipient is different from the agent, then you are subscribed to the event source\n",
                    "example": "https://agentid.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-34>"
                  },
                  "id": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the event id",
                    "description": "the event id is a unique identifier for the event.\nall subscribers will receive the same event id.\n",
                    "example": "https://supercrm.example.com/publish/{eventid}",
                    "x-parser-schema-id": "<anonymous-schema-35>"
                  },
                  "@id": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the message id - the uri of the message in your inbox",
                    "example": "https://sumpercrm.example.com/inbox/{eventid}",
                    "x-parser-schema-id": "<anonymous-schema-36>"
                  }
                }
              },
              "payload": {
                "type": "object",
                "properties": {
                  "topic": {
                    "type": "string",
                    "const": "realestate/award#teamcreate",
                    "x-parser-schema-id": "<anonymous-schema-60>"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "const": "CreateAction",
                        "x-parser-schema-id": "<anonymous-schema-62>"
                      },
                      "object": {
                        "title": "AwardTeam",
                        "type": "object",
                        "x-range": "AwardTeam",
                        "description": "a Collection",
                        "required": [
                          "type",
                          "identifier"
                        ],
                        "properties": {
                          "type": {
                            "const": "AwardTeam",
                            "x-parser-schema-id": "<anonymous-schema-24>"
                          },
                          "name": {
                            "example": "Top Producer by Volume",
                            "type": "string",
                            "description": "the name of the item",
                            "x-parser-schema-id": "<anonymous-schema-25>"
                          },
                          "identifier": {
                            "example": {
                              "hsfTeamId": "xxxxx"
                            },
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ],
                            "x-parser-schema-id": "<anonymous-schema-26>"
                          },
                          "member": {
                            "description": "members of the AwardTeam",
                            "type": "array",
                            "items": {
                              "type": "string",
                              "format": "uri",
                              "examples": [
                                "http://12345.example.com/profile/card#me",
                                "http://ma302-001.example.com/profile/card#me",
                                "http://ma302.example.com/profile/card#me"
                              ],
                              "x-parser-schema-id": "<anonymous-schema-28>"
                            },
                            "x-parser-schema-id": "<anonymous-schema-27>"
                          }
                        },
                        "x-parser-schema-id": "<anonymous-schema-63>"
                      }
                    },
                    "x-parser-schema-id": "<anonymous-schema-61>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-59>"
              },
              "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-original-payload": {
                "type": "object",
                "properties": {
                  "topic": {
                    "type": "string",
                    "const": "realestate/award#teamcreate"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "const": "CreateAction"
                      },
                      "object": {
                        "title": "AwardTeam",
                        "type": "object",
                        "x-range": "AwardTeam",
                        "description": "a Collection",
                        "required": [
                          "type",
                          "identifier"
                        ],
                        "properties": {
                          "type": {
                            "const": "AwardTeam"
                          },
                          "name": {
                            "example": "Top Producer by Volume",
                            "type": "string",
                            "description": "the name of the item"
                          },
                          "identifier": {
                            "example": {
                              "hsfTeamId": "xxxxx"
                            },
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ]
                          },
                          "member": {
                            "description": "members of the AwardTeam",
                            "type": "array",
                            "items": {
                              "type": "string",
                              "format": "uri",
                              "examples": [
                                "http://12345.example.com/profile/card#me",
                                "http://ma302-001.example.com/profile/card#me",
                                "http://ma302.example.com/profile/card#me"
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-message-parsed": true
            },
            {
              "messageId": "award#teammemberadd",
              "name": "realestate/award#teammemberadd",
              "title": "award#teammemberadd",
              "summary": "a new team member (data.object) was added to an award team (data.targetCollection)",
              "contentType": "application/json",
              "tags": [
                {
                  "name": "action|add"
                },
                {
                  "name": "topic|award"
                },
                {
                  "name": "domain|realestate"
                }
              ],
              "headers": {
                "$id": "subscription_headers",
                "title": "CloudEvent",
                "type": "object",
                "properties": {
                  "time": {
                    "type": "string",
                    "format": "date-time",
                    "description": "date & time the event was produced",
                    "x-parser-schema-id": "<anonymous-schema-30>"
                  },
                  "agent": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the event provider who sent the event via a subscription authorized to your service.",
                    "description": "if you are a multi-tenant app, then the agent is the user associated with the event data.\nany future events related to this message will be sent to the same agent/recipient\n",
                    "example": "https://andy_agent.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-31>"
                  },
                  "instrument": {
                    "type": "string",
                    "format": "uri",
                    "description": "the app or service that produced the event on behalf of the agent/user",
                    "example": "https://supercrm.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-32>"
                  },
                  "source": {
                    "type": "string",
                    "format": "uri",
                    "description": "an agent, team or organization who received a copy of the event",
                    "example": "https://bigbrandrealestate.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-33>"
                  },
                  "originalRecipient": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the original recipient of the event",
                    "description": "the originalRecipient helps you determine the subscription that delivered the event to you.\nif the originalRecipient is the same as the agent, then the you are subscribed to the agent.\nif the originalRecipient is different from the agent, then you are subscribed to the event source\n",
                    "example": "https://agentid.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-34>"
                  },
                  "id": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the event id",
                    "description": "the event id is a unique identifier for the event.\nall subscribers will receive the same event id.\n",
                    "example": "https://supercrm.example.com/publish/{eventid}",
                    "x-parser-schema-id": "<anonymous-schema-35>"
                  },
                  "@id": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the message id - the uri of the message in your inbox",
                    "example": "https://sumpercrm.example.com/inbox/{eventid}",
                    "x-parser-schema-id": "<anonymous-schema-36>"
                  }
                }
              },
              "payload": {
                "type": "object",
                "properties": {
                  "topic": {
                    "type": "string",
                    "const": "realestate/award#teammemberadd",
                    "x-parser-schema-id": "<anonymous-schema-65>"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "const": "AddAction",
                        "x-parser-schema-id": "<anonymous-schema-67>"
                      },
                      "object": {
                        "description": "the profile uri of the team member being added",
                        "type": "string",
                        "format": "uri",
                        "x-parser-schema-id": "<anonymous-schema-68>"
                      },
                      "targetCollection": {
                        "title": "AwardTeam",
                        "type": "object",
                        "x-range": "AwardTeam",
                        "description": "a Collection",
                        "required": [
                          "type",
                          "identifier"
                        ],
                        "properties": {
                          "type": {
                            "const": "AwardTeam",
                            "x-parser-schema-id": "<anonymous-schema-24>"
                          },
                          "name": {
                            "example": "Top Producer by Volume",
                            "type": "string",
                            "description": "the name of the item",
                            "x-parser-schema-id": "<anonymous-schema-25>"
                          },
                          "identifier": {
                            "example": {
                              "hsfTeamId": "xxxxx"
                            },
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ],
                            "x-parser-schema-id": "<anonymous-schema-26>"
                          },
                          "member": {
                            "description": "members of the AwardTeam",
                            "type": "array",
                            "items": {
                              "type": "string",
                              "format": "uri",
                              "examples": [
                                "http://12345.example.com/profile/card#me",
                                "http://ma302-001.example.com/profile/card#me",
                                "http://ma302.example.com/profile/card#me"
                              ],
                              "x-parser-schema-id": "<anonymous-schema-28>"
                            },
                            "x-parser-schema-id": "<anonymous-schema-27>"
                          }
                        },
                        "x-parser-schema-id": "<anonymous-schema-69>"
                      }
                    },
                    "x-parser-schema-id": "<anonymous-schema-66>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-64>"
              },
              "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-original-payload": {
                "type": "object",
                "properties": {
                  "topic": {
                    "type": "string",
                    "const": "realestate/award#teammemberadd"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "const": "AddAction"
                      },
                      "object": {
                        "description": "the profile uri of the team member being added",
                        "type": "string",
                        "format": "uri"
                      },
                      "targetCollection": {
                        "title": "AwardTeam",
                        "type": "object",
                        "x-range": "AwardTeam",
                        "description": "a Collection",
                        "required": [
                          "type",
                          "identifier"
                        ],
                        "properties": {
                          "type": {
                            "const": "AwardTeam"
                          },
                          "name": {
                            "example": "Top Producer by Volume",
                            "type": "string",
                            "description": "the name of the item"
                          },
                          "identifier": {
                            "example": {
                              "hsfTeamId": "xxxxx"
                            },
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ]
                          },
                          "member": {
                            "description": "members of the AwardTeam",
                            "type": "array",
                            "items": {
                              "type": "string",
                              "format": "uri",
                              "examples": [
                                "http://12345.example.com/profile/card#me",
                                "http://ma302-001.example.com/profile/card#me",
                                "http://ma302.example.com/profile/card#me"
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-message-parsed": true
            },
            {
              "messageId": "award#teammemberremove",
              "name": "realestate/award#teammemberremove",
              "title": "award#teammemberremove",
              "summary": "an award team member was removed",
              "contentType": "application/json",
              "tags": [
                {
                  "name": "action|add"
                },
                {
                  "name": "topic|award"
                },
                {
                  "name": "domain|realestate"
                }
              ],
              "headers": {
                "$id": "subscription_headers",
                "title": "CloudEvent",
                "type": "object",
                "properties": {
                  "time": {
                    "type": "string",
                    "format": "date-time",
                    "description": "date & time the event was produced",
                    "x-parser-schema-id": "<anonymous-schema-30>"
                  },
                  "agent": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the event provider who sent the event via a subscription authorized to your service.",
                    "description": "if you are a multi-tenant app, then the agent is the user associated with the event data.\nany future events related to this message will be sent to the same agent/recipient\n",
                    "example": "https://andy_agent.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-31>"
                  },
                  "instrument": {
                    "type": "string",
                    "format": "uri",
                    "description": "the app or service that produced the event on behalf of the agent/user",
                    "example": "https://supercrm.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-32>"
                  },
                  "source": {
                    "type": "string",
                    "format": "uri",
                    "description": "an agent, team or organization who received a copy of the event",
                    "example": "https://bigbrandrealestate.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-33>"
                  },
                  "originalRecipient": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the original recipient of the event",
                    "description": "the originalRecipient helps you determine the subscription that delivered the event to you.\nif the originalRecipient is the same as the agent, then the you are subscribed to the agent.\nif the originalRecipient is different from the agent, then you are subscribed to the event source\n",
                    "example": "https://agentid.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-34>"
                  },
                  "id": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the event id",
                    "description": "the event id is a unique identifier for the event.\nall subscribers will receive the same event id.\n",
                    "example": "https://supercrm.example.com/publish/{eventid}",
                    "x-parser-schema-id": "<anonymous-schema-35>"
                  },
                  "@id": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the message id - the uri of the message in your inbox",
                    "example": "https://sumpercrm.example.com/inbox/{eventid}",
                    "x-parser-schema-id": "<anonymous-schema-36>"
                  }
                }
              },
              "payload": {
                "type": "object",
                "properties": {
                  "topic": {
                    "type": "string",
                    "const": "realestate/award#teammemberremove",
                    "x-parser-schema-id": "<anonymous-schema-71>"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "const": "AddAction",
                        "x-parser-schema-id": "<anonymous-schema-73>"
                      },
                      "object": {
                        "description": "the profile uri of the team member being added",
                        "type": "string",
                        "format": "uri",
                        "x-parser-schema-id": "<anonymous-schema-74>"
                      },
                      "targetCollection": {
                        "title": "AwardTeam",
                        "type": "object",
                        "x-range": "AwardTeam",
                        "description": "a Collection",
                        "required": [
                          "type",
                          "identifier"
                        ],
                        "properties": {
                          "type": {
                            "const": "AwardTeam",
                            "x-parser-schema-id": "<anonymous-schema-24>"
                          },
                          "name": {
                            "example": "Top Producer by Volume",
                            "type": "string",
                            "description": "the name of the item",
                            "x-parser-schema-id": "<anonymous-schema-25>"
                          },
                          "identifier": {
                            "example": {
                              "hsfTeamId": "xxxxx"
                            },
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ],
                            "x-parser-schema-id": "<anonymous-schema-26>"
                          },
                          "member": {
                            "description": "members of the AwardTeam",
                            "type": "array",
                            "items": {
                              "type": "string",
                              "format": "uri",
                              "examples": [
                                "http://12345.example.com/profile/card#me",
                                "http://ma302-001.example.com/profile/card#me",
                                "http://ma302.example.com/profile/card#me"
                              ],
                              "x-parser-schema-id": "<anonymous-schema-28>"
                            },
                            "x-parser-schema-id": "<anonymous-schema-27>"
                          }
                        },
                        "x-parser-schema-id": "<anonymous-schema-75>"
                      }
                    },
                    "x-parser-schema-id": "<anonymous-schema-72>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-70>"
              },
              "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-original-payload": {
                "type": "object",
                "properties": {
                  "topic": {
                    "type": "string",
                    "const": "realestate/award#teammemberremove"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "const": "AddAction"
                      },
                      "object": {
                        "description": "the profile uri of the team member being added",
                        "type": "string",
                        "format": "uri"
                      },
                      "targetCollection": {
                        "title": "AwardTeam",
                        "type": "object",
                        "x-range": "AwardTeam",
                        "description": "a Collection",
                        "required": [
                          "type",
                          "identifier"
                        ],
                        "properties": {
                          "type": {
                            "const": "AwardTeam"
                          },
                          "name": {
                            "example": "Top Producer by Volume",
                            "type": "string",
                            "description": "the name of the item"
                          },
                          "identifier": {
                            "example": {
                              "hsfTeamId": "xxxxx"
                            },
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ]
                          },
                          "member": {
                            "description": "members of the AwardTeam",
                            "type": "array",
                            "items": {
                              "type": "string",
                              "format": "uri",
                              "examples": [
                                "http://12345.example.com/profile/card#me",
                                "http://ma302-001.example.com/profile/card#me",
                                "http://ma302.example.com/profile/card#me"
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-message-parsed": true
            },
            {
              "messageId": "award#teamupdate",
              "name": "realestate/award#teamupdate",
              "title": "award#teamupdate",
              "summary": "an award team was updated",
              "contentType": "application/json",
              "tags": [
                {
                  "name": "action|update"
                },
                {
                  "name": "topic|award"
                },
                {
                  "name": "domain|realestate"
                }
              ],
              "headers": {
                "$id": "subscription_headers",
                "title": "CloudEvent",
                "type": "object",
                "properties": {
                  "time": {
                    "type": "string",
                    "format": "date-time",
                    "description": "date & time the event was produced",
                    "x-parser-schema-id": "<anonymous-schema-30>"
                  },
                  "agent": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the event provider who sent the event via a subscription authorized to your service.",
                    "description": "if you are a multi-tenant app, then the agent is the user associated with the event data.\nany future events related to this message will be sent to the same agent/recipient\n",
                    "example": "https://andy_agent.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-31>"
                  },
                  "instrument": {
                    "type": "string",
                    "format": "uri",
                    "description": "the app or service that produced the event on behalf of the agent/user",
                    "example": "https://supercrm.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-32>"
                  },
                  "source": {
                    "type": "string",
                    "format": "uri",
                    "description": "an agent, team or organization who received a copy of the event",
                    "example": "https://bigbrandrealestate.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-33>"
                  },
                  "originalRecipient": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the original recipient of the event",
                    "description": "the originalRecipient helps you determine the subscription that delivered the event to you.\nif the originalRecipient is the same as the agent, then the you are subscribed to the agent.\nif the originalRecipient is different from the agent, then you are subscribed to the event source\n",
                    "example": "https://agentid.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-34>"
                  },
                  "id": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the event id",
                    "description": "the event id is a unique identifier for the event.\nall subscribers will receive the same event id.\n",
                    "example": "https://supercrm.example.com/publish/{eventid}",
                    "x-parser-schema-id": "<anonymous-schema-35>"
                  },
                  "@id": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the message id - the uri of the message in your inbox",
                    "example": "https://sumpercrm.example.com/inbox/{eventid}",
                    "x-parser-schema-id": "<anonymous-schema-36>"
                  }
                }
              },
              "payload": {
                "type": "object",
                "properties": {
                  "topic": {
                    "type": "string",
                    "const": "realestate/award#teamupdate",
                    "x-parser-schema-id": "<anonymous-schema-77>"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "const": "UpdateAction",
                        "x-parser-schema-id": "<anonymous-schema-79>"
                      },
                      "object": {
                        "title": "AwardTeam",
                        "type": "object",
                        "x-range": "AwardTeam",
                        "description": "a Collection",
                        "required": [
                          "type",
                          "identifier"
                        ],
                        "properties": {
                          "type": {
                            "const": "AwardTeam",
                            "x-parser-schema-id": "<anonymous-schema-24>"
                          },
                          "name": {
                            "example": "Top Producer by Volume",
                            "type": "string",
                            "description": "the name of the item",
                            "x-parser-schema-id": "<anonymous-schema-25>"
                          },
                          "identifier": {
                            "example": {
                              "hsfTeamId": "xxxxx"
                            },
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ],
                            "x-parser-schema-id": "<anonymous-schema-26>"
                          },
                          "member": {
                            "description": "members of the AwardTeam",
                            "type": "array",
                            "items": {
                              "type": "string",
                              "format": "uri",
                              "examples": [
                                "http://12345.example.com/profile/card#me",
                                "http://ma302-001.example.com/profile/card#me",
                                "http://ma302.example.com/profile/card#me"
                              ],
                              "x-parser-schema-id": "<anonymous-schema-28>"
                            },
                            "x-parser-schema-id": "<anonymous-schema-27>"
                          }
                        },
                        "x-parser-schema-id": "<anonymous-schema-80>"
                      }
                    },
                    "x-parser-schema-id": "<anonymous-schema-78>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-76>"
              },
              "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-original-payload": {
                "type": "object",
                "properties": {
                  "topic": {
                    "type": "string",
                    "const": "realestate/award#teamupdate"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "const": "UpdateAction"
                      },
                      "object": {
                        "title": "AwardTeam",
                        "type": "object",
                        "x-range": "AwardTeam",
                        "description": "a Collection",
                        "required": [
                          "type",
                          "identifier"
                        ],
                        "properties": {
                          "type": {
                            "const": "AwardTeam"
                          },
                          "name": {
                            "example": "Top Producer by Volume",
                            "type": "string",
                            "description": "the name of the item"
                          },
                          "identifier": {
                            "example": {
                              "hsfTeamId": "xxxxx"
                            },
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ]
                          },
                          "member": {
                            "description": "members of the AwardTeam",
                            "type": "array",
                            "items": {
                              "type": "string",
                              "format": "uri",
                              "examples": [
                                "http://12345.example.com/profile/card#me",
                                "http://ma302-001.example.com/profile/card#me",
                                "http://ma302.example.com/profile/card#me"
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-message-parsed": true
            },
            {
              "messageId": "award#update",
              "name": "realestate/award#update",
              "summary": "award action is updated",
              "headers": {
                "$id": "subscription_headers",
                "title": "CloudEvent",
                "type": "object",
                "properties": {
                  "time": {
                    "type": "string",
                    "format": "date-time",
                    "description": "date & time the event was produced",
                    "x-parser-schema-id": "<anonymous-schema-30>"
                  },
                  "agent": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the event provider who sent the event via a subscription authorized to your service.",
                    "description": "if you are a multi-tenant app, then the agent is the user associated with the event data.\nany future events related to this message will be sent to the same agent/recipient\n",
                    "example": "https://andy_agent.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-31>"
                  },
                  "instrument": {
                    "type": "string",
                    "format": "uri",
                    "description": "the app or service that produced the event on behalf of the agent/user",
                    "example": "https://supercrm.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-32>"
                  },
                  "source": {
                    "type": "string",
                    "format": "uri",
                    "description": "an agent, team or organization who received a copy of the event",
                    "example": "https://bigbrandrealestate.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-33>"
                  },
                  "originalRecipient": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the original recipient of the event",
                    "description": "the originalRecipient helps you determine the subscription that delivered the event to you.\nif the originalRecipient is the same as the agent, then the you are subscribed to the agent.\nif the originalRecipient is different from the agent, then you are subscribed to the event source\n",
                    "example": "https://agentid.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-34>"
                  },
                  "id": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the event id",
                    "description": "the event id is a unique identifier for the event.\nall subscribers will receive the same event id.\n",
                    "example": "https://supercrm.example.com/publish/{eventid}",
                    "x-parser-schema-id": "<anonymous-schema-35>"
                  },
                  "@id": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the message id - the uri of the message in your inbox",
                    "example": "https://sumpercrm.example.com/inbox/{eventid}",
                    "x-parser-schema-id": "<anonymous-schema-36>"
                  }
                }
              },
              "payload": {
                "type": "object",
                "properties": {
                  "topic": {
                    "type": "string",
                    "const": "realestate/award#update",
                    "x-parser-schema-id": "<anonymous-schema-82>"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "const": "UpdateAction",
                        "x-parser-schema-id": "<anonymous-schema-84>"
                      },
                      "object": {
                        "title": "Award",
                        "type": "object",
                        "description": "An honor bestowed on one or mote _recipients_ by the message _agent_",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "Award"
                            ],
                            "description": "\"AwardAction\"",
                            "x-parser-schema-id": "<anonymous-schema-14>"
                          },
                          "name": {
                            "example": "Top 1%",
                            "description": "name of the award",
                            "type": "string",
                            "x-parser-schema-id": "<anonymous-schema-15>"
                          },
                          "dateAwarded": {
                            "type": "string",
                            "format": "date-time",
                            "description": "date the award was presented or announced.",
                            "x-range": "DateTime",
                            "example": "2019-11-25T04:23:32.000Z",
                            "x-parser-schema-id": "<anonymous-schema-16>"
                          },
                          "agent": {
                            "type": "string",
                            "format": "uri",
                            "description": "the agent that presented the award",
                            "x-parser-schema-id": "<anonymous-schema-17>"
                          },
                          "recipient": {
                            "type": "array",
                            "description": "recipients of the award",
                            "items": {
                              "type": "object",
                              "description": "the award recipient",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "RealEstateAgent",
                                    "RealEstateOffice",
                                    "RealEstateOrganization"
                                  ],
                                  "x-parser-schema-id": "<anonymous-schema-20>"
                                },
                                "id": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://user.example.com/profile/card#me",
                                  "x-parser-schema-id": "<anonymous-schema-21>"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "the name of the award recipient",
                                  "x-faker": "name.findName",
                                  "x-parser-schema-id": "<anonymous-schema-22>"
                                }
                              },
                              "required": [
                                "type",
                                "id",
                                "name"
                              ],
                              "x-parser-schema-id": "<anonymous-schema-19>"
                            },
                            "x-parser-schema-id": "<anonymous-schema-18>"
                          },
                          "identifier": {
                            "example": {
                              "hsfAwardId": "xxxx"
                            },
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ],
                            "x-parser-schema-id": "<anonymous-schema-23>"
                          }
                        },
                        "x-parser-schema-id": "<anonymous-schema-85>"
                      }
                    },
                    "x-parser-schema-id": "<anonymous-schema-83>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-81>"
              },
              "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-original-payload": {
                "type": "object",
                "properties": {
                  "topic": {
                    "type": "string",
                    "const": "realestate/award#update"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "const": "UpdateAction"
                      },
                      "object": {
                        "title": "Award",
                        "type": "object",
                        "description": "An honor bestowed on one or mote _recipients_ by the message _agent_",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "Award"
                            ],
                            "description": "\"AwardAction\""
                          },
                          "name": {
                            "example": "Top 1%",
                            "description": "name of the award",
                            "type": "string"
                          },
                          "dateAwarded": {
                            "type": "string",
                            "format": "date-time",
                            "description": "date the award was presented or announced.",
                            "x-range": "DateTime",
                            "example": "2019-11-25T04:23:32.000Z"
                          },
                          "agent": {
                            "type": "string",
                            "format": "uri",
                            "description": "the agent that presented the award"
                          },
                          "recipient": {
                            "type": "array",
                            "description": "recipients of the award",
                            "items": {
                              "type": "object",
                              "description": "the award recipient",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "RealEstateAgent",
                                    "RealEstateOffice",
                                    "RealEstateOrganization"
                                  ]
                                },
                                "id": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://user.example.com/profile/card#me"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "the name of the award recipient",
                                  "x-faker": "name.findName"
                                }
                              },
                              "required": [
                                "type",
                                "id",
                                "name"
                              ]
                            }
                          },
                          "identifier": {
                            "example": {
                              "hsfAwardId": "xxxx"
                            },
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              },
              "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-message-parsed": true
            }
          ]
        }
      }
    },
    "contact": {
      "subscribe": {
        "message": {
          "oneOf": [
            {
              "messageId": "contact#add",
              "name": "realestate/contact#add",
              "summary": "a contact (data.object) is added by a user (data.agent), optionally to a specific targetCollection",
              "headers": {
                "$id": "subscription_headers",
                "title": "CloudEvent",
                "type": "object",
                "properties": {
                  "time": {
                    "type": "string",
                    "format": "date-time",
                    "description": "date & time the event was produced",
                    "x-parser-schema-id": "<anonymous-schema-30>"
                  },
                  "agent": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the event provider who sent the event via a subscription authorized to your service.",
                    "description": "if you are a multi-tenant app, then the agent is the user associated with the event data.\nany future events related to this message will be sent to the same agent/recipient\n",
                    "example": "https://andy_agent.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-31>"
                  },
                  "instrument": {
                    "type": "string",
                    "format": "uri",
                    "description": "the app or service that produced the event on behalf of the agent/user",
                    "example": "https://supercrm.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-32>"
                  },
                  "source": {
                    "type": "string",
                    "format": "uri",
                    "description": "an agent, team or organization who received a copy of the event",
                    "example": "https://bigbrandrealestate.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-33>"
                  },
                  "originalRecipient": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the original recipient of the event",
                    "description": "the originalRecipient helps you determine the subscription that delivered the event to you.\nif the originalRecipient is the same as the agent, then the you are subscribed to the agent.\nif the originalRecipient is different from the agent, then you are subscribed to the event source\n",
                    "example": "https://agentid.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-34>"
                  },
                  "id": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the event id",
                    "description": "the event id is a unique identifier for the event.\nall subscribers will receive the same event id.\n",
                    "example": "https://supercrm.example.com/publish/{eventid}",
                    "x-parser-schema-id": "<anonymous-schema-35>"
                  },
                  "@id": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the message id - the uri of the message in your inbox",
                    "example": "https://sumpercrm.example.com/inbox/{eventid}",
                    "x-parser-schema-id": "<anonymous-schema-36>"
                  }
                }
              },
              "payload": {
                "type": "object",
                "required": [
                  "topic",
                  "data"
                ],
                "properties": {
                  "topic": {
                    "const": "realestate/contact#add",
                    "x-parser-schema-id": "<anonymous-schema-87>"
                  },
                  "data": {
                    "type": "object",
                    "required": [
                      "object"
                    ],
                    "properties": {
                      "type": {
                        "const": "AddAction",
                        "x-parser-schema-id": "<anonymous-schema-89>"
                      },
                      "agent": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "const": "Person",
                            "x-parser-schema-id": "<anonymous-schema-91>"
                          },
                          "name": {
                            "type": "string",
                            "description": "the name of the item",
                            "x-parser-schema-id": "<anonymous-schema-92>"
                          },
                          "email": {
                            "type": "string",
                            "format": "email",
                            "x-faker": "internet.email",
                            "x-parser-schema-id": "<anonymous-schema-93>"
                          },
                          "identifier": {
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ],
                            "x-parser-schema-id": "<anonymous-schema-94>"
                          }
                        },
                        "required": [
                          "type"
                        ],
                        "minProperties": 2,
                        "x-parser-schema-id": "<anonymous-schema-90>"
                      },
                      "object": {
                        "allOf": [
                          {
                            "title": "Person",
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "x-parser-schema-id": "<anonymous-schema-95>"
                              },
                              "affiliation": {
                                "description": "An organization that this person is affiliated with",
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://example.com/profile/card#me",
                                  "x-parser-schema-id": "<anonymous-schema-97>"
                                },
                                "x-parser-schema-id": "<anonymous-schema-96>"
                              },
                              "address": {
                                "type": "array",
                                "items": {
                                  "$id": "http://realestate.yodata.me/schemas/PostalAddress.yaml",
                                  "title": "PostalAddress",
                                  "type": "object",
                                  "description": "A physical address.",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "PostalAddress",
                                      "x-parser-schema-id": "<anonymous-schema-99>"
                                    },
                                    "streetAddress": {
                                      "type": "string",
                                      "description": "the street number and name.",
                                      "x-faker": "address.streetAddress",
                                      "examples": [
                                        "5046 Ottis Point",
                                        "166 Marion Burg",
                                        "93044 Haley Stream"
                                      ],
                                      "x-parser-schema-id": "<anonymous-schema-100>"
                                    },
                                    "postOfficeBoxNumber": {
                                      "type": "string",
                                      "description": "The post office box number for PO box addresses.",
                                      "x-faker": "address.secondaryAddress",
                                      "examples": [
                                        "Box 1234",
                                        "Apt. 161",
                                        "Apt. 623"
                                      ],
                                      "x-parser-schema-id": "<anonymous-schema-101>"
                                    },
                                    "addressRegion": {
                                      "type": "string",
                                      "description": "State or Province.",
                                      "x-faker": "address.state",
                                      "examples": [
                                        "New Jersey",
                                        "California",
                                        "MI",
                                        null
                                      ],
                                      "x-parser-schema-id": "<anonymous-schema-102>"
                                    },
                                    "addressLocality": {
                                      "type": "string",
                                      "description": "City, Township.",
                                      "x-faker": "address.city",
                                      "examples": [
                                        "Gotham City",
                                        "Kulasmouth",
                                        "Heidistad",
                                        "Altamonte Springs",
                                        "West Ahmed",
                                        "Blaiseview"
                                      ],
                                      "x-parser-schema-id": "<anonymous-schema-103>"
                                    },
                                    "postalCode": {
                                      "type": "string",
                                      "description": "Zip/Post Code",
                                      "x-faker": "address.zipCode",
                                      "examples": [
                                        "10010",
                                        "38859",
                                        "40387",
                                        "50239-7698",
                                        null
                                      ],
                                      "x-parser-schema-id": "<anonymous-schema-104>"
                                    },
                                    "addressCountry": {
                                      "type": "string",
                                      "description": "The country. For example, USA. You can also provide the two-letter ISO 3166-1 alpha-2 country code.",
                                      "examples": [
                                        "USA",
                                        "TH",
                                        "NZ",
                                        "EG",
                                        "SJ",
                                        "VN"
                                      ],
                                      "x-faker": "address.countryCode",
                                      "x-parser-schema-id": "<anonymous-schema-105>"
                                    },
                                    "addressCounty": {
                                      "type": "string",
                                      "description": "the county (us real estate extension)",
                                      "faker": "address.county",
                                      "examples": [
                                        "Gotham County",
                                        "Buckinghamshire",
                                        "Borders",
                                        null
                                      ],
                                      "x-parser-schema-id": "<anonymous-schema-106>"
                                    },
                                    "addressSubdivision": {
                                      "type": "string",
                                      "description": "the subdivision or neighborhood (us real estate extension)",
                                      "x-faker": "address.streetName",
                                      "examples": [
                                        "Gotham Heights",
                                        "South Kensington",
                                        "SOMA (South of Market)",
                                        "Nob Hill"
                                      ],
                                      "x-parser-schema-id": "<anonymous-schema-107>"
                                    }
                                  },
                                  "x-parser-schema-id": "PostalAddress"
                                },
                                "x-parser-schema-id": "<anonymous-schema-98>"
                              },
                              "birthDate": {
                                "description": "date of birth.",
                                "type": "string",
                                "format": "date",
                                "x-parser-schema-id": "<anonymous-schema-108>"
                              },
                              "contactPoint": {
                                "description": "contact points for the person",
                                "type": "array",
                                "items": {
                                  "$id": "htttp://realestate.yodata.me/schema/ContactPoint.json",
                                  "title": "ContactPoint",
                                  "description": "A point of contact for the entity. By convention in the real estate domain, ContactPoints\nare preferred over telephone, email, and faxNumber so the ContactPoint.name property can be used to label values\nfor example, Work Telephone, Home, as named contactPoint values.\n",
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "name"
                                  ],
                                  "minProperties": 3,
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "ContactPoint",
                                      "x-parser-schema-id": "<anonymous-schema-110>"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "a label for the contactPoint, i.e. 'Work', or 'Home'",
                                      "examples": [
                                        "Work",
                                        "Home",
                                        "Vacation",
                                        "Bob's Cell",
                                        "Alice's Work"
                                      ],
                                      "x-parser-schema-id": "<anonymous-schema-111>"
                                    },
                                    "telephone": {
                                      "type": "string",
                                      "x-faker": "phone.phoneNumber",
                                      "examples": [
                                        "555-555-5555",
                                        "555-555-5555 x123",
                                        "555-555-5555 ext. 123",
                                        "+1-555-555-5555"
                                      ],
                                      "x-parser-schema-id": "<anonymous-schema-112>"
                                    },
                                    "faxNumber": {
                                      "type": "string",
                                      "x-faker": "phone.phoneNumber",
                                      "examples": [
                                        "555-555-5555",
                                        "555-555-5555 x123",
                                        "555-555-5555 ext. 123",
                                        "+1-555-555-5555"
                                      ],
                                      "x-parser-schema-id": "<anonymous-schema-113>"
                                    },
                                    "email": {
                                      "description": "an email address for the item.",
                                      "type": "string",
                                      "format": "email",
                                      "x-faker": "internet.email",
                                      "examples": [
                                        "bob@example.com",
                                        "alice@example.com"
                                      ],
                                      "x-parser-schema-id": "<anonymous-schema-114>"
                                    },
                                    "url": {
                                      "description": "primary URL for the item.",
                                      "type": "string",
                                      "format": "uri",
                                      "example": "https://www.facebook.com/hallandoates",
                                      "x-parser-schema-id": "<anonymous-schema-115>"
                                    }
                                  },
                                  "x-parser-schema-id": "ContactPoint"
                                },
                                "x-parser-schema-id": "<anonymous-schema-109>"
                              },
                              "email": {
                                "type": "string",
                                "format": "email",
                                "x-faker": "internet.email",
                                "x-parser-schema-id": "<anonymous-schema-93>"
                              },
                              "additionalName": {
                                "title": "additionalName",
                                "description": "any other name(s) associated with the entity, i.e. nickname, middle name, maiden name, etc. For multiple names, use a comma without space as a separator.",
                                "type": "string",
                                "examples": [
                                  "Johnny,John",
                                  "Prince,The Artist Formerly Known as Prince,The Artist",
                                  "Babs,Barbara",
                                  "Katheryn Elizabeth Hudson,Katy Perry",
                                  "Destiny Hope Cyrus,Miley Cyrus"
                                ],
                                "x-parser-schema-id": "<anonymous-schema-116>"
                              },
                              "familyName": {
                                "$id": "htttp://realestate.yodata.me/schema/familyName.yaml",
                                "type": "string",
                                "title": "Family Name",
                                "description": "Last Name of a person",
                                "x-faker": "name.lastName",
                                "maxLength": 50,
                                "externalDocs": {
                                  "description": "Family Name",
                                  "url": "https://schema.org/familyName"
                                },
                                "examples": [
                                  "Smith",
                                  "Jones",
                                  "Parker",
                                  "Monk",
                                  "Brown",
                                  "Miller",
                                  "Davis",
                                  "Wilson",
                                  "Fitzgerald",
                                  "Johnson",
                                  "Williams"
                                ]
                              },
                              "faxNumber": {
                                "type": "string",
                                "description": "Do people still use fax machines?",
                                "x-faker": "phone.phoneNumber",
                                "x-parser-schema-id": "<anonymous-schema-117>"
                              },
                              "givenName": {
                                "type": "string",
                                "description": "First Name of a person",
                                "x-faker": "name.firstName",
                                "examples": [
                                  "John",
                                  "Jane",
                                  "Mary",
                                  "Joseph",
                                  "William",
                                  "David",
                                  "Richard",
                                  "Charles",
                                  "Thomas",
                                  "Christopher",
                                  "Daniel",
                                  "Matthew",
                                  "Anthony",
                                  "Donald",
                                  "Mark",
                                  "Paul",
                                  "Steven",
                                  "Andrew",
                                  "Kenneth",
                                  "George",
                                  "Joshua",
                                  "Kevin",
                                  "Brian",
                                  "Edward",
                                  "Ronald",
                                  "Timothy",
                                  "Jason",
                                  "Jeffrey",
                                  "Ryan",
                                  "Jacob"
                                ],
                                "x-parser-schema-id": "<anonymous-schema-118>"
                              },
                              "honorificPrefix": {
                                "title": "honorificPrefix",
                                "description": "An honorific prefix preceding a Person's name such as Dr/Mrs/Mr.",
                                "type": "string",
                                "example": "Dr",
                                "x-parser-schema-id": "<anonymous-schema-119>"
                              },
                              "honorificSuffix": {
                                "title": "honorificSuffix",
                                "description": "An honorific title following a person's name like M.D.",
                                "type": "string",
                                "example": "Esq",
                                "x-parser-schema-id": "<anonymous-schema-120>"
                              },
                              "jobTitle": {
                                "title": "jobTitle",
                                "description": "job tiles associated with the item",
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "x-parser-schema-id": "<anonymous-schema-122>"
                                },
                                "example": [
                                  "Chief Data Officer",
                                  "Sanitation Engineer"
                                ],
                                "x-parser-schema-id": "<anonymous-schema-121>"
                              },
                              "knowsLanguage": {
                                "description": "languages spoken by the person",
                                "type": "array",
                                "items": {
                                  "$id": "htttp://realestate.yodata.me/schema/Language.yaml",
                                  "description": "a written or spoken Language",
                                  "title": "Language",
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "name",
                                    "additionalName"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "Language",
                                      "x-parser-schema-id": "<anonymous-schema-124>"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "the display name of the language",
                                      "x-parser-schema-id": "<anonymous-schema-125>"
                                    },
                                    "additionalName": {
                                      "type": "string",
                                      "description": "BCP 47 language code",
                                      "x-parser-schema-id": "<anonymous-schema-126>"
                                    }
                                  },
                                  "examples": [
                                    {
                                      "type": "Language",
                                      "name": "English",
                                      "additionalName": "en-us"
                                    },
                                    {
                                      "type": "Language",
                                      "name": "Spanish",
                                      "additionalName": "es"
                                    },
                                    {
                                      "type": "Language",
                                      "name": "French",
                                      "additionalName": "fr"
                                    },
                                    {
                                      "type": "Language",
                                      "name": "German",
                                      "additionalName": "de"
                                    },
                                    {
                                      "type": "Language",
                                      "name": "Italian",
                                      "additionalName": "it"
                                    },
                                    {
                                      "type": "Language",
                                      "name": "Japanese",
                                      "additionalName": "ja"
                                    },
                                    {
                                      "type": "Language",
                                      "name": "Korean",
                                      "additionalName": "ko"
                                    },
                                    {
                                      "type": "Language",
                                      "name": "Portuguese",
                                      "additionalName": "pt"
                                    },
                                    {
                                      "type": "Language",
                                      "name": "Russian",
                                      "additionalName": "ru"
                                    },
                                    {
                                      "type": "Language",
                                      "name": "Chinese",
                                      "additionalName": "zh"
                                    },
                                    {
                                      "type": "Language",
                                      "name": "Arabic",
                                      "additionalName": "ar"
                                    },
                                    {
                                      "type": "Language",
                                      "name": "Hindi",
                                      "additionalName": "hi"
                                    },
                                    {
                                      "type": "Language",
                                      "name": "Bengali",
                                      "additionalName": "bn"
                                    },
                                    {
                                      "type": "Language",
                                      "name": "Portuguese",
                                      "additionalName": "pt"
                                    }
                                  ],
                                  "x-parser-schema-id": "Language"
                                },
                                "x-parser-schema-id": "<anonymous-schema-123>"
                              },
                              "name": {
                                "description": "Full name of the person.",
                                "type": "string",
                                "x-faker": "name.findName",
                                "x-parser-schema-id": "<anonymous-schema-127>"
                              },
                              "telephone": {
                                "type": "string",
                                "description": "Primary phone number.",
                                "example": "+15558675309",
                                "x-parser-schema-id": "<anonymous-schema-128>"
                              },
                              "worksFor": {
                                "type": "string",
                                "description": "Organizations the person works for.",
                                "x-faker": "company.companyName",
                                "x-parser-schema-id": "<anonymous-schema-129>"
                              }
                            },
                            "x-parser-schema-id": "Person"
                          },
                          {
                            "title": "Contact",
                            "description": "a CRM contact.",
                            "properties": {
                              "type": {
                                "type": "string",
                                "const": "Contact"
                              },
                              "identifier": {
                                "title": "identifier",
                                "type": "object",
                                "description": "identifier assigned to a contact by the vendor who originally created the contact",
                                "examples": [
                                  {
                                    "salesforceid": "0031U00002XW1QWQA1"
                                  },
                                  {
                                    "vendoraid": "123456"
                                  },
                                  {
                                    "originating_system_id": "123456"
                                  }
                                ],
                                "x-parser-schema-id": "<anonymous-schema-94>"
                              },
                              "additionalProperty": {
                                "title": "additionalProperty",
                                "type": "object",
                                "description": "additionalProperty are",
                                "example": {
                                  "supercrmuserid": 1234,
                                  "doNotSell": true
                                }
                              },
                              "comment": {
                                "title": "comment",
                                "type": "array",
                                "description": "comments by, for or about the item",
                                "x-range": "Comment",
                                "items": {
                                  "type": "object"
                                },
                                "example": [
                                  {
                                    "type": "Comment",
                                    "text": "this is my comment.",
                                    "author": {
                                      "type": "Contact",
                                      "name": "Bruce Wayne"
                                    },
                                    "about": {
                                      "type": "PropertyListing",
                                      "id": "https://example.com/listingid"
                                    },
                                    "dateCreated": "2019-07-15T05:24:05Z",
                                    "dateModified": "2019-07-15T05:24:05Z"
                                  }
                                ]
                              },
                              "jobTitle": {
                                "title": "jobTitle",
                                "description": "The job title of the person (for example, Financial Manager).",
                                "type": "string",
                                "x-faker": "name.jobTitle",
                                "examples": [
                                  "CEO",
                                  "Sales Manager",
                                  "Escrow Officer",
                                  "Transaction Coordinator",
                                  "Director of Marketing",
                                  "Senior Loan Officer",
                                  "Loan Officer",
                                  "Sanitation Engineer",
                                  "Owner",
                                  "Cofounder",
                                  "Founder",
                                  "President",
                                  "Vice President of Sales",
                                  null,
                                  null,
                                  null,
                                  null,
                                  null,
                                  null,
                                  null,
                                  null,
                                  null,
                                  null
                                ],
                                "x-parser-schema-id": "<anonymous-schema-388>"
                              },
                              "contactGroup": {
                                "type": "array",
                                "items": {
                                  "$id": "htttp://realestate.yodata.me/schema/ContactGroup.json",
                                  "title": "ContactGroup",
                                  "description": "groups the contact is a member of.",
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "name"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "ContactGroup",
                                        "Collection"
                                      ]
                                    },
                                    "identifier": {
                                      "title": "identifier",
                                      "type": "object",
                                      "description": "identifier assigned to a contact by the vendor who originally created the contact",
                                      "examples": [
                                        {
                                          "salesforceid": "0031U00002XW1QWQA1"
                                        },
                                        {
                                          "vendoraid": "123456"
                                        },
                                        {
                                          "originating_system_id": "123456"
                                        }
                                      ],
                                      "x-parser-schema-id": "<anonymous-schema-94>"
                                    },
                                    "name": {
                                      "type": "string",
                                      "examples": [
                                        "Past Clients",
                                        "Prospects",
                                        "Leads",
                                        "Referrals",
                                        "Friends",
                                        "Family",
                                        "Neighbors",
                                        "Business Associates",
                                        "Personal"
                                      ]
                                    }
                                  }
                                }
                              },
                              "keywords": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "leadOwner": {
                                "type": "object",
                                "description": "lead owner",
                                "x-range": [
                                  "RealEstateAgent",
                                  "RealEstateOrganization",
                                  "RealEstateTeam"
                                ],
                                "example": {
                                  "type": "RealEstateOrganization",
                                  "name": "Gotham City Real Estate",
                                  "id": "https://example.com/profile.card#me"
                                }
                              },
                              "leadSource": {
                                "type": "object",
                                "description": "origin of the lead",
                                "x-range": [
                                  "MobileApplication",
                                  "RealEstateOffice",
                                  "RealEstateWebsite",
                                  "Thing"
                                ],
                                "example": {
                                  "id": "https://www.zillow.com/homedetails/1044-Siler-Pl-Berkeley-CA-94705/24820985_zpid/",
                                  "type": "RealEstateWebsite",
                                  "name": "Zillow",
                                  "url": "https://zillow.com"
                                }
                              },
                              "originatingSystem": {
                                "type": "object",
                                "x-range": [
                                  "Thing"
                                ],
                                "description": "the original system where this item was created.  Can be of type Thing or any sub-type.",
                                "examples": [
                                  {
                                    "type": "SoftwareApplication",
                                    "name": "RDesk",
                                    "description": "User Created.",
                                    "url": "http://www.rdeskwebsite.com/"
                                  }
                                ]
                              },
                              "dateCreated": {
                                "$id": "http://realestate.yodata.me/schema/dateCreated.yaml",
                                "type": "string",
                                "format": "date-time",
                                "title": "Date Created",
                                "description": "The date on which the item was created."
                              },
                              "dateModified": {
                                "description": "The date on which the item was most recently modified or when the item's entry was modified within a DataFeed.",
                                "type": "string",
                                "format": "date-time",
                                "x-parser-schema-id": "<anonymous-schema-136>"
                              }
                            },
                            "x-parser-schema-id": "<anonymous-schema-130>"
                          }
                        ],
                        "x-parser-schema-id": "Contact"
                      }
                    },
                    "x-parser-schema-id": "<anonymous-schema-88>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-86>"
              },
              "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-original-payload": {
                "type": "object",
                "required": [
                  "topic",
                  "data"
                ],
                "properties": {
                  "topic": {
                    "const": "realestate/contact#add"
                  },
                  "data": {
                    "type": "object",
                    "required": [
                      "object"
                    ],
                    "properties": {
                      "type": {
                        "const": "AddAction"
                      },
                      "agent": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "const": "Person"
                          },
                          "name": {
                            "type": "string",
                            "description": "the name of the item"
                          },
                          "email": {
                            "type": "string",
                            "format": "email",
                            "x-faker": "internet.email"
                          },
                          "identifier": {
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ]
                          }
                        },
                        "required": [
                          "type"
                        ],
                        "minProperties": 2
                      },
                      "object": {
                        "allOf": [
                          {
                            "title": "Person",
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string"
                              },
                              "affiliation": {
                                "description": "An organization that this person is affiliated with",
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://example.com/profile/card#me"
                                }
                              },
                              "address": {
                                "type": "array",
                                "items": {
                                  "$id": "http://realestate.yodata.me/schemas/PostalAddress.yaml",
                                  "title": "PostalAddress",
                                  "type": "object",
                                  "description": "A physical address.",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "PostalAddress"
                                    },
                                    "streetAddress": {
                                      "type": "string",
                                      "description": "the street number and name.",
                                      "x-faker": "address.streetAddress",
                                      "examples": [
                                        "5046 Ottis Point",
                                        "166 Marion Burg",
                                        "93044 Haley Stream"
                                      ]
                                    },
                                    "postOfficeBoxNumber": {
                                      "type": "string",
                                      "description": "The post office box number for PO box addresses.",
                                      "x-faker": "address.secondaryAddress",
                                      "examples": [
                                        "Box 1234",
                                        "Apt. 161",
                                        "Apt. 623"
                                      ]
                                    },
                                    "addressRegion": {
                                      "type": "string",
                                      "description": "State or Province.",
                                      "x-faker": "address.state",
                                      "examples": [
                                        "New Jersey",
                                        "California",
                                        "MI",
                                        null
                                      ]
                                    },
                                    "addressLocality": {
                                      "type": "string",
                                      "description": "City, Township.",
                                      "x-faker": "address.city",
                                      "examples": [
                                        "Gotham City",
                                        "Kulasmouth",
                                        "Heidistad",
                                        "Altamonte Springs",
                                        "West Ahmed",
                                        "Blaiseview"
                                      ]
                                    },
                                    "postalCode": {
                                      "type": "string",
                                      "description": "Zip/Post Code",
                                      "x-faker": "address.zipCode",
                                      "examples": [
                                        "10010",
                                        "38859",
                                        "40387",
                                        "50239-7698",
                                        null
                                      ]
                                    },
                                    "addressCountry": {
                                      "type": "string",
                                      "description": "The country. For example, USA. You can also provide the two-letter ISO 3166-1 alpha-2 country code.",
                                      "examples": [
                                        "USA",
                                        "TH",
                                        "NZ",
                                        "EG",
                                        "SJ",
                                        "VN"
                                      ],
                                      "x-faker": "address.countryCode"
                                    },
                                    "addressCounty": {
                                      "type": "string",
                                      "description": "the county (us real estate extension)",
                                      "faker": "address.county",
                                      "examples": [
                                        "Gotham County",
                                        "Buckinghamshire",
                                        "Borders",
                                        null
                                      ]
                                    },
                                    "addressSubdivision": {
                                      "type": "string",
                                      "description": "the subdivision or neighborhood (us real estate extension)",
                                      "x-faker": "address.streetName",
                                      "examples": [
                                        "Gotham Heights",
                                        "South Kensington",
                                        "SOMA (South of Market)",
                                        "Nob Hill"
                                      ]
                                    }
                                  }
                                }
                              },
                              "birthDate": {
                                "description": "date of birth.",
                                "type": "string",
                                "format": "date"
                              },
                              "contactPoint": {
                                "description": "contact points for the person",
                                "type": "array",
                                "items": {
                                  "$id": "htttp://realestate.yodata.me/schema/ContactPoint.json",
                                  "title": "ContactPoint",
                                  "description": "A point of contact for the entity. By convention in the real estate domain, ContactPoints\nare preferred over telephone, email, and faxNumber so the ContactPoint.name property can be used to label values\nfor example, Work Telephone, Home, as named contactPoint values.\n",
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "name"
                                  ],
                                  "minProperties": 3,
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "ContactPoint"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "a label for the contactPoint, i.e. 'Work', or 'Home'",
                                      "examples": [
                                        "Work",
                                        "Home",
                                        "Vacation",
                                        "Bob's Cell",
                                        "Alice's Work"
                                      ]
                                    },
                                    "telephone": {
                                      "type": "string",
                                      "x-faker": "phone.phoneNumber",
                                      "examples": [
                                        "555-555-5555",
                                        "555-555-5555 x123",
                                        "555-555-5555 ext. 123",
                                        "+1-555-555-5555"
                                      ]
                                    },
                                    "faxNumber": {
                                      "type": "string",
                                      "x-faker": "phone.phoneNumber",
                                      "examples": [
                                        "555-555-5555",
                                        "555-555-5555 x123",
                                        "555-555-5555 ext. 123",
                                        "+1-555-555-5555"
                                      ]
                                    },
                                    "email": {
                                      "description": "an email address for the item.",
                                      "type": "string",
                                      "format": "email",
                                      "x-faker": "internet.email",
                                      "examples": [
                                        "bob@example.com",
                                        "alice@example.com"
                                      ]
                                    },
                                    "url": {
                                      "description": "primary URL for the item.",
                                      "type": "string",
                                      "format": "uri",
                                      "example": "https://www.facebook.com/hallandoates"
                                    }
                                  }
                                }
                              },
                              "email": {
                                "type": "string",
                                "format": "email",
                                "x-faker": "internet.email"
                              },
                              "additionalName": {
                                "title": "additionalName",
                                "description": "any other name(s) associated with the entity, i.e. nickname, middle name, maiden name, etc. For multiple names, use a comma without space as a separator.",
                                "type": "string",
                                "examples": [
                                  "Johnny,John",
                                  "Prince,The Artist Formerly Known as Prince,The Artist",
                                  "Babs,Barbara",
                                  "Katheryn Elizabeth Hudson,Katy Perry",
                                  "Destiny Hope Cyrus,Miley Cyrus"
                                ]
                              },
                              "familyName": {
                                "$id": "htttp://realestate.yodata.me/schema/familyName.yaml",
                                "type": "string",
                                "title": "Family Name",
                                "description": "Last Name of a person",
                                "x-faker": "name.lastName",
                                "maxLength": 50,
                                "externalDocs": {
                                  "description": "Family Name",
                                  "url": "https://schema.org/familyName"
                                },
                                "examples": [
                                  "Smith",
                                  "Jones",
                                  "Parker",
                                  "Monk",
                                  "Brown",
                                  "Miller",
                                  "Davis",
                                  "Wilson",
                                  "Fitzgerald",
                                  "Johnson",
                                  "Williams"
                                ]
                              },
                              "faxNumber": {
                                "type": "string",
                                "description": "Do people still use fax machines?",
                                "x-faker": "phone.phoneNumber"
                              },
                              "givenName": {
                                "type": "string",
                                "description": "First Name of a person",
                                "x-faker": "name.firstName",
                                "examples": [
                                  "John",
                                  "Jane",
                                  "Mary",
                                  "Joseph",
                                  "William",
                                  "David",
                                  "Richard",
                                  "Charles",
                                  "Thomas",
                                  "Christopher",
                                  "Daniel",
                                  "Matthew",
                                  "Anthony",
                                  "Donald",
                                  "Mark",
                                  "Paul",
                                  "Steven",
                                  "Andrew",
                                  "Kenneth",
                                  "George",
                                  "Joshua",
                                  "Kevin",
                                  "Brian",
                                  "Edward",
                                  "Ronald",
                                  "Timothy",
                                  "Jason",
                                  "Jeffrey",
                                  "Ryan",
                                  "Jacob"
                                ]
                              },
                              "honorificPrefix": {
                                "title": "honorificPrefix",
                                "description": "An honorific prefix preceding a Person's name such as Dr/Mrs/Mr.",
                                "type": "string",
                                "example": "Dr"
                              },
                              "honorificSuffix": {
                                "title": "honorificSuffix",
                                "description": "An honorific title following a person's name like M.D.",
                                "type": "string",
                                "example": "Esq"
                              },
                              "jobTitle": {
                                "title": "jobTitle",
                                "description": "job tiles associated with the item",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "example": [
                                  "Chief Data Officer",
                                  "Sanitation Engineer"
                                ]
                              },
                              "knowsLanguage": {
                                "description": "languages spoken by the person",
                                "type": "array",
                                "items": {
                                  "$id": "htttp://realestate.yodata.me/schema/Language.yaml",
                                  "description": "a written or spoken Language",
                                  "title": "Language",
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "name",
                                    "additionalName"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "Language"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "the display name of the language"
                                    },
                                    "additionalName": {
                                      "type": "string",
                                      "description": "BCP 47 language code"
                                    }
                                  },
                                  "examples": [
                                    {
                                      "type": "Language",
                                      "name": "English",
                                      "additionalName": "en-us"
                                    },
                                    {
                                      "type": "Language",
                                      "name": "Spanish",
                                      "additionalName": "es"
                                    },
                                    {
                                      "type": "Language",
                                      "name": "French",
                                      "additionalName": "fr"
                                    },
                                    {
                                      "type": "Language",
                                      "name": "German",
                                      "additionalName": "de"
                                    },
                                    {
                                      "type": "Language",
                                      "name": "Italian",
                                      "additionalName": "it"
                                    },
                                    {
                                      "type": "Language",
                                      "name": "Japanese",
                                      "additionalName": "ja"
                                    },
                                    {
                                      "type": "Language",
                                      "name": "Korean",
                                      "additionalName": "ko"
                                    },
                                    {
                                      "type": "Language",
                                      "name": "Portuguese",
                                      "additionalName": "pt"
                                    },
                                    {
                                      "type": "Language",
                                      "name": "Russian",
                                      "additionalName": "ru"
                                    },
                                    {
                                      "type": "Language",
                                      "name": "Chinese",
                                      "additionalName": "zh"
                                    },
                                    {
                                      "type": "Language",
                                      "name": "Arabic",
                                      "additionalName": "ar"
                                    },
                                    {
                                      "type": "Language",
                                      "name": "Hindi",
                                      "additionalName": "hi"
                                    },
                                    {
                                      "type": "Language",
                                      "name": "Bengali",
                                      "additionalName": "bn"
                                    },
                                    {
                                      "type": "Language",
                                      "name": "Portuguese",
                                      "additionalName": "pt"
                                    }
                                  ]
                                }
                              },
                              "name": {
                                "description": "Full name of the person.",
                                "type": "string",
                                "x-faker": "name.findName"
                              },
                              "telephone": {
                                "type": "string",
                                "description": "Primary phone number.",
                                "example": "+15558675309"
                              },
                              "worksFor": {
                                "type": "string",
                                "description": "Organizations the person works for.",
                                "x-faker": "company.companyName"
                              }
                            }
                          },
                          {
                            "title": "Contact",
                            "description": "a CRM contact.",
                            "properties": {
                              "type": {
                                "type": "string",
                                "const": "Contact"
                              },
                              "identifier": {
                                "title": "identifier",
                                "type": "object",
                                "description": "identifier assigned to a contact by the vendor who originally created the contact",
                                "examples": [
                                  {
                                    "salesforceid": "0031U00002XW1QWQA1"
                                  },
                                  {
                                    "vendoraid": "123456"
                                  },
                                  {
                                    "originating_system_id": "123456"
                                  }
                                ]
                              },
                              "additionalProperty": {
                                "title": "additionalProperty",
                                "type": "object",
                                "description": "additionalProperty are",
                                "example": {
                                  "supercrmuserid": 1234,
                                  "doNotSell": true
                                }
                              },
                              "comment": {
                                "title": "comment",
                                "type": "array",
                                "description": "comments by, for or about the item",
                                "x-range": "Comment",
                                "items": {
                                  "type": "object"
                                },
                                "example": [
                                  {
                                    "type": "Comment",
                                    "text": "this is my comment.",
                                    "author": {
                                      "type": "Contact",
                                      "name": "Bruce Wayne"
                                    },
                                    "about": {
                                      "type": "PropertyListing",
                                      "id": "https://example.com/listingid"
                                    },
                                    "dateCreated": "2019-07-15T05:24:05Z",
                                    "dateModified": "2019-07-15T05:24:05Z"
                                  }
                                ]
                              },
                              "jobTitle": {
                                "title": "jobTitle",
                                "description": "The job title of the person (for example, Financial Manager).",
                                "type": "string",
                                "x-faker": "name.jobTitle",
                                "examples": [
                                  "CEO",
                                  "Sales Manager",
                                  "Escrow Officer",
                                  "Transaction Coordinator",
                                  "Director of Marketing",
                                  "Senior Loan Officer",
                                  "Loan Officer",
                                  "Sanitation Engineer",
                                  "Owner",
                                  "Cofounder",
                                  "Founder",
                                  "President",
                                  "Vice President of Sales",
                                  null,
                                  null,
                                  null,
                                  null,
                                  null,
                                  null,
                                  null,
                                  null,
                                  null,
                                  null
                                ]
                              },
                              "contactGroup": {
                                "type": "array",
                                "items": {
                                  "$id": "htttp://realestate.yodata.me/schema/ContactGroup.json",
                                  "title": "ContactGroup",
                                  "description": "groups the contact is a member of.",
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "name"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "ContactGroup",
                                        "Collection"
                                      ]
                                    },
                                    "identifier": {
                                      "title": "identifier",
                                      "type": "object",
                                      "description": "identifier assigned to a contact by the vendor who originally created the contact",
                                      "examples": [
                                        {
                                          "salesforceid": "0031U00002XW1QWQA1"
                                        },
                                        {
                                          "vendoraid": "123456"
                                        },
                                        {
                                          "originating_system_id": "123456"
                                        }
                                      ]
                                    },
                                    "name": {
                                      "type": "string",
                                      "examples": [
                                        "Past Clients",
                                        "Prospects",
                                        "Leads",
                                        "Referrals",
                                        "Friends",
                                        "Family",
                                        "Neighbors",
                                        "Business Associates",
                                        "Personal"
                                      ]
                                    }
                                  }
                                }
                              },
                              "keywords": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "leadOwner": {
                                "type": "object",
                                "description": "lead owner",
                                "x-range": [
                                  "RealEstateAgent",
                                  "RealEstateOrganization",
                                  "RealEstateTeam"
                                ],
                                "example": {
                                  "type": "RealEstateOrganization",
                                  "name": "Gotham City Real Estate",
                                  "id": "https://example.com/profile.card#me"
                                }
                              },
                              "leadSource": {
                                "type": "object",
                                "description": "origin of the lead",
                                "x-range": [
                                  "MobileApplication",
                                  "RealEstateOffice",
                                  "RealEstateWebsite",
                                  "Thing"
                                ],
                                "example": {
                                  "id": "https://www.zillow.com/homedetails/1044-Siler-Pl-Berkeley-CA-94705/24820985_zpid/",
                                  "type": "RealEstateWebsite",
                                  "name": "Zillow",
                                  "url": "https://zillow.com"
                                }
                              },
                              "originatingSystem": {
                                "type": "object",
                                "x-range": [
                                  "Thing"
                                ],
                                "description": "the original system where this item was created.  Can be of type Thing or any sub-type.",
                                "examples": [
                                  {
                                    "type": "SoftwareApplication",
                                    "name": "RDesk",
                                    "description": "User Created.",
                                    "url": "http://www.rdeskwebsite.com/"
                                  }
                                ]
                              },
                              "dateCreated": {
                                "$id": "http://realestate.yodata.me/schema/dateCreated.yaml",
                                "type": "string",
                                "format": "date-time",
                                "title": "Date Created",
                                "description": "The date on which the item was created."
                              },
                              "dateModified": {
                                "description": "The date on which the item was most recently modified or when the item's entry was modified within a DataFeed.",
                                "type": "string",
                                "format": "date-time"
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-message-parsed": true
            },
            {
              "messageId": "contact#comment",
              "name": "realestate/contact#comment",
              "summary": "a comment (data.object) is added by a user (data.agent) to a contact (data.target)",
              "headers": {
                "$id": "subscription_headers",
                "title": "CloudEvent",
                "type": "object",
                "properties": {
                  "time": {
                    "type": "string",
                    "format": "date-time",
                    "description": "date & time the event was produced",
                    "x-parser-schema-id": "<anonymous-schema-30>"
                  },
                  "agent": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the event provider who sent the event via a subscription authorized to your service.",
                    "description": "if you are a multi-tenant app, then the agent is the user associated with the event data.\nany future events related to this message will be sent to the same agent/recipient\n",
                    "example": "https://andy_agent.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-31>"
                  },
                  "instrument": {
                    "type": "string",
                    "format": "uri",
                    "description": "the app or service that produced the event on behalf of the agent/user",
                    "example": "https://supercrm.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-32>"
                  },
                  "source": {
                    "type": "string",
                    "format": "uri",
                    "description": "an agent, team or organization who received a copy of the event",
                    "example": "https://bigbrandrealestate.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-33>"
                  },
                  "originalRecipient": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the original recipient of the event",
                    "description": "the originalRecipient helps you determine the subscription that delivered the event to you.\nif the originalRecipient is the same as the agent, then the you are subscribed to the agent.\nif the originalRecipient is different from the agent, then you are subscribed to the event source\n",
                    "example": "https://agentid.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-34>"
                  },
                  "id": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the event id",
                    "description": "the event id is a unique identifier for the event.\nall subscribers will receive the same event id.\n",
                    "example": "https://supercrm.example.com/publish/{eventid}",
                    "x-parser-schema-id": "<anonymous-schema-35>"
                  },
                  "@id": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the message id - the uri of the message in your inbox",
                    "example": "https://sumpercrm.example.com/inbox/{eventid}",
                    "x-parser-schema-id": "<anonymous-schema-36>"
                  }
                }
              },
              "payload": {
                "type": "object",
                "required": [
                  "topic",
                  "data"
                ],
                "properties": {
                  "topic": {
                    "const": "realestate/contact#comment",
                    "x-parser-schema-id": "<anonymous-schema-132>"
                  },
                  "data": {
                    "type": "object",
                    "required": [
                      "object",
                      "target"
                    ],
                    "properties": {
                      "type": {
                        "const": "CommentAction",
                        "x-parser-schema-id": "<anonymous-schema-134>"
                      },
                      "agent": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "const": "Person",
                            "x-parser-schema-id": "<anonymous-schema-91>"
                          },
                          "name": {
                            "type": "string",
                            "description": "the name of the item",
                            "x-parser-schema-id": "<anonymous-schema-92>"
                          },
                          "email": {
                            "type": "string",
                            "format": "email",
                            "x-faker": "internet.email",
                            "x-parser-schema-id": "<anonymous-schema-93>"
                          },
                          "identifier": {
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ],
                            "x-parser-schema-id": "<anonymous-schema-94>"
                          }
                        },
                        "required": [
                          "type"
                        ],
                        "minProperties": 2,
                        "x-parser-schema-id": "<anonymous-schema-90>"
                      },
                      "object": {
                        "type": "object",
                        "title": "Comment",
                        "description": "A comment on an item.",
                        "x-range": "Comment",
                        "required": [
                          "type",
                          "text"
                        ],
                        "properties": {
                          "type": {
                            "const": "Comment",
                            "x-parser-schema-id": "<anonymous-schema-135>"
                          },
                          "dateCreated": {
                            "$id": "http://realestate.yodata.me/schema/dateCreated.yaml",
                            "type": "string",
                            "format": "date-time",
                            "title": "Date Created",
                            "description": "The date on which the item was created."
                          },
                          "dateModified": {
                            "description": "The date on which the item was most recently modified or when the item's entry was modified within a DataFeed.",
                            "type": "string",
                            "format": "date-time",
                            "x-parser-schema-id": "<anonymous-schema-136>"
                          },
                          "dateDeleted": {
                            "$id": "http://realestate.yodata.me/schema/dateDeleted.yaml",
                            "type": "string",
                            "format": "date-time",
                            "title": "Date Deleted",
                            "description": "The date on which the item was deleted."
                          },
                          "text": {
                            "$id": "http://realestate.yodata.me/schema/text.yaml",
                            "title": "text",
                            "type": "string",
                            "examples": [
                              "Populus debet control notitia sua",
                              "Aspicio pinguem in his vestimentis?",
                              "Et id ipsum vitae.",
                              "Amici, Romani et cives, aures vestras mihi praebe",
                              "Heus, ego iustus occurrit tibi et hoc est insanus, sed hic numerus meus est, ut me vocas fortasse."
                            ]
                          },
                          "author": {
                            "title": "author",
                            "type": "object",
                            "description": "the author of something",
                            "examples": [
                              {
                                "type": "Contact",
                                "name": "Mark Twain",
                                "identifier": {
                                  "originatingSystemName": "originating-system-id"
                                }
                              },
                              {
                                "type": "RealEstateAgent",
                                "name": "Andy Warhol",
                                "identifier": {
                                  "originatingSystemName": "originating-system-id"
                                }
                              },
                              {
                                "name": "Stan Lee"
                              },
                              {
                                "email": "bob@example.com"
                              },
                              {
                                "telephone": "1-800-555-1212"
                              }
                            ],
                            "x-parser-schema-id": "<anonymous-schema-137>"
                          },
                          "about": {
                            "example": {
                              "type": "Contact",
                              "name": "Robin",
                              "identifier": {
                                "redContact_GUID": "6bf62a1b-225e-4fca-87b3-54cc09446a66"
                              }
                            },
                            "$id": "http://realestate.yodata.me/schema/about.yaml",
                            "title": "about",
                            "description": "The subject of the content",
                            "type": "object",
                            "examples": [
                              {
                                "type": "PropertyListing",
                                "streetAddress": "123 Main Street",
                                "addressLocality": "Anytown",
                                "addressRegion": "NY",
                                "postalCode": 12345,
                                "addressCountry": "US",
                                "identifier": {
                                  "originatingSystemName": "originatingsystemid"
                                }
                              }
                            ]
                          },
                          "identifier": {
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ],
                            "example": {
                              "redContact_Note_ID": "62c4a9ae-eba1-4c27-a2dd-afb4068695f8"
                            },
                            "x-parser-schema-id": "<anonymous-schema-138>"
                          }
                        },
                        "x-parser-schema-id": "Comment"
                      },
                      "target": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "const": "Contact",
                            "x-parser-schema-id": "<anonymous-schema-140>"
                          },
                          "identifier": {
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ],
                            "x-parser-schema-id": "<anonymous-schema-94>"
                          }
                        },
                        "required": [
                          "type",
                          "identifier"
                        ],
                        "x-parser-schema-id": "<anonymous-schema-139>"
                      }
                    },
                    "x-parser-schema-id": "<anonymous-schema-133>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-131>"
              },
              "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-original-payload": {
                "type": "object",
                "required": [
                  "topic",
                  "data"
                ],
                "properties": {
                  "topic": {
                    "const": "realestate/contact#comment"
                  },
                  "data": {
                    "type": "object",
                    "required": [
                      "object",
                      "target"
                    ],
                    "properties": {
                      "type": {
                        "const": "CommentAction"
                      },
                      "agent": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "const": "Person"
                          },
                          "name": {
                            "type": "string",
                            "description": "the name of the item"
                          },
                          "email": {
                            "type": "string",
                            "format": "email",
                            "x-faker": "internet.email"
                          },
                          "identifier": {
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ]
                          }
                        },
                        "required": [
                          "type"
                        ],
                        "minProperties": 2
                      },
                      "object": {
                        "type": "object",
                        "title": "Comment",
                        "description": "A comment on an item.",
                        "x-range": "Comment",
                        "required": [
                          "type",
                          "text"
                        ],
                        "properties": {
                          "type": {
                            "const": "Comment"
                          },
                          "dateCreated": {
                            "$id": "http://realestate.yodata.me/schema/dateCreated.yaml",
                            "type": "string",
                            "format": "date-time",
                            "title": "Date Created",
                            "description": "The date on which the item was created."
                          },
                          "dateModified": {
                            "description": "The date on which the item was most recently modified or when the item's entry was modified within a DataFeed.",
                            "type": "string",
                            "format": "date-time"
                          },
                          "dateDeleted": {
                            "$id": "http://realestate.yodata.me/schema/dateDeleted.yaml",
                            "type": "string",
                            "format": "date-time",
                            "title": "Date Deleted",
                            "description": "The date on which the item was deleted."
                          },
                          "text": {
                            "$id": "http://realestate.yodata.me/schema/text.yaml",
                            "title": "text",
                            "type": "string",
                            "examples": [
                              "Populus debet control notitia sua",
                              "Aspicio pinguem in his vestimentis?",
                              "Et id ipsum vitae.",
                              "Amici, Romani et cives, aures vestras mihi praebe",
                              "Heus, ego iustus occurrit tibi et hoc est insanus, sed hic numerus meus est, ut me vocas fortasse."
                            ]
                          },
                          "author": {
                            "title": "author",
                            "type": "object",
                            "description": "the author of something",
                            "examples": [
                              {
                                "type": "Contact",
                                "name": "Mark Twain",
                                "identifier": {
                                  "originatingSystemName": "originating-system-id"
                                }
                              },
                              {
                                "type": "RealEstateAgent",
                                "name": "Andy Warhol",
                                "identifier": {
                                  "originatingSystemName": "originating-system-id"
                                }
                              },
                              {
                                "name": "Stan Lee"
                              },
                              {
                                "email": "bob@example.com"
                              },
                              {
                                "telephone": "1-800-555-1212"
                              }
                            ]
                          },
                          "about": {
                            "example": {
                              "type": "Contact",
                              "name": "Robin",
                              "identifier": {
                                "redContact_GUID": "6bf62a1b-225e-4fca-87b3-54cc09446a66"
                              }
                            },
                            "$id": "http://realestate.yodata.me/schema/about.yaml",
                            "title": "about",
                            "description": "The subject of the content",
                            "type": "object",
                            "examples": [
                              {
                                "type": "PropertyListing",
                                "streetAddress": "123 Main Street",
                                "addressLocality": "Anytown",
                                "addressRegion": "NY",
                                "postalCode": 12345,
                                "addressCountry": "US",
                                "identifier": {
                                  "originatingSystemName": "originatingsystemid"
                                }
                              }
                            ]
                          },
                          "identifier": {
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ],
                            "example": {
                              "redContact_Note_ID": "62c4a9ae-eba1-4c27-a2dd-afb4068695f8"
                            }
                          }
                        }
                      },
                      "target": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "const": "Contact"
                          },
                          "identifier": {
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ]
                          }
                        },
                        "required": [
                          "type",
                          "identifier"
                        ]
                      }
                    }
                  }
                }
              },
              "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-message-parsed": true
            },
            {
              "messageId": "contact#delete",
              "name": "realestate/contact#delete",
              "summary": "a contact (data.object) is deleted by a user (data.agent)",
              "headers": {
                "$id": "subscription_headers",
                "title": "CloudEvent",
                "type": "object",
                "properties": {
                  "time": {
                    "type": "string",
                    "format": "date-time",
                    "description": "date & time the event was produced",
                    "x-parser-schema-id": "<anonymous-schema-30>"
                  },
                  "agent": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the event provider who sent the event via a subscription authorized to your service.",
                    "description": "if you are a multi-tenant app, then the agent is the user associated with the event data.\nany future events related to this message will be sent to the same agent/recipient\n",
                    "example": "https://andy_agent.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-31>"
                  },
                  "instrument": {
                    "type": "string",
                    "format": "uri",
                    "description": "the app or service that produced the event on behalf of the agent/user",
                    "example": "https://supercrm.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-32>"
                  },
                  "source": {
                    "type": "string",
                    "format": "uri",
                    "description": "an agent, team or organization who received a copy of the event",
                    "example": "https://bigbrandrealestate.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-33>"
                  },
                  "originalRecipient": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the original recipient of the event",
                    "description": "the originalRecipient helps you determine the subscription that delivered the event to you.\nif the originalRecipient is the same as the agent, then the you are subscribed to the agent.\nif the originalRecipient is different from the agent, then you are subscribed to the event source\n",
                    "example": "https://agentid.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-34>"
                  },
                  "id": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the event id",
                    "description": "the event id is a unique identifier for the event.\nall subscribers will receive the same event id.\n",
                    "example": "https://supercrm.example.com/publish/{eventid}",
                    "x-parser-schema-id": "<anonymous-schema-35>"
                  },
                  "@id": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the message id - the uri of the message in your inbox",
                    "example": "https://sumpercrm.example.com/inbox/{eventid}",
                    "x-parser-schema-id": "<anonymous-schema-36>"
                  }
                }
              },
              "payload": {
                "type": "object",
                "required": [
                  "topic",
                  "data"
                ],
                "properties": {
                  "topic": {
                    "const": "realestate/contact#delete",
                    "x-parser-schema-id": "<anonymous-schema-142>"
                  },
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "object",
                      "agent"
                    ],
                    "properties": {
                      "type": {
                        "const": "DeleteAction",
                        "x-parser-schema-id": "<anonymous-schema-144>"
                      },
                      "agent": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "const": "Person",
                            "x-parser-schema-id": "<anonymous-schema-91>"
                          },
                          "name": {
                            "type": "string",
                            "description": "the name of the item",
                            "x-parser-schema-id": "<anonymous-schema-92>"
                          },
                          "email": {
                            "type": "string",
                            "format": "email",
                            "x-faker": "internet.email",
                            "x-parser-schema-id": "<anonymous-schema-93>"
                          },
                          "identifier": {
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ],
                            "x-parser-schema-id": "<anonymous-schema-94>"
                          }
                        },
                        "required": [
                          "type"
                        ],
                        "minProperties": 2,
                        "x-parser-schema-id": "<anonymous-schema-90>"
                      },
                      "object": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "const": "Contact",
                            "x-parser-schema-id": "<anonymous-schema-140>"
                          },
                          "identifier": {
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ],
                            "x-parser-schema-id": "<anonymous-schema-94>"
                          }
                        },
                        "required": [
                          "type",
                          "identifier"
                        ],
                        "x-parser-schema-id": "<anonymous-schema-139>"
                      }
                    },
                    "x-parser-schema-id": "<anonymous-schema-143>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-141>"
              },
              "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-original-payload": {
                "type": "object",
                "required": [
                  "topic",
                  "data"
                ],
                "properties": {
                  "topic": {
                    "const": "realestate/contact#delete"
                  },
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "object",
                      "agent"
                    ],
                    "properties": {
                      "type": {
                        "const": "DeleteAction"
                      },
                      "agent": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "const": "Person"
                          },
                          "name": {
                            "type": "string",
                            "description": "the name of the item"
                          },
                          "email": {
                            "type": "string",
                            "format": "email",
                            "x-faker": "internet.email"
                          },
                          "identifier": {
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ]
                          }
                        },
                        "required": [
                          "type"
                        ],
                        "minProperties": 2
                      },
                      "object": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "const": "Contact"
                          },
                          "identifier": {
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ]
                          }
                        },
                        "required": [
                          "type",
                          "identifier"
                        ]
                      }
                    }
                  }
                }
              },
              "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-message-parsed": true
            },
            {
              "messageId": "contact#update",
              "name": "realestate/contact#update",
              "summary": "a contact (data.object) is updated by a user (data.agent)",
              "headers": {
                "$id": "subscription_headers",
                "title": "CloudEvent",
                "type": "object",
                "properties": {
                  "time": {
                    "type": "string",
                    "format": "date-time",
                    "description": "date & time the event was produced",
                    "x-parser-schema-id": "<anonymous-schema-30>"
                  },
                  "agent": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the event provider who sent the event via a subscription authorized to your service.",
                    "description": "if you are a multi-tenant app, then the agent is the user associated with the event data.\nany future events related to this message will be sent to the same agent/recipient\n",
                    "example": "https://andy_agent.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-31>"
                  },
                  "instrument": {
                    "type": "string",
                    "format": "uri",
                    "description": "the app or service that produced the event on behalf of the agent/user",
                    "example": "https://supercrm.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-32>"
                  },
                  "source": {
                    "type": "string",
                    "format": "uri",
                    "description": "an agent, team or organization who received a copy of the event",
                    "example": "https://bigbrandrealestate.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-33>"
                  },
                  "originalRecipient": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the original recipient of the event",
                    "description": "the originalRecipient helps you determine the subscription that delivered the event to you.\nif the originalRecipient is the same as the agent, then the you are subscribed to the agent.\nif the originalRecipient is different from the agent, then you are subscribed to the event source\n",
                    "example": "https://agentid.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-34>"
                  },
                  "id": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the event id",
                    "description": "the event id is a unique identifier for the event.\nall subscribers will receive the same event id.\n",
                    "example": "https://supercrm.example.com/publish/{eventid}",
                    "x-parser-schema-id": "<anonymous-schema-35>"
                  },
                  "@id": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the message id - the uri of the message in your inbox",
                    "example": "https://sumpercrm.example.com/inbox/{eventid}",
                    "x-parser-schema-id": "<anonymous-schema-36>"
                  }
                }
              },
              "payload": {
                "type": "object",
                "required": [
                  "topic",
                  "data"
                ],
                "properties": {
                  "topic": {
                    "const": "realestate/contact#update",
                    "x-parser-schema-id": "<anonymous-schema-146>"
                  },
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "object",
                      "agent"
                    ],
                    "properties": {
                      "type": {
                        "const": "UpdateAction",
                        "x-parser-schema-id": "<anonymous-schema-148>"
                      },
                      "agent": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "const": "Person",
                            "x-parser-schema-id": "<anonymous-schema-91>"
                          },
                          "name": {
                            "type": "string",
                            "description": "the name of the item",
                            "x-parser-schema-id": "<anonymous-schema-92>"
                          },
                          "email": {
                            "type": "string",
                            "format": "email",
                            "x-faker": "internet.email",
                            "x-parser-schema-id": "<anonymous-schema-93>"
                          },
                          "identifier": {
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ],
                            "x-parser-schema-id": "<anonymous-schema-94>"
                          }
                        },
                        "required": [
                          "type"
                        ],
                        "minProperties": 2,
                        "x-parser-schema-id": "<anonymous-schema-90>"
                      },
                      "object": {
                        "allOf": [
                          {
                            "title": "Person",
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "x-parser-schema-id": "<anonymous-schema-95>"
                              },
                              "affiliation": {
                                "description": "An organization that this person is affiliated with",
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://example.com/profile/card#me",
                                  "x-parser-schema-id": "<anonymous-schema-97>"
                                },
                                "x-parser-schema-id": "<anonymous-schema-96>"
                              },
                              "address": {
                                "type": "array",
                                "items": {
                                  "$id": "http://realestate.yodata.me/schemas/PostalAddress.yaml",
                                  "title": "PostalAddress",
                                  "type": "object",
                                  "description": "A physical address.",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "PostalAddress",
                                      "x-parser-schema-id": "<anonymous-schema-99>"
                                    },
                                    "streetAddress": {
                                      "type": "string",
                                      "description": "the street number and name.",
                                      "x-faker": "address.streetAddress",
                                      "examples": [
                                        "5046 Ottis Point",
                                        "166 Marion Burg",
                                        "93044 Haley Stream"
                                      ],
                                      "x-parser-schema-id": "<anonymous-schema-100>"
                                    },
                                    "postOfficeBoxNumber": {
                                      "type": "string",
                                      "description": "The post office box number for PO box addresses.",
                                      "x-faker": "address.secondaryAddress",
                                      "examples": [
                                        "Box 1234",
                                        "Apt. 161",
                                        "Apt. 623"
                                      ],
                                      "x-parser-schema-id": "<anonymous-schema-101>"
                                    },
                                    "addressRegion": {
                                      "type": "string",
                                      "description": "State or Province.",
                                      "x-faker": "address.state",
                                      "examples": [
                                        "New Jersey",
                                        "California",
                                        "MI",
                                        null
                                      ],
                                      "x-parser-schema-id": "<anonymous-schema-102>"
                                    },
                                    "addressLocality": {
                                      "type": "string",
                                      "description": "City, Township.",
                                      "x-faker": "address.city",
                                      "examples": [
                                        "Gotham City",
                                        "Kulasmouth",
                                        "Heidistad",
                                        "Altamonte Springs",
                                        "West Ahmed",
                                        "Blaiseview"
                                      ],
                                      "x-parser-schema-id": "<anonymous-schema-103>"
                                    },
                                    "postalCode": {
                                      "type": "string",
                                      "description": "Zip/Post Code",
                                      "x-faker": "address.zipCode",
                                      "examples": [
                                        "10010",
                                        "38859",
                                        "40387",
                                        "50239-7698",
                                        null
                                      ],
                                      "x-parser-schema-id": "<anonymous-schema-104>"
                                    },
                                    "addressCountry": {
                                      "type": "string",
                                      "description": "The country. For example, USA. You can also provide the two-letter ISO 3166-1 alpha-2 country code.",
                                      "examples": [
                                        "USA",
                                        "TH",
                                        "NZ",
                                        "EG",
                                        "SJ",
                                        "VN"
                                      ],
                                      "x-faker": "address.countryCode",
                                      "x-parser-schema-id": "<anonymous-schema-105>"
                                    },
                                    "addressCounty": {
                                      "type": "string",
                                      "description": "the county (us real estate extension)",
                                      "faker": "address.county",
                                      "examples": [
                                        "Gotham County",
                                        "Buckinghamshire",
                                        "Borders",
                                        null
                                      ],
                                      "x-parser-schema-id": "<anonymous-schema-106>"
                                    },
                                    "addressSubdivision": {
                                      "type": "string",
                                      "description": "the subdivision or neighborhood (us real estate extension)",
                                      "x-faker": "address.streetName",
                                      "examples": [
                                        "Gotham Heights",
                                        "South Kensington",
                                        "SOMA (South of Market)",
                                        "Nob Hill"
                                      ],
                                      "x-parser-schema-id": "<anonymous-schema-107>"
                                    }
                                  },
                                  "x-parser-schema-id": "PostalAddress"
                                },
                                "x-parser-schema-id": "<anonymous-schema-98>"
                              },
                              "birthDate": {
                                "description": "date of birth.",
                                "type": "string",
                                "format": "date",
                                "x-parser-schema-id": "<anonymous-schema-108>"
                              },
                              "contactPoint": {
                                "description": "contact points for the person",
                                "type": "array",
                                "items": {
                                  "$id": "htttp://realestate.yodata.me/schema/ContactPoint.json",
                                  "title": "ContactPoint",
                                  "description": "A point of contact for the entity. By convention in the real estate domain, ContactPoints\nare preferred over telephone, email, and faxNumber so the ContactPoint.name property can be used to label values\nfor example, Work Telephone, Home, as named contactPoint values.\n",
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "name"
                                  ],
                                  "minProperties": 3,
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "ContactPoint",
                                      "x-parser-schema-id": "<anonymous-schema-110>"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "a label for the contactPoint, i.e. 'Work', or 'Home'",
                                      "examples": [
                                        "Work",
                                        "Home",
                                        "Vacation",
                                        "Bob's Cell",
                                        "Alice's Work"
                                      ],
                                      "x-parser-schema-id": "<anonymous-schema-111>"
                                    },
                                    "telephone": {
                                      "type": "string",
                                      "x-faker": "phone.phoneNumber",
                                      "examples": [
                                        "555-555-5555",
                                        "555-555-5555 x123",
                                        "555-555-5555 ext. 123",
                                        "+1-555-555-5555"
                                      ],
                                      "x-parser-schema-id": "<anonymous-schema-112>"
                                    },
                                    "faxNumber": {
                                      "type": "string",
                                      "x-faker": "phone.phoneNumber",
                                      "examples": [
                                        "555-555-5555",
                                        "555-555-5555 x123",
                                        "555-555-5555 ext. 123",
                                        "+1-555-555-5555"
                                      ],
                                      "x-parser-schema-id": "<anonymous-schema-113>"
                                    },
                                    "email": {
                                      "description": "an email address for the item.",
                                      "type": "string",
                                      "format": "email",
                                      "x-faker": "internet.email",
                                      "examples": [
                                        "bob@example.com",
                                        "alice@example.com"
                                      ],
                                      "x-parser-schema-id": "<anonymous-schema-114>"
                                    },
                                    "url": {
                                      "description": "primary URL for the item.",
                                      "type": "string",
                                      "format": "uri",
                                      "example": "https://www.facebook.com/hallandoates",
                                      "x-parser-schema-id": "<anonymous-schema-115>"
                                    }
                                  },
                                  "x-parser-schema-id": "ContactPoint"
                                },
                                "x-parser-schema-id": "<anonymous-schema-109>"
                              },
                              "email": {
                                "type": "string",
                                "format": "email",
                                "x-faker": "internet.email",
                                "x-parser-schema-id": "<anonymous-schema-93>"
                              },
                              "additionalName": {
                                "title": "additionalName",
                                "description": "any other name(s) associated with the entity, i.e. nickname, middle name, maiden name, etc. For multiple names, use a comma without space as a separator.",
                                "type": "string",
                                "examples": [
                                  "Johnny,John",
                                  "Prince,The Artist Formerly Known as Prince,The Artist",
                                  "Babs,Barbara",
                                  "Katheryn Elizabeth Hudson,Katy Perry",
                                  "Destiny Hope Cyrus,Miley Cyrus"
                                ],
                                "x-parser-schema-id": "<anonymous-schema-116>"
                              },
                              "familyName": {
                                "$id": "htttp://realestate.yodata.me/schema/familyName.yaml",
                                "type": "string",
                                "title": "Family Name",
                                "description": "Last Name of a person",
                                "x-faker": "name.lastName",
                                "maxLength": 50,
                                "externalDocs": {
                                  "description": "Family Name",
                                  "url": "https://schema.org/familyName"
                                },
                                "examples": [
                                  "Smith",
                                  "Jones",
                                  "Parker",
                                  "Monk",
                                  "Brown",
                                  "Miller",
                                  "Davis",
                                  "Wilson",
                                  "Fitzgerald",
                                  "Johnson",
                                  "Williams"
                                ]
                              },
                              "faxNumber": {
                                "type": "string",
                                "description": "Do people still use fax machines?",
                                "x-faker": "phone.phoneNumber",
                                "x-parser-schema-id": "<anonymous-schema-117>"
                              },
                              "givenName": {
                                "type": "string",
                                "description": "First Name of a person",
                                "x-faker": "name.firstName",
                                "examples": [
                                  "John",
                                  "Jane",
                                  "Mary",
                                  "Joseph",
                                  "William",
                                  "David",
                                  "Richard",
                                  "Charles",
                                  "Thomas",
                                  "Christopher",
                                  "Daniel",
                                  "Matthew",
                                  "Anthony",
                                  "Donald",
                                  "Mark",
                                  "Paul",
                                  "Steven",
                                  "Andrew",
                                  "Kenneth",
                                  "George",
                                  "Joshua",
                                  "Kevin",
                                  "Brian",
                                  "Edward",
                                  "Ronald",
                                  "Timothy",
                                  "Jason",
                                  "Jeffrey",
                                  "Ryan",
                                  "Jacob"
                                ],
                                "x-parser-schema-id": "<anonymous-schema-118>"
                              },
                              "honorificPrefix": {
                                "title": "honorificPrefix",
                                "description": "An honorific prefix preceding a Person's name such as Dr/Mrs/Mr.",
                                "type": "string",
                                "example": "Dr",
                                "x-parser-schema-id": "<anonymous-schema-119>"
                              },
                              "honorificSuffix": {
                                "title": "honorificSuffix",
                                "description": "An honorific title following a person's name like M.D.",
                                "type": "string",
                                "example": "Esq",
                                "x-parser-schema-id": "<anonymous-schema-120>"
                              },
                              "jobTitle": {
                                "title": "jobTitle",
                                "description": "job tiles associated with the item",
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "x-parser-schema-id": "<anonymous-schema-122>"
                                },
                                "example": [
                                  "Chief Data Officer",
                                  "Sanitation Engineer"
                                ],
                                "x-parser-schema-id": "<anonymous-schema-121>"
                              },
                              "knowsLanguage": {
                                "description": "languages spoken by the person",
                                "type": "array",
                                "items": {
                                  "$id": "htttp://realestate.yodata.me/schema/Language.yaml",
                                  "description": "a written or spoken Language",
                                  "title": "Language",
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "name",
                                    "additionalName"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "Language",
                                      "x-parser-schema-id": "<anonymous-schema-124>"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "the display name of the language",
                                      "x-parser-schema-id": "<anonymous-schema-125>"
                                    },
                                    "additionalName": {
                                      "type": "string",
                                      "description": "BCP 47 language code",
                                      "x-parser-schema-id": "<anonymous-schema-126>"
                                    }
                                  },
                                  "examples": [
                                    {
                                      "type": "Language",
                                      "name": "English",
                                      "additionalName": "en-us"
                                    },
                                    {
                                      "type": "Language",
                                      "name": "Spanish",
                                      "additionalName": "es"
                                    },
                                    {
                                      "type": "Language",
                                      "name": "French",
                                      "additionalName": "fr"
                                    },
                                    {
                                      "type": "Language",
                                      "name": "German",
                                      "additionalName": "de"
                                    },
                                    {
                                      "type": "Language",
                                      "name": "Italian",
                                      "additionalName": "it"
                                    },
                                    {
                                      "type": "Language",
                                      "name": "Japanese",
                                      "additionalName": "ja"
                                    },
                                    {
                                      "type": "Language",
                                      "name": "Korean",
                                      "additionalName": "ko"
                                    },
                                    {
                                      "type": "Language",
                                      "name": "Portuguese",
                                      "additionalName": "pt"
                                    },
                                    {
                                      "type": "Language",
                                      "name": "Russian",
                                      "additionalName": "ru"
                                    },
                                    {
                                      "type": "Language",
                                      "name": "Chinese",
                                      "additionalName": "zh"
                                    },
                                    {
                                      "type": "Language",
                                      "name": "Arabic",
                                      "additionalName": "ar"
                                    },
                                    {
                                      "type": "Language",
                                      "name": "Hindi",
                                      "additionalName": "hi"
                                    },
                                    {
                                      "type": "Language",
                                      "name": "Bengali",
                                      "additionalName": "bn"
                                    },
                                    {
                                      "type": "Language",
                                      "name": "Portuguese",
                                      "additionalName": "pt"
                                    }
                                  ],
                                  "x-parser-schema-id": "Language"
                                },
                                "x-parser-schema-id": "<anonymous-schema-123>"
                              },
                              "name": {
                                "description": "Full name of the person.",
                                "type": "string",
                                "x-faker": "name.findName",
                                "x-parser-schema-id": "<anonymous-schema-127>"
                              },
                              "telephone": {
                                "type": "string",
                                "description": "Primary phone number.",
                                "example": "+15558675309",
                                "x-parser-schema-id": "<anonymous-schema-128>"
                              },
                              "worksFor": {
                                "type": "string",
                                "description": "Organizations the person works for.",
                                "x-faker": "company.companyName",
                                "x-parser-schema-id": "<anonymous-schema-129>"
                              }
                            },
                            "x-parser-schema-id": "Person"
                          },
                          {
                            "title": "Contact",
                            "description": "a CRM contact.",
                            "properties": {
                              "type": {
                                "type": "string",
                                "const": "Contact"
                              },
                              "identifier": {
                                "title": "identifier",
                                "type": "object",
                                "description": "identifier assigned to a contact by the vendor who originally created the contact",
                                "examples": [
                                  {
                                    "salesforceid": "0031U00002XW1QWQA1"
                                  },
                                  {
                                    "vendoraid": "123456"
                                  },
                                  {
                                    "originating_system_id": "123456"
                                  }
                                ],
                                "x-parser-schema-id": "<anonymous-schema-94>"
                              },
                              "additionalProperty": {
                                "title": "additionalProperty",
                                "type": "object",
                                "description": "additionalProperty are",
                                "example": {
                                  "supercrmuserid": 1234,
                                  "doNotSell": true
                                }
                              },
                              "comment": {
                                "title": "comment",
                                "type": "array",
                                "description": "comments by, for or about the item",
                                "x-range": "Comment",
                                "items": {
                                  "type": "object"
                                },
                                "example": [
                                  {
                                    "type": "Comment",
                                    "text": "this is my comment.",
                                    "author": {
                                      "type": "Contact",
                                      "name": "Bruce Wayne"
                                    },
                                    "about": {
                                      "type": "PropertyListing",
                                      "id": "https://example.com/listingid"
                                    },
                                    "dateCreated": "2019-07-15T05:24:05Z",
                                    "dateModified": "2019-07-15T05:24:05Z"
                                  }
                                ]
                              },
                              "jobTitle": {
                                "title": "jobTitle",
                                "description": "The job title of the person (for example, Financial Manager).",
                                "type": "string",
                                "x-faker": "name.jobTitle",
                                "examples": [
                                  "CEO",
                                  "Sales Manager",
                                  "Escrow Officer",
                                  "Transaction Coordinator",
                                  "Director of Marketing",
                                  "Senior Loan Officer",
                                  "Loan Officer",
                                  "Sanitation Engineer",
                                  "Owner",
                                  "Cofounder",
                                  "Founder",
                                  "President",
                                  "Vice President of Sales",
                                  null,
                                  null,
                                  null,
                                  null,
                                  null,
                                  null,
                                  null,
                                  null,
                                  null,
                                  null
                                ],
                                "x-parser-schema-id": "<anonymous-schema-388>"
                              },
                              "contactGroup": {
                                "type": "array",
                                "items": {
                                  "$id": "htttp://realestate.yodata.me/schema/ContactGroup.json",
                                  "title": "ContactGroup",
                                  "description": "groups the contact is a member of.",
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "name"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "ContactGroup",
                                        "Collection"
                                      ]
                                    },
                                    "identifier": {
                                      "title": "identifier",
                                      "type": "object",
                                      "description": "identifier assigned to a contact by the vendor who originally created the contact",
                                      "examples": [
                                        {
                                          "salesforceid": "0031U00002XW1QWQA1"
                                        },
                                        {
                                          "vendoraid": "123456"
                                        },
                                        {
                                          "originating_system_id": "123456"
                                        }
                                      ],
                                      "x-parser-schema-id": "<anonymous-schema-94>"
                                    },
                                    "name": {
                                      "type": "string",
                                      "examples": [
                                        "Past Clients",
                                        "Prospects",
                                        "Leads",
                                        "Referrals",
                                        "Friends",
                                        "Family",
                                        "Neighbors",
                                        "Business Associates",
                                        "Personal"
                                      ]
                                    }
                                  }
                                }
                              },
                              "keywords": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "leadOwner": {
                                "type": "object",
                                "description": "lead owner",
                                "x-range": [
                                  "RealEstateAgent",
                                  "RealEstateOrganization",
                                  "RealEstateTeam"
                                ],
                                "example": {
                                  "type": "RealEstateOrganization",
                                  "name": "Gotham City Real Estate",
                                  "id": "https://example.com/profile.card#me"
                                }
                              },
                              "leadSource": {
                                "type": "object",
                                "description": "origin of the lead",
                                "x-range": [
                                  "MobileApplication",
                                  "RealEstateOffice",
                                  "RealEstateWebsite",
                                  "Thing"
                                ],
                                "example": {
                                  "id": "https://www.zillow.com/homedetails/1044-Siler-Pl-Berkeley-CA-94705/24820985_zpid/",
                                  "type": "RealEstateWebsite",
                                  "name": "Zillow",
                                  "url": "https://zillow.com"
                                }
                              },
                              "originatingSystem": {
                                "type": "object",
                                "x-range": [
                                  "Thing"
                                ],
                                "description": "the original system where this item was created.  Can be of type Thing or any sub-type.",
                                "examples": [
                                  {
                                    "type": "SoftwareApplication",
                                    "name": "RDesk",
                                    "description": "User Created.",
                                    "url": "http://www.rdeskwebsite.com/"
                                  }
                                ]
                              },
                              "dateCreated": {
                                "$id": "http://realestate.yodata.me/schema/dateCreated.yaml",
                                "type": "string",
                                "format": "date-time",
                                "title": "Date Created",
                                "description": "The date on which the item was created."
                              },
                              "dateModified": {
                                "description": "The date on which the item was most recently modified or when the item's entry was modified within a DataFeed.",
                                "type": "string",
                                "format": "date-time",
                                "x-parser-schema-id": "<anonymous-schema-136>"
                              }
                            },
                            "x-parser-schema-id": "<anonymous-schema-130>"
                          }
                        ],
                        "x-parser-schema-id": "Contact"
                      }
                    },
                    "x-parser-schema-id": "<anonymous-schema-147>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-145>"
              },
              "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-original-payload": {
                "type": "object",
                "required": [
                  "topic",
                  "data"
                ],
                "properties": {
                  "topic": {
                    "const": "realestate/contact#update"
                  },
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "object",
                      "agent"
                    ],
                    "properties": {
                      "type": {
                        "const": "UpdateAction"
                      },
                      "agent": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "const": "Person"
                          },
                          "name": {
                            "type": "string",
                            "description": "the name of the item"
                          },
                          "email": {
                            "type": "string",
                            "format": "email",
                            "x-faker": "internet.email"
                          },
                          "identifier": {
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ]
                          }
                        },
                        "required": [
                          "type"
                        ],
                        "minProperties": 2
                      },
                      "object": {
                        "allOf": [
                          {
                            "title": "Person",
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string"
                              },
                              "affiliation": {
                                "description": "An organization that this person is affiliated with",
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://example.com/profile/card#me"
                                }
                              },
                              "address": {
                                "type": "array",
                                "items": {
                                  "$id": "http://realestate.yodata.me/schemas/PostalAddress.yaml",
                                  "title": "PostalAddress",
                                  "type": "object",
                                  "description": "A physical address.",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "PostalAddress"
                                    },
                                    "streetAddress": {
                                      "type": "string",
                                      "description": "the street number and name.",
                                      "x-faker": "address.streetAddress",
                                      "examples": [
                                        "5046 Ottis Point",
                                        "166 Marion Burg",
                                        "93044 Haley Stream"
                                      ]
                                    },
                                    "postOfficeBoxNumber": {
                                      "type": "string",
                                      "description": "The post office box number for PO box addresses.",
                                      "x-faker": "address.secondaryAddress",
                                      "examples": [
                                        "Box 1234",
                                        "Apt. 161",
                                        "Apt. 623"
                                      ]
                                    },
                                    "addressRegion": {
                                      "type": "string",
                                      "description": "State or Province.",
                                      "x-faker": "address.state",
                                      "examples": [
                                        "New Jersey",
                                        "California",
                                        "MI",
                                        null
                                      ]
                                    },
                                    "addressLocality": {
                                      "type": "string",
                                      "description": "City, Township.",
                                      "x-faker": "address.city",
                                      "examples": [
                                        "Gotham City",
                                        "Kulasmouth",
                                        "Heidistad",
                                        "Altamonte Springs",
                                        "West Ahmed",
                                        "Blaiseview"
                                      ]
                                    },
                                    "postalCode": {
                                      "type": "string",
                                      "description": "Zip/Post Code",
                                      "x-faker": "address.zipCode",
                                      "examples": [
                                        "10010",
                                        "38859",
                                        "40387",
                                        "50239-7698",
                                        null
                                      ]
                                    },
                                    "addressCountry": {
                                      "type": "string",
                                      "description": "The country. For example, USA. You can also provide the two-letter ISO 3166-1 alpha-2 country code.",
                                      "examples": [
                                        "USA",
                                        "TH",
                                        "NZ",
                                        "EG",
                                        "SJ",
                                        "VN"
                                      ],
                                      "x-faker": "address.countryCode"
                                    },
                                    "addressCounty": {
                                      "type": "string",
                                      "description": "the county (us real estate extension)",
                                      "faker": "address.county",
                                      "examples": [
                                        "Gotham County",
                                        "Buckinghamshire",
                                        "Borders",
                                        null
                                      ]
                                    },
                                    "addressSubdivision": {
                                      "type": "string",
                                      "description": "the subdivision or neighborhood (us real estate extension)",
                                      "x-faker": "address.streetName",
                                      "examples": [
                                        "Gotham Heights",
                                        "South Kensington",
                                        "SOMA (South of Market)",
                                        "Nob Hill"
                                      ]
                                    }
                                  }
                                }
                              },
                              "birthDate": {
                                "description": "date of birth.",
                                "type": "string",
                                "format": "date"
                              },
                              "contactPoint": {
                                "description": "contact points for the person",
                                "type": "array",
                                "items": {
                                  "$id": "htttp://realestate.yodata.me/schema/ContactPoint.json",
                                  "title": "ContactPoint",
                                  "description": "A point of contact for the entity. By convention in the real estate domain, ContactPoints\nare preferred over telephone, email, and faxNumber so the ContactPoint.name property can be used to label values\nfor example, Work Telephone, Home, as named contactPoint values.\n",
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "name"
                                  ],
                                  "minProperties": 3,
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "ContactPoint"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "a label for the contactPoint, i.e. 'Work', or 'Home'",
                                      "examples": [
                                        "Work",
                                        "Home",
                                        "Vacation",
                                        "Bob's Cell",
                                        "Alice's Work"
                                      ]
                                    },
                                    "telephone": {
                                      "type": "string",
                                      "x-faker": "phone.phoneNumber",
                                      "examples": [
                                        "555-555-5555",
                                        "555-555-5555 x123",
                                        "555-555-5555 ext. 123",
                                        "+1-555-555-5555"
                                      ]
                                    },
                                    "faxNumber": {
                                      "type": "string",
                                      "x-faker": "phone.phoneNumber",
                                      "examples": [
                                        "555-555-5555",
                                        "555-555-5555 x123",
                                        "555-555-5555 ext. 123",
                                        "+1-555-555-5555"
                                      ]
                                    },
                                    "email": {
                                      "description": "an email address for the item.",
                                      "type": "string",
                                      "format": "email",
                                      "x-faker": "internet.email",
                                      "examples": [
                                        "bob@example.com",
                                        "alice@example.com"
                                      ]
                                    },
                                    "url": {
                                      "description": "primary URL for the item.",
                                      "type": "string",
                                      "format": "uri",
                                      "example": "https://www.facebook.com/hallandoates"
                                    }
                                  }
                                }
                              },
                              "email": {
                                "type": "string",
                                "format": "email",
                                "x-faker": "internet.email"
                              },
                              "additionalName": {
                                "title": "additionalName",
                                "description": "any other name(s) associated with the entity, i.e. nickname, middle name, maiden name, etc. For multiple names, use a comma without space as a separator.",
                                "type": "string",
                                "examples": [
                                  "Johnny,John",
                                  "Prince,The Artist Formerly Known as Prince,The Artist",
                                  "Babs,Barbara",
                                  "Katheryn Elizabeth Hudson,Katy Perry",
                                  "Destiny Hope Cyrus,Miley Cyrus"
                                ]
                              },
                              "familyName": {
                                "$id": "htttp://realestate.yodata.me/schema/familyName.yaml",
                                "type": "string",
                                "title": "Family Name",
                                "description": "Last Name of a person",
                                "x-faker": "name.lastName",
                                "maxLength": 50,
                                "externalDocs": {
                                  "description": "Family Name",
                                  "url": "https://schema.org/familyName"
                                },
                                "examples": [
                                  "Smith",
                                  "Jones",
                                  "Parker",
                                  "Monk",
                                  "Brown",
                                  "Miller",
                                  "Davis",
                                  "Wilson",
                                  "Fitzgerald",
                                  "Johnson",
                                  "Williams"
                                ]
                              },
                              "faxNumber": {
                                "type": "string",
                                "description": "Do people still use fax machines?",
                                "x-faker": "phone.phoneNumber"
                              },
                              "givenName": {
                                "type": "string",
                                "description": "First Name of a person",
                                "x-faker": "name.firstName",
                                "examples": [
                                  "John",
                                  "Jane",
                                  "Mary",
                                  "Joseph",
                                  "William",
                                  "David",
                                  "Richard",
                                  "Charles",
                                  "Thomas",
                                  "Christopher",
                                  "Daniel",
                                  "Matthew",
                                  "Anthony",
                                  "Donald",
                                  "Mark",
                                  "Paul",
                                  "Steven",
                                  "Andrew",
                                  "Kenneth",
                                  "George",
                                  "Joshua",
                                  "Kevin",
                                  "Brian",
                                  "Edward",
                                  "Ronald",
                                  "Timothy",
                                  "Jason",
                                  "Jeffrey",
                                  "Ryan",
                                  "Jacob"
                                ]
                              },
                              "honorificPrefix": {
                                "title": "honorificPrefix",
                                "description": "An honorific prefix preceding a Person's name such as Dr/Mrs/Mr.",
                                "type": "string",
                                "example": "Dr"
                              },
                              "honorificSuffix": {
                                "title": "honorificSuffix",
                                "description": "An honorific title following a person's name like M.D.",
                                "type": "string",
                                "example": "Esq"
                              },
                              "jobTitle": {
                                "title": "jobTitle",
                                "description": "job tiles associated with the item",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "example": [
                                  "Chief Data Officer",
                                  "Sanitation Engineer"
                                ]
                              },
                              "knowsLanguage": {
                                "description": "languages spoken by the person",
                                "type": "array",
                                "items": {
                                  "$id": "htttp://realestate.yodata.me/schema/Language.yaml",
                                  "description": "a written or spoken Language",
                                  "title": "Language",
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "name",
                                    "additionalName"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "Language"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "the display name of the language"
                                    },
                                    "additionalName": {
                                      "type": "string",
                                      "description": "BCP 47 language code"
                                    }
                                  },
                                  "examples": [
                                    {
                                      "type": "Language",
                                      "name": "English",
                                      "additionalName": "en-us"
                                    },
                                    {
                                      "type": "Language",
                                      "name": "Spanish",
                                      "additionalName": "es"
                                    },
                                    {
                                      "type": "Language",
                                      "name": "French",
                                      "additionalName": "fr"
                                    },
                                    {
                                      "type": "Language",
                                      "name": "German",
                                      "additionalName": "de"
                                    },
                                    {
                                      "type": "Language",
                                      "name": "Italian",
                                      "additionalName": "it"
                                    },
                                    {
                                      "type": "Language",
                                      "name": "Japanese",
                                      "additionalName": "ja"
                                    },
                                    {
                                      "type": "Language",
                                      "name": "Korean",
                                      "additionalName": "ko"
                                    },
                                    {
                                      "type": "Language",
                                      "name": "Portuguese",
                                      "additionalName": "pt"
                                    },
                                    {
                                      "type": "Language",
                                      "name": "Russian",
                                      "additionalName": "ru"
                                    },
                                    {
                                      "type": "Language",
                                      "name": "Chinese",
                                      "additionalName": "zh"
                                    },
                                    {
                                      "type": "Language",
                                      "name": "Arabic",
                                      "additionalName": "ar"
                                    },
                                    {
                                      "type": "Language",
                                      "name": "Hindi",
                                      "additionalName": "hi"
                                    },
                                    {
                                      "type": "Language",
                                      "name": "Bengali",
                                      "additionalName": "bn"
                                    },
                                    {
                                      "type": "Language",
                                      "name": "Portuguese",
                                      "additionalName": "pt"
                                    }
                                  ]
                                }
                              },
                              "name": {
                                "description": "Full name of the person.",
                                "type": "string",
                                "x-faker": "name.findName"
                              },
                              "telephone": {
                                "type": "string",
                                "description": "Primary phone number.",
                                "example": "+15558675309"
                              },
                              "worksFor": {
                                "type": "string",
                                "description": "Organizations the person works for.",
                                "x-faker": "company.companyName"
                              }
                            }
                          },
                          {
                            "title": "Contact",
                            "description": "a CRM contact.",
                            "properties": {
                              "type": {
                                "type": "string",
                                "const": "Contact"
                              },
                              "identifier": {
                                "title": "identifier",
                                "type": "object",
                                "description": "identifier assigned to a contact by the vendor who originally created the contact",
                                "examples": [
                                  {
                                    "salesforceid": "0031U00002XW1QWQA1"
                                  },
                                  {
                                    "vendoraid": "123456"
                                  },
                                  {
                                    "originating_system_id": "123456"
                                  }
                                ]
                              },
                              "additionalProperty": {
                                "title": "additionalProperty",
                                "type": "object",
                                "description": "additionalProperty are",
                                "example": {
                                  "supercrmuserid": 1234,
                                  "doNotSell": true
                                }
                              },
                              "comment": {
                                "title": "comment",
                                "type": "array",
                                "description": "comments by, for or about the item",
                                "x-range": "Comment",
                                "items": {
                                  "type": "object"
                                },
                                "example": [
                                  {
                                    "type": "Comment",
                                    "text": "this is my comment.",
                                    "author": {
                                      "type": "Contact",
                                      "name": "Bruce Wayne"
                                    },
                                    "about": {
                                      "type": "PropertyListing",
                                      "id": "https://example.com/listingid"
                                    },
                                    "dateCreated": "2019-07-15T05:24:05Z",
                                    "dateModified": "2019-07-15T05:24:05Z"
                                  }
                                ]
                              },
                              "jobTitle": {
                                "title": "jobTitle",
                                "description": "The job title of the person (for example, Financial Manager).",
                                "type": "string",
                                "x-faker": "name.jobTitle",
                                "examples": [
                                  "CEO",
                                  "Sales Manager",
                                  "Escrow Officer",
                                  "Transaction Coordinator",
                                  "Director of Marketing",
                                  "Senior Loan Officer",
                                  "Loan Officer",
                                  "Sanitation Engineer",
                                  "Owner",
                                  "Cofounder",
                                  "Founder",
                                  "President",
                                  "Vice President of Sales",
                                  null,
                                  null,
                                  null,
                                  null,
                                  null,
                                  null,
                                  null,
                                  null,
                                  null,
                                  null
                                ]
                              },
                              "contactGroup": {
                                "type": "array",
                                "items": {
                                  "$id": "htttp://realestate.yodata.me/schema/ContactGroup.json",
                                  "title": "ContactGroup",
                                  "description": "groups the contact is a member of.",
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "name"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "ContactGroup",
                                        "Collection"
                                      ]
                                    },
                                    "identifier": {
                                      "title": "identifier",
                                      "type": "object",
                                      "description": "identifier assigned to a contact by the vendor who originally created the contact",
                                      "examples": [
                                        {
                                          "salesforceid": "0031U00002XW1QWQA1"
                                        },
                                        {
                                          "vendoraid": "123456"
                                        },
                                        {
                                          "originating_system_id": "123456"
                                        }
                                      ]
                                    },
                                    "name": {
                                      "type": "string",
                                      "examples": [
                                        "Past Clients",
                                        "Prospects",
                                        "Leads",
                                        "Referrals",
                                        "Friends",
                                        "Family",
                                        "Neighbors",
                                        "Business Associates",
                                        "Personal"
                                      ]
                                    }
                                  }
                                }
                              },
                              "keywords": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "leadOwner": {
                                "type": "object",
                                "description": "lead owner",
                                "x-range": [
                                  "RealEstateAgent",
                                  "RealEstateOrganization",
                                  "RealEstateTeam"
                                ],
                                "example": {
                                  "type": "RealEstateOrganization",
                                  "name": "Gotham City Real Estate",
                                  "id": "https://example.com/profile.card#me"
                                }
                              },
                              "leadSource": {
                                "type": "object",
                                "description": "origin of the lead",
                                "x-range": [
                                  "MobileApplication",
                                  "RealEstateOffice",
                                  "RealEstateWebsite",
                                  "Thing"
                                ],
                                "example": {
                                  "id": "https://www.zillow.com/homedetails/1044-Siler-Pl-Berkeley-CA-94705/24820985_zpid/",
                                  "type": "RealEstateWebsite",
                                  "name": "Zillow",
                                  "url": "https://zillow.com"
                                }
                              },
                              "originatingSystem": {
                                "type": "object",
                                "x-range": [
                                  "Thing"
                                ],
                                "description": "the original system where this item was created.  Can be of type Thing or any sub-type.",
                                "examples": [
                                  {
                                    "type": "SoftwareApplication",
                                    "name": "RDesk",
                                    "description": "User Created.",
                                    "url": "http://www.rdeskwebsite.com/"
                                  }
                                ]
                              },
                              "dateCreated": {
                                "$id": "http://realestate.yodata.me/schema/dateCreated.yaml",
                                "type": "string",
                                "format": "date-time",
                                "title": "Date Created",
                                "description": "The date on which the item was created."
                              },
                              "dateModified": {
                                "description": "The date on which the item was most recently modified or when the item's entry was modified within a DataFeed.",
                                "type": "string",
                                "format": "date-time"
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-message-parsed": true
            },
            {
              "messageId": "contact#plandelete",
              "name": "realestate/contact#plandelete",
              "summary": "a contact plan (data.object) is deleted by a user (data.agent)",
              "headers": {
                "$id": "subscription_headers",
                "title": "CloudEvent",
                "type": "object",
                "properties": {
                  "time": {
                    "type": "string",
                    "format": "date-time",
                    "description": "date & time the event was produced",
                    "x-parser-schema-id": "<anonymous-schema-30>"
                  },
                  "agent": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the event provider who sent the event via a subscription authorized to your service.",
                    "description": "if you are a multi-tenant app, then the agent is the user associated with the event data.\nany future events related to this message will be sent to the same agent/recipient\n",
                    "example": "https://andy_agent.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-31>"
                  },
                  "instrument": {
                    "type": "string",
                    "format": "uri",
                    "description": "the app or service that produced the event on behalf of the agent/user",
                    "example": "https://supercrm.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-32>"
                  },
                  "source": {
                    "type": "string",
                    "format": "uri",
                    "description": "an agent, team or organization who received a copy of the event",
                    "example": "https://bigbrandrealestate.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-33>"
                  },
                  "originalRecipient": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the original recipient of the event",
                    "description": "the originalRecipient helps you determine the subscription that delivered the event to you.\nif the originalRecipient is the same as the agent, then the you are subscribed to the agent.\nif the originalRecipient is different from the agent, then you are subscribed to the event source\n",
                    "example": "https://agentid.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-34>"
                  },
                  "id": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the event id",
                    "description": "the event id is a unique identifier for the event.\nall subscribers will receive the same event id.\n",
                    "example": "https://supercrm.example.com/publish/{eventid}",
                    "x-parser-schema-id": "<anonymous-schema-35>"
                  },
                  "@id": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the message id - the uri of the message in your inbox",
                    "example": "https://sumpercrm.example.com/inbox/{eventid}",
                    "x-parser-schema-id": "<anonymous-schema-36>"
                  }
                }
              },
              "payload": {
                "type": "object",
                "required": [
                  "topic",
                  "data"
                ],
                "properties": {
                  "topic": {
                    "const": "realestate/contact#plandelete",
                    "x-parser-schema-id": "<anonymous-schema-150>"
                  },
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "object",
                      "agent"
                    ],
                    "properties": {
                      "type": {
                        "const": "DeleteAction",
                        "x-parser-schema-id": "<anonymous-schema-152>"
                      },
                      "agent": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "const": "Person",
                            "x-parser-schema-id": "<anonymous-schema-91>"
                          },
                          "name": {
                            "type": "string",
                            "description": "the name of the item",
                            "x-parser-schema-id": "<anonymous-schema-92>"
                          },
                          "email": {
                            "type": "string",
                            "format": "email",
                            "x-faker": "internet.email",
                            "x-parser-schema-id": "<anonymous-schema-93>"
                          },
                          "identifier": {
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ],
                            "x-parser-schema-id": "<anonymous-schema-94>"
                          }
                        },
                        "required": [
                          "type"
                        ],
                        "minProperties": 2,
                        "x-parser-schema-id": "<anonymous-schema-90>"
                      },
                      "object": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "const": "Plan",
                            "x-parser-schema-id": "<anonymous-schema-154>"
                          },
                          "name": {
                            "type": "string",
                            "description": "name of the plan",
                            "examples": [
                              "my awesome plan",
                              "annoying but effective plan",
                              "plan to take over the world",
                              "birthdays and anniversaries plan"
                            ],
                            "x-parser-schema-id": "<anonymous-schema-155>"
                          },
                          "identifier": {
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ],
                            "x-parser-schema-id": "<anonymous-schema-94>"
                          }
                        },
                        "required": [
                          "type",
                          "name",
                          "identifier"
                        ],
                        "x-parser-schema-id": "<anonymous-schema-153>"
                      }
                    },
                    "x-parser-schema-id": "<anonymous-schema-151>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-149>"
              },
              "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-original-payload": {
                "type": "object",
                "required": [
                  "topic",
                  "data"
                ],
                "properties": {
                  "topic": {
                    "const": "realestate/contact#plandelete"
                  },
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "object",
                      "agent"
                    ],
                    "properties": {
                      "type": {
                        "const": "DeleteAction"
                      },
                      "agent": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "const": "Person"
                          },
                          "name": {
                            "type": "string",
                            "description": "the name of the item"
                          },
                          "email": {
                            "type": "string",
                            "format": "email",
                            "x-faker": "internet.email"
                          },
                          "identifier": {
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ]
                          }
                        },
                        "required": [
                          "type"
                        ],
                        "minProperties": 2
                      },
                      "object": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "const": "Plan"
                          },
                          "name": {
                            "type": "string",
                            "description": "name of the plan",
                            "examples": [
                              "my awesome plan",
                              "annoying but effective plan",
                              "plan to take over the world",
                              "birthdays and anniversaries plan"
                            ]
                          },
                          "identifier": {
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ]
                          }
                        },
                        "required": [
                          "type",
                          "name",
                          "identifier"
                        ]
                      }
                    }
                  }
                }
              },
              "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-message-parsed": true
            },
            {
              "messageId": "contact#planupdate",
              "name": "realestate/contact#planupdate",
              "summary": "a contact plan (data.object) is updated by a user (data.agent)",
              "headers": {
                "$id": "subscription_headers",
                "title": "CloudEvent",
                "type": "object",
                "properties": {
                  "time": {
                    "type": "string",
                    "format": "date-time",
                    "description": "date & time the event was produced",
                    "x-parser-schema-id": "<anonymous-schema-30>"
                  },
                  "agent": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the event provider who sent the event via a subscription authorized to your service.",
                    "description": "if you are a multi-tenant app, then the agent is the user associated with the event data.\nany future events related to this message will be sent to the same agent/recipient\n",
                    "example": "https://andy_agent.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-31>"
                  },
                  "instrument": {
                    "type": "string",
                    "format": "uri",
                    "description": "the app or service that produced the event on behalf of the agent/user",
                    "example": "https://supercrm.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-32>"
                  },
                  "source": {
                    "type": "string",
                    "format": "uri",
                    "description": "an agent, team or organization who received a copy of the event",
                    "example": "https://bigbrandrealestate.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-33>"
                  },
                  "originalRecipient": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the original recipient of the event",
                    "description": "the originalRecipient helps you determine the subscription that delivered the event to you.\nif the originalRecipient is the same as the agent, then the you are subscribed to the agent.\nif the originalRecipient is different from the agent, then you are subscribed to the event source\n",
                    "example": "https://agentid.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-34>"
                  },
                  "id": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the event id",
                    "description": "the event id is a unique identifier for the event.\nall subscribers will receive the same event id.\n",
                    "example": "https://supercrm.example.com/publish/{eventid}",
                    "x-parser-schema-id": "<anonymous-schema-35>"
                  },
                  "@id": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the message id - the uri of the message in your inbox",
                    "example": "https://sumpercrm.example.com/inbox/{eventid}",
                    "x-parser-schema-id": "<anonymous-schema-36>"
                  }
                }
              },
              "payload": {
                "type": "object",
                "required": [
                  "topic",
                  "data"
                ],
                "properties": {
                  "topic": {
                    "const": "realestate/contact#planupdate",
                    "x-parser-schema-id": "<anonymous-schema-157>"
                  },
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "object",
                      "agent"
                    ],
                    "properties": {
                      "type": {
                        "const": "UpdateAction",
                        "x-parser-schema-id": "<anonymous-schema-159>"
                      },
                      "agent": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "const": "Person",
                            "x-parser-schema-id": "<anonymous-schema-91>"
                          },
                          "name": {
                            "type": "string",
                            "description": "the name of the item",
                            "x-parser-schema-id": "<anonymous-schema-92>"
                          },
                          "email": {
                            "type": "string",
                            "format": "email",
                            "x-faker": "internet.email",
                            "x-parser-schema-id": "<anonymous-schema-93>"
                          },
                          "identifier": {
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ],
                            "x-parser-schema-id": "<anonymous-schema-94>"
                          }
                        },
                        "required": [
                          "type"
                        ],
                        "minProperties": 2,
                        "x-parser-schema-id": "<anonymous-schema-90>"
                      },
                      "object": {
                        "title": "Plan",
                        "type": "object",
                        "description": "a collection of related tasks",
                        "required": [
                          "type",
                          "identifier",
                          "name"
                        ],
                        "x-range": "Plan",
                        "properties": {
                          "type": {
                            "const": "Plan",
                            "x-parser-schema-id": "<anonymous-schema-160>"
                          },
                          "identifier": {
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ],
                            "x-parser-schema-id": "<anonymous-schema-94>"
                          },
                          "name": {
                            "type": "string",
                            "description": "name of the plan",
                            "examples": [
                              "my awesome plan",
                              "annoying but effective plan",
                              "plan to take over the world",
                              "birthdays and anniversaries plan"
                            ],
                            "x-parser-schema-id": "<anonymous-schema-155>"
                          },
                          "description": {
                            "type": "string",
                            "description": "description of the item",
                            "example": "this is the description of my awesome plan",
                            "x-parser-schema-id": "<anonymous-schema-161>"
                          },
                          "member": {
                            "type": "array",
                            "description": "tasks which make up the plan",
                            "items": {
                              "title": "Task",
                              "type": "object",
                              "description": "an action assigned to an agent, typically as part of a set of interdependent tasks in a Plan",
                              "x-range": "Task",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "description": "The item type (Linked-Data @type)",
                                  "enum": [
                                    "Task"
                                  ],
                                  "x-parser-schema-id": "<anonymous-schema-163>"
                                },
                                "identifier": {
                                  "title": "identifier",
                                  "type": "object",
                                  "description": "identifier assigned to a contact by the vendor who originally created the contact",
                                  "examples": [
                                    {
                                      "salesforceid": "0031U00002XW1QWQA1"
                                    },
                                    {
                                      "vendoraid": "123456"
                                    },
                                    {
                                      "originating_system_id": "123456"
                                    }
                                  ],
                                  "example": {
                                    "redEvent_ID": "23445"
                                  },
                                  "x-parser-schema-id": "<anonymous-schema-164>"
                                },
                                "actionStatus": {
                                  "example": "PotentialActionStatus",
                                  "type": "string",
                                  "description": "disposition of the Action at the time of this action message.",
                                  "x-range": [
                                    "CompletedActionStatus",
                                    "FailedActionStatus",
                                    "ActiveActionStatus",
                                    "PotentialActionStatus"
                                  ],
                                  "enum": [
                                    "CompletedActionStatus",
                                    "FailedActionStatus",
                                    "ActiveActionStatus",
                                    "PotentialActionStatus"
                                  ],
                                  "x-parser-schema-id": "<anonymous-schema-165>"
                                },
                                "memberOf": {
                                  "type": "object",
                                  "x-range": "Plan",
                                  "description": "a plan the task is associated with",
                                  "example": {
                                    "type": "Plan",
                                    "identifier": {
                                      "redPlan_ID": "xxxx"
                                    }
                                  },
                                  "x-parser-schema-id": "<anonymous-schema-166>"
                                },
                                "agent": {
                                  "type": "object",
                                  "description": "the party who completed, or will complete the task",
                                  "x-range": [
                                    "Person",
                                    "Organization",
                                    "RealEstateAgent",
                                    "Contact"
                                  ],
                                  "example": {
                                    "type": "RealEstateAgent",
                                    "id": "http://user.example.com/profile/card#me"
                                  },
                                  "x-parser-schema-id": "<anonymous-schema-167>"
                                },
                                "participant": {
                                  "x-title": "participant",
                                  "x-range": [
                                    "Person",
                                    "RealEstateAgent",
                                    "RealEstateTeam",
                                    "RealEstateOrganization"
                                  ],
                                  "description": "Other co-agents with a direct or indirect interest in the action.",
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "x-parser-schema-id": "<anonymous-schema-169>"
                                  },
                                  "example": [
                                    {
                                      "type": "Contact",
                                      "name": "Bruce Wayne",
                                      "email": "bruce@example.com",
                                      "identifier": {
                                        "redContact_GUID": "92d0a096-457e-4643-ace8-fa95b6bdb1c5"
                                      }
                                    }
                                  ],
                                  "x-parser-schema-id": "<anonymous-schema-168>"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "name or title",
                                  "example": "Call Ricky",
                                  "x-parser-schema-id": "<anonymous-schema-170>"
                                },
                                "description": {
                                  "type": "string",
                                  "description": "task detailed description",
                                  "example": "Agenda 1. Something 2. Something Else ...",
                                  "x-parser-schema-id": "<anonymous-schema-171>"
                                },
                                "keywords": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "x-parser-schema-id": "<anonymous-schema-173>"
                                  },
                                  "x-parser-schema-id": "<anonymous-schema-172>"
                                },
                                "dateDue": {
                                  "description": "the due date-time (ISO 8601 formated)",
                                  "type": "string",
                                  "format": "date-time",
                                  "x-parser-schema-id": "<anonymous-schema-174>"
                                },
                                "dateCompleted": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "date the task was completed",
                                  "x-parser-schema-id": "<anonymous-schema-175>"
                                },
                                "location": {
                                  "type": "object",
                                  "description": "the physical location where an event takes place",
                                  "x-range": [
                                    "Place"
                                  ],
                                  "example": {
                                    "type": "Place",
                                    "address": {
                                      "streetAddress": "1007 Mountain Gate Rd",
                                      "addressLocality": "Gotham City",
                                      "addressRegion": "NJ",
                                      "postalCode": "10007",
                                      "addressCounty": "Gotham addressCounty",
                                      "addressSubdivision": "Gotham Heights"
                                    }
                                  },
                                  "x-parser-schema-id": "<anonymous-schema-176>"
                                }
                              },
                              "x-parser-schema-id": "Task"
                            },
                            "x-parser-schema-id": "<anonymous-schema-162>"
                          },
                          "creator": {
                            "title": "creator",
                            "description": "the item creator",
                            "x-range": [
                              "Person",
                              "Organization"
                            ],
                            "example": "http://agent.example.com/profile/card#me",
                            "x-parser-schema-id": "<anonymous-schema-177>"
                          },
                          "dateCreated": {
                            "$id": "http://realestate.yodata.me/schema/dateCreated.yaml",
                            "type": "string",
                            "format": "date-time",
                            "title": "Date Created",
                            "description": "The date on which the item was created."
                          },
                          "dateModified": {
                            "description": "The date on which the item was most recently modified or when the item's entry was modified within a DataFeed.",
                            "type": "string",
                            "format": "date-time",
                            "x-parser-schema-id": "<anonymous-schema-136>"
                          },
                          "dateCompleted": {
                            "description": "The date on which the item was created.",
                            "type": "string",
                            "format": "date-time",
                            "x-parser-schema-id": "<anonymous-schema-178>"
                          }
                        },
                        "x-parser-schema-id": "Plan"
                      }
                    },
                    "x-parser-schema-id": "<anonymous-schema-158>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-156>"
              },
              "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-original-payload": {
                "type": "object",
                "required": [
                  "topic",
                  "data"
                ],
                "properties": {
                  "topic": {
                    "const": "realestate/contact#planupdate"
                  },
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "object",
                      "agent"
                    ],
                    "properties": {
                      "type": {
                        "const": "UpdateAction"
                      },
                      "agent": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "const": "Person"
                          },
                          "name": {
                            "type": "string",
                            "description": "the name of the item"
                          },
                          "email": {
                            "type": "string",
                            "format": "email",
                            "x-faker": "internet.email"
                          },
                          "identifier": {
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ]
                          }
                        },
                        "required": [
                          "type"
                        ],
                        "minProperties": 2
                      },
                      "object": {
                        "title": "Plan",
                        "type": "object",
                        "description": "a collection of related tasks",
                        "required": [
                          "type",
                          "identifier",
                          "name"
                        ],
                        "x-range": "Plan",
                        "properties": {
                          "type": {
                            "const": "Plan"
                          },
                          "identifier": {
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ]
                          },
                          "name": {
                            "type": "string",
                            "description": "name of the plan",
                            "examples": [
                              "my awesome plan",
                              "annoying but effective plan",
                              "plan to take over the world",
                              "birthdays and anniversaries plan"
                            ]
                          },
                          "description": {
                            "type": "string",
                            "description": "description of the item",
                            "example": "this is the description of my awesome plan"
                          },
                          "member": {
                            "type": "array",
                            "description": "tasks which make up the plan",
                            "items": {
                              "title": "Task",
                              "type": "object",
                              "description": "an action assigned to an agent, typically as part of a set of interdependent tasks in a Plan",
                              "x-range": "Task",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "description": "The item type (Linked-Data @type)",
                                  "enum": [
                                    "Task"
                                  ]
                                },
                                "identifier": {
                                  "title": "identifier",
                                  "type": "object",
                                  "description": "identifier assigned to a contact by the vendor who originally created the contact",
                                  "examples": [
                                    {
                                      "salesforceid": "0031U00002XW1QWQA1"
                                    },
                                    {
                                      "vendoraid": "123456"
                                    },
                                    {
                                      "originating_system_id": "123456"
                                    }
                                  ],
                                  "example": {
                                    "redEvent_ID": "23445"
                                  }
                                },
                                "actionStatus": {
                                  "example": "PotentialActionStatus",
                                  "type": "string",
                                  "description": "disposition of the Action at the time of this action message.",
                                  "x-range": [
                                    "CompletedActionStatus",
                                    "FailedActionStatus",
                                    "ActiveActionStatus",
                                    "PotentialActionStatus"
                                  ],
                                  "enum": [
                                    "CompletedActionStatus",
                                    "FailedActionStatus",
                                    "ActiveActionStatus",
                                    "PotentialActionStatus"
                                  ]
                                },
                                "memberOf": {
                                  "type": "object",
                                  "x-range": "Plan",
                                  "description": "a plan the task is associated with",
                                  "example": {
                                    "type": "Plan",
                                    "identifier": {
                                      "redPlan_ID": "xxxx"
                                    }
                                  }
                                },
                                "agent": {
                                  "type": "object",
                                  "description": "the party who completed, or will complete the task",
                                  "x-range": [
                                    "Person",
                                    "Organization",
                                    "RealEstateAgent",
                                    "Contact"
                                  ],
                                  "example": {
                                    "type": "RealEstateAgent",
                                    "id": "http://user.example.com/profile/card#me"
                                  }
                                },
                                "participant": {
                                  "x-title": "participant",
                                  "x-range": [
                                    "Person",
                                    "RealEstateAgent",
                                    "RealEstateTeam",
                                    "RealEstateOrganization"
                                  ],
                                  "description": "Other co-agents with a direct or indirect interest in the action.",
                                  "type": "array",
                                  "items": {
                                    "type": "object"
                                  },
                                  "example": [
                                    {
                                      "type": "Contact",
                                      "name": "Bruce Wayne",
                                      "email": "bruce@example.com",
                                      "identifier": {
                                        "redContact_GUID": "92d0a096-457e-4643-ace8-fa95b6bdb1c5"
                                      }
                                    }
                                  ]
                                },
                                "name": {
                                  "type": "string",
                                  "description": "name or title",
                                  "example": "Call Ricky"
                                },
                                "description": {
                                  "type": "string",
                                  "description": "task detailed description",
                                  "example": "Agenda 1. Something 2. Something Else ..."
                                },
                                "keywords": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "dateDue": {
                                  "description": "the due date-time (ISO 8601 formated)",
                                  "type": "string",
                                  "format": "date-time"
                                },
                                "dateCompleted": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "date the task was completed"
                                },
                                "location": {
                                  "type": "object",
                                  "description": "the physical location where an event takes place",
                                  "x-range": [
                                    "Place"
                                  ],
                                  "example": {
                                    "type": "Place",
                                    "address": {
                                      "streetAddress": "1007 Mountain Gate Rd",
                                      "addressLocality": "Gotham City",
                                      "addressRegion": "NJ",
                                      "postalCode": "10007",
                                      "addressCounty": "Gotham addressCounty",
                                      "addressSubdivision": "Gotham Heights"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "creator": {
                            "title": "creator",
                            "description": "the item creator",
                            "x-range": [
                              "Person",
                              "Organization"
                            ],
                            "example": "http://agent.example.com/profile/card#me"
                          },
                          "dateCreated": {
                            "$id": "http://realestate.yodata.me/schema/dateCreated.yaml",
                            "type": "string",
                            "format": "date-time",
                            "title": "Date Created",
                            "description": "The date on which the item was created."
                          },
                          "dateModified": {
                            "description": "The date on which the item was most recently modified or when the item's entry was modified within a DataFeed.",
                            "type": "string",
                            "format": "date-time"
                          },
                          "dateCompleted": {
                            "description": "The date on which the item was created.",
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-message-parsed": true
            },
            {
              "messageId": "contact#collectioncreate",
              "name": "realestate/contact#collectioncreate",
              "title": "Contact Group Create",
              "summary": "a contact group was created",
              "headers": {
                "$id": "subscription_headers",
                "title": "CloudEvent",
                "type": "object",
                "properties": {
                  "time": {
                    "type": "string",
                    "format": "date-time",
                    "description": "date & time the event was produced",
                    "x-parser-schema-id": "<anonymous-schema-30>"
                  },
                  "agent": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the event provider who sent the event via a subscription authorized to your service.",
                    "description": "if you are a multi-tenant app, then the agent is the user associated with the event data.\nany future events related to this message will be sent to the same agent/recipient\n",
                    "example": "https://andy_agent.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-31>"
                  },
                  "instrument": {
                    "type": "string",
                    "format": "uri",
                    "description": "the app or service that produced the event on behalf of the agent/user",
                    "example": "https://supercrm.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-32>"
                  },
                  "source": {
                    "type": "string",
                    "format": "uri",
                    "description": "an agent, team or organization who received a copy of the event",
                    "example": "https://bigbrandrealestate.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-33>"
                  },
                  "originalRecipient": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the original recipient of the event",
                    "description": "the originalRecipient helps you determine the subscription that delivered the event to you.\nif the originalRecipient is the same as the agent, then the you are subscribed to the agent.\nif the originalRecipient is different from the agent, then you are subscribed to the event source\n",
                    "example": "https://agentid.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-34>"
                  },
                  "id": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the event id",
                    "description": "the event id is a unique identifier for the event.\nall subscribers will receive the same event id.\n",
                    "example": "https://supercrm.example.com/publish/{eventid}",
                    "x-parser-schema-id": "<anonymous-schema-35>"
                  },
                  "@id": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the message id - the uri of the message in your inbox",
                    "example": "https://sumpercrm.example.com/inbox/{eventid}",
                    "x-parser-schema-id": "<anonymous-schema-36>"
                  }
                }
              },
              "payload": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "const": "CreateAction",
                        "x-parser-schema-id": "<anonymous-schema-181>"
                      },
                      "agent": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "const": "Person",
                            "x-parser-schema-id": "<anonymous-schema-91>"
                          },
                          "name": {
                            "type": "string",
                            "description": "the name of the item",
                            "x-parser-schema-id": "<anonymous-schema-92>"
                          },
                          "email": {
                            "type": "string",
                            "format": "email",
                            "x-faker": "internet.email",
                            "x-parser-schema-id": "<anonymous-schema-93>"
                          },
                          "identifier": {
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ],
                            "x-parser-schema-id": "<anonymous-schema-94>"
                          }
                        },
                        "required": [
                          "type"
                        ],
                        "minProperties": 2,
                        "x-parser-schema-id": "<anonymous-schema-90>"
                      },
                      "object": {
                        "title": "Contact Group Reference",
                        "description": "A reference to a contact group \"collection\" with minimal properties.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "const": "Collection",
                            "x-parser-schema-id": "<anonymous-schema-183>"
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the contact group.",
                            "examples": [
                              "Past Clients",
                              "Prospects",
                              "Friends",
                              "Family",
                              "Acquaintances",
                              "Business Contacts",
                              "Other"
                            ],
                            "x-parser-schema-id": "<anonymous-schema-184>"
                          },
                          "identifier": {
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ],
                            "x-parser-schema-id": "<anonymous-schema-94>"
                          }
                        },
                        "required": [
                          "type",
                          "name"
                        ],
                        "x-parser-schema-id": "<anonymous-schema-182>"
                      }
                    },
                    "x-parser-schema-id": "<anonymous-schema-180>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-179>"
              },
              "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-original-payload": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "const": "CreateAction"
                      },
                      "agent": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "const": "Person"
                          },
                          "name": {
                            "type": "string",
                            "description": "the name of the item"
                          },
                          "email": {
                            "type": "string",
                            "format": "email",
                            "x-faker": "internet.email"
                          },
                          "identifier": {
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ]
                          }
                        },
                        "required": [
                          "type"
                        ],
                        "minProperties": 2
                      },
                      "object": {
                        "title": "Contact Group Reference",
                        "description": "A reference to a contact group \"collection\" with minimal properties.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "const": "Collection"
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the contact group.",
                            "examples": [
                              "Past Clients",
                              "Prospects",
                              "Friends",
                              "Family",
                              "Acquaintances",
                              "Business Contacts",
                              "Other"
                            ]
                          },
                          "identifier": {
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ]
                          }
                        },
                        "required": [
                          "type",
                          "name"
                        ]
                      }
                    }
                  }
                }
              },
              "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-message-parsed": true
            },
            {
              "messageId": "contact#collectiondelete",
              "name": "realestate/contact#collectiondelete",
              "summary": "a contact collection (data.object) is deleted by a user (data.agent)",
              "headers": {
                "$id": "subscription_headers",
                "title": "CloudEvent",
                "type": "object",
                "properties": {
                  "time": {
                    "type": "string",
                    "format": "date-time",
                    "description": "date & time the event was produced",
                    "x-parser-schema-id": "<anonymous-schema-30>"
                  },
                  "agent": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the event provider who sent the event via a subscription authorized to your service.",
                    "description": "if you are a multi-tenant app, then the agent is the user associated with the event data.\nany future events related to this message will be sent to the same agent/recipient\n",
                    "example": "https://andy_agent.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-31>"
                  },
                  "instrument": {
                    "type": "string",
                    "format": "uri",
                    "description": "the app or service that produced the event on behalf of the agent/user",
                    "example": "https://supercrm.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-32>"
                  },
                  "source": {
                    "type": "string",
                    "format": "uri",
                    "description": "an agent, team or organization who received a copy of the event",
                    "example": "https://bigbrandrealestate.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-33>"
                  },
                  "originalRecipient": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the original recipient of the event",
                    "description": "the originalRecipient helps you determine the subscription that delivered the event to you.\nif the originalRecipient is the same as the agent, then the you are subscribed to the agent.\nif the originalRecipient is different from the agent, then you are subscribed to the event source\n",
                    "example": "https://agentid.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-34>"
                  },
                  "id": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the event id",
                    "description": "the event id is a unique identifier for the event.\nall subscribers will receive the same event id.\n",
                    "example": "https://supercrm.example.com/publish/{eventid}",
                    "x-parser-schema-id": "<anonymous-schema-35>"
                  },
                  "@id": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the message id - the uri of the message in your inbox",
                    "example": "https://sumpercrm.example.com/inbox/{eventid}",
                    "x-parser-schema-id": "<anonymous-schema-36>"
                  }
                }
              },
              "payload": {
                "type": "object",
                "required": [
                  "topic",
                  "data"
                ],
                "properties": {
                  "topic": {
                    "const": "realestate/contact#collectiondelete",
                    "x-parser-schema-id": "<anonymous-schema-186>"
                  },
                  "data": {
                    "type": "object",
                    "required": [
                      "object"
                    ],
                    "properties": {
                      "type": {
                        "const": "DeleteAction",
                        "x-parser-schema-id": "<anonymous-schema-188>"
                      },
                      "agent": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "const": "Person",
                            "x-parser-schema-id": "<anonymous-schema-91>"
                          },
                          "name": {
                            "type": "string",
                            "description": "the name of the item",
                            "x-parser-schema-id": "<anonymous-schema-92>"
                          },
                          "email": {
                            "type": "string",
                            "format": "email",
                            "x-faker": "internet.email",
                            "x-parser-schema-id": "<anonymous-schema-93>"
                          },
                          "identifier": {
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ],
                            "x-parser-schema-id": "<anonymous-schema-94>"
                          }
                        },
                        "required": [
                          "type"
                        ],
                        "minProperties": 2,
                        "x-parser-schema-id": "<anonymous-schema-90>"
                      },
                      "object": {
                        "title": "Contact Group Reference",
                        "description": "A reference to a contact group \"collection\" with minimal properties.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "const": "Collection",
                            "x-parser-schema-id": "<anonymous-schema-183>"
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the contact group.",
                            "examples": [
                              "Past Clients",
                              "Prospects",
                              "Friends",
                              "Family",
                              "Acquaintances",
                              "Business Contacts",
                              "Other"
                            ],
                            "x-parser-schema-id": "<anonymous-schema-184>"
                          },
                          "identifier": {
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ],
                            "x-parser-schema-id": "<anonymous-schema-94>"
                          }
                        },
                        "required": [
                          "type",
                          "name"
                        ],
                        "x-parser-schema-id": "<anonymous-schema-182>"
                      }
                    },
                    "x-parser-schema-id": "<anonymous-schema-187>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-185>"
              },
              "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-original-payload": {
                "type": "object",
                "required": [
                  "topic",
                  "data"
                ],
                "properties": {
                  "topic": {
                    "const": "realestate/contact#collectiondelete"
                  },
                  "data": {
                    "type": "object",
                    "required": [
                      "object"
                    ],
                    "properties": {
                      "type": {
                        "const": "DeleteAction"
                      },
                      "agent": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "const": "Person"
                          },
                          "name": {
                            "type": "string",
                            "description": "the name of the item"
                          },
                          "email": {
                            "type": "string",
                            "format": "email",
                            "x-faker": "internet.email"
                          },
                          "identifier": {
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ]
                          }
                        },
                        "required": [
                          "type"
                        ],
                        "minProperties": 2
                      },
                      "object": {
                        "title": "Contact Group Reference",
                        "description": "A reference to a contact group \"collection\" with minimal properties.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "const": "Collection"
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the contact group.",
                            "examples": [
                              "Past Clients",
                              "Prospects",
                              "Friends",
                              "Family",
                              "Acquaintances",
                              "Business Contacts",
                              "Other"
                            ]
                          },
                          "identifier": {
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ]
                          }
                        },
                        "required": [
                          "type",
                          "name"
                        ]
                      }
                    }
                  }
                }
              },
              "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-message-parsed": true
            },
            {
              "messageId": "contact#collectionmemberadd",
              "name": "realestate/contact#collectionmemberadd",
              "summary": "a contact (data.object) is added to a contact collection (data.targetCollection) by a user (data.agent)",
              "headers": {
                "$id": "subscription_headers",
                "title": "CloudEvent",
                "type": "object",
                "properties": {
                  "time": {
                    "type": "string",
                    "format": "date-time",
                    "description": "date & time the event was produced",
                    "x-parser-schema-id": "<anonymous-schema-30>"
                  },
                  "agent": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the event provider who sent the event via a subscription authorized to your service.",
                    "description": "if you are a multi-tenant app, then the agent is the user associated with the event data.\nany future events related to this message will be sent to the same agent/recipient\n",
                    "example": "https://andy_agent.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-31>"
                  },
                  "instrument": {
                    "type": "string",
                    "format": "uri",
                    "description": "the app or service that produced the event on behalf of the agent/user",
                    "example": "https://supercrm.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-32>"
                  },
                  "source": {
                    "type": "string",
                    "format": "uri",
                    "description": "an agent, team or organization who received a copy of the event",
                    "example": "https://bigbrandrealestate.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-33>"
                  },
                  "originalRecipient": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the original recipient of the event",
                    "description": "the originalRecipient helps you determine the subscription that delivered the event to you.\nif the originalRecipient is the same as the agent, then the you are subscribed to the agent.\nif the originalRecipient is different from the agent, then you are subscribed to the event source\n",
                    "example": "https://agentid.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-34>"
                  },
                  "id": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the event id",
                    "description": "the event id is a unique identifier for the event.\nall subscribers will receive the same event id.\n",
                    "example": "https://supercrm.example.com/publish/{eventid}",
                    "x-parser-schema-id": "<anonymous-schema-35>"
                  },
                  "@id": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the message id - the uri of the message in your inbox",
                    "example": "https://sumpercrm.example.com/inbox/{eventid}",
                    "x-parser-schema-id": "<anonymous-schema-36>"
                  }
                }
              },
              "payload": {
                "type": "object",
                "required": [
                  "topic",
                  "data"
                ],
                "properties": {
                  "topic": {
                    "const": "realestate/contact#collectionmemberadd",
                    "x-parser-schema-id": "<anonymous-schema-190>"
                  },
                  "data": {
                    "type": "object",
                    "required": [
                      "object",
                      "targetCollection"
                    ],
                    "properties": {
                      "type": {
                        "const": "AddAction",
                        "x-parser-schema-id": "<anonymous-schema-192>"
                      },
                      "agent": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "const": "Person",
                            "x-parser-schema-id": "<anonymous-schema-91>"
                          },
                          "name": {
                            "type": "string",
                            "description": "the name of the item",
                            "x-parser-schema-id": "<anonymous-schema-92>"
                          },
                          "email": {
                            "type": "string",
                            "format": "email",
                            "x-faker": "internet.email",
                            "x-parser-schema-id": "<anonymous-schema-93>"
                          },
                          "identifier": {
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ],
                            "x-parser-schema-id": "<anonymous-schema-94>"
                          }
                        },
                        "required": [
                          "type"
                        ],
                        "minProperties": 2,
                        "x-parser-schema-id": "<anonymous-schema-90>"
                      },
                      "object": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "const": "Contact",
                            "x-parser-schema-id": "<anonymous-schema-140>"
                          },
                          "identifier": {
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ],
                            "x-parser-schema-id": "<anonymous-schema-94>"
                          }
                        },
                        "required": [
                          "type",
                          "identifier"
                        ],
                        "x-parser-schema-id": "<anonymous-schema-139>"
                      },
                      "targetCollection": {
                        "title": "Contact Group Reference",
                        "description": "A reference to a contact group \"collection\" with minimal properties.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "const": "Collection",
                            "x-parser-schema-id": "<anonymous-schema-183>"
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the contact group.",
                            "examples": [
                              "Past Clients",
                              "Prospects",
                              "Friends",
                              "Family",
                              "Acquaintances",
                              "Business Contacts",
                              "Other"
                            ],
                            "x-parser-schema-id": "<anonymous-schema-184>"
                          },
                          "identifier": {
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ],
                            "x-parser-schema-id": "<anonymous-schema-94>"
                          }
                        },
                        "required": [
                          "type",
                          "name"
                        ],
                        "x-parser-schema-id": "<anonymous-schema-182>"
                      }
                    },
                    "x-parser-schema-id": "<anonymous-schema-191>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-189>"
              },
              "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-original-payload": {
                "type": "object",
                "required": [
                  "topic",
                  "data"
                ],
                "properties": {
                  "topic": {
                    "const": "realestate/contact#collectionmemberadd"
                  },
                  "data": {
                    "type": "object",
                    "required": [
                      "object",
                      "targetCollection"
                    ],
                    "properties": {
                      "type": {
                        "const": "AddAction"
                      },
                      "agent": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "const": "Person"
                          },
                          "name": {
                            "type": "string",
                            "description": "the name of the item"
                          },
                          "email": {
                            "type": "string",
                            "format": "email",
                            "x-faker": "internet.email"
                          },
                          "identifier": {
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ]
                          }
                        },
                        "required": [
                          "type"
                        ],
                        "minProperties": 2
                      },
                      "object": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "const": "Contact"
                          },
                          "identifier": {
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ]
                          }
                        },
                        "required": [
                          "type",
                          "identifier"
                        ]
                      },
                      "targetCollection": {
                        "title": "Contact Group Reference",
                        "description": "A reference to a contact group \"collection\" with minimal properties.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "const": "Collection"
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the contact group.",
                            "examples": [
                              "Past Clients",
                              "Prospects",
                              "Friends",
                              "Family",
                              "Acquaintances",
                              "Business Contacts",
                              "Other"
                            ]
                          },
                          "identifier": {
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ]
                          }
                        },
                        "required": [
                          "type",
                          "name"
                        ]
                      }
                    }
                  }
                }
              },
              "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-message-parsed": true
            },
            {
              "messageId": "contact#collectionmemberremove",
              "name": "realestate/contact#collectionmemberremove",
              "summary": "a contact was removed from collection",
              "headers": {
                "$id": "subscription_headers",
                "title": "CloudEvent",
                "type": "object",
                "properties": {
                  "time": {
                    "type": "string",
                    "format": "date-time",
                    "description": "date & time the event was produced",
                    "x-parser-schema-id": "<anonymous-schema-30>"
                  },
                  "agent": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the event provider who sent the event via a subscription authorized to your service.",
                    "description": "if you are a multi-tenant app, then the agent is the user associated with the event data.\nany future events related to this message will be sent to the same agent/recipient\n",
                    "example": "https://andy_agent.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-31>"
                  },
                  "instrument": {
                    "type": "string",
                    "format": "uri",
                    "description": "the app or service that produced the event on behalf of the agent/user",
                    "example": "https://supercrm.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-32>"
                  },
                  "source": {
                    "type": "string",
                    "format": "uri",
                    "description": "an agent, team or organization who received a copy of the event",
                    "example": "https://bigbrandrealestate.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-33>"
                  },
                  "originalRecipient": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the original recipient of the event",
                    "description": "the originalRecipient helps you determine the subscription that delivered the event to you.\nif the originalRecipient is the same as the agent, then the you are subscribed to the agent.\nif the originalRecipient is different from the agent, then you are subscribed to the event source\n",
                    "example": "https://agentid.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-34>"
                  },
                  "id": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the event id",
                    "description": "the event id is a unique identifier for the event.\nall subscribers will receive the same event id.\n",
                    "example": "https://supercrm.example.com/publish/{eventid}",
                    "x-parser-schema-id": "<anonymous-schema-35>"
                  },
                  "@id": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the message id - the uri of the message in your inbox",
                    "example": "https://sumpercrm.example.com/inbox/{eventid}",
                    "x-parser-schema-id": "<anonymous-schema-36>"
                  }
                }
              },
              "payload": {
                "type": "object",
                "properties": {
                  "topic": {
                    "const": "realestate/contact#collectionmemberremove",
                    "x-parser-schema-id": "<anonymous-schema-194>"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "const": "RemoveAction",
                        "x-parser-schema-id": "<anonymous-schema-196>"
                      },
                      "agent": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "const": "Person",
                            "x-parser-schema-id": "<anonymous-schema-91>"
                          },
                          "name": {
                            "type": "string",
                            "description": "the name of the item",
                            "x-parser-schema-id": "<anonymous-schema-92>"
                          },
                          "email": {
                            "type": "string",
                            "format": "email",
                            "x-faker": "internet.email",
                            "x-parser-schema-id": "<anonymous-schema-93>"
                          },
                          "identifier": {
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ],
                            "x-parser-schema-id": "<anonymous-schema-94>"
                          }
                        },
                        "required": [
                          "type"
                        ],
                        "minProperties": 2,
                        "x-parser-schema-id": "<anonymous-schema-90>"
                      },
                      "object": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "const": "Contact",
                            "x-parser-schema-id": "<anonymous-schema-140>"
                          },
                          "identifier": {
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ],
                            "x-parser-schema-id": "<anonymous-schema-94>"
                          }
                        },
                        "required": [
                          "type",
                          "identifier"
                        ],
                        "x-parser-schema-id": "<anonymous-schema-139>"
                      },
                      "targetCollection": {
                        "title": "Contact Group Reference",
                        "description": "A reference to a contact group \"collection\" with minimal properties.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "const": "Collection",
                            "x-parser-schema-id": "<anonymous-schema-183>"
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the contact group.",
                            "examples": [
                              "Past Clients",
                              "Prospects",
                              "Friends",
                              "Family",
                              "Acquaintances",
                              "Business Contacts",
                              "Other"
                            ],
                            "x-parser-schema-id": "<anonymous-schema-184>"
                          },
                          "identifier": {
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ],
                            "x-parser-schema-id": "<anonymous-schema-94>"
                          }
                        },
                        "required": [
                          "type",
                          "name"
                        ],
                        "x-parser-schema-id": "<anonymous-schema-182>"
                      }
                    },
                    "x-parser-schema-id": "<anonymous-schema-195>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-193>"
              },
              "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-original-payload": {
                "type": "object",
                "properties": {
                  "topic": {
                    "const": "realestate/contact#collectionmemberremove"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "const": "RemoveAction"
                      },
                      "agent": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "const": "Person"
                          },
                          "name": {
                            "type": "string",
                            "description": "the name of the item"
                          },
                          "email": {
                            "type": "string",
                            "format": "email",
                            "x-faker": "internet.email"
                          },
                          "identifier": {
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ]
                          }
                        },
                        "required": [
                          "type"
                        ],
                        "minProperties": 2
                      },
                      "object": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "const": "Contact"
                          },
                          "identifier": {
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ]
                          }
                        },
                        "required": [
                          "type",
                          "identifier"
                        ]
                      },
                      "targetCollection": {
                        "title": "Contact Group Reference",
                        "description": "A reference to a contact group \"collection\" with minimal properties.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "const": "Collection"
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the contact group.",
                            "examples": [
                              "Past Clients",
                              "Prospects",
                              "Friends",
                              "Family",
                              "Acquaintances",
                              "Business Contacts",
                              "Other"
                            ]
                          },
                          "identifier": {
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ]
                          }
                        },
                        "required": [
                          "type",
                          "name"
                        ]
                      }
                    }
                  }
                }
              },
              "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-message-parsed": true
            }
          ]
        }
      }
    },
    "franchise": {
      "description": "franchise events",
      "subscribe": {
        "message": {
          "oneOf": [
            {
              "messageId": "franchise#transactionreport",
              "name": "franchise#transactionreport",
              "title": "Franchise Transaction Report",
              "summary": "Franchise transaction report of transaction for sales production reporting.",
              "headers": {
                "type": "object",
                "properties": {
                  "topic": {
                    "const": "realestate/franchise#transactionreport",
                    "x-parser-schema-id": "<anonymous-schema-198>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-197>"
              },
              "payload": {
                "title": "data",
                "type": "object",
                "properties": {
                  "type": {
                    "const": "UpdateAction",
                    "x-parser-schema-id": "<anonymous-schema-200>"
                  },
                  "instrument": {
                    "type": "object",
                    "description": "the application or service used that generated the report",
                    "properties": {
                      "type": {
                        "const": "SoftwareApplication",
                        "x-parser-schema-id": "<anonymous-schema-202>"
                      },
                      "name": {
                        "type": "string",
                        "maxLength": 10,
                        "examples": [
                          "Guru",
                          "Lone Wolf"
                        ],
                        "x-parser-schema-id": "<anonymous-schema-203>"
                      }
                    },
                    "x-parser-schema-id": "<anonymous-schema-201>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-199>"
              },
              "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-original-payload": {
                "title": "data",
                "type": "object",
                "properties": {
                  "type": {
                    "const": "UpdateAction"
                  },
                  "instrument": {
                    "type": "object",
                    "description": "the application or service used that generated the report",
                    "properties": {
                      "type": {
                        "const": "SoftwareApplication"
                      },
                      "name": {
                        "type": "string",
                        "maxLength": 10,
                        "examples": [
                          "Guru",
                          "Lone Wolf"
                        ]
                      }
                    }
                  }
                }
              },
              "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-message-parsed": true
            },
            {
              "messageId": "franchise#listingreport",
              "x-scope": "realestate/franchise#",
              "summary": "franchise listing report",
              "headers": {
                "$id": "subscription_headers",
                "title": "CloudEvent",
                "type": "object",
                "properties": {
                  "time": {
                    "type": "string",
                    "format": "date-time",
                    "description": "date & time the event was produced",
                    "x-parser-schema-id": "<anonymous-schema-30>"
                  },
                  "agent": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the event provider who sent the event via a subscription authorized to your service.",
                    "description": "if you are a multi-tenant app, then the agent is the user associated with the event data.\nany future events related to this message will be sent to the same agent/recipient\n",
                    "example": "https://andy_agent.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-31>"
                  },
                  "instrument": {
                    "type": "string",
                    "format": "uri",
                    "description": "the app or service that produced the event on behalf of the agent/user",
                    "example": "https://supercrm.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-32>"
                  },
                  "source": {
                    "type": "string",
                    "format": "uri",
                    "description": "an agent, team or organization who received a copy of the event",
                    "example": "https://bigbrandrealestate.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-33>"
                  },
                  "originalRecipient": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the original recipient of the event",
                    "description": "the originalRecipient helps you determine the subscription that delivered the event to you.\nif the originalRecipient is the same as the agent, then the you are subscribed to the agent.\nif the originalRecipient is different from the agent, then you are subscribed to the event source\n",
                    "example": "https://agentid.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-34>"
                  },
                  "id": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the event id",
                    "description": "the event id is a unique identifier for the event.\nall subscribers will receive the same event id.\n",
                    "example": "https://supercrm.example.com/publish/{eventid}",
                    "x-parser-schema-id": "<anonymous-schema-35>"
                  },
                  "@id": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the message id - the uri of the message in your inbox",
                    "example": "https://sumpercrm.example.com/inbox/{eventid}",
                    "x-parser-schema-id": "<anonymous-schema-36>"
                  }
                },
                "topic": {
                  "const": "realestate/franchise#listingreport"
                }
              },
              "payload": {
                "data": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "const": "UpdateAction"
                    },
                    "object": {
                      "$id": "http://realestate.yodata.me/schemas/ListingReport.yaml",
                      "title": "ListingReport",
                      "description": "summary report of listing inventory count",
                      "x-range": "ListingReport",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "RECORD-TYPE",
                          "example": "ListingReport",
                          "x-parser-schema-id": "<anonymous-schema-642>"
                        },
                        "batchId": {
                          "type": "string",
                          "description": "BATCH-ID",
                          "x-parser-schema-id": "<anonymous-schema-643>"
                        },
                        "reportingOfficeId": {
                          "type": "string",
                          "format": "uri",
                          "description": "OFFICE-ID",
                          "example": "https://{officeid}.example.com/profile/card#me",
                          "x-parser-schema-id": "<anonymous-schema-644>"
                        },
                        "dateCreated": {
                          "type": "string",
                          "format": "date-time",
                          "description": "YEAR-MONTH",
                          "x-parser-schema-id": "<anonymous-schema-645>"
                        },
                        "listingsAddedCount": {
                          "type": "number",
                          "description": "LISTINGS-TAKEN",
                          "x-parser-schema-id": "<anonymous-schema-646>"
                        },
                        "totalListingsCount": {
                          "type": "number",
                          "description": "LISTINGS-INVENTORY",
                          "x-parser-schema-id": "<anonymous-schema-647>"
                        }
                      },
                      "x-parser-schema-id": "ListingReport"
                    }
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-204>"
              },
              "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-original-payload": {
                "data": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "const": "UpdateAction"
                    },
                    "object": {
                      "$id": "http://realestate.yodata.me/schemas/ListingReport.yaml",
                      "title": "ListingReport",
                      "description": "summary report of listing inventory count",
                      "x-range": "ListingReport",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "RECORD-TYPE",
                          "example": "ListingReport"
                        },
                        "batchId": {
                          "type": "string",
                          "description": "BATCH-ID"
                        },
                        "reportingOfficeId": {
                          "type": "string",
                          "format": "uri",
                          "description": "OFFICE-ID",
                          "example": "https://{officeid}.example.com/profile/card#me"
                        },
                        "dateCreated": {
                          "type": "string",
                          "format": "date-time",
                          "description": "YEAR-MONTH"
                        },
                        "listingsAddedCount": {
                          "type": "number",
                          "description": "LISTINGS-TAKEN"
                        },
                        "totalListingsCount": {
                          "type": "number",
                          "description": "LISTINGS-INVENTORY"
                        }
                      }
                    }
                  }
                }
              },
              "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-message-parsed": true,
              "x-parser-message-name": "<anonymous-message-4>"
            }
          ]
        }
      }
    },
    "lead": {
      "description": "lead management events",
      "subscribe": {
        "message": {
          "oneOf": [
            {
              "messageId": "lead#accept",
              "name": "realestate/lead#accept",
              "summary": "a lead (data.object) was accepted by the recipient (data.recipient).",
              "headers": {
                "type": "object",
                "properties": {
                  "topic": {
                    "const": "realestate/lead#accept",
                    "x-parser-schema-id": "<anonymous-schema-206>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-205>"
              },
              "payload": {
                "type": "object",
                "properties": {
                  "type": {
                    "const": "lead#accept",
                    "x-parser-schema-id": "<anonymous-schema-208>"
                  },
                  "object": {
                    "title": "Lead",
                    "type": "object",
                    "x-range": "Lead",
                    "description": "a sales opportunity (object) offered by a sender to a recipient.",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "Lead"
                        ],
                        "description": "Lead",
                        "x-parser-schema-id": "<anonymous-schema-209>"
                      },
                      "identifier": {
                        "title": "identifier",
                        "type": "object",
                        "description": "identifier assigned to a contact by the vendor who originally created the contact",
                        "examples": [
                          {
                            "salesforceid": "0031U00002XW1QWQA1"
                          },
                          {
                            "vendoraid": "123456"
                          },
                          {
                            "originating_system_id": "123456"
                          }
                        ],
                        "x-parser-schema-id": "<anonymous-schema-94>"
                      },
                      "object": {
                        "description": "the lead (Contact)",
                        "x-range": [
                          "Contact"
                        ],
                        "type": "object",
                        "example": {
                          "type": "Contact",
                          "name": "Joe Smith",
                          "telephone": "731-620-9877 x6155",
                          "email": "Giuseppe.Lang62@hotmail.com"
                        },
                        "x-parser-schema-id": "<anonymous-schema-210>"
                      },
                      "recipient": {
                        "description": "the lead recipient",
                        "type": "string",
                        "format": "uri",
                        "example": "http://{lead-recipient}.example.com/profile/card#me",
                        "x-parser-schema-id": "<anonymous-schema-211>"
                      },
                      "sender": {
                        "description": "the lead provider",
                        "type": "string",
                        "format": "uri",
                        "example": "http://{lead-sender}.example.com/profile/card#me",
                        "x-parser-schema-id": "<anonymous-schema-212>"
                      },
                      "owner": {
                        "description": "the original owner of the lead",
                        "x-range": [
                          "RealEstateOrganization",
                          "RealEstateAgent",
                          "Person"
                        ],
                        "type": "string",
                        "format": "uri",
                        "example": "http://{lead-owner}.example.com/profile/card#me",
                        "x-parser-schema-id": "<anonymous-schema-213>"
                      },
                      "dateAccepted": {
                        "type": "string",
                        "description": "The date/time the item was accepted by the recipient",
                        "x-range": "DateTime",
                        "example": "2019-11-25T04:23:32.000Z",
                        "x-parser-schema-id": "<anonymous-schema-214>"
                      },
                      "dateRejected": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date/time the item was rejected by the recipient",
                        "x-parser-schema-id": "<anonymous-schema-215>"
                      },
                      "dateSent": {
                        "description": "the date the lead was sent",
                        "type": "string",
                        "format": "date-time",
                        "x-parser-schema-id": "<anonymous-schema-216>"
                      },
                      "dateReceived": {
                        "type": "string",
                        "description": "The date/time the item was received by it's recipient",
                        "x-range": "DateTime",
                        "example": "2019-11-25T04:23:32.000Z",
                        "x-parser-schema-id": "<anonymous-schema-217>"
                      },
                      "leadSource": {
                        "description": "lead origin, may be a website event or a thing such as a website, zillow, mobile applicaton.",
                        "x-range": [
                          "Action",
                          "RealEstateWebSite",
                          "MobileApplication"
                        ],
                        "type": "array",
                        "items": {
                          "type": "object",
                          "example": {
                            "type": "AskAction",
                            "object": {
                              "type": "Question",
                              "text": "Help me I'm trapped inside documentation."
                            }
                          },
                          "x-parser-schema-id": "<anonymous-schema-219>"
                        },
                        "x-parser-schema-id": "<anonymous-schema-218>"
                      }
                    },
                    "x-parser-schema-id": "Lead"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-207>"
              },
              "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-original-payload": {
                "type": "object",
                "properties": {
                  "type": {
                    "const": "lead#accept"
                  },
                  "object": {
                    "title": "Lead",
                    "type": "object",
                    "x-range": "Lead",
                    "description": "a sales opportunity (object) offered by a sender to a recipient.",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "Lead"
                        ],
                        "description": "Lead"
                      },
                      "identifier": {
                        "title": "identifier",
                        "type": "object",
                        "description": "identifier assigned to a contact by the vendor who originally created the contact",
                        "examples": [
                          {
                            "salesforceid": "0031U00002XW1QWQA1"
                          },
                          {
                            "vendoraid": "123456"
                          },
                          {
                            "originating_system_id": "123456"
                          }
                        ]
                      },
                      "object": {
                        "description": "the lead (Contact)",
                        "x-range": [
                          "Contact"
                        ],
                        "type": "object",
                        "example": {
                          "type": "Contact",
                          "name": "Joe Smith",
                          "telephone": "731-620-9877 x6155",
                          "email": "Giuseppe.Lang62@hotmail.com"
                        }
                      },
                      "recipient": {
                        "description": "the lead recipient",
                        "type": "string",
                        "format": "uri",
                        "example": "http://{lead-recipient}.example.com/profile/card#me"
                      },
                      "sender": {
                        "description": "the lead provider",
                        "type": "string",
                        "format": "uri",
                        "example": "http://{lead-sender}.example.com/profile/card#me"
                      },
                      "owner": {
                        "description": "the original owner of the lead",
                        "x-range": [
                          "RealEstateOrganization",
                          "RealEstateAgent",
                          "Person"
                        ],
                        "type": "string",
                        "format": "uri",
                        "example": "http://{lead-owner}.example.com/profile/card#me"
                      },
                      "dateAccepted": {
                        "type": "string",
                        "description": "The date/time the item was accepted by the recipient",
                        "x-range": "DateTime",
                        "example": "2019-11-25T04:23:32.000Z"
                      },
                      "dateRejected": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date/time the item was rejected by the recipient"
                      },
                      "dateSent": {
                        "description": "the date the lead was sent",
                        "type": "string",
                        "format": "date-time"
                      },
                      "dateReceived": {
                        "type": "string",
                        "description": "The date/time the item was received by it's recipient",
                        "x-range": "DateTime",
                        "example": "2019-11-25T04:23:32.000Z"
                      },
                      "leadSource": {
                        "description": "lead origin, may be a website event or a thing such as a website, zillow, mobile applicaton.",
                        "x-range": [
                          "Action",
                          "RealEstateWebSite",
                          "MobileApplication"
                        ],
                        "type": "array",
                        "items": {
                          "type": "object",
                          "example": {
                            "type": "AskAction",
                            "object": {
                              "type": "Question",
                              "text": "Help me I'm trapped inside documentation."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-message-parsed": true
            },
            {
              "messageId": "lead#add",
              "name": "realestate/lead#add",
              "summary": "a crm lead was created",
              "headers": {
                "type": "object",
                "properties": {
                  "topic": {
                    "const": "realestate/lead#add",
                    "x-parser-schema-id": "<anonymous-schema-221>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-220>"
              },
              "payload": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "const": "lead#add",
                        "x-parser-schema-id": "<anonymous-schema-224>"
                      },
                      "object": {
                        "title": "Lead",
                        "type": "object",
                        "x-range": "Lead",
                        "description": "a sales opportunity (object) offered by a sender to a recipient.",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "Lead"
                            ],
                            "description": "Lead",
                            "x-parser-schema-id": "<anonymous-schema-209>"
                          },
                          "identifier": {
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ],
                            "x-parser-schema-id": "<anonymous-schema-94>"
                          },
                          "object": {
                            "description": "the lead (Contact)",
                            "x-range": [
                              "Contact"
                            ],
                            "type": "object",
                            "example": {
                              "type": "Contact",
                              "name": "Joe Smith",
                              "telephone": "731-620-9877 x6155",
                              "email": "Giuseppe.Lang62@hotmail.com"
                            },
                            "x-parser-schema-id": "<anonymous-schema-210>"
                          },
                          "recipient": {
                            "description": "the lead recipient",
                            "type": "string",
                            "format": "uri",
                            "example": "http://{lead-recipient}.example.com/profile/card#me",
                            "x-parser-schema-id": "<anonymous-schema-211>"
                          },
                          "sender": {
                            "description": "the lead provider",
                            "type": "string",
                            "format": "uri",
                            "example": "http://{lead-sender}.example.com/profile/card#me",
                            "x-parser-schema-id": "<anonymous-schema-212>"
                          },
                          "owner": {
                            "description": "the original owner of the lead",
                            "x-range": [
                              "RealEstateOrganization",
                              "RealEstateAgent",
                              "Person"
                            ],
                            "type": "string",
                            "format": "uri",
                            "example": "http://{lead-owner}.example.com/profile/card#me",
                            "x-parser-schema-id": "<anonymous-schema-213>"
                          },
                          "dateAccepted": {
                            "type": "string",
                            "description": "The date/time the item was accepted by the recipient",
                            "x-range": "DateTime",
                            "example": "2019-11-25T04:23:32.000Z",
                            "x-parser-schema-id": "<anonymous-schema-214>"
                          },
                          "dateRejected": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The date/time the item was rejected by the recipient",
                            "x-parser-schema-id": "<anonymous-schema-215>"
                          },
                          "dateSent": {
                            "description": "the date the lead was sent",
                            "type": "string",
                            "format": "date-time",
                            "x-parser-schema-id": "<anonymous-schema-216>"
                          },
                          "dateReceived": {
                            "type": "string",
                            "description": "The date/time the item was received by it's recipient",
                            "x-range": "DateTime",
                            "example": "2019-11-25T04:23:32.000Z",
                            "x-parser-schema-id": "<anonymous-schema-217>"
                          },
                          "leadSource": {
                            "description": "lead origin, may be a website event or a thing such as a website, zillow, mobile applicaton.",
                            "x-range": [
                              "Action",
                              "RealEstateWebSite",
                              "MobileApplication"
                            ],
                            "type": "array",
                            "items": {
                              "type": "object",
                              "example": {
                                "type": "AskAction",
                                "object": {
                                  "type": "Question",
                                  "text": "Help me I'm trapped inside documentation."
                                }
                              },
                              "x-parser-schema-id": "<anonymous-schema-219>"
                            },
                            "x-parser-schema-id": "<anonymous-schema-218>"
                          }
                        },
                        "x-parser-schema-id": "Lead"
                      }
                    },
                    "x-parser-schema-id": "<anonymous-schema-223>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-222>"
              },
              "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-original-payload": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "const": "lead#add"
                      },
                      "object": {
                        "title": "Lead",
                        "type": "object",
                        "x-range": "Lead",
                        "description": "a sales opportunity (object) offered by a sender to a recipient.",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "Lead"
                            ],
                            "description": "Lead"
                          },
                          "identifier": {
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ]
                          },
                          "object": {
                            "description": "the lead (Contact)",
                            "x-range": [
                              "Contact"
                            ],
                            "type": "object",
                            "example": {
                              "type": "Contact",
                              "name": "Joe Smith",
                              "telephone": "731-620-9877 x6155",
                              "email": "Giuseppe.Lang62@hotmail.com"
                            }
                          },
                          "recipient": {
                            "description": "the lead recipient",
                            "type": "string",
                            "format": "uri",
                            "example": "http://{lead-recipient}.example.com/profile/card#me"
                          },
                          "sender": {
                            "description": "the lead provider",
                            "type": "string",
                            "format": "uri",
                            "example": "http://{lead-sender}.example.com/profile/card#me"
                          },
                          "owner": {
                            "description": "the original owner of the lead",
                            "x-range": [
                              "RealEstateOrganization",
                              "RealEstateAgent",
                              "Person"
                            ],
                            "type": "string",
                            "format": "uri",
                            "example": "http://{lead-owner}.example.com/profile/card#me"
                          },
                          "dateAccepted": {
                            "type": "string",
                            "description": "The date/time the item was accepted by the recipient",
                            "x-range": "DateTime",
                            "example": "2019-11-25T04:23:32.000Z"
                          },
                          "dateRejected": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The date/time the item was rejected by the recipient"
                          },
                          "dateSent": {
                            "description": "the date the lead was sent",
                            "type": "string",
                            "format": "date-time"
                          },
                          "dateReceived": {
                            "type": "string",
                            "description": "The date/time the item was received by it's recipient",
                            "x-range": "DateTime",
                            "example": "2019-11-25T04:23:32.000Z"
                          },
                          "leadSource": {
                            "description": "lead origin, may be a website event or a thing such as a website, zillow, mobile applicaton.",
                            "x-range": [
                              "Action",
                              "RealEstateWebSite",
                              "MobileApplication"
                            ],
                            "type": "array",
                            "items": {
                              "type": "object",
                              "example": {
                                "type": "AskAction",
                                "object": {
                                  "type": "Question",
                                  "text": "Help me I'm trapped inside documentation."
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-message-parsed": true
            },
            {
              "messageId": "lead#asssign",
              "name": "realestate/lead#assign",
              "summary": "a lead was assigned",
              "headers": {
                "type": "object",
                "properties": {
                  "topic": {
                    "const": "realestate/lead#assign",
                    "x-parser-schema-id": "<anonymous-schema-226>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-225>"
              },
              "payload": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "const": "lead#assign",
                        "x-parser-schema-id": "<anonymous-schema-229>"
                      },
                      "object": {
                        "title": "Lead",
                        "type": "object",
                        "x-range": "Lead",
                        "description": "a sales opportunity (object) offered by a sender to a recipient.",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "Lead"
                            ],
                            "description": "Lead",
                            "x-parser-schema-id": "<anonymous-schema-209>"
                          },
                          "identifier": {
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ],
                            "x-parser-schema-id": "<anonymous-schema-94>"
                          },
                          "object": {
                            "description": "the lead (Contact)",
                            "x-range": [
                              "Contact"
                            ],
                            "type": "object",
                            "example": {
                              "type": "Contact",
                              "name": "Joe Smith",
                              "telephone": "731-620-9877 x6155",
                              "email": "Giuseppe.Lang62@hotmail.com"
                            },
                            "x-parser-schema-id": "<anonymous-schema-210>"
                          },
                          "recipient": {
                            "description": "the lead recipient",
                            "type": "string",
                            "format": "uri",
                            "example": "http://{lead-recipient}.example.com/profile/card#me",
                            "x-parser-schema-id": "<anonymous-schema-211>"
                          },
                          "sender": {
                            "description": "the lead provider",
                            "type": "string",
                            "format": "uri",
                            "example": "http://{lead-sender}.example.com/profile/card#me",
                            "x-parser-schema-id": "<anonymous-schema-212>"
                          },
                          "owner": {
                            "description": "the original owner of the lead",
                            "x-range": [
                              "RealEstateOrganization",
                              "RealEstateAgent",
                              "Person"
                            ],
                            "type": "string",
                            "format": "uri",
                            "example": "http://{lead-owner}.example.com/profile/card#me",
                            "x-parser-schema-id": "<anonymous-schema-213>"
                          },
                          "dateAccepted": {
                            "type": "string",
                            "description": "The date/time the item was accepted by the recipient",
                            "x-range": "DateTime",
                            "example": "2019-11-25T04:23:32.000Z",
                            "x-parser-schema-id": "<anonymous-schema-214>"
                          },
                          "dateRejected": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The date/time the item was rejected by the recipient",
                            "x-parser-schema-id": "<anonymous-schema-215>"
                          },
                          "dateSent": {
                            "description": "the date the lead was sent",
                            "type": "string",
                            "format": "date-time",
                            "x-parser-schema-id": "<anonymous-schema-216>"
                          },
                          "dateReceived": {
                            "type": "string",
                            "description": "The date/time the item was received by it's recipient",
                            "x-range": "DateTime",
                            "example": "2019-11-25T04:23:32.000Z",
                            "x-parser-schema-id": "<anonymous-schema-217>"
                          },
                          "leadSource": {
                            "description": "lead origin, may be a website event or a thing such as a website, zillow, mobile applicaton.",
                            "x-range": [
                              "Action",
                              "RealEstateWebSite",
                              "MobileApplication"
                            ],
                            "type": "array",
                            "items": {
                              "type": "object",
                              "example": {
                                "type": "AskAction",
                                "object": {
                                  "type": "Question",
                                  "text": "Help me I'm trapped inside documentation."
                                }
                              },
                              "x-parser-schema-id": "<anonymous-schema-219>"
                            },
                            "x-parser-schema-id": "<anonymous-schema-218>"
                          }
                        },
                        "x-parser-schema-id": "Lead"
                      },
                      "agent": {
                        "description": "the assignor, typically the lead owner",
                        "type": "string",
                        "format": "uri",
                        "x-parser-schema-id": "<anonymous-schema-230>"
                      },
                      "recipient": {
                        "description": "the assignee of the lead.",
                        "type": "string",
                        "format": "uri",
                        "example": "http://andyagent.example.com/profile/card#me",
                        "x-parser-schema-id": "<anonymous-schema-231>"
                      }
                    },
                    "x-parser-schema-id": "<anonymous-schema-228>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-227>"
              },
              "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-original-payload": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "const": "lead#assign"
                      },
                      "object": {
                        "title": "Lead",
                        "type": "object",
                        "x-range": "Lead",
                        "description": "a sales opportunity (object) offered by a sender to a recipient.",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "Lead"
                            ],
                            "description": "Lead"
                          },
                          "identifier": {
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ]
                          },
                          "object": {
                            "description": "the lead (Contact)",
                            "x-range": [
                              "Contact"
                            ],
                            "type": "object",
                            "example": {
                              "type": "Contact",
                              "name": "Joe Smith",
                              "telephone": "731-620-9877 x6155",
                              "email": "Giuseppe.Lang62@hotmail.com"
                            }
                          },
                          "recipient": {
                            "description": "the lead recipient",
                            "type": "string",
                            "format": "uri",
                            "example": "http://{lead-recipient}.example.com/profile/card#me"
                          },
                          "sender": {
                            "description": "the lead provider",
                            "type": "string",
                            "format": "uri",
                            "example": "http://{lead-sender}.example.com/profile/card#me"
                          },
                          "owner": {
                            "description": "the original owner of the lead",
                            "x-range": [
                              "RealEstateOrganization",
                              "RealEstateAgent",
                              "Person"
                            ],
                            "type": "string",
                            "format": "uri",
                            "example": "http://{lead-owner}.example.com/profile/card#me"
                          },
                          "dateAccepted": {
                            "type": "string",
                            "description": "The date/time the item was accepted by the recipient",
                            "x-range": "DateTime",
                            "example": "2019-11-25T04:23:32.000Z"
                          },
                          "dateRejected": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The date/time the item was rejected by the recipient"
                          },
                          "dateSent": {
                            "description": "the date the lead was sent",
                            "type": "string",
                            "format": "date-time"
                          },
                          "dateReceived": {
                            "type": "string",
                            "description": "The date/time the item was received by it's recipient",
                            "x-range": "DateTime",
                            "example": "2019-11-25T04:23:32.000Z"
                          },
                          "leadSource": {
                            "description": "lead origin, may be a website event or a thing such as a website, zillow, mobile applicaton.",
                            "x-range": [
                              "Action",
                              "RealEstateWebSite",
                              "MobileApplication"
                            ],
                            "type": "array",
                            "items": {
                              "type": "object",
                              "example": {
                                "type": "AskAction",
                                "object": {
                                  "type": "Question",
                                  "text": "Help me I'm trapped inside documentation."
                                }
                              }
                            }
                          }
                        }
                      },
                      "agent": {
                        "description": "the assignor, typically the lead owner",
                        "type": "string",
                        "format": "uri"
                      },
                      "recipient": {
                        "description": "the assignee of the lead.",
                        "type": "string",
                        "format": "uri",
                        "example": "http://andyagent.example.com/profile/card#me"
                      }
                    }
                  }
                }
              },
              "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-message-parsed": true
            },
            {
              "messageId": "lead#update",
              "name": "realestate/lead#update",
              "summary": "a crm lead was updated",
              "headers": {
                "type": "object",
                "properties": {
                  "topic": {
                    "const": "realestate/lead#update",
                    "x-parser-schema-id": "<anonymous-schema-233>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-232>"
              },
              "payload": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "const": "UpdateAction",
                        "x-parser-schema-id": "<anonymous-schema-236>"
                      },
                      "object": {
                        "title": "Lead",
                        "type": "object",
                        "x-range": "Lead",
                        "description": "a sales opportunity (object) offered by a sender to a recipient.",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "Lead"
                            ],
                            "description": "Lead",
                            "x-parser-schema-id": "<anonymous-schema-209>"
                          },
                          "identifier": {
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ],
                            "x-parser-schema-id": "<anonymous-schema-94>"
                          },
                          "object": {
                            "description": "the lead (Contact)",
                            "x-range": [
                              "Contact"
                            ],
                            "type": "object",
                            "example": {
                              "type": "Contact",
                              "name": "Joe Smith",
                              "telephone": "731-620-9877 x6155",
                              "email": "Giuseppe.Lang62@hotmail.com"
                            },
                            "x-parser-schema-id": "<anonymous-schema-210>"
                          },
                          "recipient": {
                            "description": "the lead recipient",
                            "type": "string",
                            "format": "uri",
                            "example": "http://{lead-recipient}.example.com/profile/card#me",
                            "x-parser-schema-id": "<anonymous-schema-211>"
                          },
                          "sender": {
                            "description": "the lead provider",
                            "type": "string",
                            "format": "uri",
                            "example": "http://{lead-sender}.example.com/profile/card#me",
                            "x-parser-schema-id": "<anonymous-schema-212>"
                          },
                          "owner": {
                            "description": "the original owner of the lead",
                            "x-range": [
                              "RealEstateOrganization",
                              "RealEstateAgent",
                              "Person"
                            ],
                            "type": "string",
                            "format": "uri",
                            "example": "http://{lead-owner}.example.com/profile/card#me",
                            "x-parser-schema-id": "<anonymous-schema-213>"
                          },
                          "dateAccepted": {
                            "type": "string",
                            "description": "The date/time the item was accepted by the recipient",
                            "x-range": "DateTime",
                            "example": "2019-11-25T04:23:32.000Z",
                            "x-parser-schema-id": "<anonymous-schema-214>"
                          },
                          "dateRejected": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The date/time the item was rejected by the recipient",
                            "x-parser-schema-id": "<anonymous-schema-215>"
                          },
                          "dateSent": {
                            "description": "the date the lead was sent",
                            "type": "string",
                            "format": "date-time",
                            "x-parser-schema-id": "<anonymous-schema-216>"
                          },
                          "dateReceived": {
                            "type": "string",
                            "description": "The date/time the item was received by it's recipient",
                            "x-range": "DateTime",
                            "example": "2019-11-25T04:23:32.000Z",
                            "x-parser-schema-id": "<anonymous-schema-217>"
                          },
                          "leadSource": {
                            "description": "lead origin, may be a website event or a thing such as a website, zillow, mobile applicaton.",
                            "x-range": [
                              "Action",
                              "RealEstateWebSite",
                              "MobileApplication"
                            ],
                            "type": "array",
                            "items": {
                              "type": "object",
                              "example": {
                                "type": "AskAction",
                                "object": {
                                  "type": "Question",
                                  "text": "Help me I'm trapped inside documentation."
                                }
                              },
                              "x-parser-schema-id": "<anonymous-schema-219>"
                            },
                            "x-parser-schema-id": "<anonymous-schema-218>"
                          }
                        },
                        "x-parser-schema-id": "Lead"
                      },
                      "agent": {
                        "type": "string",
                        "description": "user who effected the change",
                        "format": "uri",
                        "example": "https://{lead-admin}.bhhs.hsaffailites.com/profile/card",
                        "x-parser-schema-id": "<anonymous-schema-237>"
                      }
                    },
                    "x-parser-schema-id": "<anonymous-schema-235>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-234>"
              },
              "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-original-payload": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "const": "UpdateAction"
                      },
                      "object": {
                        "title": "Lead",
                        "type": "object",
                        "x-range": "Lead",
                        "description": "a sales opportunity (object) offered by a sender to a recipient.",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "Lead"
                            ],
                            "description": "Lead"
                          },
                          "identifier": {
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ]
                          },
                          "object": {
                            "description": "the lead (Contact)",
                            "x-range": [
                              "Contact"
                            ],
                            "type": "object",
                            "example": {
                              "type": "Contact",
                              "name": "Joe Smith",
                              "telephone": "731-620-9877 x6155",
                              "email": "Giuseppe.Lang62@hotmail.com"
                            }
                          },
                          "recipient": {
                            "description": "the lead recipient",
                            "type": "string",
                            "format": "uri",
                            "example": "http://{lead-recipient}.example.com/profile/card#me"
                          },
                          "sender": {
                            "description": "the lead provider",
                            "type": "string",
                            "format": "uri",
                            "example": "http://{lead-sender}.example.com/profile/card#me"
                          },
                          "owner": {
                            "description": "the original owner of the lead",
                            "x-range": [
                              "RealEstateOrganization",
                              "RealEstateAgent",
                              "Person"
                            ],
                            "type": "string",
                            "format": "uri",
                            "example": "http://{lead-owner}.example.com/profile/card#me"
                          },
                          "dateAccepted": {
                            "type": "string",
                            "description": "The date/time the item was accepted by the recipient",
                            "x-range": "DateTime",
                            "example": "2019-11-25T04:23:32.000Z"
                          },
                          "dateRejected": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The date/time the item was rejected by the recipient"
                          },
                          "dateSent": {
                            "description": "the date the lead was sent",
                            "type": "string",
                            "format": "date-time"
                          },
                          "dateReceived": {
                            "type": "string",
                            "description": "The date/time the item was received by it's recipient",
                            "x-range": "DateTime",
                            "example": "2019-11-25T04:23:32.000Z"
                          },
                          "leadSource": {
                            "description": "lead origin, may be a website event or a thing such as a website, zillow, mobile applicaton.",
                            "x-range": [
                              "Action",
                              "RealEstateWebSite",
                              "MobileApplication"
                            ],
                            "type": "array",
                            "items": {
                              "type": "object",
                              "example": {
                                "type": "AskAction",
                                "object": {
                                  "type": "Question",
                                  "text": "Help me I'm trapped inside documentation."
                                }
                              }
                            }
                          }
                        }
                      },
                      "agent": {
                        "type": "string",
                        "description": "user who effected the change",
                        "format": "uri",
                        "example": "https://{lead-admin}.bhhs.hsaffailites.com/profile/card"
                      }
                    }
                  }
                }
              },
              "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-message-parsed": true
            },
            {
              "messageId": "lead#reject",
              "name": "realestate/lead#reject",
              "summary": "a crm lead was rejected",
              "headers": {
                "type": "object",
                "properties": {
                  "topic": {
                    "const": "realestate/lead#reject",
                    "x-parser-schema-id": "<anonymous-schema-239>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-238>"
              },
              "payload": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "const": "RejectAction",
                        "x-parser-schema-id": "<anonymous-schema-242>"
                      },
                      "object": {
                        "title": "Lead",
                        "type": "object",
                        "x-range": "Lead",
                        "description": "a sales opportunity (object) offered by a sender to a recipient.",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "Lead"
                            ],
                            "description": "Lead",
                            "x-parser-schema-id": "<anonymous-schema-209>"
                          },
                          "identifier": {
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ],
                            "x-parser-schema-id": "<anonymous-schema-94>"
                          },
                          "object": {
                            "description": "the lead (Contact)",
                            "x-range": [
                              "Contact"
                            ],
                            "type": "object",
                            "example": {
                              "type": "Contact",
                              "name": "Joe Smith",
                              "telephone": "731-620-9877 x6155",
                              "email": "Giuseppe.Lang62@hotmail.com"
                            },
                            "x-parser-schema-id": "<anonymous-schema-210>"
                          },
                          "recipient": {
                            "description": "the lead recipient",
                            "type": "string",
                            "format": "uri",
                            "example": "http://{lead-recipient}.example.com/profile/card#me",
                            "x-parser-schema-id": "<anonymous-schema-211>"
                          },
                          "sender": {
                            "description": "the lead provider",
                            "type": "string",
                            "format": "uri",
                            "example": "http://{lead-sender}.example.com/profile/card#me",
                            "x-parser-schema-id": "<anonymous-schema-212>"
                          },
                          "owner": {
                            "description": "the original owner of the lead",
                            "x-range": [
                              "RealEstateOrganization",
                              "RealEstateAgent",
                              "Person"
                            ],
                            "type": "string",
                            "format": "uri",
                            "example": "http://{lead-owner}.example.com/profile/card#me",
                            "x-parser-schema-id": "<anonymous-schema-213>"
                          },
                          "dateAccepted": {
                            "type": "string",
                            "description": "The date/time the item was accepted by the recipient",
                            "x-range": "DateTime",
                            "example": "2019-11-25T04:23:32.000Z",
                            "x-parser-schema-id": "<anonymous-schema-214>"
                          },
                          "dateRejected": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The date/time the item was rejected by the recipient",
                            "x-parser-schema-id": "<anonymous-schema-215>"
                          },
                          "dateSent": {
                            "description": "the date the lead was sent",
                            "type": "string",
                            "format": "date-time",
                            "x-parser-schema-id": "<anonymous-schema-216>"
                          },
                          "dateReceived": {
                            "type": "string",
                            "description": "The date/time the item was received by it's recipient",
                            "x-range": "DateTime",
                            "example": "2019-11-25T04:23:32.000Z",
                            "x-parser-schema-id": "<anonymous-schema-217>"
                          },
                          "leadSource": {
                            "description": "lead origin, may be a website event or a thing such as a website, zillow, mobile applicaton.",
                            "x-range": [
                              "Action",
                              "RealEstateWebSite",
                              "MobileApplication"
                            ],
                            "type": "array",
                            "items": {
                              "type": "object",
                              "example": {
                                "type": "AskAction",
                                "object": {
                                  "type": "Question",
                                  "text": "Help me I'm trapped inside documentation."
                                }
                              },
                              "x-parser-schema-id": "<anonymous-schema-219>"
                            },
                            "x-parser-schema-id": "<anonymous-schema-218>"
                          }
                        },
                        "x-parser-schema-id": "Lead"
                      },
                      "agent": {
                        "description": "the agent who rejected the lead",
                        "type": "string",
                        "format": "uri",
                        "example": "http://andyagent.example.com/profile/card#me",
                        "x-parser-schema-id": "<anonymous-schema-243>"
                      },
                      "reason": {
                        "description": "the reason the lead was rejected",
                        "type": "string",
                        "example": "duplicate lead",
                        "x-parser-schema-id": "<anonymous-schema-244>"
                      },
                      "comment": {
                        "description": "a comment about the rejection",
                        "type": "string",
                        "example": "this lead was already in the system",
                        "x-parser-schema-id": "<anonymous-schema-245>"
                      }
                    },
                    "x-parser-schema-id": "<anonymous-schema-241>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-240>"
              },
              "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-original-payload": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "const": "RejectAction"
                      },
                      "object": {
                        "title": "Lead",
                        "type": "object",
                        "x-range": "Lead",
                        "description": "a sales opportunity (object) offered by a sender to a recipient.",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "Lead"
                            ],
                            "description": "Lead"
                          },
                          "identifier": {
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ]
                          },
                          "object": {
                            "description": "the lead (Contact)",
                            "x-range": [
                              "Contact"
                            ],
                            "type": "object",
                            "example": {
                              "type": "Contact",
                              "name": "Joe Smith",
                              "telephone": "731-620-9877 x6155",
                              "email": "Giuseppe.Lang62@hotmail.com"
                            }
                          },
                          "recipient": {
                            "description": "the lead recipient",
                            "type": "string",
                            "format": "uri",
                            "example": "http://{lead-recipient}.example.com/profile/card#me"
                          },
                          "sender": {
                            "description": "the lead provider",
                            "type": "string",
                            "format": "uri",
                            "example": "http://{lead-sender}.example.com/profile/card#me"
                          },
                          "owner": {
                            "description": "the original owner of the lead",
                            "x-range": [
                              "RealEstateOrganization",
                              "RealEstateAgent",
                              "Person"
                            ],
                            "type": "string",
                            "format": "uri",
                            "example": "http://{lead-owner}.example.com/profile/card#me"
                          },
                          "dateAccepted": {
                            "type": "string",
                            "description": "The date/time the item was accepted by the recipient",
                            "x-range": "DateTime",
                            "example": "2019-11-25T04:23:32.000Z"
                          },
                          "dateRejected": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The date/time the item was rejected by the recipient"
                          },
                          "dateSent": {
                            "description": "the date the lead was sent",
                            "type": "string",
                            "format": "date-time"
                          },
                          "dateReceived": {
                            "type": "string",
                            "description": "The date/time the item was received by it's recipient",
                            "x-range": "DateTime",
                            "example": "2019-11-25T04:23:32.000Z"
                          },
                          "leadSource": {
                            "description": "lead origin, may be a website event or a thing such as a website, zillow, mobile applicaton.",
                            "x-range": [
                              "Action",
                              "RealEstateWebSite",
                              "MobileApplication"
                            ],
                            "type": "array",
                            "items": {
                              "type": "object",
                              "example": {
                                "type": "AskAction",
                                "object": {
                                  "type": "Question",
                                  "text": "Help me I'm trapped inside documentation."
                                }
                              }
                            }
                          }
                        }
                      },
                      "agent": {
                        "description": "the agent who rejected the lead",
                        "type": "string",
                        "format": "uri",
                        "example": "http://andyagent.example.com/profile/card#me"
                      },
                      "reason": {
                        "description": "the reason the lead was rejected",
                        "type": "string",
                        "example": "duplicate lead"
                      },
                      "comment": {
                        "description": "a comment about the rejection",
                        "type": "string",
                        "example": "this lead was already in the system"
                      }
                    }
                  }
                }
              },
              "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-message-parsed": true
            },
            {
              "messageId": "lead#retract",
              "name": "realestate/lead#retract",
              "summary": "a lead (data.object) is taken back from the previous assignee (data.participant) by the previous sender/owner (data.recipient)",
              "headers": {
                "type": "object",
                "properties": {
                  "topic": {
                    "const": "realestate/lead#retract",
                    "x-parser-schema-id": "<anonymous-schema-247>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-246>"
              },
              "payload": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "description": "the message payload",
                    "x-range": "RetractAction",
                    "properties": {
                      "type": {
                        "const": "RetractAction",
                        "x-parser-schema-id": "<anonymous-schema-250>"
                      },
                      "object": {
                        "title": "Lead",
                        "type": "object",
                        "x-range": "Lead",
                        "description": "a sales opportunity (object) offered by a sender to a recipient.",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "Lead"
                            ],
                            "description": "Lead",
                            "x-parser-schema-id": "<anonymous-schema-209>"
                          },
                          "identifier": {
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ],
                            "x-parser-schema-id": "<anonymous-schema-94>"
                          },
                          "object": {
                            "description": "the lead (Contact)",
                            "x-range": [
                              "Contact"
                            ],
                            "type": "object",
                            "example": {
                              "type": "Contact",
                              "name": "Joe Smith",
                              "telephone": "731-620-9877 x6155",
                              "email": "Giuseppe.Lang62@hotmail.com"
                            },
                            "x-parser-schema-id": "<anonymous-schema-210>"
                          },
                          "recipient": {
                            "description": "the lead recipient",
                            "type": "string",
                            "format": "uri",
                            "example": "http://{lead-recipient}.example.com/profile/card#me",
                            "x-parser-schema-id": "<anonymous-schema-211>"
                          },
                          "sender": {
                            "description": "the lead provider",
                            "type": "string",
                            "format": "uri",
                            "example": "http://{lead-sender}.example.com/profile/card#me",
                            "x-parser-schema-id": "<anonymous-schema-212>"
                          },
                          "owner": {
                            "description": "the original owner of the lead",
                            "x-range": [
                              "RealEstateOrganization",
                              "RealEstateAgent",
                              "Person"
                            ],
                            "type": "string",
                            "format": "uri",
                            "example": "http://{lead-owner}.example.com/profile/card#me",
                            "x-parser-schema-id": "<anonymous-schema-213>"
                          },
                          "dateAccepted": {
                            "type": "string",
                            "description": "The date/time the item was accepted by the recipient",
                            "x-range": "DateTime",
                            "example": "2019-11-25T04:23:32.000Z",
                            "x-parser-schema-id": "<anonymous-schema-214>"
                          },
                          "dateRejected": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The date/time the item was rejected by the recipient",
                            "x-parser-schema-id": "<anonymous-schema-215>"
                          },
                          "dateSent": {
                            "description": "the date the lead was sent",
                            "type": "string",
                            "format": "date-time",
                            "x-parser-schema-id": "<anonymous-schema-216>"
                          },
                          "dateReceived": {
                            "type": "string",
                            "description": "The date/time the item was received by it's recipient",
                            "x-range": "DateTime",
                            "example": "2019-11-25T04:23:32.000Z",
                            "x-parser-schema-id": "<anonymous-schema-217>"
                          },
                          "leadSource": {
                            "description": "lead origin, may be a website event or a thing such as a website, zillow, mobile applicaton.",
                            "x-range": [
                              "Action",
                              "RealEstateWebSite",
                              "MobileApplication"
                            ],
                            "type": "array",
                            "items": {
                              "type": "object",
                              "example": {
                                "type": "AskAction",
                                "object": {
                                  "type": "Question",
                                  "text": "Help me I'm trapped inside documentation."
                                }
                              },
                              "x-parser-schema-id": "<anonymous-schema-219>"
                            },
                            "x-parser-schema-id": "<anonymous-schema-218>"
                          }
                        },
                        "x-parser-schema-id": "Lead"
                      },
                      "agent": {
                        "type": "string",
                        "description": "user who effected the change",
                        "format": "uri",
                        "example": "https://{lead-admin}.bhhs.hsaffailites.com/profile/card",
                        "x-parser-schema-id": "<anonymous-schema-251>"
                      },
                      "participant": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "RealEstateAgent",
                              "RealEstateOffice",
                              "RealEstateOrganization"
                            ],
                            "x-parser-schema-id": "<anonymous-schema-253>"
                          },
                          "id": {
                            "type": "string",
                            "format": "uri",
                            "x-parser-schema-id": "<anonymous-schema-254>"
                          }
                        },
                        "x-parser-schema-id": "<anonymous-schema-252>"
                      },
                      "recipient": {
                        "type": "object",
                        "description": "the lead-owner, to whom the lead is being returned",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "RealEstateAgent",
                              "RealEstateOffice",
                              "RealEstateOrganization"
                            ],
                            "x-parser-schema-id": "<anonymous-schema-256>"
                          },
                          "id": {
                            "type": "string",
                            "format": "uri",
                            "x-parser-schema-id": "<anonymous-schema-257>"
                          }
                        },
                        "x-parser-schema-id": "<anonymous-schema-255>"
                      }
                    },
                    "x-parser-schema-id": "<anonymous-schema-249>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-248>"
              },
              "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-original-payload": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "description": "the message payload",
                    "x-range": "RetractAction",
                    "properties": {
                      "type": {
                        "const": "RetractAction"
                      },
                      "object": {
                        "title": "Lead",
                        "type": "object",
                        "x-range": "Lead",
                        "description": "a sales opportunity (object) offered by a sender to a recipient.",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "Lead"
                            ],
                            "description": "Lead"
                          },
                          "identifier": {
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ]
                          },
                          "object": {
                            "description": "the lead (Contact)",
                            "x-range": [
                              "Contact"
                            ],
                            "type": "object",
                            "example": {
                              "type": "Contact",
                              "name": "Joe Smith",
                              "telephone": "731-620-9877 x6155",
                              "email": "Giuseppe.Lang62@hotmail.com"
                            }
                          },
                          "recipient": {
                            "description": "the lead recipient",
                            "type": "string",
                            "format": "uri",
                            "example": "http://{lead-recipient}.example.com/profile/card#me"
                          },
                          "sender": {
                            "description": "the lead provider",
                            "type": "string",
                            "format": "uri",
                            "example": "http://{lead-sender}.example.com/profile/card#me"
                          },
                          "owner": {
                            "description": "the original owner of the lead",
                            "x-range": [
                              "RealEstateOrganization",
                              "RealEstateAgent",
                              "Person"
                            ],
                            "type": "string",
                            "format": "uri",
                            "example": "http://{lead-owner}.example.com/profile/card#me"
                          },
                          "dateAccepted": {
                            "type": "string",
                            "description": "The date/time the item was accepted by the recipient",
                            "x-range": "DateTime",
                            "example": "2019-11-25T04:23:32.000Z"
                          },
                          "dateRejected": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The date/time the item was rejected by the recipient"
                          },
                          "dateSent": {
                            "description": "the date the lead was sent",
                            "type": "string",
                            "format": "date-time"
                          },
                          "dateReceived": {
                            "type": "string",
                            "description": "The date/time the item was received by it's recipient",
                            "x-range": "DateTime",
                            "example": "2019-11-25T04:23:32.000Z"
                          },
                          "leadSource": {
                            "description": "lead origin, may be a website event or a thing such as a website, zillow, mobile applicaton.",
                            "x-range": [
                              "Action",
                              "RealEstateWebSite",
                              "MobileApplication"
                            ],
                            "type": "array",
                            "items": {
                              "type": "object",
                              "example": {
                                "type": "AskAction",
                                "object": {
                                  "type": "Question",
                                  "text": "Help me I'm trapped inside documentation."
                                }
                              }
                            }
                          }
                        }
                      },
                      "agent": {
                        "type": "string",
                        "description": "user who effected the change",
                        "format": "uri",
                        "example": "https://{lead-admin}.bhhs.hsaffailites.com/profile/card"
                      },
                      "participant": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "RealEstateAgent",
                              "RealEstateOffice",
                              "RealEstateOrganization"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "format": "uri"
                          }
                        }
                      },
                      "recipient": {
                        "type": "object",
                        "description": "the lead-owner, to whom the lead is being returned",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "RealEstateAgent",
                              "RealEstateOffice",
                              "RealEstateOrganization"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "format": "uri"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-message-parsed": true
            }
          ]
        }
      }
    },
    "listing": {
      "description": "A message is published to this topic when a listing is created, updated, or deleted.\nThe message payload is a JSON-LD object with the following properties:\n- `type` - the type of message, one of `CreateAction`, `UpdateAction`, or `DeleteAction`\n- `object` - the listing, as a JSON-LD object\n",
      "subscribe": {
        "message": {
          "oneOf": [
            {
              "messageId": "listing#update",
              "name": "realestate/listing#update",
              "summary": "a PropertyListing is created or updated",
              "headers": {
                "type": "object",
                "properties": {
                  "topic": {
                    "const": "realestate/listing#update",
                    "x-parser-schema-id": "<anonymous-schema-259>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-258>"
              },
              "payload": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "const": "UpdateAction",
                        "x-parser-schema-id": "<anonymous-schema-262>"
                      },
                      "object": {
                        "title": "PropertyListing",
                        "type": "object",
                        "x-range": "PropertyListing",
                        "description": "a real estate property listed for sale",
                        "properties": {
                          "type": {
                            "enum": [
                              "PropertyListing"
                            ],
                            "type": "string",
                            "x-parser-schema-id": "<anonymous-schema-263>"
                          },
                          "addressCountry": {
                            "type": "string",
                            "description": "two-letter ISO 3166-1 alpha-2 country code",
                            "example": "US",
                            "enum": [
                              "CA",
                              "DE",
                              "GR",
                              "IN",
                              "IT",
                              "MX",
                              "PE",
                              "PT",
                              "ES",
                              "AE",
                              "GB",
                              "US"
                            ],
                            "x-parser-schema-id": "<anonymous-schema-264>"
                          },
                          "addressLocality": {
                            "type": "string",
                            "description": "City, Township.",
                            "example": "Gotham City",
                            "maxLength": 50,
                            "x-parser-schema-id": "<anonymous-schema-265>"
                          },
                          "addressRegion": {
                            "type": "string",
                            "description": "State or Province.",
                            "example": "New Jersey",
                            "maxLength": 3,
                            "x-parser-schema-id": "<anonymous-schema-266>"
                          },
                          "buyerAgent": {
                            "description": "the buyer's RealEstateAgent",
                            "example": {
                              "email": "butch.byers@example.com",
                              "identifier": {
                                "agentKey": "xxxx"
                              },
                              "name": "Butch Byers",
                              "type": "RealEstateAgent"
                            },
                            "type": "object",
                            "x-range": "RealEstateAgent",
                            "x-parser-schema-id": "<anonymous-schema-267>"
                          },
                          "buyerOffice": {
                            "description": "the buyer's RealEstateOffice",
                            "example": {
                              "email": "gcr@example.com",
                              "identifier": {
                                "officeKey": "grc1"
                              },
                              "name": "Gotham City Real Estate",
                              "type": "RealEstateOffice"
                            },
                            "type": "object",
                            "x-range": "RealEstateOffice",
                            "x-parser-schema-id": "<anonymous-schema-268>"
                          },
                          "closeDate": {
                            "title": "closeDate",
                            "type": "string",
                            "format": "date-time",
                            "description": "With for-sale listings, the date the purchase agreement was fulfilled. With lease listings, the date the requirements were fulfilled, such as contract and/or deposit.",
                            "x-range": "DateTime",
                            "x-parser-schema-id": "<anonymous-schema-269>"
                          },
                          "image": {
                            "title": "image",
                            "description": "an ImageObject or URI reference to an image on the web.",
                            "type": "array",
                            "x-range": [
                              "ImageObject"
                            ],
                            "items": [
                              {
                                "type": "object",
                                "allOf": [
                                  {
                                    "title": "MediaObject",
                                    "description": "an image, video or document availble for download",
                                    "x-subclass": [
                                      "ImageObject",
                                      "DigitalDocument"
                                    ],
                                    "allOf": [
                                      {
                                        "$id": "http://realestate.yodata.me/schema/Thing",
                                        "type": "object",
                                        "title": "Thing",
                                        "summary": "The root type of all Things.",
                                        "required": [
                                          "type"
                                        ],
                                        "propertyNames": {
                                          "pattern": "^[a-z@$][a-zA-Z0-9-_]+$",
                                          "x-parser-schema-id": "<anonymous-schema-274>"
                                        },
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "pattern": "^[A-Z][a-zA-Z0-9]+$",
                                            "description": "The item type (Linked-Data @type)",
                                            "x-parser-schema-id": "<anonymous-schema-272>"
                                          },
                                          "@id": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "the liked data uri for the Thing",
                                            "x-parser-schema-id": "<anonymous-schema-273>"
                                          }
                                        },
                                        "x-parser-schema-id": "Thing"
                                      },
                                      {
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "MediaObject",
                                              "ImageObject",
                                              "DigitalDocument"
                                            ]
                                          },
                                          "id": {
                                            "description": "the URL to access the item.",
                                            "example": "http://user.example.com/public/logo/fileName.zip",
                                            "type": "string",
                                            "format": "uri"
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "the file name of the object.",
                                            "example": "fileName.zip"
                                          },
                                          "encodingFormat": {
                                            "type": "string",
                                            "description": "MIME type",
                                            "example": "application/zip"
                                          },
                                          "about": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "URI to the subject of the image or logo",
                                            "example": "http://user.example.com/profile/card#me"
                                          },
                                          "url": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "URL of the image content",
                                            "example": "http://user.example.com/public/profile/image.jpg"
                                          }
                                        },
                                        "x-parser-schema-id": "<anonymous-schema-275>"
                                      }
                                    ],
                                    "x-parser-schema-id": "MediaObject"
                                  },
                                  {
                                    "title": "ImageObject",
                                    "x-range": "ImageObject",
                                    "properties": {
                                      "type": {
                                        "enum": [
                                          "ImageObject"
                                        ],
                                        "example": "ImageObject"
                                      },
                                      "id": {
                                        "example": "http://user.example.com/public/logo/image.jpg"
                                      },
                                      "name": {
                                        "example": "image.jpg"
                                      },
                                      "encodingFormat": {
                                        "example": "image/jpeg"
                                      }
                                    },
                                    "x-parser-schema-id": "<anonymous-schema-276>"
                                  }
                                ],
                                "x-parser-schema-id": "<anonymous-schema-271>"
                              }
                            ],
                            "x-parser-schema-id": "<anonymous-schema-270>"
                          },
                          "internetAddressDisplayYN": {
                            "enum": [
                              "Y",
                              "N"
                            ],
                            "type": "string",
                            "x-parser-schema-id": "<anonymous-schema-277>"
                          },
                          "latitude": {
                            "type": "number",
                            "description": "The latitude of a location.",
                            "x-title": "latitude",
                            "example": 40.75,
                            "x-parser-schema-id": "<anonymous-schema-278>"
                          },
                          "listingAgent": {
                            "type": "object",
                            "description": "the agent/broker representing the seller in a real estate transaction",
                            "x-range": [
                              "RealEstateAgent",
                              "RealEstateOrganization"
                            ],
                            "example": {
                              "type": "RealEstateAgent",
                              "name": "Lori Listagent",
                              "telephone": "1-252-574-0160",
                              "email": "lorilistagent@example.com"
                            },
                            "x-parser-schema-id": "<anonymous-schema-279>"
                          },
                          "listingContractDate": {
                            "description": "The effective date of the agreement between the seller and the seller's broker.",
                            "format": "date-time",
                            "type": "string",
                            "x-parser-schema-id": "<anonymous-schema-280>"
                          },
                          "listingId": {
                            "description": "the local identifier for the listing",
                            "example": "GOTHAM-MLS+12345",
                            "type": "string",
                            "x-parser-schema-id": "<anonymous-schema-281>"
                          },
                          "listingOffice": {
                            "description": "the listing office",
                            "example": {
                              "name": "Gotham City Real Estate",
                              "type": "RealEstateOffice"
                            },
                            "type": "object",
                            "x-range": "RealEstateOrganization",
                            "x-parser-schema-id": "<anonymous-schema-282>"
                          },
                          "listingOriginatingSystem": {
                            "description": "The place where the item is originally input by the user.",
                            "example": {
                              "identifier": {
                                "bhhsmlsid": "xxxx",
                                "resoouid": "not-yet-available"
                              },
                              "name": "MLSListings",
                              "type": "MultipleListingService"
                            },
                            "type": "object",
                            "x-range": "MultipleListingService",
                            "x-subPropertyOf": "instrument",
                            "x-parser-schema-id": "<anonymous-schema-283>"
                          },
                          "listingPrice": {
                            "type": "object",
                            "x-range": "PriceSpecification",
                            "example": {
                              "type": "PriceSpecification",
                              "price": 75000,
                              "priceCurrency": "USD"
                            },
                            "x-parser-schema-id": "<anonymous-schema-284>"
                          },
                          "listingStatus": {
                            "enum": [
                              "Active",
                              "Pending",
                              "Sold",
                              "Canceled",
                              "Prelisted",
                              "OffMarket",
                              "Private"
                            ],
                            "type": "string",
                            "x-parser-schema-id": "<anonymous-schema-285>"
                          },
                          "livingArea": {
                            "description": "property indoor space",
                            "example": {
                              "type": "QuantitativeValue",
                              "unitCode": "SqFt",
                              "unitText": "Square Feet",
                              "value": 1500
                            },
                            "type": "object",
                            "x-range": "QuantitativeValue",
                            "x-parser-schema-id": "<anonymous-schema-286>"
                          },
                          "longitude": {
                            "type": "number",
                            "description": "The longitude of a location.",
                            "x-title": "longitude",
                            "example": 73.98,
                            "x-parser-schema-id": "<anonymous-schema-287>"
                          },
                          "lotSize": {
                            "description": "outdoor space minValue, maxValue",
                            "example": {
                              "type": "QuantitativeValue",
                              "unitCode": "AC",
                              "unitText": "Acres",
                              "value": 0.5
                            },
                            "type": "object",
                            "x-range": "QuantitativeValue",
                            "x-parser-schema-id": "<anonymous-schema-288>"
                          },
                          "numberOfBathrooms": {
                            "description": "the number of bathrooms",
                            "example": "2",
                            "type": "string",
                            "x-parser-schema-id": "<anonymous-schema-289>"
                          },
                          "numberOfBedrooms": {
                            "description": "the number of bedrooms",
                            "example": "3",
                            "type": "string",
                            "x-parser-schema-id": "<anonymous-schema-290>"
                          },
                          "numberOfRooms": {
                            "description": "the total number of rooms in the building",
                            "example": "7",
                            "type": "string",
                            "x-parser-schema-id": "<anonymous-schema-291>"
                          },
                          "originatingSystemKey": {
                            "description": "the listing identifier from the original MLS, aka MLSID.",
                            "example": 12345,
                            "type": "string",
                            "x-parser-schema-id": "<anonymous-schema-292>"
                          },
                          "originatingSystemName": {
                            "description": "the name of the MLS where the listing was originally input",
                            "example": "GOTHAM-MLS",
                            "type": "string",
                            "x-parser-schema-id": "<anonymous-schema-293>"
                          },
                          "postalCode": {
                            "type": "string",
                            "description": "Zip/Post Code",
                            "example": "10010",
                            "maxLength": 12,
                            "x-parser-schema-id": "<anonymous-schema-294>"
                          },
                          "propertySubType": {
                            "title": "propertySubType",
                            "type": "string",
                            "x-range": "PropertySubType",
                            "description": "RESO property sub-type (see range for allowed values)",
                            "enum": [
                              "ApartmentPropertyType",
                              "BoatSlipPropertyType",
                              "CabinPropertyType",
                              "CondominiumPropertyType",
                              "DeededParkingPropertyType",
                              "DuplexPropertyType",
                              "FarmPropertyType",
                              "ManufacturedHomePropertyType",
                              "ManufacturedOnLandPropertyType",
                              "MobileHomePropertyType",
                              "OwnYourOwnPropertyType",
                              "QuadruplexPropertyType",
                              "RanchPropertyType",
                              "SingleFamilyPropertyType",
                              "StockCooperativePropertyType",
                              "TimesharePropertyType",
                              "TownhousePropertyType",
                              "TriplexPropertyType",
                              "AgriculturePropertyType",
                              "BusinessPropertyType",
                              "HotelMotelPropertyType",
                              "IndustrialPropertyType",
                              "MixedUsePropertyType",
                              "MultiFamilyPropertyType",
                              "OfficePropertyType",
                              "RetailPropertyType",
                              "UnimprovedLandPropertyType",
                              "WarehousePropertyType"
                            ],
                            "x-parser-schema-id": "<anonymous-schema-295>"
                          },
                          "propertyType": {
                            "type": "string",
                            "description": "RESO property type (see range for allowed values)",
                            "x-range": "PropertyType",
                            "minLength": 4,
                            "maxLength": 4,
                            "enum": [
                              "RESI",
                              "RLSE",
                              "RINC",
                              "LAND",
                              "MOBI",
                              "FARM",
                              "COMS",
                              "COML",
                              "BUSO"
                            ],
                            "x-parser-schema-id": "<anonymous-schema-296>"
                          },
                          "purchaseContractDate": {
                            "description": "With for-sale listings, the date an offer was accepted and the listing was no longer on market. With lease listings this may represent a meeting of the minds to lease, but some contractual requirements are yet to be fulfilled, such as contract signing or receipt of the deposit.",
                            "format": "date-time",
                            "type": "string",
                            "x-parser-schema-id": "<anonymous-schema-297>"
                          },
                          "stories": {
                            "type": "number",
                            "description": "he number of floors in the property",
                            "example": 2,
                            "x-parser-schema-id": "<anonymous-schema-298>"
                          },
                          "streetAddress": {
                            "type": "string",
                            "description": "the street address",
                            "example": "1007 Mountain Gate Rd",
                            "maxLength": 75,
                            "x-parser-schema-id": "<anonymous-schema-299>"
                          },
                          "universalPropertyId": {
                            "type": "string",
                            "title": "universalPropertyId",
                            "description": "The Universal Property Identifier is a unique identifier for all real property in the US and Canada.  It is based on country and local identification methods and is limited to real property.  For cases such as shares of real property, units, and other more granular cases, please utilize the UniversalPropertySubId.",
                            "example": "US-04015-N-R-11022331-N",
                            "x-parser-schema-id": "<anonymous-schema-300>"
                          },
                          "url": {
                            "title": "url",
                            "type": "string",
                            "format": "uri",
                            "description": "URL of the item.",
                            "example": "https://www.example.com/homedetails/1007-Mountain-Gate-Rd-Gotham-City-Gotham/10007",
                            "x-parser-schema-id": "<anonymous-schema-301>"
                          },
                          "yearBuilt": {
                            "type": "number",
                            "description": "the year the structure was created",
                            "example": 1988,
                            "x-parser-schema-id": "<anonymous-schema-302>"
                          }
                        },
                        "x-parser-schema-id": "PropertyListing"
                      }
                    },
                    "x-parser-schema-id": "<anonymous-schema-261>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-260>"
              },
              "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-original-payload": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "const": "UpdateAction"
                      },
                      "object": {
                        "title": "PropertyListing",
                        "type": "object",
                        "x-range": "PropertyListing",
                        "description": "a real estate property listed for sale",
                        "properties": {
                          "type": {
                            "enum": [
                              "PropertyListing"
                            ],
                            "type": "string"
                          },
                          "addressCountry": {
                            "type": "string",
                            "description": "two-letter ISO 3166-1 alpha-2 country code",
                            "example": "US",
                            "enum": [
                              "CA",
                              "DE",
                              "GR",
                              "IN",
                              "IT",
                              "MX",
                              "PE",
                              "PT",
                              "ES",
                              "AE",
                              "GB",
                              "US"
                            ]
                          },
                          "addressLocality": {
                            "type": "string",
                            "description": "City, Township.",
                            "example": "Gotham City",
                            "maxLength": 50
                          },
                          "addressRegion": {
                            "type": "string",
                            "description": "State or Province.",
                            "example": "New Jersey",
                            "maxLength": 3
                          },
                          "buyerAgent": {
                            "description": "the buyer's RealEstateAgent",
                            "example": {
                              "email": "butch.byers@example.com",
                              "identifier": {
                                "agentKey": "xxxx"
                              },
                              "name": "Butch Byers",
                              "type": "RealEstateAgent"
                            },
                            "type": "object",
                            "x-range": "RealEstateAgent"
                          },
                          "buyerOffice": {
                            "description": "the buyer's RealEstateOffice",
                            "example": {
                              "email": "gcr@example.com",
                              "identifier": {
                                "officeKey": "grc1"
                              },
                              "name": "Gotham City Real Estate",
                              "type": "RealEstateOffice"
                            },
                            "type": "object",
                            "x-range": "RealEstateOffice"
                          },
                          "closeDate": {
                            "title": "closeDate",
                            "type": "string",
                            "format": "date-time",
                            "description": "With for-sale listings, the date the purchase agreement was fulfilled. With lease listings, the date the requirements were fulfilled, such as contract and/or deposit.",
                            "x-range": "DateTime"
                          },
                          "image": {
                            "title": "image",
                            "description": "an ImageObject or URI reference to an image on the web.",
                            "type": "array",
                            "x-range": [
                              "ImageObject"
                            ],
                            "items": [
                              {
                                "type": "object",
                                "allOf": [
                                  {
                                    "title": "MediaObject",
                                    "description": "an image, video or document availble for download",
                                    "x-subclass": [
                                      "ImageObject",
                                      "DigitalDocument"
                                    ],
                                    "allOf": [
                                      {
                                        "$id": "http://realestate.yodata.me/schema/Thing",
                                        "type": "object",
                                        "title": "Thing",
                                        "summary": "The root type of all Things.",
                                        "required": [
                                          "type"
                                        ],
                                        "propertyNames": {
                                          "pattern": "^[a-z@$][a-zA-Z0-9-_]+$"
                                        },
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "pattern": "^[A-Z][a-zA-Z0-9]+$",
                                            "description": "The item type (Linked-Data @type)"
                                          },
                                          "@id": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "the liked data uri for the Thing"
                                          }
                                        }
                                      },
                                      {
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "MediaObject",
                                              "ImageObject",
                                              "DigitalDocument"
                                            ]
                                          },
                                          "id": {
                                            "description": "the URL to access the item.",
                                            "example": "http://user.example.com/public/logo/fileName.zip",
                                            "type": "string",
                                            "format": "uri"
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "the file name of the object.",
                                            "example": "fileName.zip"
                                          },
                                          "encodingFormat": {
                                            "type": "string",
                                            "description": "MIME type",
                                            "example": "application/zip"
                                          },
                                          "about": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "URI to the subject of the image or logo",
                                            "example": "http://user.example.com/profile/card#me"
                                          },
                                          "url": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "URL of the image content",
                                            "example": "http://user.example.com/public/profile/image.jpg"
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "title": "ImageObject",
                                    "x-range": "ImageObject",
                                    "properties": {
                                      "type": {
                                        "enum": [
                                          "ImageObject"
                                        ],
                                        "example": "ImageObject"
                                      },
                                      "id": {
                                        "example": "http://user.example.com/public/logo/image.jpg"
                                      },
                                      "name": {
                                        "example": "image.jpg"
                                      },
                                      "encodingFormat": {
                                        "example": "image/jpeg"
                                      }
                                    }
                                  }
                                ]
                              }
                            ]
                          },
                          "internetAddressDisplayYN": {
                            "enum": [
                              "Y",
                              "N"
                            ],
                            "type": "string"
                          },
                          "latitude": {
                            "type": "number",
                            "description": "The latitude of a location.",
                            "x-title": "latitude",
                            "example": 40.75
                          },
                          "listingAgent": {
                            "type": "object",
                            "description": "the agent/broker representing the seller in a real estate transaction",
                            "x-range": [
                              "RealEstateAgent",
                              "RealEstateOrganization"
                            ],
                            "example": {
                              "type": "RealEstateAgent",
                              "name": "Lori Listagent",
                              "telephone": "1-252-574-0160",
                              "email": "lorilistagent@example.com"
                            }
                          },
                          "listingContractDate": {
                            "description": "The effective date of the agreement between the seller and the seller's broker.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "listingId": {
                            "description": "the local identifier for the listing",
                            "example": "GOTHAM-MLS+12345",
                            "type": "string"
                          },
                          "listingOffice": {
                            "description": "the listing office",
                            "example": {
                              "name": "Gotham City Real Estate",
                              "type": "RealEstateOffice"
                            },
                            "type": "object",
                            "x-range": "RealEstateOrganization"
                          },
                          "listingOriginatingSystem": {
                            "description": "The place where the item is originally input by the user.",
                            "example": {
                              "identifier": {
                                "bhhsmlsid": "xxxx",
                                "resoouid": "not-yet-available"
                              },
                              "name": "MLSListings",
                              "type": "MultipleListingService"
                            },
                            "type": "object",
                            "x-range": "MultipleListingService",
                            "x-subPropertyOf": "instrument"
                          },
                          "listingPrice": {
                            "type": "object",
                            "x-range": "PriceSpecification",
                            "example": {
                              "type": "PriceSpecification",
                              "price": 75000,
                              "priceCurrency": "USD"
                            }
                          },
                          "listingStatus": {
                            "enum": [
                              "Active",
                              "Pending",
                              "Sold",
                              "Canceled",
                              "Prelisted",
                              "OffMarket",
                              "Private"
                            ],
                            "type": "string"
                          },
                          "livingArea": {
                            "description": "property indoor space",
                            "example": {
                              "type": "QuantitativeValue",
                              "unitCode": "SqFt",
                              "unitText": "Square Feet",
                              "value": 1500
                            },
                            "type": "object",
                            "x-range": "QuantitativeValue"
                          },
                          "longitude": {
                            "type": "number",
                            "description": "The longitude of a location.",
                            "x-title": "longitude",
                            "example": 73.98
                          },
                          "lotSize": {
                            "description": "outdoor space minValue, maxValue",
                            "example": {
                              "type": "QuantitativeValue",
                              "unitCode": "AC",
                              "unitText": "Acres",
                              "value": 0.5
                            },
                            "type": "object",
                            "x-range": "QuantitativeValue"
                          },
                          "numberOfBathrooms": {
                            "description": "the number of bathrooms",
                            "example": "2",
                            "type": "string"
                          },
                          "numberOfBedrooms": {
                            "description": "the number of bedrooms",
                            "example": "3",
                            "type": "string"
                          },
                          "numberOfRooms": {
                            "description": "the total number of rooms in the building",
                            "example": "7",
                            "type": "string"
                          },
                          "originatingSystemKey": {
                            "description": "the listing identifier from the original MLS, aka MLSID.",
                            "example": 12345,
                            "type": "string"
                          },
                          "originatingSystemName": {
                            "description": "the name of the MLS where the listing was originally input",
                            "example": "GOTHAM-MLS",
                            "type": "string"
                          },
                          "postalCode": {
                            "type": "string",
                            "description": "Zip/Post Code",
                            "example": "10010",
                            "maxLength": 12
                          },
                          "propertySubType": {
                            "title": "propertySubType",
                            "type": "string",
                            "x-range": "PropertySubType",
                            "description": "RESO property sub-type (see range for allowed values)",
                            "enum": [
                              "ApartmentPropertyType",
                              "BoatSlipPropertyType",
                              "CabinPropertyType",
                              "CondominiumPropertyType",
                              "DeededParkingPropertyType",
                              "DuplexPropertyType",
                              "FarmPropertyType",
                              "ManufacturedHomePropertyType",
                              "ManufacturedOnLandPropertyType",
                              "MobileHomePropertyType",
                              "OwnYourOwnPropertyType",
                              "QuadruplexPropertyType",
                              "RanchPropertyType",
                              "SingleFamilyPropertyType",
                              "StockCooperativePropertyType",
                              "TimesharePropertyType",
                              "TownhousePropertyType",
                              "TriplexPropertyType",
                              "AgriculturePropertyType",
                              "BusinessPropertyType",
                              "HotelMotelPropertyType",
                              "IndustrialPropertyType",
                              "MixedUsePropertyType",
                              "MultiFamilyPropertyType",
                              "OfficePropertyType",
                              "RetailPropertyType",
                              "UnimprovedLandPropertyType",
                              "WarehousePropertyType"
                            ]
                          },
                          "propertyType": {
                            "type": "string",
                            "description": "RESO property type (see range for allowed values)",
                            "x-range": "PropertyType",
                            "minLength": 4,
                            "maxLength": 4,
                            "enum": [
                              "RESI",
                              "RLSE",
                              "RINC",
                              "LAND",
                              "MOBI",
                              "FARM",
                              "COMS",
                              "COML",
                              "BUSO"
                            ]
                          },
                          "purchaseContractDate": {
                            "description": "With for-sale listings, the date an offer was accepted and the listing was no longer on market. With lease listings this may represent a meeting of the minds to lease, but some contractual requirements are yet to be fulfilled, such as contract signing or receipt of the deposit.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "stories": {
                            "type": "number",
                            "description": "he number of floors in the property",
                            "example": 2
                          },
                          "streetAddress": {
                            "type": "string",
                            "description": "the street address",
                            "example": "1007 Mountain Gate Rd",
                            "maxLength": 75
                          },
                          "universalPropertyId": {
                            "type": "string",
                            "title": "universalPropertyId",
                            "description": "The Universal Property Identifier is a unique identifier for all real property in the US and Canada.  It is based on country and local identification methods and is limited to real property.  For cases such as shares of real property, units, and other more granular cases, please utilize the UniversalPropertySubId.",
                            "example": "US-04015-N-R-11022331-N"
                          },
                          "url": {
                            "title": "url",
                            "type": "string",
                            "format": "uri",
                            "description": "URL of the item.",
                            "example": "https://www.example.com/homedetails/1007-Mountain-Gate-Rd-Gotham-City-Gotham/10007"
                          },
                          "yearBuilt": {
                            "type": "number",
                            "description": "the year the structure was created",
                            "example": 1988
                          }
                        }
                      }
                    }
                  }
                }
              },
              "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-message-parsed": true
            },
            {
              "messageId": "listing#delete",
              "name": "realestate/listing#delete",
              "summary": "a PropertyListing is deleted",
              "headers": {
                "type": "object",
                "properties": {
                  "topic": {
                    "const": "realestate/listing#delete",
                    "x-parser-schema-id": "<anonymous-schema-304>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-303>"
              },
              "payload": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "const": "DeleteAction",
                        "x-parser-schema-id": "<anonymous-schema-307>"
                      },
                      "object": {
                        "title": "PropertyListing",
                        "type": "object",
                        "x-range": "PropertyListing",
                        "description": "a real estate property listed for sale",
                        "properties": {
                          "type": {
                            "enum": [
                              "PropertyListing"
                            ],
                            "type": "string",
                            "x-parser-schema-id": "<anonymous-schema-263>"
                          },
                          "addressCountry": {
                            "type": "string",
                            "description": "two-letter ISO 3166-1 alpha-2 country code",
                            "example": "US",
                            "enum": [
                              "CA",
                              "DE",
                              "GR",
                              "IN",
                              "IT",
                              "MX",
                              "PE",
                              "PT",
                              "ES",
                              "AE",
                              "GB",
                              "US"
                            ],
                            "x-parser-schema-id": "<anonymous-schema-264>"
                          },
                          "addressLocality": {
                            "type": "string",
                            "description": "City, Township.",
                            "example": "Gotham City",
                            "maxLength": 50,
                            "x-parser-schema-id": "<anonymous-schema-265>"
                          },
                          "addressRegion": {
                            "type": "string",
                            "description": "State or Province.",
                            "example": "New Jersey",
                            "maxLength": 3,
                            "x-parser-schema-id": "<anonymous-schema-266>"
                          },
                          "buyerAgent": {
                            "description": "the buyer's RealEstateAgent",
                            "example": {
                              "email": "butch.byers@example.com",
                              "identifier": {
                                "agentKey": "xxxx"
                              },
                              "name": "Butch Byers",
                              "type": "RealEstateAgent"
                            },
                            "type": "object",
                            "x-range": "RealEstateAgent",
                            "x-parser-schema-id": "<anonymous-schema-267>"
                          },
                          "buyerOffice": {
                            "description": "the buyer's RealEstateOffice",
                            "example": {
                              "email": "gcr@example.com",
                              "identifier": {
                                "officeKey": "grc1"
                              },
                              "name": "Gotham City Real Estate",
                              "type": "RealEstateOffice"
                            },
                            "type": "object",
                            "x-range": "RealEstateOffice",
                            "x-parser-schema-id": "<anonymous-schema-268>"
                          },
                          "closeDate": {
                            "title": "closeDate",
                            "type": "string",
                            "format": "date-time",
                            "description": "With for-sale listings, the date the purchase agreement was fulfilled. With lease listings, the date the requirements were fulfilled, such as contract and/or deposit.",
                            "x-range": "DateTime",
                            "x-parser-schema-id": "<anonymous-schema-269>"
                          },
                          "image": {
                            "title": "image",
                            "description": "an ImageObject or URI reference to an image on the web.",
                            "type": "array",
                            "x-range": [
                              "ImageObject"
                            ],
                            "items": [
                              {
                                "type": "object",
                                "allOf": [
                                  {
                                    "title": "MediaObject",
                                    "description": "an image, video or document availble for download",
                                    "x-subclass": [
                                      "ImageObject",
                                      "DigitalDocument"
                                    ],
                                    "allOf": [
                                      {
                                        "$id": "http://realestate.yodata.me/schema/Thing",
                                        "type": "object",
                                        "title": "Thing",
                                        "summary": "The root type of all Things.",
                                        "required": [
                                          "type"
                                        ],
                                        "propertyNames": {
                                          "pattern": "^[a-z@$][a-zA-Z0-9-_]+$",
                                          "x-parser-schema-id": "<anonymous-schema-274>"
                                        },
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "pattern": "^[A-Z][a-zA-Z0-9]+$",
                                            "description": "The item type (Linked-Data @type)",
                                            "x-parser-schema-id": "<anonymous-schema-272>"
                                          },
                                          "@id": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "the liked data uri for the Thing",
                                            "x-parser-schema-id": "<anonymous-schema-273>"
                                          }
                                        },
                                        "x-parser-schema-id": "Thing"
                                      },
                                      {
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "MediaObject",
                                              "ImageObject",
                                              "DigitalDocument"
                                            ]
                                          },
                                          "id": {
                                            "description": "the URL to access the item.",
                                            "example": "http://user.example.com/public/logo/fileName.zip",
                                            "type": "string",
                                            "format": "uri"
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "the file name of the object.",
                                            "example": "fileName.zip"
                                          },
                                          "encodingFormat": {
                                            "type": "string",
                                            "description": "MIME type",
                                            "example": "application/zip"
                                          },
                                          "about": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "URI to the subject of the image or logo",
                                            "example": "http://user.example.com/profile/card#me"
                                          },
                                          "url": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "URL of the image content",
                                            "example": "http://user.example.com/public/profile/image.jpg"
                                          }
                                        },
                                        "x-parser-schema-id": "<anonymous-schema-275>"
                                      }
                                    ],
                                    "x-parser-schema-id": "MediaObject"
                                  },
                                  {
                                    "title": "ImageObject",
                                    "x-range": "ImageObject",
                                    "properties": {
                                      "type": {
                                        "enum": [
                                          "ImageObject"
                                        ],
                                        "example": "ImageObject"
                                      },
                                      "id": {
                                        "example": "http://user.example.com/public/logo/image.jpg"
                                      },
                                      "name": {
                                        "example": "image.jpg"
                                      },
                                      "encodingFormat": {
                                        "example": "image/jpeg"
                                      }
                                    },
                                    "x-parser-schema-id": "<anonymous-schema-276>"
                                  }
                                ],
                                "x-parser-schema-id": "<anonymous-schema-271>"
                              }
                            ],
                            "x-parser-schema-id": "<anonymous-schema-270>"
                          },
                          "internetAddressDisplayYN": {
                            "enum": [
                              "Y",
                              "N"
                            ],
                            "type": "string",
                            "x-parser-schema-id": "<anonymous-schema-277>"
                          },
                          "latitude": {
                            "type": "number",
                            "description": "The latitude of a location.",
                            "x-title": "latitude",
                            "example": 40.75,
                            "x-parser-schema-id": "<anonymous-schema-278>"
                          },
                          "listingAgent": {
                            "type": "object",
                            "description": "the agent/broker representing the seller in a real estate transaction",
                            "x-range": [
                              "RealEstateAgent",
                              "RealEstateOrganization"
                            ],
                            "example": {
                              "type": "RealEstateAgent",
                              "name": "Lori Listagent",
                              "telephone": "1-252-574-0160",
                              "email": "lorilistagent@example.com"
                            },
                            "x-parser-schema-id": "<anonymous-schema-279>"
                          },
                          "listingContractDate": {
                            "description": "The effective date of the agreement between the seller and the seller's broker.",
                            "format": "date-time",
                            "type": "string",
                            "x-parser-schema-id": "<anonymous-schema-280>"
                          },
                          "listingId": {
                            "description": "the local identifier for the listing",
                            "example": "GOTHAM-MLS+12345",
                            "type": "string",
                            "x-parser-schema-id": "<anonymous-schema-281>"
                          },
                          "listingOffice": {
                            "description": "the listing office",
                            "example": {
                              "name": "Gotham City Real Estate",
                              "type": "RealEstateOffice"
                            },
                            "type": "object",
                            "x-range": "RealEstateOrganization",
                            "x-parser-schema-id": "<anonymous-schema-282>"
                          },
                          "listingOriginatingSystem": {
                            "description": "The place where the item is originally input by the user.",
                            "example": {
                              "identifier": {
                                "bhhsmlsid": "xxxx",
                                "resoouid": "not-yet-available"
                              },
                              "name": "MLSListings",
                              "type": "MultipleListingService"
                            },
                            "type": "object",
                            "x-range": "MultipleListingService",
                            "x-subPropertyOf": "instrument",
                            "x-parser-schema-id": "<anonymous-schema-283>"
                          },
                          "listingPrice": {
                            "type": "object",
                            "x-range": "PriceSpecification",
                            "example": {
                              "type": "PriceSpecification",
                              "price": 75000,
                              "priceCurrency": "USD"
                            },
                            "x-parser-schema-id": "<anonymous-schema-284>"
                          },
                          "listingStatus": {
                            "enum": [
                              "Active",
                              "Pending",
                              "Sold",
                              "Canceled",
                              "Prelisted",
                              "OffMarket",
                              "Private"
                            ],
                            "type": "string",
                            "x-parser-schema-id": "<anonymous-schema-285>"
                          },
                          "livingArea": {
                            "description": "property indoor space",
                            "example": {
                              "type": "QuantitativeValue",
                              "unitCode": "SqFt",
                              "unitText": "Square Feet",
                              "value": 1500
                            },
                            "type": "object",
                            "x-range": "QuantitativeValue",
                            "x-parser-schema-id": "<anonymous-schema-286>"
                          },
                          "longitude": {
                            "type": "number",
                            "description": "The longitude of a location.",
                            "x-title": "longitude",
                            "example": 73.98,
                            "x-parser-schema-id": "<anonymous-schema-287>"
                          },
                          "lotSize": {
                            "description": "outdoor space minValue, maxValue",
                            "example": {
                              "type": "QuantitativeValue",
                              "unitCode": "AC",
                              "unitText": "Acres",
                              "value": 0.5
                            },
                            "type": "object",
                            "x-range": "QuantitativeValue",
                            "x-parser-schema-id": "<anonymous-schema-288>"
                          },
                          "numberOfBathrooms": {
                            "description": "the number of bathrooms",
                            "example": "2",
                            "type": "string",
                            "x-parser-schema-id": "<anonymous-schema-289>"
                          },
                          "numberOfBedrooms": {
                            "description": "the number of bedrooms",
                            "example": "3",
                            "type": "string",
                            "x-parser-schema-id": "<anonymous-schema-290>"
                          },
                          "numberOfRooms": {
                            "description": "the total number of rooms in the building",
                            "example": "7",
                            "type": "string",
                            "x-parser-schema-id": "<anonymous-schema-291>"
                          },
                          "originatingSystemKey": {
                            "description": "the listing identifier from the original MLS, aka MLSID.",
                            "example": 12345,
                            "type": "string",
                            "x-parser-schema-id": "<anonymous-schema-292>"
                          },
                          "originatingSystemName": {
                            "description": "the name of the MLS where the listing was originally input",
                            "example": "GOTHAM-MLS",
                            "type": "string",
                            "x-parser-schema-id": "<anonymous-schema-293>"
                          },
                          "postalCode": {
                            "type": "string",
                            "description": "Zip/Post Code",
                            "example": "10010",
                            "maxLength": 12,
                            "x-parser-schema-id": "<anonymous-schema-294>"
                          },
                          "propertySubType": {
                            "title": "propertySubType",
                            "type": "string",
                            "x-range": "PropertySubType",
                            "description": "RESO property sub-type (see range for allowed values)",
                            "enum": [
                              "ApartmentPropertyType",
                              "BoatSlipPropertyType",
                              "CabinPropertyType",
                              "CondominiumPropertyType",
                              "DeededParkingPropertyType",
                              "DuplexPropertyType",
                              "FarmPropertyType",
                              "ManufacturedHomePropertyType",
                              "ManufacturedOnLandPropertyType",
                              "MobileHomePropertyType",
                              "OwnYourOwnPropertyType",
                              "QuadruplexPropertyType",
                              "RanchPropertyType",
                              "SingleFamilyPropertyType",
                              "StockCooperativePropertyType",
                              "TimesharePropertyType",
                              "TownhousePropertyType",
                              "TriplexPropertyType",
                              "AgriculturePropertyType",
                              "BusinessPropertyType",
                              "HotelMotelPropertyType",
                              "IndustrialPropertyType",
                              "MixedUsePropertyType",
                              "MultiFamilyPropertyType",
                              "OfficePropertyType",
                              "RetailPropertyType",
                              "UnimprovedLandPropertyType",
                              "WarehousePropertyType"
                            ],
                            "x-parser-schema-id": "<anonymous-schema-295>"
                          },
                          "propertyType": {
                            "type": "string",
                            "description": "RESO property type (see range for allowed values)",
                            "x-range": "PropertyType",
                            "minLength": 4,
                            "maxLength": 4,
                            "enum": [
                              "RESI",
                              "RLSE",
                              "RINC",
                              "LAND",
                              "MOBI",
                              "FARM",
                              "COMS",
                              "COML",
                              "BUSO"
                            ],
                            "x-parser-schema-id": "<anonymous-schema-296>"
                          },
                          "purchaseContractDate": {
                            "description": "With for-sale listings, the date an offer was accepted and the listing was no longer on market. With lease listings this may represent a meeting of the minds to lease, but some contractual requirements are yet to be fulfilled, such as contract signing or receipt of the deposit.",
                            "format": "date-time",
                            "type": "string",
                            "x-parser-schema-id": "<anonymous-schema-297>"
                          },
                          "stories": {
                            "type": "number",
                            "description": "he number of floors in the property",
                            "example": 2,
                            "x-parser-schema-id": "<anonymous-schema-298>"
                          },
                          "streetAddress": {
                            "type": "string",
                            "description": "the street address",
                            "example": "1007 Mountain Gate Rd",
                            "maxLength": 75,
                            "x-parser-schema-id": "<anonymous-schema-299>"
                          },
                          "universalPropertyId": {
                            "type": "string",
                            "title": "universalPropertyId",
                            "description": "The Universal Property Identifier is a unique identifier for all real property in the US and Canada.  It is based on country and local identification methods and is limited to real property.  For cases such as shares of real property, units, and other more granular cases, please utilize the UniversalPropertySubId.",
                            "example": "US-04015-N-R-11022331-N",
                            "x-parser-schema-id": "<anonymous-schema-300>"
                          },
                          "url": {
                            "title": "url",
                            "type": "string",
                            "format": "uri",
                            "description": "URL of the item.",
                            "example": "https://www.example.com/homedetails/1007-Mountain-Gate-Rd-Gotham-City-Gotham/10007",
                            "x-parser-schema-id": "<anonymous-schema-301>"
                          },
                          "yearBuilt": {
                            "type": "number",
                            "description": "the year the structure was created",
                            "example": 1988,
                            "x-parser-schema-id": "<anonymous-schema-302>"
                          }
                        },
                        "example": {
                          "type": "PropertyListing",
                          "url": "https://{lead-admin}.bhhs.hsaffailites.com/listing/12345"
                        },
                        "x-parser-schema-id": "<anonymous-schema-308>"
                      }
                    },
                    "x-parser-schema-id": "<anonymous-schema-306>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-305>"
              },
              "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-original-payload": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "const": "DeleteAction"
                      },
                      "object": {
                        "title": "PropertyListing",
                        "type": "object",
                        "x-range": "PropertyListing",
                        "description": "a real estate property listed for sale",
                        "properties": {
                          "type": {
                            "enum": [
                              "PropertyListing"
                            ],
                            "type": "string"
                          },
                          "addressCountry": {
                            "type": "string",
                            "description": "two-letter ISO 3166-1 alpha-2 country code",
                            "example": "US",
                            "enum": [
                              "CA",
                              "DE",
                              "GR",
                              "IN",
                              "IT",
                              "MX",
                              "PE",
                              "PT",
                              "ES",
                              "AE",
                              "GB",
                              "US"
                            ]
                          },
                          "addressLocality": {
                            "type": "string",
                            "description": "City, Township.",
                            "example": "Gotham City",
                            "maxLength": 50
                          },
                          "addressRegion": {
                            "type": "string",
                            "description": "State or Province.",
                            "example": "New Jersey",
                            "maxLength": 3
                          },
                          "buyerAgent": {
                            "description": "the buyer's RealEstateAgent",
                            "example": {
                              "email": "butch.byers@example.com",
                              "identifier": {
                                "agentKey": "xxxx"
                              },
                              "name": "Butch Byers",
                              "type": "RealEstateAgent"
                            },
                            "type": "object",
                            "x-range": "RealEstateAgent"
                          },
                          "buyerOffice": {
                            "description": "the buyer's RealEstateOffice",
                            "example": {
                              "email": "gcr@example.com",
                              "identifier": {
                                "officeKey": "grc1"
                              },
                              "name": "Gotham City Real Estate",
                              "type": "RealEstateOffice"
                            },
                            "type": "object",
                            "x-range": "RealEstateOffice"
                          },
                          "closeDate": {
                            "title": "closeDate",
                            "type": "string",
                            "format": "date-time",
                            "description": "With for-sale listings, the date the purchase agreement was fulfilled. With lease listings, the date the requirements were fulfilled, such as contract and/or deposit.",
                            "x-range": "DateTime"
                          },
                          "image": {
                            "title": "image",
                            "description": "an ImageObject or URI reference to an image on the web.",
                            "type": "array",
                            "x-range": [
                              "ImageObject"
                            ],
                            "items": [
                              {
                                "type": "object",
                                "allOf": [
                                  {
                                    "title": "MediaObject",
                                    "description": "an image, video or document availble for download",
                                    "x-subclass": [
                                      "ImageObject",
                                      "DigitalDocument"
                                    ],
                                    "allOf": [
                                      {
                                        "$id": "http://realestate.yodata.me/schema/Thing",
                                        "type": "object",
                                        "title": "Thing",
                                        "summary": "The root type of all Things.",
                                        "required": [
                                          "type"
                                        ],
                                        "propertyNames": {
                                          "pattern": "^[a-z@$][a-zA-Z0-9-_]+$"
                                        },
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "pattern": "^[A-Z][a-zA-Z0-9]+$",
                                            "description": "The item type (Linked-Data @type)"
                                          },
                                          "@id": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "the liked data uri for the Thing"
                                          }
                                        }
                                      },
                                      {
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "MediaObject",
                                              "ImageObject",
                                              "DigitalDocument"
                                            ]
                                          },
                                          "id": {
                                            "description": "the URL to access the item.",
                                            "example": "http://user.example.com/public/logo/fileName.zip",
                                            "type": "string",
                                            "format": "uri"
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "the file name of the object.",
                                            "example": "fileName.zip"
                                          },
                                          "encodingFormat": {
                                            "type": "string",
                                            "description": "MIME type",
                                            "example": "application/zip"
                                          },
                                          "about": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "URI to the subject of the image or logo",
                                            "example": "http://user.example.com/profile/card#me"
                                          },
                                          "url": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "URL of the image content",
                                            "example": "http://user.example.com/public/profile/image.jpg"
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "title": "ImageObject",
                                    "x-range": "ImageObject",
                                    "properties": {
                                      "type": {
                                        "enum": [
                                          "ImageObject"
                                        ],
                                        "example": "ImageObject"
                                      },
                                      "id": {
                                        "example": "http://user.example.com/public/logo/image.jpg"
                                      },
                                      "name": {
                                        "example": "image.jpg"
                                      },
                                      "encodingFormat": {
                                        "example": "image/jpeg"
                                      }
                                    }
                                  }
                                ]
                              }
                            ]
                          },
                          "internetAddressDisplayYN": {
                            "enum": [
                              "Y",
                              "N"
                            ],
                            "type": "string"
                          },
                          "latitude": {
                            "type": "number",
                            "description": "The latitude of a location.",
                            "x-title": "latitude",
                            "example": 40.75
                          },
                          "listingAgent": {
                            "type": "object",
                            "description": "the agent/broker representing the seller in a real estate transaction",
                            "x-range": [
                              "RealEstateAgent",
                              "RealEstateOrganization"
                            ],
                            "example": {
                              "type": "RealEstateAgent",
                              "name": "Lori Listagent",
                              "telephone": "1-252-574-0160",
                              "email": "lorilistagent@example.com"
                            }
                          },
                          "listingContractDate": {
                            "description": "The effective date of the agreement between the seller and the seller's broker.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "listingId": {
                            "description": "the local identifier for the listing",
                            "example": "GOTHAM-MLS+12345",
                            "type": "string"
                          },
                          "listingOffice": {
                            "description": "the listing office",
                            "example": {
                              "name": "Gotham City Real Estate",
                              "type": "RealEstateOffice"
                            },
                            "type": "object",
                            "x-range": "RealEstateOrganization"
                          },
                          "listingOriginatingSystem": {
                            "description": "The place where the item is originally input by the user.",
                            "example": {
                              "identifier": {
                                "bhhsmlsid": "xxxx",
                                "resoouid": "not-yet-available"
                              },
                              "name": "MLSListings",
                              "type": "MultipleListingService"
                            },
                            "type": "object",
                            "x-range": "MultipleListingService",
                            "x-subPropertyOf": "instrument"
                          },
                          "listingPrice": {
                            "type": "object",
                            "x-range": "PriceSpecification",
                            "example": {
                              "type": "PriceSpecification",
                              "price": 75000,
                              "priceCurrency": "USD"
                            }
                          },
                          "listingStatus": {
                            "enum": [
                              "Active",
                              "Pending",
                              "Sold",
                              "Canceled",
                              "Prelisted",
                              "OffMarket",
                              "Private"
                            ],
                            "type": "string"
                          },
                          "livingArea": {
                            "description": "property indoor space",
                            "example": {
                              "type": "QuantitativeValue",
                              "unitCode": "SqFt",
                              "unitText": "Square Feet",
                              "value": 1500
                            },
                            "type": "object",
                            "x-range": "QuantitativeValue"
                          },
                          "longitude": {
                            "type": "number",
                            "description": "The longitude of a location.",
                            "x-title": "longitude",
                            "example": 73.98
                          },
                          "lotSize": {
                            "description": "outdoor space minValue, maxValue",
                            "example": {
                              "type": "QuantitativeValue",
                              "unitCode": "AC",
                              "unitText": "Acres",
                              "value": 0.5
                            },
                            "type": "object",
                            "x-range": "QuantitativeValue"
                          },
                          "numberOfBathrooms": {
                            "description": "the number of bathrooms",
                            "example": "2",
                            "type": "string"
                          },
                          "numberOfBedrooms": {
                            "description": "the number of bedrooms",
                            "example": "3",
                            "type": "string"
                          },
                          "numberOfRooms": {
                            "description": "the total number of rooms in the building",
                            "example": "7",
                            "type": "string"
                          },
                          "originatingSystemKey": {
                            "description": "the listing identifier from the original MLS, aka MLSID.",
                            "example": 12345,
                            "type": "string"
                          },
                          "originatingSystemName": {
                            "description": "the name of the MLS where the listing was originally input",
                            "example": "GOTHAM-MLS",
                            "type": "string"
                          },
                          "postalCode": {
                            "type": "string",
                            "description": "Zip/Post Code",
                            "example": "10010",
                            "maxLength": 12
                          },
                          "propertySubType": {
                            "title": "propertySubType",
                            "type": "string",
                            "x-range": "PropertySubType",
                            "description": "RESO property sub-type (see range for allowed values)",
                            "enum": [
                              "ApartmentPropertyType",
                              "BoatSlipPropertyType",
                              "CabinPropertyType",
                              "CondominiumPropertyType",
                              "DeededParkingPropertyType",
                              "DuplexPropertyType",
                              "FarmPropertyType",
                              "ManufacturedHomePropertyType",
                              "ManufacturedOnLandPropertyType",
                              "MobileHomePropertyType",
                              "OwnYourOwnPropertyType",
                              "QuadruplexPropertyType",
                              "RanchPropertyType",
                              "SingleFamilyPropertyType",
                              "StockCooperativePropertyType",
                              "TimesharePropertyType",
                              "TownhousePropertyType",
                              "TriplexPropertyType",
                              "AgriculturePropertyType",
                              "BusinessPropertyType",
                              "HotelMotelPropertyType",
                              "IndustrialPropertyType",
                              "MixedUsePropertyType",
                              "MultiFamilyPropertyType",
                              "OfficePropertyType",
                              "RetailPropertyType",
                              "UnimprovedLandPropertyType",
                              "WarehousePropertyType"
                            ]
                          },
                          "propertyType": {
                            "type": "string",
                            "description": "RESO property type (see range for allowed values)",
                            "x-range": "PropertyType",
                            "minLength": 4,
                            "maxLength": 4,
                            "enum": [
                              "RESI",
                              "RLSE",
                              "RINC",
                              "LAND",
                              "MOBI",
                              "FARM",
                              "COMS",
                              "COML",
                              "BUSO"
                            ]
                          },
                          "purchaseContractDate": {
                            "description": "With for-sale listings, the date an offer was accepted and the listing was no longer on market. With lease listings this may represent a meeting of the minds to lease, but some contractual requirements are yet to be fulfilled, such as contract signing or receipt of the deposit.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "stories": {
                            "type": "number",
                            "description": "he number of floors in the property",
                            "example": 2
                          },
                          "streetAddress": {
                            "type": "string",
                            "description": "the street address",
                            "example": "1007 Mountain Gate Rd",
                            "maxLength": 75
                          },
                          "universalPropertyId": {
                            "type": "string",
                            "title": "universalPropertyId",
                            "description": "The Universal Property Identifier is a unique identifier for all real property in the US and Canada.  It is based on country and local identification methods and is limited to real property.  For cases such as shares of real property, units, and other more granular cases, please utilize the UniversalPropertySubId.",
                            "example": "US-04015-N-R-11022331-N"
                          },
                          "url": {
                            "title": "url",
                            "type": "string",
                            "format": "uri",
                            "description": "URL of the item.",
                            "example": "https://www.example.com/homedetails/1007-Mountain-Gate-Rd-Gotham-City-Gotham/10007"
                          },
                          "yearBuilt": {
                            "type": "number",
                            "description": "the year the structure was created",
                            "example": 1988
                          }
                        },
                        "example": {
                          "type": "PropertyListing",
                          "url": "https://{lead-admin}.bhhs.hsaffailites.com/listing/12345"
                        }
                      }
                    }
                  }
                }
              },
              "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-message-parsed": true
            }
          ]
        }
      }
    },
    "marketing": {
      "description": "automated marketing program events",
      "subscribe": {
        "message": {
          "oneOf": [
            {
              "messageId": "marketing#programcreate",
              "name": "realestate/marketing#programcreate",
              "summary": "a marketing program has been created",
              "headers": {
                "type": "object",
                "properties": {
                  "topic": {
                    "const": "realestate/marketing#programcreate",
                    "x-parser-schema-id": "<anonymous-schema-310>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-309>"
              },
              "payload": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "const": "CreateAction",
                        "x-parser-schema-id": "<anonymous-schema-313>"
                      },
                      "object": {
                        "MarketingProgram": {
                          "title": "MarketingProgram",
                          "description": "a marketing program",
                          "type": "object",
                          "properties": {
                            "type": {
                              "const": "MarketingProgram"
                            },
                            "name": {
                              "type": "string",
                              "example": "Market Activity Report 508 Homewood Ave"
                            },
                            "identifier": {
                              "title": "identifier",
                              "type": "object",
                              "description": "identifier assigned to a contact by the vendor who originally created the contact",
                              "examples": [
                                {
                                  "salesforceid": "0031U00002XW1QWQA1"
                                },
                                {
                                  "vendoraid": "123456"
                                },
                                {
                                  "originating_system_id": "123456"
                                }
                              ],
                              "x-parser-schema-id": "<anonymous-schema-94>"
                            }
                          }
                        },
                        "x-parser-schema-id": "<anonymous-schema-314>"
                      }
                    },
                    "x-parser-schema-id": "<anonymous-schema-312>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-311>"
              },
              "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-original-payload": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "const": "CreateAction"
                      },
                      "object": {
                        "MarketingProgram": {
                          "title": "MarketingProgram",
                          "description": "a marketing program",
                          "type": "object",
                          "properties": {
                            "type": {
                              "const": "MarketingProgram"
                            },
                            "name": {
                              "type": "string",
                              "example": "Market Activity Report 508 Homewood Ave"
                            },
                            "identifier": {
                              "title": "identifier",
                              "type": "object",
                              "description": "identifier assigned to a contact by the vendor who originally created the contact",
                              "examples": [
                                {
                                  "salesforceid": "0031U00002XW1QWQA1"
                                },
                                {
                                  "vendoraid": "123456"
                                },
                                {
                                  "originating_system_id": "123456"
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-message-parsed": true
            },
            {
              "messageId": "marketing#programdelete",
              "name": "realestate/marketing#programdelete",
              "summary": "a marketing program was deleted",
              "headers": {
                "type": "object",
                "properties": {
                  "topic": {
                    "const": "realestate/marketing#programdelete",
                    "x-parser-schema-id": "<anonymous-schema-316>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-315>"
              },
              "payload": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "const": "DeleteAction",
                        "x-parser-schema-id": "<anonymous-schema-319>"
                      },
                      "agent": {
                        "$id": "http://schema.org/agent",
                        "title": "agent",
                        "description": "the direct performer or driver of the action.",
                        "x-range": [
                          "Person",
                          "Organization",
                          "URI"
                        ],
                        "oneOf": [
                          {
                            "type": "string",
                            "format": "uri",
                            "example": "http://{user}.example.com/profile/card#me",
                            "x-parser-schema-id": "<anonymous-schema-320>"
                          },
                          {
                            "type": "object",
                            "x-parser-schema-id": "<anonymous-schema-321>"
                          }
                        ]
                      },
                      "object": {
                        "title": "ProgramMembership",
                        "description": "describes membership relation between a member (Person) and a MarketingProgram",
                        "type": "object",
                        "properties": {
                          "type": {
                            "const": "ProgramMembership",
                            "x-parser-schema-id": "<anonymous-schema-323>"
                          },
                          "role": {
                            "type": "string",
                            "enum": [
                              "member",
                              "owner"
                            ],
                            "x-parser-schema-id": "<anonymous-schema-324>"
                          },
                          "member": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "const": "Contact",
                                "x-parser-schema-id": "<anonymous-schema-326>"
                              },
                              "name": {
                                "type": "string",
                                "x-parser-schema-id": "<anonymous-schema-327>"
                              },
                              "identifier": {
                                "title": "identifier",
                                "type": "object",
                                "description": "identifier assigned to a contact by the vendor who originally created the contact",
                                "examples": [
                                  {
                                    "salesforceid": "0031U00002XW1QWQA1"
                                  },
                                  {
                                    "vendoraid": "123456"
                                  },
                                  {
                                    "originating_system_id": "123456"
                                  }
                                ],
                                "x-parser-schema-id": "<anonymous-schema-94>"
                              }
                            },
                            "x-parser-schema-id": "<anonymous-schema-325>"
                          },
                          "memberOf": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "const": "MarketingProgram",
                                "x-parser-schema-id": "<anonymous-schema-329>"
                              },
                              "name": {
                                "type": "string",
                                "example": "Market Activity Report 508 Homewood Ave",
                                "x-parser-schema-id": "<anonymous-schema-330>"
                              },
                              "identifier": {
                                "title": "identifier",
                                "type": "object",
                                "description": "identifier assigned to a contact by the vendor who originally created the contact",
                                "examples": [
                                  {
                                    "salesforceid": "0031U00002XW1QWQA1"
                                  },
                                  {
                                    "vendoraid": "123456"
                                  },
                                  {
                                    "originating_system_id": "123456"
                                  }
                                ],
                                "x-parser-schema-id": "<anonymous-schema-94>"
                              }
                            },
                            "x-parser-schema-id": "<anonymous-schema-328>"
                          }
                        },
                        "x-parser-schema-id": "<anonymous-schema-322>"
                      }
                    },
                    "x-parser-schema-id": "<anonymous-schema-318>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-317>"
              },
              "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-original-payload": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "const": "DeleteAction"
                      },
                      "agent": {
                        "$id": "http://schema.org/agent",
                        "title": "agent",
                        "description": "the direct performer or driver of the action.",
                        "x-range": [
                          "Person",
                          "Organization",
                          "URI"
                        ],
                        "oneOf": [
                          {
                            "type": "string",
                            "format": "uri",
                            "example": "http://{user}.example.com/profile/card#me"
                          },
                          {
                            "type": "object"
                          }
                        ]
                      },
                      "object": {
                        "title": "ProgramMembership",
                        "description": "describes membership relation between a member (Person) and a MarketingProgram",
                        "type": "object",
                        "properties": {
                          "type": {
                            "const": "ProgramMembership"
                          },
                          "role": {
                            "type": "string",
                            "enum": [
                              "member",
                              "owner"
                            ]
                          },
                          "member": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "const": "Contact"
                              },
                              "name": {
                                "type": "string"
                              },
                              "identifier": {
                                "title": "identifier",
                                "type": "object",
                                "description": "identifier assigned to a contact by the vendor who originally created the contact",
                                "examples": [
                                  {
                                    "salesforceid": "0031U00002XW1QWQA1"
                                  },
                                  {
                                    "vendoraid": "123456"
                                  },
                                  {
                                    "originating_system_id": "123456"
                                  }
                                ]
                              }
                            }
                          },
                          "memberOf": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "const": "MarketingProgram"
                              },
                              "name": {
                                "type": "string",
                                "example": "Market Activity Report 508 Homewood Ave"
                              },
                              "identifier": {
                                "title": "identifier",
                                "type": "object",
                                "description": "identifier assigned to a contact by the vendor who originally created the contact",
                                "examples": [
                                  {
                                    "salesforceid": "0031U00002XW1QWQA1"
                                  },
                                  {
                                    "vendoraid": "123456"
                                  },
                                  {
                                    "originating_system_id": "123456"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-message-parsed": true
            },
            {
              "messageId": "marketing#programmemberadd",
              "name": "realestate/marketing#programmemberadd",
              "summary": "a program member was added by the agent",
              "headers": {
                "type": "object",
                "properties": {
                  "topic": {
                    "const": "realestate/marketing#programmemberadd",
                    "x-parser-schema-id": "<anonymous-schema-332>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-331>"
              },
              "payload": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "const": "AddAction",
                        "x-parser-schema-id": "<anonymous-schema-335>"
                      },
                      "agent": {
                        "type": "string",
                        "format": "uri",
                        "x-parser-schema-id": "<anonymous-schema-336>"
                      },
                      "object": {
                        "$id": "http://realestate.yodata.me/schema/ProgramMembership.json",
                        "title": "MarketingProgramMembership",
                        "description": "describes membership relation between a member (Person) and a MarketingProgram",
                        "type": "object",
                        "properties": {
                          "type": {
                            "const": "ProgramMembership",
                            "x-parser-schema-id": "<anonymous-schema-337>"
                          },
                          "role": {
                            "type": "string",
                            "enum": [
                              "member",
                              "owner"
                            ],
                            "x-parser-schema-id": "<anonymous-schema-338>"
                          },
                          "member": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "Person",
                                  "Contact"
                                ],
                                "x-parser-schema-id": "<anonymous-schema-340>"
                              },
                              "name": {
                                "type": "string",
                                "x-parser-schema-id": "<anonymous-schema-341>"
                              },
                              "identifier": {
                                "title": "identifier",
                                "type": "object",
                                "description": "identifier assigned to a contact by the vendor who originally created the contact",
                                "examples": [
                                  {
                                    "salesforceid": "0031U00002XW1QWQA1"
                                  },
                                  {
                                    "vendoraid": "123456"
                                  },
                                  {
                                    "originating_system_id": "123456"
                                  }
                                ],
                                "x-parser-schema-id": "<anonymous-schema-94>"
                              }
                            },
                            "x-parser-schema-id": "<anonymous-schema-339>"
                          },
                          "memberOf": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "const": "MarketingProgram",
                                "x-parser-schema-id": "<anonymous-schema-343>"
                              },
                              "name": {
                                "type": "string",
                                "example": "Market Activity Report 508 Homewood Ave",
                                "x-parser-schema-id": "<anonymous-schema-344>"
                              },
                              "identifier": {
                                "title": "identifier",
                                "type": "object",
                                "description": "identifier assigned to a contact by the vendor who originally created the contact",
                                "examples": [
                                  {
                                    "salesforceid": "0031U00002XW1QWQA1"
                                  },
                                  {
                                    "vendoraid": "123456"
                                  },
                                  {
                                    "originating_system_id": "123456"
                                  }
                                ],
                                "x-parser-schema-id": "<anonymous-schema-94>"
                              }
                            },
                            "x-parser-schema-id": "<anonymous-schema-342>"
                          }
                        }
                      },
                      "targetCollection": {
                        "MarketingProgram": {
                          "title": "MarketingProgram",
                          "description": "a marketing program",
                          "type": "object",
                          "properties": {
                            "type": {
                              "const": "MarketingProgram"
                            },
                            "name": {
                              "type": "string",
                              "example": "Market Activity Report 508 Homewood Ave"
                            },
                            "identifier": {
                              "title": "identifier",
                              "type": "object",
                              "description": "identifier assigned to a contact by the vendor who originally created the contact",
                              "examples": [
                                {
                                  "salesforceid": "0031U00002XW1QWQA1"
                                },
                                {
                                  "vendoraid": "123456"
                                },
                                {
                                  "originating_system_id": "123456"
                                }
                              ],
                              "x-parser-schema-id": "<anonymous-schema-94>"
                            }
                          }
                        },
                        "x-parser-schema-id": "<anonymous-schema-314>"
                      }
                    },
                    "x-parser-schema-id": "<anonymous-schema-334>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-333>"
              },
              "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-original-payload": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "const": "AddAction"
                      },
                      "agent": {
                        "type": "string",
                        "format": "uri"
                      },
                      "object": {
                        "$id": "http://realestate.yodata.me/schema/ProgramMembership.json",
                        "title": "MarketingProgramMembership",
                        "description": "describes membership relation between a member (Person) and a MarketingProgram",
                        "type": "object",
                        "properties": {
                          "type": {
                            "const": "ProgramMembership"
                          },
                          "role": {
                            "type": "string",
                            "enum": [
                              "member",
                              "owner"
                            ]
                          },
                          "member": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "Person",
                                  "Contact"
                                ]
                              },
                              "name": {
                                "type": "string"
                              },
                              "identifier": {
                                "title": "identifier",
                                "type": "object",
                                "description": "identifier assigned to a contact by the vendor who originally created the contact",
                                "examples": [
                                  {
                                    "salesforceid": "0031U00002XW1QWQA1"
                                  },
                                  {
                                    "vendoraid": "123456"
                                  },
                                  {
                                    "originating_system_id": "123456"
                                  }
                                ]
                              }
                            }
                          },
                          "memberOf": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "const": "MarketingProgram"
                              },
                              "name": {
                                "type": "string",
                                "example": "Market Activity Report 508 Homewood Ave"
                              },
                              "identifier": {
                                "title": "identifier",
                                "type": "object",
                                "description": "identifier assigned to a contact by the vendor who originally created the contact",
                                "examples": [
                                  {
                                    "salesforceid": "0031U00002XW1QWQA1"
                                  },
                                  {
                                    "vendoraid": "123456"
                                  },
                                  {
                                    "originating_system_id": "123456"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      },
                      "targetCollection": {
                        "MarketingProgram": {
                          "title": "MarketingProgram",
                          "description": "a marketing program",
                          "type": "object",
                          "properties": {
                            "type": {
                              "const": "MarketingProgram"
                            },
                            "name": {
                              "type": "string",
                              "example": "Market Activity Report 508 Homewood Ave"
                            },
                            "identifier": {
                              "title": "identifier",
                              "type": "object",
                              "description": "identifier assigned to a contact by the vendor who originally created the contact",
                              "examples": [
                                {
                                  "salesforceid": "0031U00002XW1QWQA1"
                                },
                                {
                                  "vendoraid": "123456"
                                },
                                {
                                  "originating_system_id": "123456"
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-message-parsed": true
            },
            {
              "messageId": "marketing#programmemberremove",
              "name": "realestate/marketing#programmemberremove",
              "summary": "the agent removed a program member (deleted the membership)",
              "headers": {
                "type": "object",
                "properties": {
                  "topic": {
                    "const": "realestate/marketing#programmemberremove",
                    "x-parser-schema-id": "<anonymous-schema-346>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-345>"
              },
              "payload": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "const": "DeleteAction",
                        "x-parser-schema-id": "<anonymous-schema-349>"
                      },
                      "agent": {
                        "type": "string",
                        "format": "uri",
                        "x-parser-schema-id": "<anonymous-schema-350>"
                      },
                      "object": {
                        "$id": "http://realestate.yodata.me/schema/ProgramMembership.json",
                        "title": "MarketingProgramMembership",
                        "description": "describes membership relation between a member (Person) and a MarketingProgram",
                        "type": "object",
                        "properties": {
                          "type": {
                            "const": "ProgramMembership",
                            "x-parser-schema-id": "<anonymous-schema-337>"
                          },
                          "role": {
                            "type": "string",
                            "enum": [
                              "member",
                              "owner"
                            ],
                            "x-parser-schema-id": "<anonymous-schema-338>"
                          },
                          "member": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "Person",
                                  "Contact"
                                ],
                                "x-parser-schema-id": "<anonymous-schema-340>"
                              },
                              "name": {
                                "type": "string",
                                "x-parser-schema-id": "<anonymous-schema-341>"
                              },
                              "identifier": {
                                "title": "identifier",
                                "type": "object",
                                "description": "identifier assigned to a contact by the vendor who originally created the contact",
                                "examples": [
                                  {
                                    "salesforceid": "0031U00002XW1QWQA1"
                                  },
                                  {
                                    "vendoraid": "123456"
                                  },
                                  {
                                    "originating_system_id": "123456"
                                  }
                                ],
                                "x-parser-schema-id": "<anonymous-schema-94>"
                              }
                            },
                            "x-parser-schema-id": "<anonymous-schema-339>"
                          },
                          "memberOf": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "const": "MarketingProgram",
                                "x-parser-schema-id": "<anonymous-schema-343>"
                              },
                              "name": {
                                "type": "string",
                                "example": "Market Activity Report 508 Homewood Ave",
                                "x-parser-schema-id": "<anonymous-schema-344>"
                              },
                              "identifier": {
                                "title": "identifier",
                                "type": "object",
                                "description": "identifier assigned to a contact by the vendor who originally created the contact",
                                "examples": [
                                  {
                                    "salesforceid": "0031U00002XW1QWQA1"
                                  },
                                  {
                                    "vendoraid": "123456"
                                  },
                                  {
                                    "originating_system_id": "123456"
                                  }
                                ],
                                "x-parser-schema-id": "<anonymous-schema-94>"
                              }
                            },
                            "x-parser-schema-id": "<anonymous-schema-342>"
                          }
                        }
                      },
                      "targetCollection": {
                        "MarketingProgram": {
                          "title": "MarketingProgram",
                          "description": "a marketing program",
                          "type": "object",
                          "properties": {
                            "type": {
                              "const": "MarketingProgram"
                            },
                            "name": {
                              "type": "string",
                              "example": "Market Activity Report 508 Homewood Ave"
                            },
                            "identifier": {
                              "title": "identifier",
                              "type": "object",
                              "description": "identifier assigned to a contact by the vendor who originally created the contact",
                              "examples": [
                                {
                                  "salesforceid": "0031U00002XW1QWQA1"
                                },
                                {
                                  "vendoraid": "123456"
                                },
                                {
                                  "originating_system_id": "123456"
                                }
                              ],
                              "x-parser-schema-id": "<anonymous-schema-94>"
                            }
                          }
                        },
                        "x-parser-schema-id": "<anonymous-schema-314>"
                      }
                    },
                    "x-parser-schema-id": "<anonymous-schema-348>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-347>"
              },
              "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-original-payload": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "const": "DeleteAction"
                      },
                      "agent": {
                        "type": "string",
                        "format": "uri"
                      },
                      "object": {
                        "$id": "http://realestate.yodata.me/schema/ProgramMembership.json",
                        "title": "MarketingProgramMembership",
                        "description": "describes membership relation between a member (Person) and a MarketingProgram",
                        "type": "object",
                        "properties": {
                          "type": {
                            "const": "ProgramMembership"
                          },
                          "role": {
                            "type": "string",
                            "enum": [
                              "member",
                              "owner"
                            ]
                          },
                          "member": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "Person",
                                  "Contact"
                                ]
                              },
                              "name": {
                                "type": "string"
                              },
                              "identifier": {
                                "title": "identifier",
                                "type": "object",
                                "description": "identifier assigned to a contact by the vendor who originally created the contact",
                                "examples": [
                                  {
                                    "salesforceid": "0031U00002XW1QWQA1"
                                  },
                                  {
                                    "vendoraid": "123456"
                                  },
                                  {
                                    "originating_system_id": "123456"
                                  }
                                ]
                              }
                            }
                          },
                          "memberOf": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "const": "MarketingProgram"
                              },
                              "name": {
                                "type": "string",
                                "example": "Market Activity Report 508 Homewood Ave"
                              },
                              "identifier": {
                                "title": "identifier",
                                "type": "object",
                                "description": "identifier assigned to a contact by the vendor who originally created the contact",
                                "examples": [
                                  {
                                    "salesforceid": "0031U00002XW1QWQA1"
                                  },
                                  {
                                    "vendoraid": "123456"
                                  },
                                  {
                                    "originating_system_id": "123456"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      },
                      "targetCollection": {
                        "MarketingProgram": {
                          "title": "MarketingProgram",
                          "description": "a marketing program",
                          "type": "object",
                          "properties": {
                            "type": {
                              "const": "MarketingProgram"
                            },
                            "name": {
                              "type": "string",
                              "example": "Market Activity Report 508 Homewood Ave"
                            },
                            "identifier": {
                              "title": "identifier",
                              "type": "object",
                              "description": "identifier assigned to a contact by the vendor who originally created the contact",
                              "examples": [
                                {
                                  "salesforceid": "0031U00002XW1QWQA1"
                                },
                                {
                                  "vendoraid": "123456"
                                },
                                {
                                  "originating_system_id": "123456"
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-message-parsed": true
            }
          ]
        }
      }
    },
    "marketingpreferences": {
      "description": "consumer subscription actions (subscribe/unsubscribe)",
      "subscribe": {
        "message": {
          "oneOf": [
            {
              "messageId": "marketingpreferences#subscribe",
              "name": "realestate/marketingpreferences#subscribe",
              "title": "Marketing Preferences Subscribe",
              "headers": {
                "type": "object",
                "properties": {
                  "topic": {
                    "const": "realestate/marketingpreferences#subscribe",
                    "x-parser-schema-id": "<anonymous-schema-352>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-351>"
              },
              "payload": {
                "type": "object",
                "properties": {
                  "data": {
                    "$id": "SubscribeAction",
                    "allOf": [
                      {
                        "$id": "http://realestate.yodata.me/schema/Action",
                        "title": "Action",
                        "type": "object",
                        "description": "An action performed by a direct agent and indirect participants upon a direct object. Optionally happens at a location with the help of an inanimate instrument. The execution of the action may produce a result. Specific action sub-type documentation specifies the exact expectation of each argument/role.",
                        "required": [
                          "type"
                        ],
                        "properties": {
                          "type": {
                            "description": "the action type",
                            "type": "string",
                            "x-parser-schema-id": "<anonymous-schema-354>"
                          },
                          "object": {
                            "description": "item on which the action is carried out",
                            "x-parser-schema-id": "<anonymous-schema-355>"
                          }
                        },
                        "externalDocs": {
                          "description": "schema.org/Action",
                          "url": "https://schema.org/Action"
                        },
                        "x-parser-schema-id": "Action"
                      },
                      {
                        "x-range": "SubscribeAction",
                        "description": "the consumer (agent) has subscribed to content from the participant with roleName SubscriptionProvider.",
                        "properties": {
                          "type": {
                            "enum": [
                              "SubscribeAction"
                            ]
                          },
                          "agent": {
                            "type": "object",
                            "description": "the subscriber",
                            "x-range": "Contact",
                            "example": {
                              "type": "Contact",
                              "email": "bob@example.com",
                              "identifier": {
                                "hsfconsumerid": "D9AB8127-7D19-4C67-A514-9209F22F4511"
                              }
                            }
                          },
                          "participant": {
                            "description": "the subscription provider, an Agent, Team, Office or Organization",
                            "x-range": [
                              "RealEstateAgent",
                              "RealEstateTeam",
                              "RealEstateOffice",
                              "RealEstateOrganization"
                            ],
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "roleName": {
                                  "type": "string",
                                  "enum": [
                                    "SubscriptionProvider"
                                  ]
                                },
                                "id": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://12345.example.com/profile/card#me"
                                },
                                "additionalProperty": {
                                  "type": "object",
                                  "properties": {
                                    "isCompanyQueue": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "x-parser-schema-id": "<anonymous-schema-356>"
                      }
                    ],
                    "x-parser-schema-id": "SubscribeAction"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-353>"
              },
              "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-original-payload": {
                "type": "object",
                "properties": {
                  "data": {
                    "$id": "SubscribeAction",
                    "allOf": [
                      {
                        "$id": "http://realestate.yodata.me/schema/Action",
                        "title": "Action",
                        "type": "object",
                        "description": "An action performed by a direct agent and indirect participants upon a direct object. Optionally happens at a location with the help of an inanimate instrument. The execution of the action may produce a result. Specific action sub-type documentation specifies the exact expectation of each argument/role.",
                        "required": [
                          "type"
                        ],
                        "properties": {
                          "type": {
                            "description": "the action type",
                            "type": "string"
                          },
                          "object": {
                            "description": "item on which the action is carried out"
                          }
                        },
                        "externalDocs": {
                          "description": "schema.org/Action",
                          "url": "https://schema.org/Action"
                        }
                      },
                      {
                        "x-range": "SubscribeAction",
                        "description": "the consumer (agent) has subscribed to content from the participant with roleName SubscriptionProvider.",
                        "properties": {
                          "type": {
                            "enum": [
                              "SubscribeAction"
                            ]
                          },
                          "agent": {
                            "type": "object",
                            "description": "the subscriber",
                            "x-range": "Contact",
                            "example": {
                              "type": "Contact",
                              "email": "bob@example.com",
                              "identifier": {
                                "hsfconsumerid": "D9AB8127-7D19-4C67-A514-9209F22F4511"
                              }
                            }
                          },
                          "participant": {
                            "description": "the subscription provider, an Agent, Team, Office or Organization",
                            "x-range": [
                              "RealEstateAgent",
                              "RealEstateTeam",
                              "RealEstateOffice",
                              "RealEstateOrganization"
                            ],
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "roleName": {
                                  "type": "string",
                                  "enum": [
                                    "SubscriptionProvider"
                                  ]
                                },
                                "id": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://12345.example.com/profile/card#me"
                                },
                                "additionalProperty": {
                                  "type": "object",
                                  "properties": {
                                    "isCompanyQueue": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              },
              "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-message-parsed": true
            },
            {
              "messageId": "marketingpreferences#unsubscribe",
              "name": "realestate/marketingpreferences#unsubscribe",
              "summary": "a consumer (agent) unsubscribes to email or sms for a specific agent (object)",
              "headers": {
                "type": "object",
                "properties": {
                  "topic": {
                    "const": "realestate/marketingpreferences#unsubscribe",
                    "x-parser-schema-id": "<anonymous-schema-358>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-357>"
              },
              "payload": {
                "type": "object",
                "properties": {
                  "data": {
                    "allOf": [
                      {
                        "$id": "http://realestate.yodata.me/schema/Action",
                        "title": "Action",
                        "type": "object",
                        "description": "An action performed by a direct agent and indirect participants upon a direct object. Optionally happens at a location with the help of an inanimate instrument. The execution of the action may produce a result. Specific action sub-type documentation specifies the exact expectation of each argument/role.",
                        "required": [
                          "type"
                        ],
                        "properties": {
                          "type": {
                            "description": "the action type",
                            "type": "string",
                            "x-parser-schema-id": "<anonymous-schema-354>"
                          },
                          "object": {
                            "description": "item on which the action is carried out",
                            "x-parser-schema-id": "<anonymous-schema-355>"
                          }
                        },
                        "externalDocs": {
                          "description": "schema.org/Action",
                          "url": "https://schema.org/Action"
                        },
                        "x-parser-schema-id": "Action"
                      },
                      {
                        "x-range": "UnsubscribeAction",
                        "description": "the consumer (agent) has unsubscribed to content from the participant with roleName SubscriptionProvider.",
                        "properties": {
                          "type": {
                            "enum": [
                              "UnsubscribeAction"
                            ]
                          },
                          "agent": {
                            "type": "object",
                            "description": "the subscriber",
                            "x-range": "Contact",
                            "example": {
                              "type": "Contact",
                              "email": "bob@example.com",
                              "identifier": {
                                "hsfconsumerid": "xxxxxxxxxxxxx"
                              }
                            }
                          },
                          "participant": {
                            "description": "the subscription provider, an Agent, Team, Office or Organization",
                            "x-range": [
                              "RealEstateAgent",
                              "RealEstateTeam",
                              "RealEstateOffice",
                              "RealEstateOrganization"
                            ],
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "roleName": {
                                  "type": "string",
                                  "enum": [
                                    "SubscriptionProvider"
                                  ]
                                },
                                "id": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://12345.example.com/profile/card#me"
                                },
                                "additionalProperty": {
                                  "type": "object",
                                  "properties": {
                                    "isCompanyQueue": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "x-parser-schema-id": "<anonymous-schema-360>"
                      }
                    ],
                    "x-parser-schema-id": "UnsubscribeAction"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-359>"
              },
              "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-original-payload": {
                "type": "object",
                "properties": {
                  "data": {
                    "allOf": [
                      {
                        "$id": "http://realestate.yodata.me/schema/Action",
                        "title": "Action",
                        "type": "object",
                        "description": "An action performed by a direct agent and indirect participants upon a direct object. Optionally happens at a location with the help of an inanimate instrument. The execution of the action may produce a result. Specific action sub-type documentation specifies the exact expectation of each argument/role.",
                        "required": [
                          "type"
                        ],
                        "properties": {
                          "type": {
                            "description": "the action type",
                            "type": "string"
                          },
                          "object": {
                            "description": "item on which the action is carried out"
                          }
                        },
                        "externalDocs": {
                          "description": "schema.org/Action",
                          "url": "https://schema.org/Action"
                        }
                      },
                      {
                        "x-range": "UnsubscribeAction",
                        "description": "the consumer (agent) has unsubscribed to content from the participant with roleName SubscriptionProvider.",
                        "properties": {
                          "type": {
                            "enum": [
                              "UnsubscribeAction"
                            ]
                          },
                          "agent": {
                            "type": "object",
                            "description": "the subscriber",
                            "x-range": "Contact",
                            "example": {
                              "type": "Contact",
                              "email": "bob@example.com",
                              "identifier": {
                                "hsfconsumerid": "xxxxxxxxxxxxx"
                              }
                            }
                          },
                          "participant": {
                            "description": "the subscription provider, an Agent, Team, Office or Organization",
                            "x-range": [
                              "RealEstateAgent",
                              "RealEstateTeam",
                              "RealEstateOffice",
                              "RealEstateOrganization"
                            ],
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "roleName": {
                                  "type": "string",
                                  "enum": [
                                    "SubscriptionProvider"
                                  ]
                                },
                                "id": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://12345.example.com/profile/card#me"
                                },
                                "additionalProperty": {
                                  "type": "object",
                                  "properties": {
                                    "isCompanyQueue": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              },
              "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-message-parsed": true
            }
          ]
        }
      }
    },
    "profile": {
      "description": "profile events",
      "subscribe": {
        "message": {
          "oneOf": [
            {
              "messageId": "profile#add",
              "name": "realestate/profile#add",
              "summary": "an agent, office or organization profile was added",
              "headers": {
                "type": "object",
                "properties": {
                  "topic": {
                    "const": "realestate/profile#add",
                    "x-parser-schema-id": "<anonymous-schema-362>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-361>"
              },
              "payload": {
                "data": {
                  "x-range": "AddAction",
                  "properties": {
                    "type": {
                      "const": "AddAction"
                    },
                    "object": {
                      "oneOf": [
                        {
                          "$id": "http://realestate.yodata.me/schema/RealEstateAgent",
                          "title": "RealEstateAgent",
                          "description": "A real estate agent who represents buyers and sellers",
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "RealEstateAgent",
                              "x-parser-schema-id": "<anonymous-schema-369>"
                            },
                            "additionalName": {
                              "title": "additionalName",
                              "description": "any other name(s) associated with the entity, i.e. nickname, middle name, maiden name, etc. For multiple names, use a comma without space as a separator.",
                              "type": "string",
                              "examples": [
                                "Johnny,John",
                                "Prince,The Artist Formerly Known as Prince,The Artist",
                                "Babs,Barbara",
                                "Katheryn Elizabeth Hudson,Katy Perry",
                                "Destiny Hope Cyrus,Miley Cyrus"
                              ],
                              "x-parser-schema-id": "<anonymous-schema-116>"
                            },
                            "address": {
                              "type": "object",
                              "x-range": "PostalAddress",
                              "description": "A physical address.",
                              "example": {
                                "type": "PostalAddress",
                                "name": "Home",
                                "addressCountry": "USA",
                                "addressCounty": "Gotham County",
                                "addressLocality": "Gotham City",
                                "addressRegion": "New Jersey",
                                "addressSubdivision": "Gotham Heights",
                                "postalCode": "10010",
                                "postOfficeBoxNumber": "Box 1234",
                                "streetAddress": "1007 Mountain Gate Rd"
                              },
                              "x-parser-schema-id": "<anonymous-schema-370>"
                            },
                            "certification": {
                              "type": "object",
                              "title": "Certification",
                              "description": "A certification issued by an organization to an individual or business.",
                              "x-range": "Certification",
                              "properties": {
                                "type": {
                                  "description": "Certification",
                                  "type": "string",
                                  "enum": [
                                    "Certification"
                                  ],
                                  "x-parser-schema-id": "<anonymous-schema-372>"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "the name of the Certification",
                                  "example": "e-Agent Certified",
                                  "x-parser-schema-id": "<anonymous-schema-373>"
                                },
                                "issuedBy": {
                                  "type": "object",
                                  "x-range": "RealEstateOrganization",
                                  "description": "the issuing authority",
                                  "properties": {
                                    "type": {
                                      "enum": [
                                        "RealEstateOrganization"
                                      ],
                                      "type": "string",
                                      "description": "The item type (Linked-Data @type)",
                                      "x-parser-schema-id": "<anonymous-schema-375>"
                                    },
                                    "id": {
                                      "example": "https://example.com/profile/card#me",
                                      "type": "string",
                                      "format": "uri",
                                      "description": "Linked-Data URI (@id)",
                                      "x-parser-schema-id": "<anonymous-schema-376>"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "name of the issuing organization",
                                      "example": "Gotham City Real Estate",
                                      "x-parser-schema-id": "<anonymous-schema-377>"
                                    }
                                  },
                                  "x-parser-schema-id": "<anonymous-schema-374>"
                                },
                                "issuedTo": {
                                  "x-range": "RealEstateAgent",
                                  "type": "object",
                                  "description": "the subject",
                                  "properties": {
                                    "type": {
                                      "enum": [
                                        "RealEstateAgent"
                                      ],
                                      "type": "string",
                                      "description": "The item type (Linked-Data @type)",
                                      "x-parser-schema-id": "<anonymous-schema-379>"
                                    },
                                    "id": {
                                      "type": "string",
                                      "format": "uri",
                                      "description": "Linked-Data URI (@id)",
                                      "x-parser-schema-id": "<anonymous-schema-380>"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "the name of the item",
                                      "x-parser-schema-id": "<anonymous-schema-92>"
                                    }
                                  },
                                  "x-parser-schema-id": "<anonymous-schema-378>"
                                }
                              },
                              "x-parser-schema-id": "<anonymous-schema-371>"
                            },
                            "contactPoint": {
                              "$id": "htttp://realestate.yodata.me/schema/ContactPoint.json",
                              "title": "ContactPoint",
                              "description": "A point of contact for the entity. By convention in the real estate domain, ContactPoints\nare preferred over telephone, email, and faxNumber so the ContactPoint.name property can be used to label values\nfor example, Work Telephone, Home, as named contactPoint values.\n",
                              "type": "object",
                              "required": [
                                "type",
                                "name"
                              ],
                              "minProperties": 3,
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "const": "ContactPoint",
                                  "x-parser-schema-id": "<anonymous-schema-381>"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "a label for the contactPoint, i.e. 'Work', or 'Home'",
                                  "examples": [
                                    "Work",
                                    "Home",
                                    "Vacation",
                                    "Bob's Cell",
                                    "Alice's Work"
                                  ],
                                  "x-parser-schema-id": "<anonymous-schema-382>"
                                },
                                "telephone": {
                                  "type": "string",
                                  "x-faker": "phone.phoneNumber",
                                  "examples": [
                                    "555-555-5555",
                                    "555-555-5555 x123",
                                    "555-555-5555 ext. 123",
                                    "+1-555-555-5555"
                                  ],
                                  "x-parser-schema-id": "<anonymous-schema-383>"
                                },
                                "faxNumber": {
                                  "type": "string",
                                  "x-faker": "phone.phoneNumber",
                                  "examples": [
                                    "555-555-5555",
                                    "555-555-5555 x123",
                                    "555-555-5555 ext. 123",
                                    "+1-555-555-5555"
                                  ],
                                  "x-parser-schema-id": "<anonymous-schema-384>"
                                },
                                "email": {
                                  "description": "an email address for the item.",
                                  "type": "string",
                                  "format": "email",
                                  "x-faker": "internet.email",
                                  "examples": [
                                    "bob@example.com",
                                    "alice@example.com"
                                  ],
                                  "x-parser-schema-id": "<anonymous-schema-385>"
                                },
                                "url": {
                                  "description": "primary URL for the item.",
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://www.facebook.com/hallandoates",
                                  "x-parser-schema-id": "<anonymous-schema-386>"
                                }
                              }
                            },
                            "email": {
                              "type": "string",
                              "format": "email",
                              "x-faker": "internet.email",
                              "x-parser-schema-id": "<anonymous-schema-93>"
                            },
                            "familyName": {
                              "$id": "htttp://realestate.yodata.me/schema/familyName.yaml",
                              "type": "string",
                              "title": "Family Name",
                              "description": "Last Name of a person",
                              "x-faker": "name.lastName",
                              "maxLength": 50,
                              "externalDocs": {
                                "description": "Family Name",
                                "url": "https://schema.org/familyName"
                              },
                              "examples": [
                                "Smith",
                                "Jones",
                                "Parker",
                                "Monk",
                                "Brown",
                                "Miller",
                                "Davis",
                                "Wilson",
                                "Fitzgerald",
                                "Johnson",
                                "Williams"
                              ]
                            },
                            "givenName": {
                              "type": "string",
                              "description": "First Name of a person",
                              "x-faker": "name.firstName",
                              "examples": [
                                "John",
                                "Jane",
                                "Mary",
                                "Joseph",
                                "William",
                                "David",
                                "Richard",
                                "Charles",
                                "Thomas",
                                "Christopher",
                                "Daniel",
                                "Matthew",
                                "Anthony",
                                "Donald",
                                "Mark",
                                "Paul",
                                "Steven",
                                "Andrew",
                                "Kenneth",
                                "George",
                                "Joshua",
                                "Kevin",
                                "Brian",
                                "Edward",
                                "Ronald",
                                "Timothy",
                                "Jason",
                                "Jeffrey",
                                "Ryan",
                                "Jacob"
                              ],
                              "x-parser-schema-id": "<anonymous-schema-118>"
                            },
                            "id": {
                              "type": "string",
                              "format": "uri",
                              "description": "Linked-Data URI (@id)",
                              "x-parser-schema-id": "<anonymous-schema-380>"
                            },
                            "identifier": {
                              "title": "identifier",
                              "type": "object",
                              "description": "identifier assigned to a contact by the vendor who originally created the contact",
                              "examples": [
                                {
                                  "salesforceid": "0031U00002XW1QWQA1"
                                },
                                {
                                  "vendoraid": "123456"
                                },
                                {
                                  "originating_system_id": "123456"
                                }
                              ],
                              "x-parser-schema-id": "<anonymous-schema-94>"
                            },
                            "image": {
                              "title": "image",
                              "description": "an ImageObject or URI reference to an image on the web.",
                              "type": "array",
                              "x-range": [
                                "ImageObject"
                              ],
                              "items": [
                                {
                                  "type": "object",
                                  "allOf": [
                                    {
                                      "title": "MediaObject",
                                      "description": "an image, video or document availble for download",
                                      "x-subclass": [
                                        "ImageObject",
                                        "DigitalDocument"
                                      ],
                                      "allOf": [
                                        {
                                          "$id": "http://realestate.yodata.me/schema/Thing",
                                          "type": "object",
                                          "title": "Thing",
                                          "summary": "The root type of all Things.",
                                          "required": [
                                            "type"
                                          ],
                                          "propertyNames": {
                                            "pattern": "^[a-z@$][a-zA-Z0-9-_]+$",
                                            "x-parser-schema-id": "<anonymous-schema-274>"
                                          },
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "pattern": "^[A-Z][a-zA-Z0-9]+$",
                                              "description": "The item type (Linked-Data @type)",
                                              "x-parser-schema-id": "<anonymous-schema-272>"
                                            },
                                            "@id": {
                                              "type": "string",
                                              "format": "uri",
                                              "description": "the liked data uri for the Thing",
                                              "x-parser-schema-id": "<anonymous-schema-273>"
                                            }
                                          },
                                          "x-parser-schema-id": "Thing"
                                        },
                                        {
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "enum": [
                                                "MediaObject",
                                                "ImageObject",
                                                "DigitalDocument"
                                              ]
                                            },
                                            "id": {
                                              "description": "the URL to access the item.",
                                              "example": "http://user.example.com/public/logo/fileName.zip",
                                              "type": "string",
                                              "format": "uri"
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "the file name of the object.",
                                              "example": "fileName.zip"
                                            },
                                            "encodingFormat": {
                                              "type": "string",
                                              "description": "MIME type",
                                              "example": "application/zip"
                                            },
                                            "about": {
                                              "type": "string",
                                              "format": "uri",
                                              "description": "URI to the subject of the image or logo",
                                              "example": "http://user.example.com/profile/card#me"
                                            },
                                            "url": {
                                              "type": "string",
                                              "format": "uri",
                                              "description": "URL of the image content",
                                              "example": "http://user.example.com/public/profile/image.jpg"
                                            }
                                          },
                                          "x-parser-schema-id": "<anonymous-schema-275>"
                                        }
                                      ],
                                      "x-parser-schema-id": "MediaObject"
                                    },
                                    {
                                      "title": "ImageObject",
                                      "x-range": "ImageObject",
                                      "properties": {
                                        "type": {
                                          "enum": [
                                            "ImageObject"
                                          ],
                                          "example": "ImageObject"
                                        },
                                        "id": {
                                          "example": "http://user.example.com/public/logo/image.jpg"
                                        },
                                        "name": {
                                          "example": "image.jpg"
                                        },
                                        "encodingFormat": {
                                          "example": "image/jpeg"
                                        }
                                      },
                                      "x-parser-schema-id": "<anonymous-schema-276>"
                                    }
                                  ],
                                  "x-parser-schema-id": "<anonymous-schema-271>"
                                }
                              ],
                              "x-parser-schema-id": "<anonymous-schema-270>"
                            },
                            "jobTitle": {
                              "type": "array",
                              "items": {
                                "title": "jobTitle",
                                "description": "The job title of the person (for example, Financial Manager).",
                                "type": "string",
                                "x-faker": "name.jobTitle",
                                "examples": [
                                  "CEO",
                                  "Sales Manager",
                                  "Escrow Officer",
                                  "Transaction Coordinator",
                                  "Director of Marketing",
                                  "Senior Loan Officer",
                                  "Loan Officer",
                                  "Sanitation Engineer",
                                  "Owner",
                                  "Cofounder",
                                  "Founder",
                                  "President",
                                  "Vice President of Sales",
                                  null,
                                  null,
                                  null,
                                  null,
                                  null,
                                  null,
                                  null,
                                  null,
                                  null,
                                  null
                                ],
                                "x-parser-schema-id": "<anonymous-schema-388>"
                              },
                              "x-parser-schema-id": "<anonymous-schema-387>"
                            },
                            "memberOf": {
                              "title": "memberOf",
                              "description": "an Organization (or ProgramMembership) to which this Person or Organization belongs.",
                              "type": "array",
                              "x-range": [
                                "OrganizationRole",
                                "URI"
                              ],
                              "items": {
                                "anyOf": [
                                  {
                                    "title": "OrganizationRole",
                                    "type": "object",
                                    "description": "describes a role played by a member and a group or organization.",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "description": "a role played by the member in the memberOf group",
                                        "enum": [
                                          "OrganizationRole"
                                        ],
                                        "x-parser-schema-id": "<anonymous-schema-391>"
                                      },
                                      "roleName": {
                                        "type": "string",
                                        "description": "the role name",
                                        "example": "Owner",
                                        "x-parser-schema-id": "<anonymous-schema-392>"
                                      },
                                      "memberOf": {
                                        "description": "the org or group where the role is performed",
                                        "type": "object",
                                        "example": {
                                          "type": "RealEstateOrganization",
                                          "id": "http://orgid.example.com/profile/card#me"
                                        },
                                        "x-parser-schema-id": "<anonymous-schema-393>"
                                      },
                                      "member": {
                                        "description": "member object or id",
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://memberid.example.com/profile/card#me",
                                        "x-parser-schema-id": "<anonymous-schema-394>"
                                      },
                                      "startDate": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "date the member began performing this role",
                                        "x-parser-schema-id": "<anonymous-schema-395>"
                                      },
                                      "endDate": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "date the member stopped performing the role",
                                        "x-parser-schema-id": "<anonymous-schema-396>"
                                      }
                                    },
                                    "x-parser-schema-id": "OrganizationRole"
                                  },
                                  {
                                    "type": "string",
                                    "format": "uri",
                                    "x-parser-schema-id": "<anonymous-schema-397>"
                                  }
                                ],
                                "x-parser-schema-id": "<anonymous-schema-390>"
                              },
                              "x-parser-schema-id": "<anonymous-schema-389>"
                            },
                            "name": {
                              "type": "string",
                              "description": "the name of the item",
                              "x-parser-schema-id": "<anonymous-schema-92>"
                            },
                            "parentOrganization": {
                              "$id": "http://realestate.yodata.me/schema/parentOrganization",
                              "title": "parentOrganization",
                              "description": "organizations of which this org is a part.",
                              "type": "array",
                              "items": {
                                "type": "string",
                                "format": "uri",
                                "x-parser-schema-id": "<anonymous-schema-398>"
                              }
                            },
                            "permit": {
                              "title": "Permit",
                              "description": "A permit issued by an organization to an individual or business.",
                              "type": "object",
                              "x-hasSubclass": [
                                "RealEstateLicense"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "description": "Permit type.",
                                  "enum": [
                                    "Permit"
                                  ],
                                  "x-parser-schema-id": "<anonymous-schema-400>"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Common or display value of the Permit.",
                                  "example": "DRE Number",
                                  "x-parser-schema-id": "<anonymous-schema-401>"
                                },
                                "issuedBy": {
                                  "type": "object",
                                  "x-range": "Organization",
                                  "description": "The issuing authority",
                                  "example": {
                                    "type": "State",
                                    "name": "California"
                                  },
                                  "x-parser-schema-id": "<anonymous-schema-402>"
                                },
                                "issuedThrough": {
                                  "type": "object",
                                  "description": "the service through which the permit was granted",
                                  "example": {
                                    "type": "Service",
                                    "name": "Department of Real Estate"
                                  },
                                  "x-parser-schema-id": "<anonymous-schema-403>"
                                },
                                "validIn": {
                                  "type": "object",
                                  "x-range": "Place",
                                  "x-parser-schema-id": "<anonymous-schema-404>"
                                },
                                "validFrom": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "start date",
                                  "x-parser-schema-id": "<anonymous-schema-405>"
                                },
                                "validUntil": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "end date",
                                  "x-parser-schema-id": "<anonymous-schema-406>"
                                }
                              },
                              "x-parser-schema-id": "<anonymous-schema-399>"
                            },
                            "subOrganization": {
                              "$id": "http://realestate.yodata.me/schema/subOrganization",
                              "title": "subOrganization",
                              "description": "child organizations of the organization",
                              "type": "array",
                              "items": {
                                "type": "string",
                                "format": "uri",
                                "x-parser-schema-id": "<anonymous-schema-407>"
                              }
                            },
                            "url": {
                              "title": "url",
                              "type": "string",
                              "format": "uri",
                              "description": "URL of the item.",
                              "x-parser-schema-id": "<anonymous-schema-408>"
                            }
                          },
                          "x-parser-schema-id": "RealEstateAgent"
                        },
                        {
                          "type": "object",
                          "description": "A real estate office / place of business.",
                          "allOf": [
                            {
                              "allOf": [
                                {
                                  "allOf": [
                                    {
                                      "$id": "http://realestate.yodata.me/schema/Thing",
                                      "type": "object",
                                      "title": "Thing",
                                      "summary": "The root type of all Things.",
                                      "required": [
                                        "type"
                                      ],
                                      "propertyNames": {
                                        "pattern": "^[a-z@$][a-zA-Z0-9-_]+$",
                                        "x-parser-schema-id": "<anonymous-schema-274>"
                                      },
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "pattern": "^[A-Z][a-zA-Z0-9]+$",
                                          "description": "The item type (Linked-Data @type)",
                                          "x-parser-schema-id": "<anonymous-schema-272>"
                                        },
                                        "@id": {
                                          "type": "string",
                                          "format": "uri",
                                          "description": "the liked data uri for the Thing",
                                          "x-parser-schema-id": "<anonymous-schema-273>"
                                        }
                                      },
                                      "x-parser-schema-id": "Thing"
                                    },
                                    {
                                      "x-kind": "Organization",
                                      "x-parser-schema-id": "<anonymous-schema-410>"
                                    },
                                    {
                                      "x-hasSubclass": [
                                        "RealEstateOrganization",
                                        "RealEstateOffice",
                                        "RealEstateAgent"
                                      ],
                                      "x-parser-schema-id": "<anonymous-schema-411>"
                                    },
                                    {
                                      "x-subClassOf": [
                                        "https://schema.org/Organization"
                                      ],
                                      "properties": {
                                        "address": {
                                          "type": "object",
                                          "x-range": "PostalAddress",
                                          "description": "A physical address.",
                                          "example": {
                                            "type": "PostalAddress",
                                            "name": "Home",
                                            "addressCountry": "USA",
                                            "addressCounty": "Gotham County",
                                            "addressLocality": "Gotham City",
                                            "addressRegion": "New Jersey",
                                            "addressSubdivision": "Gotham Heights",
                                            "postalCode": "10010",
                                            "postOfficeBoxNumber": "Box 1234",
                                            "streetAddress": "1007 Mountain Gate Rd"
                                          },
                                          "x-parser-schema-id": "<anonymous-schema-370>"
                                        },
                                        "availableLanguage": {
                                          "title": "availableLanguage",
                                          "type": "array",
                                          "description": "Please use one of the language codes from the IETF BCP 47 standard.",
                                          "x-range": "Language",
                                          "items": {
                                            "$id": "htttp://realestate.yodata.me/schema/Language.yaml",
                                            "description": "a written or spoken Language",
                                            "title": "Language",
                                            "type": "object",
                                            "required": [
                                              "type",
                                              "name",
                                              "additionalName"
                                            ],
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "const": "Language",
                                                "x-parser-schema-id": "<anonymous-schema-124>"
                                              },
                                              "name": {
                                                "type": "string",
                                                "description": "the display name of the language",
                                                "x-parser-schema-id": "<anonymous-schema-125>"
                                              },
                                              "additionalName": {
                                                "type": "string",
                                                "description": "BCP 47 language code",
                                                "x-parser-schema-id": "<anonymous-schema-126>"
                                              }
                                            },
                                            "examples": [
                                              {
                                                "type": "Language",
                                                "name": "English",
                                                "additionalName": "en-us"
                                              },
                                              {
                                                "type": "Language",
                                                "name": "Spanish",
                                                "additionalName": "es"
                                              },
                                              {
                                                "type": "Language",
                                                "name": "French",
                                                "additionalName": "fr"
                                              },
                                              {
                                                "type": "Language",
                                                "name": "German",
                                                "additionalName": "de"
                                              },
                                              {
                                                "type": "Language",
                                                "name": "Italian",
                                                "additionalName": "it"
                                              },
                                              {
                                                "type": "Language",
                                                "name": "Japanese",
                                                "additionalName": "ja"
                                              },
                                              {
                                                "type": "Language",
                                                "name": "Korean",
                                                "additionalName": "ko"
                                              },
                                              {
                                                "type": "Language",
                                                "name": "Portuguese",
                                                "additionalName": "pt"
                                              },
                                              {
                                                "type": "Language",
                                                "name": "Russian",
                                                "additionalName": "ru"
                                              },
                                              {
                                                "type": "Language",
                                                "name": "Chinese",
                                                "additionalName": "zh"
                                              },
                                              {
                                                "type": "Language",
                                                "name": "Arabic",
                                                "additionalName": "ar"
                                              },
                                              {
                                                "type": "Language",
                                                "name": "Hindi",
                                                "additionalName": "hi"
                                              },
                                              {
                                                "type": "Language",
                                                "name": "Bengali",
                                                "additionalName": "bn"
                                              },
                                              {
                                                "type": "Language",
                                                "name": "Portuguese",
                                                "additionalName": "pt"
                                              }
                                            ],
                                            "x-parser-schema-id": "Language"
                                          }
                                        },
                                        "branchCode": {
                                          "description": "A short textual code that uniquely identifies a place of business.",
                                          "example": "for BHHS profile events, see additionalProperty.OfficeId",
                                          "type": "string"
                                        },
                                        "certification": {
                                          "$id": "http://realestate.yodata.me/schema/certification",
                                          "title": "certifications",
                                          "description": "certifications granted to a person or organization",
                                          "type": "array",
                                          "items": [
                                            {
                                              "type": "object",
                                              "title": "Certification",
                                              "description": "A certification issued by an organization to an individual or business.",
                                              "x-range": "Certification",
                                              "properties": {
                                                "type": {
                                                  "description": "Certification",
                                                  "type": "string",
                                                  "enum": [
                                                    "Certification"
                                                  ],
                                                  "x-parser-schema-id": "<anonymous-schema-594>"
                                                },
                                                "name": {
                                                  "type": "string",
                                                  "description": "the name of the Certification",
                                                  "example": "e-Agent Certified",
                                                  "x-parser-schema-id": "<anonymous-schema-595>"
                                                },
                                                "issuedBy": {
                                                  "type": "object",
                                                  "x-range": "RealEstateOrganization",
                                                  "description": "the issuing authority",
                                                  "properties": {
                                                    "type": {
                                                      "enum": [
                                                        "RealEstateOrganization"
                                                      ],
                                                      "type": "string",
                                                      "description": "The item type (Linked-Data @type)",
                                                      "x-parser-schema-id": "<anonymous-schema-375>"
                                                    },
                                                    "id": {
                                                      "example": "https://example.com/profile/card#me",
                                                      "type": "string",
                                                      "format": "uri",
                                                      "description": "Linked-Data URI (@id)",
                                                      "x-parser-schema-id": "<anonymous-schema-376>"
                                                    },
                                                    "name": {
                                                      "type": "string",
                                                      "description": "name of the issuing organization",
                                                      "example": "Gotham City Real Estate",
                                                      "x-parser-schema-id": "<anonymous-schema-377>"
                                                    }
                                                  },
                                                  "x-parser-schema-id": "<anonymous-schema-374>"
                                                },
                                                "issuedTo": {
                                                  "x-range": "RealEstateAgent",
                                                  "type": "object",
                                                  "description": "the subject",
                                                  "properties": {
                                                    "type": {
                                                      "enum": [
                                                        "RealEstateAgent"
                                                      ],
                                                      "type": "string",
                                                      "description": "The item type (Linked-Data @type)",
                                                      "x-parser-schema-id": "<anonymous-schema-379>"
                                                    },
                                                    "id": {
                                                      "type": "string",
                                                      "format": "uri",
                                                      "description": "Linked-Data URI (@id)",
                                                      "x-parser-schema-id": "<anonymous-schema-380>"
                                                    },
                                                    "name": {
                                                      "type": "string",
                                                      "description": "the name of the item",
                                                      "x-parser-schema-id": "<anonymous-schema-92>"
                                                    }
                                                  },
                                                  "x-parser-schema-id": "<anonymous-schema-596>"
                                                }
                                              },
                                              "x-parser-schema-id": "Certification"
                                            }
                                          ]
                                        },
                                        "contactPoint": {
                                          "$id": "http://realestate.yodata.me/definitions/contactPoint.json",
                                          "type": "array",
                                          "description": "a named point of contact - telephone, email, faxNumber, and/or url for the entity",
                                          "items": {
                                            "$id": "htttp://realestate.yodata.me/schema/ContactPoint.json",
                                            "title": "ContactPoint",
                                            "description": "A point of contact for the entity. By convention in the real estate domain, ContactPoints\nare preferred over telephone, email, and faxNumber so the ContactPoint.name property can be used to label values\nfor example, Work Telephone, Home, as named contactPoint values.\n",
                                            "type": "object",
                                            "required": [
                                              "type",
                                              "name"
                                            ],
                                            "minProperties": 3,
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "const": "ContactPoint",
                                                "x-parser-schema-id": "<anonymous-schema-110>"
                                              },
                                              "name": {
                                                "type": "string",
                                                "description": "a label for the contactPoint, i.e. 'Work', or 'Home'",
                                                "examples": [
                                                  "Work",
                                                  "Home",
                                                  "Vacation",
                                                  "Bob's Cell",
                                                  "Alice's Work"
                                                ],
                                                "x-parser-schema-id": "<anonymous-schema-111>"
                                              },
                                              "telephone": {
                                                "type": "string",
                                                "x-faker": "phone.phoneNumber",
                                                "examples": [
                                                  "555-555-5555",
                                                  "555-555-5555 x123",
                                                  "555-555-5555 ext. 123",
                                                  "+1-555-555-5555"
                                                ],
                                                "x-parser-schema-id": "<anonymous-schema-112>"
                                              },
                                              "faxNumber": {
                                                "type": "string",
                                                "x-faker": "phone.phoneNumber",
                                                "examples": [
                                                  "555-555-5555",
                                                  "555-555-5555 x123",
                                                  "555-555-5555 ext. 123",
                                                  "+1-555-555-5555"
                                                ],
                                                "x-parser-schema-id": "<anonymous-schema-113>"
                                              },
                                              "email": {
                                                "description": "an email address for the item.",
                                                "type": "string",
                                                "format": "email",
                                                "x-faker": "internet.email",
                                                "examples": [
                                                  "bob@example.com",
                                                  "alice@example.com"
                                                ],
                                                "x-parser-schema-id": "<anonymous-schema-114>"
                                              },
                                              "url": {
                                                "description": "primary URL for the item.",
                                                "type": "string",
                                                "format": "uri",
                                                "example": "https://www.facebook.com/hallandoates",
                                                "x-parser-schema-id": "<anonymous-schema-115>"
                                              }
                                            },
                                            "x-parser-schema-id": "ContactPoint"
                                          }
                                        },
                                        "email": {
                                          "type": "string",
                                          "format": "email",
                                          "x-faker": "internet.email",
                                          "x-parser-schema-id": "<anonymous-schema-93>"
                                        },
                                        "faxNumber": {
                                          "type": "string",
                                          "description": "Do people still use fax machines?",
                                          "x-faker": "phone.phoneNumber",
                                          "x-parser-schema-id": "<anonymous-schema-117>"
                                        },
                                        "image": {
                                          "title": "image",
                                          "description": "an ImageObject or URI reference to an image on the web.",
                                          "type": "array",
                                          "x-range": [
                                            "ImageObject"
                                          ],
                                          "items": [
                                            {
                                              "type": "object",
                                              "allOf": [
                                                {
                                                  "title": "MediaObject",
                                                  "description": "an image, video or document availble for download",
                                                  "x-subclass": [
                                                    "ImageObject",
                                                    "DigitalDocument"
                                                  ],
                                                  "allOf": [
                                                    {
                                                      "$id": "http://realestate.yodata.me/schema/Thing",
                                                      "type": "object",
                                                      "title": "Thing",
                                                      "summary": "The root type of all Things.",
                                                      "required": [
                                                        "type"
                                                      ],
                                                      "propertyNames": {
                                                        "pattern": "^[a-z@$][a-zA-Z0-9-_]+$",
                                                        "x-parser-schema-id": "<anonymous-schema-274>"
                                                      },
                                                      "properties": {
                                                        "type": {
                                                          "type": "string",
                                                          "pattern": "^[A-Z][a-zA-Z0-9]+$",
                                                          "description": "The item type (Linked-Data @type)",
                                                          "x-parser-schema-id": "<anonymous-schema-272>"
                                                        },
                                                        "@id": {
                                                          "type": "string",
                                                          "format": "uri",
                                                          "description": "the liked data uri for the Thing",
                                                          "x-parser-schema-id": "<anonymous-schema-273>"
                                                        }
                                                      },
                                                      "x-parser-schema-id": "Thing"
                                                    },
                                                    {
                                                      "properties": {
                                                        "type": {
                                                          "type": "string",
                                                          "enum": [
                                                            "MediaObject",
                                                            "ImageObject",
                                                            "DigitalDocument"
                                                          ]
                                                        },
                                                        "id": {
                                                          "description": "the URL to access the item.",
                                                          "example": "http://user.example.com/public/logo/fileName.zip",
                                                          "type": "string",
                                                          "format": "uri"
                                                        },
                                                        "name": {
                                                          "type": "string",
                                                          "description": "the file name of the object.",
                                                          "example": "fileName.zip"
                                                        },
                                                        "encodingFormat": {
                                                          "type": "string",
                                                          "description": "MIME type",
                                                          "example": "application/zip"
                                                        },
                                                        "about": {
                                                          "type": "string",
                                                          "format": "uri",
                                                          "description": "URI to the subject of the image or logo",
                                                          "example": "http://user.example.com/profile/card#me"
                                                        },
                                                        "url": {
                                                          "type": "string",
                                                          "format": "uri",
                                                          "description": "URL of the image content",
                                                          "example": "http://user.example.com/public/profile/image.jpg"
                                                        }
                                                      },
                                                      "x-parser-schema-id": "<anonymous-schema-275>"
                                                    }
                                                  ],
                                                  "x-parser-schema-id": "MediaObject"
                                                },
                                                {
                                                  "title": "ImageObject",
                                                  "x-range": "ImageObject",
                                                  "properties": {
                                                    "type": {
                                                      "enum": [
                                                        "ImageObject"
                                                      ],
                                                      "example": "ImageObject"
                                                    },
                                                    "id": {
                                                      "example": "http://user.example.com/public/logo/image.jpg"
                                                    },
                                                    "name": {
                                                      "example": "image.jpg"
                                                    },
                                                    "encodingFormat": {
                                                      "example": "image/jpeg"
                                                    }
                                                  },
                                                  "x-parser-schema-id": "<anonymous-schema-276>"
                                                }
                                              ],
                                              "x-parser-schema-id": "<anonymous-schema-271>"
                                            }
                                          ]
                                        },
                                        "logo": {
                                          "description": "a logo associated with the organization.",
                                          "items": {
                                            "allOf": [
                                              {
                                                "type": "object",
                                                "title": "DigitalDocument",
                                                "x-range": "DigitalDocument",
                                                "description": "an electronic file.",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "DigitalDocument"
                                                    ],
                                                    "x-parser-schema-id": "<anonymous-schema-621>"
                                                  },
                                                  "id": {
                                                    "type": "string",
                                                    "example": "http://user.example.com/public/logo/archive.zip",
                                                    "x-parser-schema-id": "<anonymous-schema-622>"
                                                  },
                                                  "name": {
                                                    "type": "string",
                                                    "description": "document name or title",
                                                    "example": "archive.zip",
                                                    "x-parser-schema-id": "<anonymous-schema-623>"
                                                  },
                                                  "encodingFormat": {
                                                    "type": "string",
                                                    "description": "[ISO Media Type](https://www.iana.org/assignments/media-types/media-types.xhtml)",
                                                    "example": "application/zip",
                                                    "x-parser-schema-id": "<anonymous-schema-624>"
                                                  },
                                                  "about": {
                                                    "type": "object",
                                                    "description": "subject of the Document",
                                                    "x-range": "Thing",
                                                    "example": {
                                                      "type": "RealEstateTransaction",
                                                      "identifier": {
                                                        "bmsTransactionId": "xxxx"
                                                      }
                                                    },
                                                    "x-parser-schema-id": "<anonymous-schema-625>"
                                                  },
                                                  "url": {
                                                    "type": "string",
                                                    "description": "public URL of the object",
                                                    "example": "https://example.com",
                                                    "x-parser-schema-id": "<anonymous-schema-626>"
                                                  }
                                                },
                                                "x-parser-schema-id": "DigitalDocument"
                                              },
                                              {
                                                "description": "an associated logo",
                                                "type": "object"
                                              }
                                            ],
                                            "type": "object"
                                          },
                                          "type": "array",
                                          "x-range": [
                                            "ImageObject",
                                            "DigitalDocument"
                                          ]
                                        },
                                        "name": {
                                          "description": "Name or DBA.",
                                          "type": "string"
                                        },
                                        "parentOrganization": {
                                          "items": {
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "type": "array"
                                        },
                                        "subOrganization": {
                                          "description": "a child organization",
                                          "x-range": [
                                            "RealEstateOrganization"
                                          ],
                                          "type": "array",
                                          "items": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "http://org.example.com/profile/card#me"
                                          }
                                        },
                                        "telephone": {
                                          "type": "string",
                                          "description": "Primary phone number.",
                                          "example": "+15558675309",
                                          "x-parser-schema-id": "<anonymous-schema-128>"
                                        },
                                        "type": {
                                          "enum": [
                                            "Organization"
                                          ],
                                          "type": "string"
                                        },
                                        "url": {
                                          "description": "primary website/url for the entity.",
                                          "format": "uri",
                                          "type": "string"
                                        }
                                      },
                                      "x-parser-schema-id": "<anonymous-schema-412>"
                                    }
                                  ],
                                  "x-parser-schema-id": "Organization"
                                },
                                {
                                  "title": "RealEstateOrganization",
                                  "description": "A real estate franchisor, broker or business",
                                  "x-range": "RealEstateOrganization",
                                  "properties": {
                                    "type": {
                                      "description": "RealEstateOrganzation",
                                      "enum": [
                                        "RealEstateOrganization",
                                        "RealEstateOffice",
                                        "RealEstateAgent"
                                      ],
                                      "example": "RealEstateOrganization"
                                    },
                                    "areaServed": {
                                      "type": "object",
                                      "description": "the physical areas that make up the ServiceArea",
                                      "x-range": [
                                        "City",
                                        "PostalCodeArea"
                                      ],
                                      "example": {
                                        "type": "PostalCode",
                                        "postalCode": "91371",
                                        "addressLocality": "Woodland Hills",
                                        "addressCounty": "Los Angeles",
                                        "addressRegion": "CA",
                                        "addressCountry": "US"
                                      }
                                    },
                                    "description": {
                                      "example": "The number on Gotham City Real Estate Company since 1940",
                                      "type": "string",
                                      "description": "description of the item."
                                    },
                                    "parentOrganization": {
                                      "type": "array",
                                      "x-range": "RealEstateOrganization",
                                      "description": "A franchisor or affiliate network of which this organization plays a membership role.",
                                      "items": {
                                        "type": "string",
                                        "format": "uri"
                                      }
                                    },
                                    "numberOfSubOrganizations": {
                                      "type": "number",
                                      "description": "the number of offices for an affiliate."
                                    },
                                    "member": {
                                      "title": "member",
                                      "description": "A member of an Organization or a ProgramMembership. Organizations can be members of organizations; ProgramMembership is typically for individuals.",
                                      "type": "array",
                                      "x-range": [
                                        "OrganizationRole",
                                        "URI"
                                      ],
                                      "items": {
                                        "anyOf": [
                                          {
                                            "title": "OrganizationRole",
                                            "type": "object",
                                            "description": "describes a role played by a member and a group or organization.",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "description": "a role played by the member in the memberOf group",
                                                "enum": [
                                                  "OrganizationRole"
                                                ],
                                                "x-parser-schema-id": "<anonymous-schema-391>"
                                              },
                                              "roleName": {
                                                "type": "string",
                                                "description": "the role name",
                                                "example": "Owner",
                                                "x-parser-schema-id": "<anonymous-schema-392>"
                                              },
                                              "memberOf": {
                                                "description": "the org or group where the role is performed",
                                                "type": "object",
                                                "example": {
                                                  "type": "RealEstateOrganization",
                                                  "id": "http://orgid.example.com/profile/card#me"
                                                },
                                                "x-parser-schema-id": "<anonymous-schema-393>"
                                              },
                                              "member": {
                                                "description": "member object or id",
                                                "type": "string",
                                                "format": "uri",
                                                "example": "https://memberid.example.com/profile/card#me",
                                                "x-parser-schema-id": "<anonymous-schema-394>"
                                              },
                                              "startDate": {
                                                "type": "string",
                                                "format": "date-time",
                                                "description": "date the member began performing this role",
                                                "x-parser-schema-id": "<anonymous-schema-395>"
                                              },
                                              "endDate": {
                                                "type": "string",
                                                "format": "date-time",
                                                "description": "date the member stopped performing the role",
                                                "x-parser-schema-id": "<anonymous-schema-396>"
                                              }
                                            },
                                            "x-parser-schema-id": "OrganizationRole"
                                          },
                                          {
                                            "type": "string",
                                            "format": "uri"
                                          }
                                        ]
                                      }
                                    },
                                    "memberOf": {
                                      "x-range": [
                                        "OrganizationRole",
                                        "MLSMembership"
                                      ],
                                      "description": "An Organization (or ProgramMembership) to which this Person or Organization belongs.",
                                      "type": "array",
                                      "items": {
                                        "allOf": [
                                          {
                                            "title": "OrganizationRole",
                                            "type": "object",
                                            "description": "describes a role played by a member and a group or organization.",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "description": "a role played by the member in the memberOf group",
                                                "enum": [
                                                  "OrganizationRole"
                                                ],
                                                "x-parser-schema-id": "<anonymous-schema-391>"
                                              },
                                              "roleName": {
                                                "type": "string",
                                                "description": "the role name",
                                                "example": "Owner",
                                                "x-parser-schema-id": "<anonymous-schema-392>"
                                              },
                                              "memberOf": {
                                                "description": "the org or group where the role is performed",
                                                "type": "object",
                                                "example": {
                                                  "type": "RealEstateOrganization",
                                                  "id": "http://orgid.example.com/profile/card#me"
                                                },
                                                "x-parser-schema-id": "<anonymous-schema-393>"
                                              },
                                              "member": {
                                                "description": "member object or id",
                                                "type": "string",
                                                "format": "uri",
                                                "example": "https://memberid.example.com/profile/card#me",
                                                "x-parser-schema-id": "<anonymous-schema-394>"
                                              },
                                              "startDate": {
                                                "type": "string",
                                                "format": "date-time",
                                                "description": "date the member began performing this role",
                                                "x-parser-schema-id": "<anonymous-schema-395>"
                                              },
                                              "endDate": {
                                                "type": "string",
                                                "format": "date-time",
                                                "description": "date the member stopped performing the role",
                                                "x-parser-schema-id": "<anonymous-schema-396>"
                                              }
                                            },
                                            "x-parser-schema-id": "OrganizationRole"
                                          },
                                          {
                                            "type": "object",
                                            "title": "MLSMembership",
                                            "description": "a membership relationship",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "description": "an MLS member relationship",
                                                "enum": [
                                                  "MLSMembership"
                                                ],
                                                "example": "MLSMembership",
                                                "x-parser-schema-id": "<anonymous-schema-664>"
                                              },
                                              "roleName": {
                                                "type": "string",
                                                "example": "MLSMember",
                                                "x-parser-schema-id": "<anonymous-schema-665>"
                                              },
                                              "memberOf": {
                                                "type": "object",
                                                "x-range": "MultipleListingService",
                                                "example": {
                                                  "type": "MultipleListingService",
                                                  "name": "GreatScottMLS"
                                                },
                                                "x-parser-schema-id": "<anonymous-schema-666>"
                                              },
                                              "member": {
                                                "type": "string",
                                                "format": "uri",
                                                "example": "https://{agent}.example.com/profile/card#me",
                                                "x-parser-schema-id": "<anonymous-schema-667>"
                                              },
                                              "memberId": {
                                                "type": "string",
                                                "description": "the user's MLSID",
                                                "example": "memberid123",
                                                "x-parser-schema-id": "<anonymous-schema-668>"
                                              }
                                            },
                                            "x-parser-schema-id": "<anonymous-schema-663>"
                                          }
                                        ],
                                        "x-parser-schema-id": "MLSMembership"
                                      }
                                    },
                                    "permit": {
                                      "type": "array",
                                      "x-range": "RealEstateLicense",
                                      "items": {
                                        "type": "object",
                                        "example": {
                                          "type": "RealEstateLicense",
                                          "name": "CA-DRE# 02068375",
                                          "identifier": {
                                            "type": "PropertyValue",
                                            "name": "CA-DRE",
                                            "value": "02068375"
                                          },
                                          "issuedBy": {
                                            "type": "State",
                                            "name": "California"
                                          },
                                          "issuedThrough": {
                                            "type": "Service",
                                            "name": "California Department of Real Estate"
                                          },
                                          "validIn": {
                                            "type": "State",
                                            "name": "California"
                                          },
                                          "validFrom": "2019-07-07T10:55:02Z",
                                          "validUntil": "2019-07-07T10:55:02Z"
                                        }
                                      }
                                    }
                                  },
                                  "x-parser-schema-id": "<anonymous-schema-414>"
                                }
                              ],
                              "x-parser-schema-id": "RealEstateOrganization"
                            },
                            {
                              "title": "RealEstateOffice",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "description": "RealEstateOffice",
                                  "enum": [
                                    "RealEstateOffice"
                                  ]
                                },
                                "contactPoint": {
                                  "description": "department or role specific contact points, i.e. relocation.",
                                  "example": [
                                    {
                                      "type": "ContactPoint",
                                      "name": "Relocation",
                                      "telephone": "1-245-880-8222",
                                      "faxNumber": "958-530-3473",
                                      "email": "relocation@example.com"
                                    }
                                  ]
                                },
                                "description": {
                                  "example": "The number on Gotham City Real Estate Company since 1940"
                                },
                                "parentOrganization": {
                                  "description": "Office broker or franchisor.",
                                  "x-range": "RealEstateOrganization"
                                },
                                "subOrganization": {
                                  "type": "array",
                                  "x-range": "RealEstateAgent",
                                  "description": "Agents and teams associated with the office.",
                                  "items": {
                                    "type": "string",
                                    "format": "uri"
                                  }
                                },
                                "geoCoordinates": {
                                  "title": "GeoCoordinates",
                                  "type": "object",
                                  "description": "a lat/long point.",
                                  "x-range": "GeoCoordinates",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "description": "GeoCordinates",
                                      "enum": [
                                        "GeoCoordinates"
                                      ],
                                      "x-parser-schema-id": "<anonymous-schema-631>"
                                    },
                                    "longitude": {
                                      "type": "number",
                                      "description": "The longitude of a location.",
                                      "x-title": "longitude",
                                      "example": 73.98,
                                      "x-parser-schema-id": "<anonymous-schema-287>"
                                    },
                                    "latitude": {
                                      "type": "number",
                                      "description": "The latitude of a location.",
                                      "x-title": "latitude",
                                      "example": 40.75,
                                      "x-parser-schema-id": "<anonymous-schema-278>"
                                    }
                                  }
                                }
                              },
                              "x-parser-schema-id": "<anonymous-schema-773>"
                            }
                          ],
                          "x-parser-schema-id": "RealEstateOffice"
                        },
                        {
                          "allOf": [
                            {
                              "allOf": [
                                {
                                  "$id": "http://realestate.yodata.me/schema/Thing",
                                  "type": "object",
                                  "title": "Thing",
                                  "summary": "The root type of all Things.",
                                  "required": [
                                    "type"
                                  ],
                                  "propertyNames": {
                                    "pattern": "^[a-z@$][a-zA-Z0-9-_]+$",
                                    "x-parser-schema-id": "<anonymous-schema-274>"
                                  },
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "pattern": "^[A-Z][a-zA-Z0-9]+$",
                                      "description": "The item type (Linked-Data @type)",
                                      "x-parser-schema-id": "<anonymous-schema-272>"
                                    },
                                    "@id": {
                                      "type": "string",
                                      "format": "uri",
                                      "description": "the liked data uri for the Thing",
                                      "x-parser-schema-id": "<anonymous-schema-273>"
                                    }
                                  },
                                  "x-parser-schema-id": "Thing"
                                },
                                {
                                  "x-kind": "Organization",
                                  "x-parser-schema-id": "<anonymous-schema-410>"
                                },
                                {
                                  "x-hasSubclass": [
                                    "RealEstateOrganization",
                                    "RealEstateOffice",
                                    "RealEstateAgent"
                                  ],
                                  "x-parser-schema-id": "<anonymous-schema-411>"
                                },
                                {
                                  "x-subClassOf": [
                                    "https://schema.org/Organization"
                                  ],
                                  "properties": {
                                    "address": {
                                      "type": "object",
                                      "x-range": "PostalAddress",
                                      "description": "A physical address.",
                                      "example": {
                                        "type": "PostalAddress",
                                        "name": "Home",
                                        "addressCountry": "USA",
                                        "addressCounty": "Gotham County",
                                        "addressLocality": "Gotham City",
                                        "addressRegion": "New Jersey",
                                        "addressSubdivision": "Gotham Heights",
                                        "postalCode": "10010",
                                        "postOfficeBoxNumber": "Box 1234",
                                        "streetAddress": "1007 Mountain Gate Rd"
                                      },
                                      "x-parser-schema-id": "<anonymous-schema-370>"
                                    },
                                    "availableLanguage": {
                                      "title": "availableLanguage",
                                      "type": "array",
                                      "description": "Please use one of the language codes from the IETF BCP 47 standard.",
                                      "x-range": "Language",
                                      "items": {
                                        "$id": "htttp://realestate.yodata.me/schema/Language.yaml",
                                        "description": "a written or spoken Language",
                                        "title": "Language",
                                        "type": "object",
                                        "required": [
                                          "type",
                                          "name",
                                          "additionalName"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "Language",
                                            "x-parser-schema-id": "<anonymous-schema-124>"
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "the display name of the language",
                                            "x-parser-schema-id": "<anonymous-schema-125>"
                                          },
                                          "additionalName": {
                                            "type": "string",
                                            "description": "BCP 47 language code",
                                            "x-parser-schema-id": "<anonymous-schema-126>"
                                          }
                                        },
                                        "examples": [
                                          {
                                            "type": "Language",
                                            "name": "English",
                                            "additionalName": "en-us"
                                          },
                                          {
                                            "type": "Language",
                                            "name": "Spanish",
                                            "additionalName": "es"
                                          },
                                          {
                                            "type": "Language",
                                            "name": "French",
                                            "additionalName": "fr"
                                          },
                                          {
                                            "type": "Language",
                                            "name": "German",
                                            "additionalName": "de"
                                          },
                                          {
                                            "type": "Language",
                                            "name": "Italian",
                                            "additionalName": "it"
                                          },
                                          {
                                            "type": "Language",
                                            "name": "Japanese",
                                            "additionalName": "ja"
                                          },
                                          {
                                            "type": "Language",
                                            "name": "Korean",
                                            "additionalName": "ko"
                                          },
                                          {
                                            "type": "Language",
                                            "name": "Portuguese",
                                            "additionalName": "pt"
                                          },
                                          {
                                            "type": "Language",
                                            "name": "Russian",
                                            "additionalName": "ru"
                                          },
                                          {
                                            "type": "Language",
                                            "name": "Chinese",
                                            "additionalName": "zh"
                                          },
                                          {
                                            "type": "Language",
                                            "name": "Arabic",
                                            "additionalName": "ar"
                                          },
                                          {
                                            "type": "Language",
                                            "name": "Hindi",
                                            "additionalName": "hi"
                                          },
                                          {
                                            "type": "Language",
                                            "name": "Bengali",
                                            "additionalName": "bn"
                                          },
                                          {
                                            "type": "Language",
                                            "name": "Portuguese",
                                            "additionalName": "pt"
                                          }
                                        ],
                                        "x-parser-schema-id": "Language"
                                      }
                                    },
                                    "branchCode": {
                                      "description": "A short textual code that uniquely identifies a place of business.",
                                      "example": "for BHHS profile events, see additionalProperty.OfficeId",
                                      "type": "string"
                                    },
                                    "certification": {
                                      "$id": "http://realestate.yodata.me/schema/certification",
                                      "title": "certifications",
                                      "description": "certifications granted to a person or organization",
                                      "type": "array",
                                      "items": [
                                        {
                                          "type": "object",
                                          "title": "Certification",
                                          "description": "A certification issued by an organization to an individual or business.",
                                          "x-range": "Certification",
                                          "properties": {
                                            "type": {
                                              "description": "Certification",
                                              "type": "string",
                                              "enum": [
                                                "Certification"
                                              ],
                                              "x-parser-schema-id": "<anonymous-schema-594>"
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "the name of the Certification",
                                              "example": "e-Agent Certified",
                                              "x-parser-schema-id": "<anonymous-schema-595>"
                                            },
                                            "issuedBy": {
                                              "type": "object",
                                              "x-range": "RealEstateOrganization",
                                              "description": "the issuing authority",
                                              "properties": {
                                                "type": {
                                                  "enum": [
                                                    "RealEstateOrganization"
                                                  ],
                                                  "type": "string",
                                                  "description": "The item type (Linked-Data @type)",
                                                  "x-parser-schema-id": "<anonymous-schema-375>"
                                                },
                                                "id": {
                                                  "example": "https://example.com/profile/card#me",
                                                  "type": "string",
                                                  "format": "uri",
                                                  "description": "Linked-Data URI (@id)",
                                                  "x-parser-schema-id": "<anonymous-schema-376>"
                                                },
                                                "name": {
                                                  "type": "string",
                                                  "description": "name of the issuing organization",
                                                  "example": "Gotham City Real Estate",
                                                  "x-parser-schema-id": "<anonymous-schema-377>"
                                                }
                                              },
                                              "x-parser-schema-id": "<anonymous-schema-374>"
                                            },
                                            "issuedTo": {
                                              "x-range": "RealEstateAgent",
                                              "type": "object",
                                              "description": "the subject",
                                              "properties": {
                                                "type": {
                                                  "enum": [
                                                    "RealEstateAgent"
                                                  ],
                                                  "type": "string",
                                                  "description": "The item type (Linked-Data @type)",
                                                  "x-parser-schema-id": "<anonymous-schema-379>"
                                                },
                                                "id": {
                                                  "type": "string",
                                                  "format": "uri",
                                                  "description": "Linked-Data URI (@id)",
                                                  "x-parser-schema-id": "<anonymous-schema-380>"
                                                },
                                                "name": {
                                                  "type": "string",
                                                  "description": "the name of the item",
                                                  "x-parser-schema-id": "<anonymous-schema-92>"
                                                }
                                              },
                                              "x-parser-schema-id": "<anonymous-schema-596>"
                                            }
                                          },
                                          "x-parser-schema-id": "Certification"
                                        }
                                      ]
                                    },
                                    "contactPoint": {
                                      "$id": "http://realestate.yodata.me/definitions/contactPoint.json",
                                      "type": "array",
                                      "description": "a named point of contact - telephone, email, faxNumber, and/or url for the entity",
                                      "items": {
                                        "$id": "htttp://realestate.yodata.me/schema/ContactPoint.json",
                                        "title": "ContactPoint",
                                        "description": "A point of contact for the entity. By convention in the real estate domain, ContactPoints\nare preferred over telephone, email, and faxNumber so the ContactPoint.name property can be used to label values\nfor example, Work Telephone, Home, as named contactPoint values.\n",
                                        "type": "object",
                                        "required": [
                                          "type",
                                          "name"
                                        ],
                                        "minProperties": 3,
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "ContactPoint",
                                            "x-parser-schema-id": "<anonymous-schema-110>"
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "a label for the contactPoint, i.e. 'Work', or 'Home'",
                                            "examples": [
                                              "Work",
                                              "Home",
                                              "Vacation",
                                              "Bob's Cell",
                                              "Alice's Work"
                                            ],
                                            "x-parser-schema-id": "<anonymous-schema-111>"
                                          },
                                          "telephone": {
                                            "type": "string",
                                            "x-faker": "phone.phoneNumber",
                                            "examples": [
                                              "555-555-5555",
                                              "555-555-5555 x123",
                                              "555-555-5555 ext. 123",
                                              "+1-555-555-5555"
                                            ],
                                            "x-parser-schema-id": "<anonymous-schema-112>"
                                          },
                                          "faxNumber": {
                                            "type": "string",
                                            "x-faker": "phone.phoneNumber",
                                            "examples": [
                                              "555-555-5555",
                                              "555-555-5555 x123",
                                              "555-555-5555 ext. 123",
                                              "+1-555-555-5555"
                                            ],
                                            "x-parser-schema-id": "<anonymous-schema-113>"
                                          },
                                          "email": {
                                            "description": "an email address for the item.",
                                            "type": "string",
                                            "format": "email",
                                            "x-faker": "internet.email",
                                            "examples": [
                                              "bob@example.com",
                                              "alice@example.com"
                                            ],
                                            "x-parser-schema-id": "<anonymous-schema-114>"
                                          },
                                          "url": {
                                            "description": "primary URL for the item.",
                                            "type": "string",
                                            "format": "uri",
                                            "example": "https://www.facebook.com/hallandoates",
                                            "x-parser-schema-id": "<anonymous-schema-115>"
                                          }
                                        },
                                        "x-parser-schema-id": "ContactPoint"
                                      }
                                    },
                                    "email": {
                                      "type": "string",
                                      "format": "email",
                                      "x-faker": "internet.email",
                                      "x-parser-schema-id": "<anonymous-schema-93>"
                                    },
                                    "faxNumber": {
                                      "type": "string",
                                      "description": "Do people still use fax machines?",
                                      "x-faker": "phone.phoneNumber",
                                      "x-parser-schema-id": "<anonymous-schema-117>"
                                    },
                                    "image": {
                                      "title": "image",
                                      "description": "an ImageObject or URI reference to an image on the web.",
                                      "type": "array",
                                      "x-range": [
                                        "ImageObject"
                                      ],
                                      "items": [
                                        {
                                          "type": "object",
                                          "allOf": [
                                            {
                                              "title": "MediaObject",
                                              "description": "an image, video or document availble for download",
                                              "x-subclass": [
                                                "ImageObject",
                                                "DigitalDocument"
                                              ],
                                              "allOf": [
                                                {
                                                  "$id": "http://realestate.yodata.me/schema/Thing",
                                                  "type": "object",
                                                  "title": "Thing",
                                                  "summary": "The root type of all Things.",
                                                  "required": [
                                                    "type"
                                                  ],
                                                  "propertyNames": {
                                                    "pattern": "^[a-z@$][a-zA-Z0-9-_]+$",
                                                    "x-parser-schema-id": "<anonymous-schema-274>"
                                                  },
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "pattern": "^[A-Z][a-zA-Z0-9]+$",
                                                      "description": "The item type (Linked-Data @type)",
                                                      "x-parser-schema-id": "<anonymous-schema-272>"
                                                    },
                                                    "@id": {
                                                      "type": "string",
                                                      "format": "uri",
                                                      "description": "the liked data uri for the Thing",
                                                      "x-parser-schema-id": "<anonymous-schema-273>"
                                                    }
                                                  },
                                                  "x-parser-schema-id": "Thing"
                                                },
                                                {
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "enum": [
                                                        "MediaObject",
                                                        "ImageObject",
                                                        "DigitalDocument"
                                                      ]
                                                    },
                                                    "id": {
                                                      "description": "the URL to access the item.",
                                                      "example": "http://user.example.com/public/logo/fileName.zip",
                                                      "type": "string",
                                                      "format": "uri"
                                                    },
                                                    "name": {
                                                      "type": "string",
                                                      "description": "the file name of the object.",
                                                      "example": "fileName.zip"
                                                    },
                                                    "encodingFormat": {
                                                      "type": "string",
                                                      "description": "MIME type",
                                                      "example": "application/zip"
                                                    },
                                                    "about": {
                                                      "type": "string",
                                                      "format": "uri",
                                                      "description": "URI to the subject of the image or logo",
                                                      "example": "http://user.example.com/profile/card#me"
                                                    },
                                                    "url": {
                                                      "type": "string",
                                                      "format": "uri",
                                                      "description": "URL of the image content",
                                                      "example": "http://user.example.com/public/profile/image.jpg"
                                                    }
                                                  },
                                                  "x-parser-schema-id": "<anonymous-schema-275>"
                                                }
                                              ],
                                              "x-parser-schema-id": "MediaObject"
                                            },
                                            {
                                              "title": "ImageObject",
                                              "x-range": "ImageObject",
                                              "properties": {
                                                "type": {
                                                  "enum": [
                                                    "ImageObject"
                                                  ],
                                                  "example": "ImageObject"
                                                },
                                                "id": {
                                                  "example": "http://user.example.com/public/logo/image.jpg"
                                                },
                                                "name": {
                                                  "example": "image.jpg"
                                                },
                                                "encodingFormat": {
                                                  "example": "image/jpeg"
                                                }
                                              },
                                              "x-parser-schema-id": "<anonymous-schema-276>"
                                            }
                                          ],
                                          "x-parser-schema-id": "<anonymous-schema-271>"
                                        }
                                      ]
                                    },
                                    "logo": {
                                      "description": "a logo associated with the organization.",
                                      "items": {
                                        "allOf": [
                                          {
                                            "type": "object",
                                            "title": "DigitalDocument",
                                            "x-range": "DigitalDocument",
                                            "description": "an electronic file.",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "DigitalDocument"
                                                ],
                                                "x-parser-schema-id": "<anonymous-schema-621>"
                                              },
                                              "id": {
                                                "type": "string",
                                                "example": "http://user.example.com/public/logo/archive.zip",
                                                "x-parser-schema-id": "<anonymous-schema-622>"
                                              },
                                              "name": {
                                                "type": "string",
                                                "description": "document name or title",
                                                "example": "archive.zip",
                                                "x-parser-schema-id": "<anonymous-schema-623>"
                                              },
                                              "encodingFormat": {
                                                "type": "string",
                                                "description": "[ISO Media Type](https://www.iana.org/assignments/media-types/media-types.xhtml)",
                                                "example": "application/zip",
                                                "x-parser-schema-id": "<anonymous-schema-624>"
                                              },
                                              "about": {
                                                "type": "object",
                                                "description": "subject of the Document",
                                                "x-range": "Thing",
                                                "example": {
                                                  "type": "RealEstateTransaction",
                                                  "identifier": {
                                                    "bmsTransactionId": "xxxx"
                                                  }
                                                },
                                                "x-parser-schema-id": "<anonymous-schema-625>"
                                              },
                                              "url": {
                                                "type": "string",
                                                "description": "public URL of the object",
                                                "example": "https://example.com",
                                                "x-parser-schema-id": "<anonymous-schema-626>"
                                              }
                                            },
                                            "x-parser-schema-id": "DigitalDocument"
                                          },
                                          {
                                            "description": "an associated logo",
                                            "type": "object"
                                          }
                                        ],
                                        "type": "object"
                                      },
                                      "type": "array",
                                      "x-range": [
                                        "ImageObject",
                                        "DigitalDocument"
                                      ]
                                    },
                                    "name": {
                                      "description": "Name or DBA.",
                                      "type": "string"
                                    },
                                    "parentOrganization": {
                                      "items": {
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "type": "array"
                                    },
                                    "subOrganization": {
                                      "description": "a child organization",
                                      "x-range": [
                                        "RealEstateOrganization"
                                      ],
                                      "type": "array",
                                      "items": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "http://org.example.com/profile/card#me"
                                      }
                                    },
                                    "telephone": {
                                      "type": "string",
                                      "description": "Primary phone number.",
                                      "example": "+15558675309",
                                      "x-parser-schema-id": "<anonymous-schema-128>"
                                    },
                                    "type": {
                                      "enum": [
                                        "Organization"
                                      ],
                                      "type": "string"
                                    },
                                    "url": {
                                      "description": "primary website/url for the entity.",
                                      "format": "uri",
                                      "type": "string"
                                    }
                                  },
                                  "x-parser-schema-id": "<anonymous-schema-412>"
                                }
                              ],
                              "x-parser-schema-id": "Organization"
                            },
                            {
                              "title": "RealEstateOrganization",
                              "description": "A real estate franchisor, broker or business",
                              "x-range": "RealEstateOrganization",
                              "properties": {
                                "type": {
                                  "description": "RealEstateOrganzation",
                                  "enum": [
                                    "RealEstateOrganization",
                                    "RealEstateOffice",
                                    "RealEstateAgent"
                                  ],
                                  "example": "RealEstateOrganization"
                                },
                                "areaServed": {
                                  "type": "object",
                                  "description": "the physical areas that make up the ServiceArea",
                                  "x-range": [
                                    "City",
                                    "PostalCodeArea"
                                  ],
                                  "example": {
                                    "type": "PostalCode",
                                    "postalCode": "91371",
                                    "addressLocality": "Woodland Hills",
                                    "addressCounty": "Los Angeles",
                                    "addressRegion": "CA",
                                    "addressCountry": "US"
                                  }
                                },
                                "description": {
                                  "example": "The number on Gotham City Real Estate Company since 1940",
                                  "type": "string",
                                  "description": "description of the item."
                                },
                                "parentOrganization": {
                                  "type": "array",
                                  "x-range": "RealEstateOrganization",
                                  "description": "A franchisor or affiliate network of which this organization plays a membership role.",
                                  "items": {
                                    "type": "string",
                                    "format": "uri"
                                  }
                                },
                                "numberOfSubOrganizations": {
                                  "type": "number",
                                  "description": "the number of offices for an affiliate."
                                },
                                "member": {
                                  "title": "member",
                                  "description": "A member of an Organization or a ProgramMembership. Organizations can be members of organizations; ProgramMembership is typically for individuals.",
                                  "type": "array",
                                  "x-range": [
                                    "OrganizationRole",
                                    "URI"
                                  ],
                                  "items": {
                                    "anyOf": [
                                      {
                                        "title": "OrganizationRole",
                                        "type": "object",
                                        "description": "describes a role played by a member and a group or organization.",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "description": "a role played by the member in the memberOf group",
                                            "enum": [
                                              "OrganizationRole"
                                            ],
                                            "x-parser-schema-id": "<anonymous-schema-391>"
                                          },
                                          "roleName": {
                                            "type": "string",
                                            "description": "the role name",
                                            "example": "Owner",
                                            "x-parser-schema-id": "<anonymous-schema-392>"
                                          },
                                          "memberOf": {
                                            "description": "the org or group where the role is performed",
                                            "type": "object",
                                            "example": {
                                              "type": "RealEstateOrganization",
                                              "id": "http://orgid.example.com/profile/card#me"
                                            },
                                            "x-parser-schema-id": "<anonymous-schema-393>"
                                          },
                                          "member": {
                                            "description": "member object or id",
                                            "type": "string",
                                            "format": "uri",
                                            "example": "https://memberid.example.com/profile/card#me",
                                            "x-parser-schema-id": "<anonymous-schema-394>"
                                          },
                                          "startDate": {
                                            "type": "string",
                                            "format": "date-time",
                                            "description": "date the member began performing this role",
                                            "x-parser-schema-id": "<anonymous-schema-395>"
                                          },
                                          "endDate": {
                                            "type": "string",
                                            "format": "date-time",
                                            "description": "date the member stopped performing the role",
                                            "x-parser-schema-id": "<anonymous-schema-396>"
                                          }
                                        },
                                        "x-parser-schema-id": "OrganizationRole"
                                      },
                                      {
                                        "type": "string",
                                        "format": "uri"
                                      }
                                    ]
                                  }
                                },
                                "memberOf": {
                                  "x-range": [
                                    "OrganizationRole",
                                    "MLSMembership"
                                  ],
                                  "description": "An Organization (or ProgramMembership) to which this Person or Organization belongs.",
                                  "type": "array",
                                  "items": {
                                    "allOf": [
                                      {
                                        "title": "OrganizationRole",
                                        "type": "object",
                                        "description": "describes a role played by a member and a group or organization.",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "description": "a role played by the member in the memberOf group",
                                            "enum": [
                                              "OrganizationRole"
                                            ],
                                            "x-parser-schema-id": "<anonymous-schema-391>"
                                          },
                                          "roleName": {
                                            "type": "string",
                                            "description": "the role name",
                                            "example": "Owner",
                                            "x-parser-schema-id": "<anonymous-schema-392>"
                                          },
                                          "memberOf": {
                                            "description": "the org or group where the role is performed",
                                            "type": "object",
                                            "example": {
                                              "type": "RealEstateOrganization",
                                              "id": "http://orgid.example.com/profile/card#me"
                                            },
                                            "x-parser-schema-id": "<anonymous-schema-393>"
                                          },
                                          "member": {
                                            "description": "member object or id",
                                            "type": "string",
                                            "format": "uri",
                                            "example": "https://memberid.example.com/profile/card#me",
                                            "x-parser-schema-id": "<anonymous-schema-394>"
                                          },
                                          "startDate": {
                                            "type": "string",
                                            "format": "date-time",
                                            "description": "date the member began performing this role",
                                            "x-parser-schema-id": "<anonymous-schema-395>"
                                          },
                                          "endDate": {
                                            "type": "string",
                                            "format": "date-time",
                                            "description": "date the member stopped performing the role",
                                            "x-parser-schema-id": "<anonymous-schema-396>"
                                          }
                                        },
                                        "x-parser-schema-id": "OrganizationRole"
                                      },
                                      {
                                        "type": "object",
                                        "title": "MLSMembership",
                                        "description": "a membership relationship",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "description": "an MLS member relationship",
                                            "enum": [
                                              "MLSMembership"
                                            ],
                                            "example": "MLSMembership",
                                            "x-parser-schema-id": "<anonymous-schema-664>"
                                          },
                                          "roleName": {
                                            "type": "string",
                                            "example": "MLSMember",
                                            "x-parser-schema-id": "<anonymous-schema-665>"
                                          },
                                          "memberOf": {
                                            "type": "object",
                                            "x-range": "MultipleListingService",
                                            "example": {
                                              "type": "MultipleListingService",
                                              "name": "GreatScottMLS"
                                            },
                                            "x-parser-schema-id": "<anonymous-schema-666>"
                                          },
                                          "member": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "https://{agent}.example.com/profile/card#me",
                                            "x-parser-schema-id": "<anonymous-schema-667>"
                                          },
                                          "memberId": {
                                            "type": "string",
                                            "description": "the user's MLSID",
                                            "example": "memberid123",
                                            "x-parser-schema-id": "<anonymous-schema-668>"
                                          }
                                        },
                                        "x-parser-schema-id": "<anonymous-schema-663>"
                                      }
                                    ],
                                    "x-parser-schema-id": "MLSMembership"
                                  }
                                },
                                "permit": {
                                  "type": "array",
                                  "x-range": "RealEstateLicense",
                                  "items": {
                                    "type": "object",
                                    "example": {
                                      "type": "RealEstateLicense",
                                      "name": "CA-DRE# 02068375",
                                      "identifier": {
                                        "type": "PropertyValue",
                                        "name": "CA-DRE",
                                        "value": "02068375"
                                      },
                                      "issuedBy": {
                                        "type": "State",
                                        "name": "California"
                                      },
                                      "issuedThrough": {
                                        "type": "Service",
                                        "name": "California Department of Real Estate"
                                      },
                                      "validIn": {
                                        "type": "State",
                                        "name": "California"
                                      },
                                      "validFrom": "2019-07-07T10:55:02Z",
                                      "validUntil": "2019-07-07T10:55:02Z"
                                    }
                                  }
                                }
                              },
                              "x-parser-schema-id": "<anonymous-schema-414>"
                            }
                          ],
                          "x-parser-schema-id": "RealEstateOrganization"
                        }
                      ]
                    }
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-363>"
              },
              "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-original-payload": {
                "data": {
                  "x-range": "AddAction",
                  "properties": {
                    "type": {
                      "const": "AddAction"
                    },
                    "object": {
                      "oneOf": [
                        {
                          "$id": "http://realestate.yodata.me/schema/RealEstateAgent",
                          "title": "RealEstateAgent",
                          "description": "A real estate agent who represents buyers and sellers",
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "RealEstateAgent"
                            },
                            "additionalName": {
                              "title": "additionalName",
                              "description": "any other name(s) associated with the entity, i.e. nickname, middle name, maiden name, etc. For multiple names, use a comma without space as a separator.",
                              "type": "string",
                              "examples": [
                                "Johnny,John",
                                "Prince,The Artist Formerly Known as Prince,The Artist",
                                "Babs,Barbara",
                                "Katheryn Elizabeth Hudson,Katy Perry",
                                "Destiny Hope Cyrus,Miley Cyrus"
                              ]
                            },
                            "address": {
                              "type": "object",
                              "x-range": "PostalAddress",
                              "description": "A physical address.",
                              "example": {
                                "type": "PostalAddress",
                                "name": "Home",
                                "addressCountry": "USA",
                                "addressCounty": "Gotham County",
                                "addressLocality": "Gotham City",
                                "addressRegion": "New Jersey",
                                "addressSubdivision": "Gotham Heights",
                                "postalCode": "10010",
                                "postOfficeBoxNumber": "Box 1234",
                                "streetAddress": "1007 Mountain Gate Rd"
                              }
                            },
                            "certification": {
                              "type": "object",
                              "title": "Certification",
                              "description": "A certification issued by an organization to an individual or business.",
                              "x-range": "Certification",
                              "properties": {
                                "type": {
                                  "description": "Certification",
                                  "type": "string",
                                  "enum": [
                                    "Certification"
                                  ]
                                },
                                "name": {
                                  "type": "string",
                                  "description": "the name of the Certification",
                                  "example": "e-Agent Certified"
                                },
                                "issuedBy": {
                                  "type": "object",
                                  "x-range": "RealEstateOrganization",
                                  "description": "the issuing authority",
                                  "properties": {
                                    "type": {
                                      "enum": [
                                        "RealEstateOrganization"
                                      ],
                                      "type": "string",
                                      "description": "The item type (Linked-Data @type)"
                                    },
                                    "id": {
                                      "example": "https://example.com/profile/card#me",
                                      "type": "string",
                                      "format": "uri",
                                      "description": "Linked-Data URI (@id)"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "name of the issuing organization",
                                      "example": "Gotham City Real Estate"
                                    }
                                  }
                                },
                                "issuedTo": {
                                  "x-range": "RealEstateAgent",
                                  "type": "object",
                                  "description": "the subject",
                                  "properties": {
                                    "type": {
                                      "enum": [
                                        "RealEstateAgent"
                                      ],
                                      "type": "string",
                                      "description": "The item type (Linked-Data @type)"
                                    },
                                    "id": {
                                      "type": "string",
                                      "format": "uri",
                                      "description": "Linked-Data URI (@id)"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "the name of the item"
                                    }
                                  }
                                }
                              }
                            },
                            "contactPoint": {
                              "$id": "htttp://realestate.yodata.me/schema/ContactPoint.json",
                              "title": "ContactPoint",
                              "description": "A point of contact for the entity. By convention in the real estate domain, ContactPoints\nare preferred over telephone, email, and faxNumber so the ContactPoint.name property can be used to label values\nfor example, Work Telephone, Home, as named contactPoint values.\n",
                              "type": "object",
                              "required": [
                                "type",
                                "name"
                              ],
                              "minProperties": 3,
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "const": "ContactPoint"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "a label for the contactPoint, i.e. 'Work', or 'Home'",
                                  "examples": [
                                    "Work",
                                    "Home",
                                    "Vacation",
                                    "Bob's Cell",
                                    "Alice's Work"
                                  ]
                                },
                                "telephone": {
                                  "type": "string",
                                  "x-faker": "phone.phoneNumber",
                                  "examples": [
                                    "555-555-5555",
                                    "555-555-5555 x123",
                                    "555-555-5555 ext. 123",
                                    "+1-555-555-5555"
                                  ]
                                },
                                "faxNumber": {
                                  "type": "string",
                                  "x-faker": "phone.phoneNumber",
                                  "examples": [
                                    "555-555-5555",
                                    "555-555-5555 x123",
                                    "555-555-5555 ext. 123",
                                    "+1-555-555-5555"
                                  ]
                                },
                                "email": {
                                  "description": "an email address for the item.",
                                  "type": "string",
                                  "format": "email",
                                  "x-faker": "internet.email",
                                  "examples": [
                                    "bob@example.com",
                                    "alice@example.com"
                                  ]
                                },
                                "url": {
                                  "description": "primary URL for the item.",
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://www.facebook.com/hallandoates"
                                }
                              }
                            },
                            "email": {
                              "type": "string",
                              "format": "email",
                              "x-faker": "internet.email"
                            },
                            "familyName": {
                              "$id": "htttp://realestate.yodata.me/schema/familyName.yaml",
                              "type": "string",
                              "title": "Family Name",
                              "description": "Last Name of a person",
                              "x-faker": "name.lastName",
                              "maxLength": 50,
                              "externalDocs": {
                                "description": "Family Name",
                                "url": "https://schema.org/familyName"
                              },
                              "examples": [
                                "Smith",
                                "Jones",
                                "Parker",
                                "Monk",
                                "Brown",
                                "Miller",
                                "Davis",
                                "Wilson",
                                "Fitzgerald",
                                "Johnson",
                                "Williams"
                              ]
                            },
                            "givenName": {
                              "type": "string",
                              "description": "First Name of a person",
                              "x-faker": "name.firstName",
                              "examples": [
                                "John",
                                "Jane",
                                "Mary",
                                "Joseph",
                                "William",
                                "David",
                                "Richard",
                                "Charles",
                                "Thomas",
                                "Christopher",
                                "Daniel",
                                "Matthew",
                                "Anthony",
                                "Donald",
                                "Mark",
                                "Paul",
                                "Steven",
                                "Andrew",
                                "Kenneth",
                                "George",
                                "Joshua",
                                "Kevin",
                                "Brian",
                                "Edward",
                                "Ronald",
                                "Timothy",
                                "Jason",
                                "Jeffrey",
                                "Ryan",
                                "Jacob"
                              ]
                            },
                            "id": {
                              "type": "string",
                              "format": "uri",
                              "description": "Linked-Data URI (@id)"
                            },
                            "identifier": {
                              "title": "identifier",
                              "type": "object",
                              "description": "identifier assigned to a contact by the vendor who originally created the contact",
                              "examples": [
                                {
                                  "salesforceid": "0031U00002XW1QWQA1"
                                },
                                {
                                  "vendoraid": "123456"
                                },
                                {
                                  "originating_system_id": "123456"
                                }
                              ]
                            },
                            "image": {
                              "title": "image",
                              "description": "an ImageObject or URI reference to an image on the web.",
                              "type": "array",
                              "x-range": [
                                "ImageObject"
                              ],
                              "items": [
                                {
                                  "type": "object",
                                  "allOf": [
                                    {
                                      "title": "MediaObject",
                                      "description": "an image, video or document availble for download",
                                      "x-subclass": [
                                        "ImageObject",
                                        "DigitalDocument"
                                      ],
                                      "allOf": [
                                        {
                                          "$id": "http://realestate.yodata.me/schema/Thing",
                                          "type": "object",
                                          "title": "Thing",
                                          "summary": "The root type of all Things.",
                                          "required": [
                                            "type"
                                          ],
                                          "propertyNames": {
                                            "pattern": "^[a-z@$][a-zA-Z0-9-_]+$"
                                          },
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "pattern": "^[A-Z][a-zA-Z0-9]+$",
                                              "description": "The item type (Linked-Data @type)"
                                            },
                                            "@id": {
                                              "type": "string",
                                              "format": "uri",
                                              "description": "the liked data uri for the Thing"
                                            }
                                          }
                                        },
                                        {
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "enum": [
                                                "MediaObject",
                                                "ImageObject",
                                                "DigitalDocument"
                                              ]
                                            },
                                            "id": {
                                              "description": "the URL to access the item.",
                                              "example": "http://user.example.com/public/logo/fileName.zip",
                                              "type": "string",
                                              "format": "uri"
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "the file name of the object.",
                                              "example": "fileName.zip"
                                            },
                                            "encodingFormat": {
                                              "type": "string",
                                              "description": "MIME type",
                                              "example": "application/zip"
                                            },
                                            "about": {
                                              "type": "string",
                                              "format": "uri",
                                              "description": "URI to the subject of the image or logo",
                                              "example": "http://user.example.com/profile/card#me"
                                            },
                                            "url": {
                                              "type": "string",
                                              "format": "uri",
                                              "description": "URL of the image content",
                                              "example": "http://user.example.com/public/profile/image.jpg"
                                            }
                                          }
                                        }
                                      ]
                                    },
                                    {
                                      "title": "ImageObject",
                                      "x-range": "ImageObject",
                                      "properties": {
                                        "type": {
                                          "enum": [
                                            "ImageObject"
                                          ],
                                          "example": "ImageObject"
                                        },
                                        "id": {
                                          "example": "http://user.example.com/public/logo/image.jpg"
                                        },
                                        "name": {
                                          "example": "image.jpg"
                                        },
                                        "encodingFormat": {
                                          "example": "image/jpeg"
                                        }
                                      }
                                    }
                                  ]
                                }
                              ]
                            },
                            "jobTitle": {
                              "type": "array",
                              "items": {
                                "title": "jobTitle",
                                "description": "The job title of the person (for example, Financial Manager).",
                                "type": "string",
                                "x-faker": "name.jobTitle",
                                "examples": [
                                  "CEO",
                                  "Sales Manager",
                                  "Escrow Officer",
                                  "Transaction Coordinator",
                                  "Director of Marketing",
                                  "Senior Loan Officer",
                                  "Loan Officer",
                                  "Sanitation Engineer",
                                  "Owner",
                                  "Cofounder",
                                  "Founder",
                                  "President",
                                  "Vice President of Sales",
                                  null,
                                  null,
                                  null,
                                  null,
                                  null,
                                  null,
                                  null,
                                  null,
                                  null,
                                  null
                                ]
                              }
                            },
                            "memberOf": {
                              "title": "memberOf",
                              "description": "an Organization (or ProgramMembership) to which this Person or Organization belongs.",
                              "type": "array",
                              "x-range": [
                                "OrganizationRole",
                                "URI"
                              ],
                              "items": {
                                "anyOf": [
                                  {
                                    "title": "OrganizationRole",
                                    "type": "object",
                                    "description": "describes a role played by a member and a group or organization.",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "description": "a role played by the member in the memberOf group",
                                        "enum": [
                                          "OrganizationRole"
                                        ]
                                      },
                                      "roleName": {
                                        "type": "string",
                                        "description": "the role name",
                                        "example": "Owner"
                                      },
                                      "memberOf": {
                                        "description": "the org or group where the role is performed",
                                        "type": "object",
                                        "example": {
                                          "type": "RealEstateOrganization",
                                          "id": "http://orgid.example.com/profile/card#me"
                                        }
                                      },
                                      "member": {
                                        "description": "member object or id",
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://memberid.example.com/profile/card#me"
                                      },
                                      "startDate": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "date the member began performing this role"
                                      },
                                      "endDate": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "date the member stopped performing the role"
                                      }
                                    }
                                  },
                                  {
                                    "type": "string",
                                    "format": "uri"
                                  }
                                ]
                              }
                            },
                            "name": {
                              "type": "string",
                              "description": "the name of the item"
                            },
                            "parentOrganization": {
                              "$id": "http://realestate.yodata.me/schema/parentOrganization",
                              "title": "parentOrganization",
                              "description": "organizations of which this org is a part.",
                              "type": "array",
                              "items": {
                                "type": "string",
                                "format": "uri"
                              }
                            },
                            "permit": {
                              "title": "Permit",
                              "description": "A permit issued by an organization to an individual or business.",
                              "type": "object",
                              "x-hasSubclass": [
                                "RealEstateLicense"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "description": "Permit type.",
                                  "enum": [
                                    "Permit"
                                  ]
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Common or display value of the Permit.",
                                  "example": "DRE Number"
                                },
                                "issuedBy": {
                                  "type": "object",
                                  "x-range": "Organization",
                                  "description": "The issuing authority",
                                  "example": {
                                    "type": "State",
                                    "name": "California"
                                  }
                                },
                                "issuedThrough": {
                                  "type": "object",
                                  "description": "the service through which the permit was granted",
                                  "example": {
                                    "type": "Service",
                                    "name": "Department of Real Estate"
                                  }
                                },
                                "validIn": {
                                  "type": "object",
                                  "x-range": "Place"
                                },
                                "validFrom": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "start date"
                                },
                                "validUntil": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "end date"
                                }
                              }
                            },
                            "subOrganization": {
                              "$id": "http://realestate.yodata.me/schema/subOrganization",
                              "title": "subOrganization",
                              "description": "child organizations of the organization",
                              "type": "array",
                              "items": {
                                "type": "string",
                                "format": "uri"
                              }
                            },
                            "url": {
                              "title": "url",
                              "type": "string",
                              "format": "uri",
                              "description": "URL of the item."
                            }
                          }
                        },
                        {
                          "type": "object",
                          "description": "A real estate office / place of business.",
                          "allOf": [
                            {
                              "allOf": [
                                {
                                  "allOf": [
                                    {
                                      "$id": "http://realestate.yodata.me/schema/Thing",
                                      "type": "object",
                                      "title": "Thing",
                                      "summary": "The root type of all Things.",
                                      "required": [
                                        "type"
                                      ],
                                      "propertyNames": {
                                        "pattern": "^[a-z@$][a-zA-Z0-9-_]+$"
                                      },
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "pattern": "^[A-Z][a-zA-Z0-9]+$",
                                          "description": "The item type (Linked-Data @type)"
                                        },
                                        "@id": {
                                          "type": "string",
                                          "format": "uri",
                                          "description": "the liked data uri for the Thing"
                                        }
                                      }
                                    },
                                    {
                                      "x-kind": "Organization"
                                    },
                                    {
                                      "x-hasSubclass": [
                                        "RealEstateOrganization",
                                        "RealEstateOffice",
                                        "RealEstateAgent"
                                      ]
                                    },
                                    {
                                      "x-subClassOf": [
                                        "https://schema.org/Organization"
                                      ],
                                      "properties": {
                                        "address": {
                                          "type": "object",
                                          "x-range": "PostalAddress",
                                          "description": "A physical address.",
                                          "example": {
                                            "type": "PostalAddress",
                                            "name": "Home",
                                            "addressCountry": "USA",
                                            "addressCounty": "Gotham County",
                                            "addressLocality": "Gotham City",
                                            "addressRegion": "New Jersey",
                                            "addressSubdivision": "Gotham Heights",
                                            "postalCode": "10010",
                                            "postOfficeBoxNumber": "Box 1234",
                                            "streetAddress": "1007 Mountain Gate Rd"
                                          }
                                        },
                                        "availableLanguage": {
                                          "title": "availableLanguage",
                                          "type": "array",
                                          "description": "Please use one of the language codes from the IETF BCP 47 standard.",
                                          "x-range": "Language",
                                          "items": {
                                            "$id": "htttp://realestate.yodata.me/schema/Language.yaml",
                                            "description": "a written or spoken Language",
                                            "title": "Language",
                                            "type": "object",
                                            "required": [
                                              "type",
                                              "name",
                                              "additionalName"
                                            ],
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "const": "Language"
                                              },
                                              "name": {
                                                "type": "string",
                                                "description": "the display name of the language"
                                              },
                                              "additionalName": {
                                                "type": "string",
                                                "description": "BCP 47 language code"
                                              }
                                            },
                                            "examples": [
                                              {
                                                "type": "Language",
                                                "name": "English",
                                                "additionalName": "en-us"
                                              },
                                              {
                                                "type": "Language",
                                                "name": "Spanish",
                                                "additionalName": "es"
                                              },
                                              {
                                                "type": "Language",
                                                "name": "French",
                                                "additionalName": "fr"
                                              },
                                              {
                                                "type": "Language",
                                                "name": "German",
                                                "additionalName": "de"
                                              },
                                              {
                                                "type": "Language",
                                                "name": "Italian",
                                                "additionalName": "it"
                                              },
                                              {
                                                "type": "Language",
                                                "name": "Japanese",
                                                "additionalName": "ja"
                                              },
                                              {
                                                "type": "Language",
                                                "name": "Korean",
                                                "additionalName": "ko"
                                              },
                                              {
                                                "type": "Language",
                                                "name": "Portuguese",
                                                "additionalName": "pt"
                                              },
                                              {
                                                "type": "Language",
                                                "name": "Russian",
                                                "additionalName": "ru"
                                              },
                                              {
                                                "type": "Language",
                                                "name": "Chinese",
                                                "additionalName": "zh"
                                              },
                                              {
                                                "type": "Language",
                                                "name": "Arabic",
                                                "additionalName": "ar"
                                              },
                                              {
                                                "type": "Language",
                                                "name": "Hindi",
                                                "additionalName": "hi"
                                              },
                                              {
                                                "type": "Language",
                                                "name": "Bengali",
                                                "additionalName": "bn"
                                              },
                                              {
                                                "type": "Language",
                                                "name": "Portuguese",
                                                "additionalName": "pt"
                                              }
                                            ]
                                          }
                                        },
                                        "branchCode": {
                                          "description": "A short textual code that uniquely identifies a place of business.",
                                          "example": "for BHHS profile events, see additionalProperty.OfficeId",
                                          "type": "string"
                                        },
                                        "certification": {
                                          "$id": "http://realestate.yodata.me/schema/certification",
                                          "title": "certifications",
                                          "description": "certifications granted to a person or organization",
                                          "type": "array",
                                          "items": [
                                            {
                                              "type": "object",
                                              "title": "Certification",
                                              "description": "A certification issued by an organization to an individual or business.",
                                              "x-range": "Certification",
                                              "properties": {
                                                "type": {
                                                  "description": "Certification",
                                                  "type": "string",
                                                  "enum": [
                                                    "Certification"
                                                  ]
                                                },
                                                "name": {
                                                  "type": "string",
                                                  "description": "the name of the Certification",
                                                  "example": "e-Agent Certified"
                                                },
                                                "issuedBy": {
                                                  "type": "object",
                                                  "x-range": "RealEstateOrganization",
                                                  "description": "the issuing authority",
                                                  "properties": {
                                                    "type": {
                                                      "enum": [
                                                        "RealEstateOrganization"
                                                      ],
                                                      "type": "string",
                                                      "description": "The item type (Linked-Data @type)"
                                                    },
                                                    "id": {
                                                      "example": "https://example.com/profile/card#me",
                                                      "type": "string",
                                                      "format": "uri",
                                                      "description": "Linked-Data URI (@id)"
                                                    },
                                                    "name": {
                                                      "type": "string",
                                                      "description": "name of the issuing organization",
                                                      "example": "Gotham City Real Estate"
                                                    }
                                                  }
                                                },
                                                "issuedTo": {
                                                  "x-range": "RealEstateAgent",
                                                  "type": "object",
                                                  "description": "the subject",
                                                  "properties": {
                                                    "type": {
                                                      "enum": [
                                                        "RealEstateAgent"
                                                      ],
                                                      "type": "string",
                                                      "description": "The item type (Linked-Data @type)"
                                                    },
                                                    "id": {
                                                      "type": "string",
                                                      "format": "uri",
                                                      "description": "Linked-Data URI (@id)"
                                                    },
                                                    "name": {
                                                      "type": "string",
                                                      "description": "the name of the item"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "contactPoint": {
                                          "$id": "http://realestate.yodata.me/definitions/contactPoint.json",
                                          "type": "array",
                                          "description": "a named point of contact - telephone, email, faxNumber, and/or url for the entity",
                                          "items": {
                                            "$id": "htttp://realestate.yodata.me/schema/ContactPoint.json",
                                            "title": "ContactPoint",
                                            "description": "A point of contact for the entity. By convention in the real estate domain, ContactPoints\nare preferred over telephone, email, and faxNumber so the ContactPoint.name property can be used to label values\nfor example, Work Telephone, Home, as named contactPoint values.\n",
                                            "type": "object",
                                            "required": [
                                              "type",
                                              "name"
                                            ],
                                            "minProperties": 3,
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "const": "ContactPoint"
                                              },
                                              "name": {
                                                "type": "string",
                                                "description": "a label for the contactPoint, i.e. 'Work', or 'Home'",
                                                "examples": [
                                                  "Work",
                                                  "Home",
                                                  "Vacation",
                                                  "Bob's Cell",
                                                  "Alice's Work"
                                                ]
                                              },
                                              "telephone": {
                                                "type": "string",
                                                "x-faker": "phone.phoneNumber",
                                                "examples": [
                                                  "555-555-5555",
                                                  "555-555-5555 x123",
                                                  "555-555-5555 ext. 123",
                                                  "+1-555-555-5555"
                                                ]
                                              },
                                              "faxNumber": {
                                                "type": "string",
                                                "x-faker": "phone.phoneNumber",
                                                "examples": [
                                                  "555-555-5555",
                                                  "555-555-5555 x123",
                                                  "555-555-5555 ext. 123",
                                                  "+1-555-555-5555"
                                                ]
                                              },
                                              "email": {
                                                "description": "an email address for the item.",
                                                "type": "string",
                                                "format": "email",
                                                "x-faker": "internet.email",
                                                "examples": [
                                                  "bob@example.com",
                                                  "alice@example.com"
                                                ]
                                              },
                                              "url": {
                                                "description": "primary URL for the item.",
                                                "type": "string",
                                                "format": "uri",
                                                "example": "https://www.facebook.com/hallandoates"
                                              }
                                            }
                                          }
                                        },
                                        "email": {
                                          "type": "string",
                                          "format": "email",
                                          "x-faker": "internet.email"
                                        },
                                        "faxNumber": {
                                          "type": "string",
                                          "description": "Do people still use fax machines?",
                                          "x-faker": "phone.phoneNumber"
                                        },
                                        "image": {
                                          "title": "image",
                                          "description": "an ImageObject or URI reference to an image on the web.",
                                          "type": "array",
                                          "x-range": [
                                            "ImageObject"
                                          ],
                                          "items": [
                                            {
                                              "type": "object",
                                              "allOf": [
                                                {
                                                  "title": "MediaObject",
                                                  "description": "an image, video or document availble for download",
                                                  "x-subclass": [
                                                    "ImageObject",
                                                    "DigitalDocument"
                                                  ],
                                                  "allOf": [
                                                    {
                                                      "$id": "http://realestate.yodata.me/schema/Thing",
                                                      "type": "object",
                                                      "title": "Thing",
                                                      "summary": "The root type of all Things.",
                                                      "required": [
                                                        "type"
                                                      ],
                                                      "propertyNames": {
                                                        "pattern": "^[a-z@$][a-zA-Z0-9-_]+$"
                                                      },
                                                      "properties": {
                                                        "type": {
                                                          "type": "string",
                                                          "pattern": "^[A-Z][a-zA-Z0-9]+$",
                                                          "description": "The item type (Linked-Data @type)"
                                                        },
                                                        "@id": {
                                                          "type": "string",
                                                          "format": "uri",
                                                          "description": "the liked data uri for the Thing"
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "properties": {
                                                        "type": {
                                                          "type": "string",
                                                          "enum": [
                                                            "MediaObject",
                                                            "ImageObject",
                                                            "DigitalDocument"
                                                          ]
                                                        },
                                                        "id": {
                                                          "description": "the URL to access the item.",
                                                          "example": "http://user.example.com/public/logo/fileName.zip",
                                                          "type": "string",
                                                          "format": "uri"
                                                        },
                                                        "name": {
                                                          "type": "string",
                                                          "description": "the file name of the object.",
                                                          "example": "fileName.zip"
                                                        },
                                                        "encodingFormat": {
                                                          "type": "string",
                                                          "description": "MIME type",
                                                          "example": "application/zip"
                                                        },
                                                        "about": {
                                                          "type": "string",
                                                          "format": "uri",
                                                          "description": "URI to the subject of the image or logo",
                                                          "example": "http://user.example.com/profile/card#me"
                                                        },
                                                        "url": {
                                                          "type": "string",
                                                          "format": "uri",
                                                          "description": "URL of the image content",
                                                          "example": "http://user.example.com/public/profile/image.jpg"
                                                        }
                                                      }
                                                    }
                                                  ]
                                                },
                                                {
                                                  "title": "ImageObject",
                                                  "x-range": "ImageObject",
                                                  "properties": {
                                                    "type": {
                                                      "enum": [
                                                        "ImageObject"
                                                      ],
                                                      "example": "ImageObject"
                                                    },
                                                    "id": {
                                                      "example": "http://user.example.com/public/logo/image.jpg"
                                                    },
                                                    "name": {
                                                      "example": "image.jpg"
                                                    },
                                                    "encodingFormat": {
                                                      "example": "image/jpeg"
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        "logo": {
                                          "description": "a logo associated with the organization.",
                                          "items": {
                                            "allOf": [
                                              {
                                                "type": "object",
                                                "title": "DigitalDocument",
                                                "x-range": "DigitalDocument",
                                                "description": "an electronic file.",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "DigitalDocument"
                                                    ]
                                                  },
                                                  "id": {
                                                    "type": "string",
                                                    "example": "http://user.example.com/public/logo/archive.zip"
                                                  },
                                                  "name": {
                                                    "type": "string",
                                                    "description": "document name or title",
                                                    "example": "archive.zip"
                                                  },
                                                  "encodingFormat": {
                                                    "type": "string",
                                                    "description": "[ISO Media Type](https://www.iana.org/assignments/media-types/media-types.xhtml)",
                                                    "example": "application/zip"
                                                  },
                                                  "about": {
                                                    "type": "object",
                                                    "description": "subject of the Document",
                                                    "x-range": "Thing",
                                                    "example": {
                                                      "type": "RealEstateTransaction",
                                                      "identifier": {
                                                        "bmsTransactionId": "xxxx"
                                                      }
                                                    }
                                                  },
                                                  "url": {
                                                    "type": "string",
                                                    "description": "public URL of the object",
                                                    "example": "https://example.com"
                                                  }
                                                }
                                              },
                                              {
                                                "description": "an associated logo",
                                                "type": "object"
                                              }
                                            ],
                                            "type": "object"
                                          },
                                          "type": "array",
                                          "x-range": [
                                            "ImageObject",
                                            "DigitalDocument"
                                          ]
                                        },
                                        "name": {
                                          "description": "Name or DBA.",
                                          "type": "string"
                                        },
                                        "parentOrganization": {
                                          "items": {
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "type": "array"
                                        },
                                        "subOrganization": {
                                          "description": "a child organization",
                                          "x-range": [
                                            "RealEstateOrganization"
                                          ],
                                          "type": "array",
                                          "items": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "http://org.example.com/profile/card#me"
                                          }
                                        },
                                        "telephone": {
                                          "type": "string",
                                          "description": "Primary phone number.",
                                          "example": "+15558675309"
                                        },
                                        "type": {
                                          "enum": [
                                            "Organization"
                                          ],
                                          "type": "string"
                                        },
                                        "url": {
                                          "description": "primary website/url for the entity.",
                                          "format": "uri",
                                          "type": "string"
                                        }
                                      }
                                    }
                                  ]
                                },
                                {
                                  "title": "RealEstateOrganization",
                                  "description": "A real estate franchisor, broker or business",
                                  "x-range": "RealEstateOrganization",
                                  "properties": {
                                    "type": {
                                      "description": "RealEstateOrganzation",
                                      "enum": [
                                        "RealEstateOrganization",
                                        "RealEstateOffice",
                                        "RealEstateAgent"
                                      ],
                                      "example": "RealEstateOrganization"
                                    },
                                    "areaServed": {
                                      "type": "object",
                                      "description": "the physical areas that make up the ServiceArea",
                                      "x-range": [
                                        "City",
                                        "PostalCodeArea"
                                      ],
                                      "example": {
                                        "type": "PostalCode",
                                        "postalCode": "91371",
                                        "addressLocality": "Woodland Hills",
                                        "addressCounty": "Los Angeles",
                                        "addressRegion": "CA",
                                        "addressCountry": "US"
                                      }
                                    },
                                    "description": {
                                      "example": "The number on Gotham City Real Estate Company since 1940",
                                      "type": "string",
                                      "description": "description of the item."
                                    },
                                    "parentOrganization": {
                                      "type": "array",
                                      "x-range": "RealEstateOrganization",
                                      "description": "A franchisor or affiliate network of which this organization plays a membership role.",
                                      "items": {
                                        "type": "string",
                                        "format": "uri"
                                      }
                                    },
                                    "numberOfSubOrganizations": {
                                      "type": "number",
                                      "description": "the number of offices for an affiliate."
                                    },
                                    "member": {
                                      "title": "member",
                                      "description": "A member of an Organization or a ProgramMembership. Organizations can be members of organizations; ProgramMembership is typically for individuals.",
                                      "type": "array",
                                      "x-range": [
                                        "OrganizationRole",
                                        "URI"
                                      ],
                                      "items": {
                                        "anyOf": [
                                          {
                                            "title": "OrganizationRole",
                                            "type": "object",
                                            "description": "describes a role played by a member and a group or organization.",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "description": "a role played by the member in the memberOf group",
                                                "enum": [
                                                  "OrganizationRole"
                                                ]
                                              },
                                              "roleName": {
                                                "type": "string",
                                                "description": "the role name",
                                                "example": "Owner"
                                              },
                                              "memberOf": {
                                                "description": "the org or group where the role is performed",
                                                "type": "object",
                                                "example": {
                                                  "type": "RealEstateOrganization",
                                                  "id": "http://orgid.example.com/profile/card#me"
                                                }
                                              },
                                              "member": {
                                                "description": "member object or id",
                                                "type": "string",
                                                "format": "uri",
                                                "example": "https://memberid.example.com/profile/card#me"
                                              },
                                              "startDate": {
                                                "type": "string",
                                                "format": "date-time",
                                                "description": "date the member began performing this role"
                                              },
                                              "endDate": {
                                                "type": "string",
                                                "format": "date-time",
                                                "description": "date the member stopped performing the role"
                                              }
                                            }
                                          },
                                          {
                                            "type": "string",
                                            "format": "uri"
                                          }
                                        ]
                                      }
                                    },
                                    "memberOf": {
                                      "x-range": [
                                        "OrganizationRole",
                                        "MLSMembership"
                                      ],
                                      "description": "An Organization (or ProgramMembership) to which this Person or Organization belongs.",
                                      "type": "array",
                                      "items": {
                                        "allOf": [
                                          {
                                            "title": "OrganizationRole",
                                            "type": "object",
                                            "description": "describes a role played by a member and a group or organization.",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "description": "a role played by the member in the memberOf group",
                                                "enum": [
                                                  "OrganizationRole"
                                                ]
                                              },
                                              "roleName": {
                                                "type": "string",
                                                "description": "the role name",
                                                "example": "Owner"
                                              },
                                              "memberOf": {
                                                "description": "the org or group where the role is performed",
                                                "type": "object",
                                                "example": {
                                                  "type": "RealEstateOrganization",
                                                  "id": "http://orgid.example.com/profile/card#me"
                                                }
                                              },
                                              "member": {
                                                "description": "member object or id",
                                                "type": "string",
                                                "format": "uri",
                                                "example": "https://memberid.example.com/profile/card#me"
                                              },
                                              "startDate": {
                                                "type": "string",
                                                "format": "date-time",
                                                "description": "date the member began performing this role"
                                              },
                                              "endDate": {
                                                "type": "string",
                                                "format": "date-time",
                                                "description": "date the member stopped performing the role"
                                              }
                                            }
                                          },
                                          {
                                            "type": "object",
                                            "title": "MLSMembership",
                                            "description": "a membership relationship",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "description": "an MLS member relationship",
                                                "enum": [
                                                  "MLSMembership"
                                                ],
                                                "example": "MLSMembership"
                                              },
                                              "roleName": {
                                                "type": "string",
                                                "example": "MLSMember"
                                              },
                                              "memberOf": {
                                                "type": "object",
                                                "x-range": "MultipleListingService",
                                                "example": {
                                                  "type": "MultipleListingService",
                                                  "name": "GreatScottMLS"
                                                }
                                              },
                                              "member": {
                                                "type": "string",
                                                "format": "uri",
                                                "example": "https://{agent}.example.com/profile/card#me"
                                              },
                                              "memberId": {
                                                "type": "string",
                                                "description": "the user's MLSID",
                                                "example": "memberid123"
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    "permit": {
                                      "type": "array",
                                      "x-range": "RealEstateLicense",
                                      "items": {
                                        "type": "object",
                                        "example": {
                                          "type": "RealEstateLicense",
                                          "name": "CA-DRE# 02068375",
                                          "identifier": {
                                            "type": "PropertyValue",
                                            "name": "CA-DRE",
                                            "value": "02068375"
                                          },
                                          "issuedBy": {
                                            "type": "State",
                                            "name": "California"
                                          },
                                          "issuedThrough": {
                                            "type": "Service",
                                            "name": "California Department of Real Estate"
                                          },
                                          "validIn": {
                                            "type": "State",
                                            "name": "California"
                                          },
                                          "validFrom": "2019-07-07T10:55:02Z",
                                          "validUntil": "2019-07-07T10:55:02Z"
                                        }
                                      }
                                    }
                                  }
                                }
                              ]
                            },
                            {
                              "title": "RealEstateOffice",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "description": "RealEstateOffice",
                                  "enum": [
                                    "RealEstateOffice"
                                  ]
                                },
                                "contactPoint": {
                                  "description": "department or role specific contact points, i.e. relocation.",
                                  "example": [
                                    {
                                      "type": "ContactPoint",
                                      "name": "Relocation",
                                      "telephone": "1-245-880-8222",
                                      "faxNumber": "958-530-3473",
                                      "email": "relocation@example.com"
                                    }
                                  ]
                                },
                                "description": {
                                  "example": "The number on Gotham City Real Estate Company since 1940"
                                },
                                "parentOrganization": {
                                  "description": "Office broker or franchisor.",
                                  "x-range": "RealEstateOrganization"
                                },
                                "subOrganization": {
                                  "type": "array",
                                  "x-range": "RealEstateAgent",
                                  "description": "Agents and teams associated with the office.",
                                  "items": {
                                    "type": "string",
                                    "format": "uri"
                                  }
                                },
                                "geoCoordinates": {
                                  "title": "GeoCoordinates",
                                  "type": "object",
                                  "description": "a lat/long point.",
                                  "x-range": "GeoCoordinates",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "description": "GeoCordinates",
                                      "enum": [
                                        "GeoCoordinates"
                                      ]
                                    },
                                    "longitude": {
                                      "type": "number",
                                      "description": "The longitude of a location.",
                                      "x-title": "longitude",
                                      "example": 73.98
                                    },
                                    "latitude": {
                                      "type": "number",
                                      "description": "The latitude of a location.",
                                      "x-title": "latitude",
                                      "example": 40.75
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "allOf": [
                                {
                                  "$id": "http://realestate.yodata.me/schema/Thing",
                                  "type": "object",
                                  "title": "Thing",
                                  "summary": "The root type of all Things.",
                                  "required": [
                                    "type"
                                  ],
                                  "propertyNames": {
                                    "pattern": "^[a-z@$][a-zA-Z0-9-_]+$"
                                  },
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "pattern": "^[A-Z][a-zA-Z0-9]+$",
                                      "description": "The item type (Linked-Data @type)"
                                    },
                                    "@id": {
                                      "type": "string",
                                      "format": "uri",
                                      "description": "the liked data uri for the Thing"
                                    }
                                  }
                                },
                                {
                                  "x-kind": "Organization"
                                },
                                {
                                  "x-hasSubclass": [
                                    "RealEstateOrganization",
                                    "RealEstateOffice",
                                    "RealEstateAgent"
                                  ]
                                },
                                {
                                  "x-subClassOf": [
                                    "https://schema.org/Organization"
                                  ],
                                  "properties": {
                                    "address": {
                                      "type": "object",
                                      "x-range": "PostalAddress",
                                      "description": "A physical address.",
                                      "example": {
                                        "type": "PostalAddress",
                                        "name": "Home",
                                        "addressCountry": "USA",
                                        "addressCounty": "Gotham County",
                                        "addressLocality": "Gotham City",
                                        "addressRegion": "New Jersey",
                                        "addressSubdivision": "Gotham Heights",
                                        "postalCode": "10010",
                                        "postOfficeBoxNumber": "Box 1234",
                                        "streetAddress": "1007 Mountain Gate Rd"
                                      }
                                    },
                                    "availableLanguage": {
                                      "title": "availableLanguage",
                                      "type": "array",
                                      "description": "Please use one of the language codes from the IETF BCP 47 standard.",
                                      "x-range": "Language",
                                      "items": {
                                        "$id": "htttp://realestate.yodata.me/schema/Language.yaml",
                                        "description": "a written or spoken Language",
                                        "title": "Language",
                                        "type": "object",
                                        "required": [
                                          "type",
                                          "name",
                                          "additionalName"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "Language"
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "the display name of the language"
                                          },
                                          "additionalName": {
                                            "type": "string",
                                            "description": "BCP 47 language code"
                                          }
                                        },
                                        "examples": [
                                          {
                                            "type": "Language",
                                            "name": "English",
                                            "additionalName": "en-us"
                                          },
                                          {
                                            "type": "Language",
                                            "name": "Spanish",
                                            "additionalName": "es"
                                          },
                                          {
                                            "type": "Language",
                                            "name": "French",
                                            "additionalName": "fr"
                                          },
                                          {
                                            "type": "Language",
                                            "name": "German",
                                            "additionalName": "de"
                                          },
                                          {
                                            "type": "Language",
                                            "name": "Italian",
                                            "additionalName": "it"
                                          },
                                          {
                                            "type": "Language",
                                            "name": "Japanese",
                                            "additionalName": "ja"
                                          },
                                          {
                                            "type": "Language",
                                            "name": "Korean",
                                            "additionalName": "ko"
                                          },
                                          {
                                            "type": "Language",
                                            "name": "Portuguese",
                                            "additionalName": "pt"
                                          },
                                          {
                                            "type": "Language",
                                            "name": "Russian",
                                            "additionalName": "ru"
                                          },
                                          {
                                            "type": "Language",
                                            "name": "Chinese",
                                            "additionalName": "zh"
                                          },
                                          {
                                            "type": "Language",
                                            "name": "Arabic",
                                            "additionalName": "ar"
                                          },
                                          {
                                            "type": "Language",
                                            "name": "Hindi",
                                            "additionalName": "hi"
                                          },
                                          {
                                            "type": "Language",
                                            "name": "Bengali",
                                            "additionalName": "bn"
                                          },
                                          {
                                            "type": "Language",
                                            "name": "Portuguese",
                                            "additionalName": "pt"
                                          }
                                        ]
                                      }
                                    },
                                    "branchCode": {
                                      "description": "A short textual code that uniquely identifies a place of business.",
                                      "example": "for BHHS profile events, see additionalProperty.OfficeId",
                                      "type": "string"
                                    },
                                    "certification": {
                                      "$id": "http://realestate.yodata.me/schema/certification",
                                      "title": "certifications",
                                      "description": "certifications granted to a person or organization",
                                      "type": "array",
                                      "items": [
                                        {
                                          "type": "object",
                                          "title": "Certification",
                                          "description": "A certification issued by an organization to an individual or business.",
                                          "x-range": "Certification",
                                          "properties": {
                                            "type": {
                                              "description": "Certification",
                                              "type": "string",
                                              "enum": [
                                                "Certification"
                                              ]
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "the name of the Certification",
                                              "example": "e-Agent Certified"
                                            },
                                            "issuedBy": {
                                              "type": "object",
                                              "x-range": "RealEstateOrganization",
                                              "description": "the issuing authority",
                                              "properties": {
                                                "type": {
                                                  "enum": [
                                                    "RealEstateOrganization"
                                                  ],
                                                  "type": "string",
                                                  "description": "The item type (Linked-Data @type)"
                                                },
                                                "id": {
                                                  "example": "https://example.com/profile/card#me",
                                                  "type": "string",
                                                  "format": "uri",
                                                  "description": "Linked-Data URI (@id)"
                                                },
                                                "name": {
                                                  "type": "string",
                                                  "description": "name of the issuing organization",
                                                  "example": "Gotham City Real Estate"
                                                }
                                              }
                                            },
                                            "issuedTo": {
                                              "x-range": "RealEstateAgent",
                                              "type": "object",
                                              "description": "the subject",
                                              "properties": {
                                                "type": {
                                                  "enum": [
                                                    "RealEstateAgent"
                                                  ],
                                                  "type": "string",
                                                  "description": "The item type (Linked-Data @type)"
                                                },
                                                "id": {
                                                  "type": "string",
                                                  "format": "uri",
                                                  "description": "Linked-Data URI (@id)"
                                                },
                                                "name": {
                                                  "type": "string",
                                                  "description": "the name of the item"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      ]
                                    },
                                    "contactPoint": {
                                      "$id": "http://realestate.yodata.me/definitions/contactPoint.json",
                                      "type": "array",
                                      "description": "a named point of contact - telephone, email, faxNumber, and/or url for the entity",
                                      "items": {
                                        "$id": "htttp://realestate.yodata.me/schema/ContactPoint.json",
                                        "title": "ContactPoint",
                                        "description": "A point of contact for the entity. By convention in the real estate domain, ContactPoints\nare preferred over telephone, email, and faxNumber so the ContactPoint.name property can be used to label values\nfor example, Work Telephone, Home, as named contactPoint values.\n",
                                        "type": "object",
                                        "required": [
                                          "type",
                                          "name"
                                        ],
                                        "minProperties": 3,
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "ContactPoint"
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "a label for the contactPoint, i.e. 'Work', or 'Home'",
                                            "examples": [
                                              "Work",
                                              "Home",
                                              "Vacation",
                                              "Bob's Cell",
                                              "Alice's Work"
                                            ]
                                          },
                                          "telephone": {
                                            "type": "string",
                                            "x-faker": "phone.phoneNumber",
                                            "examples": [
                                              "555-555-5555",
                                              "555-555-5555 x123",
                                              "555-555-5555 ext. 123",
                                              "+1-555-555-5555"
                                            ]
                                          },
                                          "faxNumber": {
                                            "type": "string",
                                            "x-faker": "phone.phoneNumber",
                                            "examples": [
                                              "555-555-5555",
                                              "555-555-5555 x123",
                                              "555-555-5555 ext. 123",
                                              "+1-555-555-5555"
                                            ]
                                          },
                                          "email": {
                                            "description": "an email address for the item.",
                                            "type": "string",
                                            "format": "email",
                                            "x-faker": "internet.email",
                                            "examples": [
                                              "bob@example.com",
                                              "alice@example.com"
                                            ]
                                          },
                                          "url": {
                                            "description": "primary URL for the item.",
                                            "type": "string",
                                            "format": "uri",
                                            "example": "https://www.facebook.com/hallandoates"
                                          }
                                        }
                                      }
                                    },
                                    "email": {
                                      "type": "string",
                                      "format": "email",
                                      "x-faker": "internet.email"
                                    },
                                    "faxNumber": {
                                      "type": "string",
                                      "description": "Do people still use fax machines?",
                                      "x-faker": "phone.phoneNumber"
                                    },
                                    "image": {
                                      "title": "image",
                                      "description": "an ImageObject or URI reference to an image on the web.",
                                      "type": "array",
                                      "x-range": [
                                        "ImageObject"
                                      ],
                                      "items": [
                                        {
                                          "type": "object",
                                          "allOf": [
                                            {
                                              "title": "MediaObject",
                                              "description": "an image, video or document availble for download",
                                              "x-subclass": [
                                                "ImageObject",
                                                "DigitalDocument"
                                              ],
                                              "allOf": [
                                                {
                                                  "$id": "http://realestate.yodata.me/schema/Thing",
                                                  "type": "object",
                                                  "title": "Thing",
                                                  "summary": "The root type of all Things.",
                                                  "required": [
                                                    "type"
                                                  ],
                                                  "propertyNames": {
                                                    "pattern": "^[a-z@$][a-zA-Z0-9-_]+$"
                                                  },
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "pattern": "^[A-Z][a-zA-Z0-9]+$",
                                                      "description": "The item type (Linked-Data @type)"
                                                    },
                                                    "@id": {
                                                      "type": "string",
                                                      "format": "uri",
                                                      "description": "the liked data uri for the Thing"
                                                    }
                                                  }
                                                },
                                                {
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "enum": [
                                                        "MediaObject",
                                                        "ImageObject",
                                                        "DigitalDocument"
                                                      ]
                                                    },
                                                    "id": {
                                                      "description": "the URL to access the item.",
                                                      "example": "http://user.example.com/public/logo/fileName.zip",
                                                      "type": "string",
                                                      "format": "uri"
                                                    },
                                                    "name": {
                                                      "type": "string",
                                                      "description": "the file name of the object.",
                                                      "example": "fileName.zip"
                                                    },
                                                    "encodingFormat": {
                                                      "type": "string",
                                                      "description": "MIME type",
                                                      "example": "application/zip"
                                                    },
                                                    "about": {
                                                      "type": "string",
                                                      "format": "uri",
                                                      "description": "URI to the subject of the image or logo",
                                                      "example": "http://user.example.com/profile/card#me"
                                                    },
                                                    "url": {
                                                      "type": "string",
                                                      "format": "uri",
                                                      "description": "URL of the image content",
                                                      "example": "http://user.example.com/public/profile/image.jpg"
                                                    }
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "title": "ImageObject",
                                              "x-range": "ImageObject",
                                              "properties": {
                                                "type": {
                                                  "enum": [
                                                    "ImageObject"
                                                  ],
                                                  "example": "ImageObject"
                                                },
                                                "id": {
                                                  "example": "http://user.example.com/public/logo/image.jpg"
                                                },
                                                "name": {
                                                  "example": "image.jpg"
                                                },
                                                "encodingFormat": {
                                                  "example": "image/jpeg"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "logo": {
                                      "description": "a logo associated with the organization.",
                                      "items": {
                                        "allOf": [
                                          {
                                            "type": "object",
                                            "title": "DigitalDocument",
                                            "x-range": "DigitalDocument",
                                            "description": "an electronic file.",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "DigitalDocument"
                                                ]
                                              },
                                              "id": {
                                                "type": "string",
                                                "example": "http://user.example.com/public/logo/archive.zip"
                                              },
                                              "name": {
                                                "type": "string",
                                                "description": "document name or title",
                                                "example": "archive.zip"
                                              },
                                              "encodingFormat": {
                                                "type": "string",
                                                "description": "[ISO Media Type](https://www.iana.org/assignments/media-types/media-types.xhtml)",
                                                "example": "application/zip"
                                              },
                                              "about": {
                                                "type": "object",
                                                "description": "subject of the Document",
                                                "x-range": "Thing",
                                                "example": {
                                                  "type": "RealEstateTransaction",
                                                  "identifier": {
                                                    "bmsTransactionId": "xxxx"
                                                  }
                                                }
                                              },
                                              "url": {
                                                "type": "string",
                                                "description": "public URL of the object",
                                                "example": "https://example.com"
                                              }
                                            }
                                          },
                                          {
                                            "description": "an associated logo",
                                            "type": "object"
                                          }
                                        ],
                                        "type": "object"
                                      },
                                      "type": "array",
                                      "x-range": [
                                        "ImageObject",
                                        "DigitalDocument"
                                      ]
                                    },
                                    "name": {
                                      "description": "Name or DBA.",
                                      "type": "string"
                                    },
                                    "parentOrganization": {
                                      "items": {
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "type": "array"
                                    },
                                    "subOrganization": {
                                      "description": "a child organization",
                                      "x-range": [
                                        "RealEstateOrganization"
                                      ],
                                      "type": "array",
                                      "items": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "http://org.example.com/profile/card#me"
                                      }
                                    },
                                    "telephone": {
                                      "type": "string",
                                      "description": "Primary phone number.",
                                      "example": "+15558675309"
                                    },
                                    "type": {
                                      "enum": [
                                        "Organization"
                                      ],
                                      "type": "string"
                                    },
                                    "url": {
                                      "description": "primary website/url for the entity.",
                                      "format": "uri",
                                      "type": "string"
                                    }
                                  }
                                }
                              ]
                            },
                            {
                              "title": "RealEstateOrganization",
                              "description": "A real estate franchisor, broker or business",
                              "x-range": "RealEstateOrganization",
                              "properties": {
                                "type": {
                                  "description": "RealEstateOrganzation",
                                  "enum": [
                                    "RealEstateOrganization",
                                    "RealEstateOffice",
                                    "RealEstateAgent"
                                  ],
                                  "example": "RealEstateOrganization"
                                },
                                "areaServed": {
                                  "type": "object",
                                  "description": "the physical areas that make up the ServiceArea",
                                  "x-range": [
                                    "City",
                                    "PostalCodeArea"
                                  ],
                                  "example": {
                                    "type": "PostalCode",
                                    "postalCode": "91371",
                                    "addressLocality": "Woodland Hills",
                                    "addressCounty": "Los Angeles",
                                    "addressRegion": "CA",
                                    "addressCountry": "US"
                                  }
                                },
                                "description": {
                                  "example": "The number on Gotham City Real Estate Company since 1940",
                                  "type": "string",
                                  "description": "description of the item."
                                },
                                "parentOrganization": {
                                  "type": "array",
                                  "x-range": "RealEstateOrganization",
                                  "description": "A franchisor or affiliate network of which this organization plays a membership role.",
                                  "items": {
                                    "type": "string",
                                    "format": "uri"
                                  }
                                },
                                "numberOfSubOrganizations": {
                                  "type": "number",
                                  "description": "the number of offices for an affiliate."
                                },
                                "member": {
                                  "title": "member",
                                  "description": "A member of an Organization or a ProgramMembership. Organizations can be members of organizations; ProgramMembership is typically for individuals.",
                                  "type": "array",
                                  "x-range": [
                                    "OrganizationRole",
                                    "URI"
                                  ],
                                  "items": {
                                    "anyOf": [
                                      {
                                        "title": "OrganizationRole",
                                        "type": "object",
                                        "description": "describes a role played by a member and a group or organization.",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "description": "a role played by the member in the memberOf group",
                                            "enum": [
                                              "OrganizationRole"
                                            ]
                                          },
                                          "roleName": {
                                            "type": "string",
                                            "description": "the role name",
                                            "example": "Owner"
                                          },
                                          "memberOf": {
                                            "description": "the org or group where the role is performed",
                                            "type": "object",
                                            "example": {
                                              "type": "RealEstateOrganization",
                                              "id": "http://orgid.example.com/profile/card#me"
                                            }
                                          },
                                          "member": {
                                            "description": "member object or id",
                                            "type": "string",
                                            "format": "uri",
                                            "example": "https://memberid.example.com/profile/card#me"
                                          },
                                          "startDate": {
                                            "type": "string",
                                            "format": "date-time",
                                            "description": "date the member began performing this role"
                                          },
                                          "endDate": {
                                            "type": "string",
                                            "format": "date-time",
                                            "description": "date the member stopped performing the role"
                                          }
                                        }
                                      },
                                      {
                                        "type": "string",
                                        "format": "uri"
                                      }
                                    ]
                                  }
                                },
                                "memberOf": {
                                  "x-range": [
                                    "OrganizationRole",
                                    "MLSMembership"
                                  ],
                                  "description": "An Organization (or ProgramMembership) to which this Person or Organization belongs.",
                                  "type": "array",
                                  "items": {
                                    "allOf": [
                                      {
                                        "title": "OrganizationRole",
                                        "type": "object",
                                        "description": "describes a role played by a member and a group or organization.",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "description": "a role played by the member in the memberOf group",
                                            "enum": [
                                              "OrganizationRole"
                                            ]
                                          },
                                          "roleName": {
                                            "type": "string",
                                            "description": "the role name",
                                            "example": "Owner"
                                          },
                                          "memberOf": {
                                            "description": "the org or group where the role is performed",
                                            "type": "object",
                                            "example": {
                                              "type": "RealEstateOrganization",
                                              "id": "http://orgid.example.com/profile/card#me"
                                            }
                                          },
                                          "member": {
                                            "description": "member object or id",
                                            "type": "string",
                                            "format": "uri",
                                            "example": "https://memberid.example.com/profile/card#me"
                                          },
                                          "startDate": {
                                            "type": "string",
                                            "format": "date-time",
                                            "description": "date the member began performing this role"
                                          },
                                          "endDate": {
                                            "type": "string",
                                            "format": "date-time",
                                            "description": "date the member stopped performing the role"
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "title": "MLSMembership",
                                        "description": "a membership relationship",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "description": "an MLS member relationship",
                                            "enum": [
                                              "MLSMembership"
                                            ],
                                            "example": "MLSMembership"
                                          },
                                          "roleName": {
                                            "type": "string",
                                            "example": "MLSMember"
                                          },
                                          "memberOf": {
                                            "type": "object",
                                            "x-range": "MultipleListingService",
                                            "example": {
                                              "type": "MultipleListingService",
                                              "name": "GreatScottMLS"
                                            }
                                          },
                                          "member": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "https://{agent}.example.com/profile/card#me"
                                          },
                                          "memberId": {
                                            "type": "string",
                                            "description": "the user's MLSID",
                                            "example": "memberid123"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                "permit": {
                                  "type": "array",
                                  "x-range": "RealEstateLicense",
                                  "items": {
                                    "type": "object",
                                    "example": {
                                      "type": "RealEstateLicense",
                                      "name": "CA-DRE# 02068375",
                                      "identifier": {
                                        "type": "PropertyValue",
                                        "name": "CA-DRE",
                                        "value": "02068375"
                                      },
                                      "issuedBy": {
                                        "type": "State",
                                        "name": "California"
                                      },
                                      "issuedThrough": {
                                        "type": "Service",
                                        "name": "California Department of Real Estate"
                                      },
                                      "validIn": {
                                        "type": "State",
                                        "name": "California"
                                      },
                                      "validFrom": "2019-07-07T10:55:02Z",
                                      "validUntil": "2019-07-07T10:55:02Z"
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              },
              "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-message-parsed": true
            },
            {
              "messageId": "profile#update",
              "name": "realestate/profile#update",
              "title": "profile.update",
              "summary": "an agent, office or organization profile was updated",
              "headers": {
                "$id": "subscription_headers",
                "title": "CloudEvent",
                "type": "object",
                "properties": {
                  "time": {
                    "type": "string",
                    "format": "date-time",
                    "description": "date & time the event was produced",
                    "x-parser-schema-id": "<anonymous-schema-30>"
                  },
                  "agent": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the event provider who sent the event via a subscription authorized to your service.",
                    "description": "if you are a multi-tenant app, then the agent is the user associated with the event data.\nany future events related to this message will be sent to the same agent/recipient\n",
                    "example": "https://andy_agent.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-31>"
                  },
                  "instrument": {
                    "type": "string",
                    "format": "uri",
                    "description": "the app or service that produced the event on behalf of the agent/user",
                    "example": "https://supercrm.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-32>"
                  },
                  "source": {
                    "type": "string",
                    "format": "uri",
                    "description": "an agent, team or organization who received a copy of the event",
                    "example": "https://bigbrandrealestate.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-33>"
                  },
                  "originalRecipient": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the original recipient of the event",
                    "description": "the originalRecipient helps you determine the subscription that delivered the event to you.\nif the originalRecipient is the same as the agent, then the you are subscribed to the agent.\nif the originalRecipient is different from the agent, then you are subscribed to the event source\n",
                    "example": "https://agentid.example.com/profile/card#me",
                    "x-parser-schema-id": "<anonymous-schema-34>"
                  },
                  "id": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the event id",
                    "description": "the event id is a unique identifier for the event.\nall subscribers will receive the same event id.\n",
                    "example": "https://supercrm.example.com/publish/{eventid}",
                    "x-parser-schema-id": "<anonymous-schema-35>"
                  },
                  "@id": {
                    "type": "string",
                    "format": "uri",
                    "summary": "the message id - the uri of the message in your inbox",
                    "example": "https://sumpercrm.example.com/inbox/{eventid}",
                    "x-parser-schema-id": "<anonymous-schema-36>"
                  }
                }
              },
              "payload": {
                "type": "object",
                "required": [
                  "topic",
                  "data"
                ],
                "properties": {
                  "topic": {
                    "type": "string",
                    "const": "realestate/profile#update",
                    "x-parser-schema-id": "<anonymous-schema-365>"
                  },
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "object"
                    ],
                    "properties": {
                      "type": {
                        "const": "UpdateAction",
                        "x-parser-schema-id": "<anonymous-schema-367>"
                      },
                      "object": {
                        "oneOf": [
                          {
                            "$id": "http://realestate.yodata.me/schema/RealEstateAgent",
                            "title": "RealEstateAgent",
                            "description": "A real estate agent who represents buyers and sellers",
                            "type": "object",
                            "additionalProperties": true,
                            "properties": {
                              "type": {
                                "type": "string",
                                "const": "RealEstateAgent",
                                "x-parser-schema-id": "<anonymous-schema-369>"
                              },
                              "additionalName": {
                                "title": "additionalName",
                                "description": "any other name(s) associated with the entity, i.e. nickname, middle name, maiden name, etc. For multiple names, use a comma without space as a separator.",
                                "type": "string",
                                "examples": [
                                  "Johnny,John",
                                  "Prince,The Artist Formerly Known as Prince,The Artist",
                                  "Babs,Barbara",
                                  "Katheryn Elizabeth Hudson,Katy Perry",
                                  "Destiny Hope Cyrus,Miley Cyrus"
                                ],
                                "x-parser-schema-id": "<anonymous-schema-116>"
                              },
                              "address": {
                                "type": "object",
                                "x-range": "PostalAddress",
                                "description": "A physical address.",
                                "example": {
                                  "type": "PostalAddress",
                                  "name": "Home",
                                  "addressCountry": "USA",
                                  "addressCounty": "Gotham County",
                                  "addressLocality": "Gotham City",
                                  "addressRegion": "New Jersey",
                                  "addressSubdivision": "Gotham Heights",
                                  "postalCode": "10010",
                                  "postOfficeBoxNumber": "Box 1234",
                                  "streetAddress": "1007 Mountain Gate Rd"
                                },
                                "x-parser-schema-id": "<anonymous-schema-370>"
                              },
                              "certification": {
                                "type": "object",
                                "title": "Certification",
                                "description": "A certification issued by an organization to an individual or business.",
                                "x-range": "Certification",
                                "properties": {
                                  "type": {
                                    "description": "Certification",
                                    "type": "string",
                                    "enum": [
                                      "Certification"
                                    ],
                                    "x-parser-schema-id": "<anonymous-schema-372>"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "the name of the Certification",
                                    "example": "e-Agent Certified",
                                    "x-parser-schema-id": "<anonymous-schema-373>"
                                  },
                                  "issuedBy": {
                                    "type": "object",
                                    "x-range": "RealEstateOrganization",
                                    "description": "the issuing authority",
                                    "properties": {
                                      "type": {
                                        "enum": [
                                          "RealEstateOrganization"
                                        ],
                                        "type": "string",
                                        "description": "The item type (Linked-Data @type)",
                                        "x-parser-schema-id": "<anonymous-schema-375>"
                                      },
                                      "id": {
                                        "example": "https://example.com/profile/card#me",
                                        "type": "string",
                                        "format": "uri",
                                        "description": "Linked-Data URI (@id)",
                                        "x-parser-schema-id": "<anonymous-schema-376>"
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "name of the issuing organization",
                                        "example": "Gotham City Real Estate",
                                        "x-parser-schema-id": "<anonymous-schema-377>"
                                      }
                                    },
                                    "x-parser-schema-id": "<anonymous-schema-374>"
                                  },
                                  "issuedTo": {
                                    "x-range": "RealEstateAgent",
                                    "type": "object",
                                    "description": "the subject",
                                    "properties": {
                                      "type": {
                                        "enum": [
                                          "RealEstateAgent"
                                        ],
                                        "type": "string",
                                        "description": "The item type (Linked-Data @type)",
                                        "x-parser-schema-id": "<anonymous-schema-379>"
                                      },
                                      "id": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "Linked-Data URI (@id)",
                                        "x-parser-schema-id": "<anonymous-schema-380>"
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "the name of the item",
                                        "x-parser-schema-id": "<anonymous-schema-92>"
                                      }
                                    },
                                    "x-parser-schema-id": "<anonymous-schema-378>"
                                  }
                                },
                                "x-parser-schema-id": "<anonymous-schema-371>"
                              },
                              "contactPoint": {
                                "$id": "htttp://realestate.yodata.me/schema/ContactPoint.json",
                                "title": "ContactPoint",
                                "description": "A point of contact for the entity. By convention in the real estate domain, ContactPoints\nare preferred over telephone, email, and faxNumber so the ContactPoint.name property can be used to label values\nfor example, Work Telephone, Home, as named contactPoint values.\n",
                                "type": "object",
                                "required": [
                                  "type",
                                  "name"
                                ],
                                "minProperties": 3,
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "const": "ContactPoint",
                                    "x-parser-schema-id": "<anonymous-schema-381>"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "a label for the contactPoint, i.e. 'Work', or 'Home'",
                                    "examples": [
                                      "Work",
                                      "Home",
                                      "Vacation",
                                      "Bob's Cell",
                                      "Alice's Work"
                                    ],
                                    "x-parser-schema-id": "<anonymous-schema-382>"
                                  },
                                  "telephone": {
                                    "type": "string",
                                    "x-faker": "phone.phoneNumber",
                                    "examples": [
                                      "555-555-5555",
                                      "555-555-5555 x123",
                                      "555-555-5555 ext. 123",
                                      "+1-555-555-5555"
                                    ],
                                    "x-parser-schema-id": "<anonymous-schema-383>"
                                  },
                                  "faxNumber": {
                                    "type": "string",
                                    "x-faker": "phone.phoneNumber",
                                    "examples": [
                                      "555-555-5555",
                                      "555-555-5555 x123",
                                      "555-555-5555 ext. 123",
                                      "+1-555-555-5555"
                                    ],
                                    "x-parser-schema-id": "<anonymous-schema-384>"
                                  },
                                  "email": {
                                    "description": "an email address for the item.",
                                    "type": "string",
                                    "format": "email",
                                    "x-faker": "internet.email",
                                    "examples": [
                                      "bob@example.com",
                                      "alice@example.com"
                                    ],
                                    "x-parser-schema-id": "<anonymous-schema-385>"
                                  },
                                  "url": {
                                    "description": "primary URL for the item.",
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://www.facebook.com/hallandoates",
                                    "x-parser-schema-id": "<anonymous-schema-386>"
                                  }
                                }
                              },
                              "email": {
                                "type": "string",
                                "format": "email",
                                "x-faker": "internet.email",
                                "x-parser-schema-id": "<anonymous-schema-93>"
                              },
                              "familyName": {
                                "$id": "htttp://realestate.yodata.me/schema/familyName.yaml",
                                "type": "string",
                                "title": "Family Name",
                                "description": "Last Name of a person",
                                "x-faker": "name.lastName",
                                "maxLength": 50,
                                "externalDocs": {
                                  "description": "Family Name",
                                  "url": "https://schema.org/familyName"
                                },
                                "examples": [
                                  "Smith",
                                  "Jones",
                                  "Parker",
                                  "Monk",
                                  "Brown",
                                  "Miller",
                                  "Davis",
                                  "Wilson",
                                  "Fitzgerald",
                                  "Johnson",
                                  "Williams"
                                ]
                              },
                              "givenName": {
                                "type": "string",
                                "description": "First Name of a person",
                                "x-faker": "name.firstName",
                                "examples": [
                                  "John",
                                  "Jane",
                                  "Mary",
                                  "Joseph",
                                  "William",
                                  "David",
                                  "Richard",
                                  "Charles",
                                  "Thomas",
                                  "Christopher",
                                  "Daniel",
                                  "Matthew",
                                  "Anthony",
                                  "Donald",
                                  "Mark",
                                  "Paul",
                                  "Steven",
                                  "Andrew",
                                  "Kenneth",
                                  "George",
                                  "Joshua",
                                  "Kevin",
                                  "Brian",
                                  "Edward",
                                  "Ronald",
                                  "Timothy",
                                  "Jason",
                                  "Jeffrey",
                                  "Ryan",
                                  "Jacob"
                                ],
                                "x-parser-schema-id": "<anonymous-schema-118>"
                              },
                              "id": {
                                "type": "string",
                                "format": "uri",
                                "description": "Linked-Data URI (@id)",
                                "x-parser-schema-id": "<anonymous-schema-380>"
                              },
                              "identifier": {
                                "title": "identifier",
                                "type": "object",
                                "description": "identifier assigned to a contact by the vendor who originally created the contact",
                                "examples": [
                                  {
                                    "salesforceid": "0031U00002XW1QWQA1"
                                  },
                                  {
                                    "vendoraid": "123456"
                                  },
                                  {
                                    "originating_system_id": "123456"
                                  }
                                ],
                                "x-parser-schema-id": "<anonymous-schema-94>"
                              },
                              "image": {
                                "title": "image",
                                "description": "an ImageObject or URI reference to an image on the web.",
                                "type": "array",
                                "x-range": [
                                  "ImageObject"
                                ],
                                "items": [
                                  {
                                    "type": "object",
                                    "allOf": [
                                      {
                                        "title": "MediaObject",
                                        "description": "an image, video or document availble for download",
                                        "x-subclass": [
                                          "ImageObject",
                                          "DigitalDocument"
                                        ],
                                        "allOf": [
                                          {
                                            "$id": "http://realestate.yodata.me/schema/Thing",
                                            "type": "object",
                                            "title": "Thing",
                                            "summary": "The root type of all Things.",
                                            "required": [
                                              "type"
                                            ],
                                            "propertyNames": {
                                              "pattern": "^[a-z@$][a-zA-Z0-9-_]+$",
                                              "x-parser-schema-id": "<anonymous-schema-274>"
                                            },
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "pattern": "^[A-Z][a-zA-Z0-9]+$",
                                                "description": "The item type (Linked-Data @type)",
                                                "x-parser-schema-id": "<anonymous-schema-272>"
                                              },
                                              "@id": {
                                                "type": "string",
                                                "format": "uri",
                                                "description": "the liked data uri for the Thing",
                                                "x-parser-schema-id": "<anonymous-schema-273>"
                                              }
                                            },
                                            "x-parser-schema-id": "Thing"
                                          },
                                          {
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "MediaObject",
                                                  "ImageObject",
                                                  "DigitalDocument"
                                                ]
                                              },
                                              "id": {
                                                "description": "the URL to access the item.",
                                                "example": "http://user.example.com/public/logo/fileName.zip",
                                                "type": "string",
                                                "format": "uri"
                                              },
                                              "name": {
                                                "type": "string",
                                                "description": "the file name of the object.",
                                                "example": "fileName.zip"
                                              },
                                              "encodingFormat": {
                                                "type": "string",
                                                "description": "MIME type",
                                                "example": "application/zip"
                                              },
                                              "about": {
                                                "type": "string",
                                                "format": "uri",
                                                "description": "URI to the subject of the image or logo",
                                                "example": "http://user.example.com/profile/card#me"
                                              },
                                              "url": {
                                                "type": "string",
                                                "format": "uri",
                                                "description": "URL of the image content",
                                                "example": "http://user.example.com/public/profile/image.jpg"
                                              }
                                            },
                                            "x-parser-schema-id": "<anonymous-schema-275>"
                                          }
                                        ],
                                        "x-parser-schema-id": "MediaObject"
                                      },
                                      {
                                        "title": "ImageObject",
                                        "x-range": "ImageObject",
                                        "properties": {
                                          "type": {
                                            "enum": [
                                              "ImageObject"
                                            ],
                                            "example": "ImageObject"
                                          },
                                          "id": {
                                            "example": "http://user.example.com/public/logo/image.jpg"
                                          },
                                          "name": {
                                            "example": "image.jpg"
                                          },
                                          "encodingFormat": {
                                            "example": "image/jpeg"
                                          }
                                        },
                                        "x-parser-schema-id": "<anonymous-schema-276>"
                                      }
                                    ],
                                    "x-parser-schema-id": "<anonymous-schema-271>"
                                  }
                                ],
                                "x-parser-schema-id": "<anonymous-schema-270>"
                              },
                              "jobTitle": {
                                "type": "array",
                                "items": {
                                  "title": "jobTitle",
                                  "description": "The job title of the person (for example, Financial Manager).",
                                  "type": "string",
                                  "x-faker": "name.jobTitle",
                                  "examples": [
                                    "CEO",
                                    "Sales Manager",
                                    "Escrow Officer",
                                    "Transaction Coordinator",
                                    "Director of Marketing",
                                    "Senior Loan Officer",
                                    "Loan Officer",
                                    "Sanitation Engineer",
                                    "Owner",
                                    "Cofounder",
                                    "Founder",
                                    "President",
                                    "Vice President of Sales",
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null
                                  ],
                                  "x-parser-schema-id": "<anonymous-schema-388>"
                                },
                                "x-parser-schema-id": "<anonymous-schema-387>"
                              },
                              "memberOf": {
                                "title": "memberOf",
                                "description": "an Organization (or ProgramMembership) to which this Person or Organization belongs.",
                                "type": "array",
                                "x-range": [
                                  "OrganizationRole",
                                  "URI"
                                ],
                                "items": {
                                  "anyOf": [
                                    {
                                      "title": "OrganizationRole",
                                      "type": "object",
                                      "description": "describes a role played by a member and a group or organization.",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "description": "a role played by the member in the memberOf group",
                                          "enum": [
                                            "OrganizationRole"
                                          ],
                                          "x-parser-schema-id": "<anonymous-schema-391>"
                                        },
                                        "roleName": {
                                          "type": "string",
                                          "description": "the role name",
                                          "example": "Owner",
                                          "x-parser-schema-id": "<anonymous-schema-392>"
                                        },
                                        "memberOf": {
                                          "description": "the org or group where the role is performed",
                                          "type": "object",
                                          "example": {
                                            "type": "RealEstateOrganization",
                                            "id": "http://orgid.example.com/profile/card#me"
                                          },
                                          "x-parser-schema-id": "<anonymous-schema-393>"
                                        },
                                        "member": {
                                          "description": "member object or id",
                                          "type": "string",
                                          "format": "uri",
                                          "example": "https://memberid.example.com/profile/card#me",
                                          "x-parser-schema-id": "<anonymous-schema-394>"
                                        },
                                        "startDate": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "date the member began performing this role",
                                          "x-parser-schema-id": "<anonymous-schema-395>"
                                        },
                                        "endDate": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "date the member stopped performing the role",
                                          "x-parser-schema-id": "<anonymous-schema-396>"
                                        }
                                      },
                                      "x-parser-schema-id": "OrganizationRole"
                                    },
                                    {
                                      "type": "string",
                                      "format": "uri",
                                      "x-parser-schema-id": "<anonymous-schema-397>"
                                    }
                                  ],
                                  "x-parser-schema-id": "<anonymous-schema-390>"
                                },
                                "x-parser-schema-id": "<anonymous-schema-389>"
                              },
                              "name": {
                                "type": "string",
                                "description": "the name of the item",
                                "x-parser-schema-id": "<anonymous-schema-92>"
                              },
                              "parentOrganization": {
                                "$id": "http://realestate.yodata.me/schema/parentOrganization",
                                "title": "parentOrganization",
                                "description": "organizations of which this org is a part.",
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "format": "uri",
                                  "x-parser-schema-id": "<anonymous-schema-398>"
                                }
                              },
                              "permit": {
                                "title": "Permit",
                                "description": "A permit issued by an organization to an individual or business.",
                                "type": "object",
                                "x-hasSubclass": [
                                  "RealEstateLicense"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "description": "Permit type.",
                                    "enum": [
                                      "Permit"
                                    ],
                                    "x-parser-schema-id": "<anonymous-schema-400>"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Common or display value of the Permit.",
                                    "example": "DRE Number",
                                    "x-parser-schema-id": "<anonymous-schema-401>"
                                  },
                                  "issuedBy": {
                                    "type": "object",
                                    "x-range": "Organization",
                                    "description": "The issuing authority",
                                    "example": {
                                      "type": "State",
                                      "name": "California"
                                    },
                                    "x-parser-schema-id": "<anonymous-schema-402>"
                                  },
                                  "issuedThrough": {
                                    "type": "object",
                                    "description": "the service through which the permit was granted",
                                    "example": {
                                      "type": "Service",
                                      "name": "Department of Real Estate"
                                    },
                                    "x-parser-schema-id": "<anonymous-schema-403>"
                                  },
                                  "validIn": {
                                    "type": "object",
                                    "x-range": "Place",
                                    "x-parser-schema-id": "<anonymous-schema-404>"
                                  },
                                  "validFrom": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "start date",
                                    "x-parser-schema-id": "<anonymous-schema-405>"
                                  },
                                  "validUntil": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "end date",
                                    "x-parser-schema-id": "<anonymous-schema-406>"
                                  }
                                },
                                "x-parser-schema-id": "<anonymous-schema-399>"
                              },
                              "subOrganization": {
                                "$id": "http://realestate.yodata.me/schema/subOrganization",
                                "title": "subOrganization",
                                "description": "child organizations of the organization",
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "format": "uri",
                                  "x-parser-schema-id": "<anonymous-schema-407>"
                                }
                              },
                              "url": {
                                "title": "url",
                                "type": "string",
                                "format": "uri",
                                "description": "URL of the item.",
                                "x-parser-schema-id": "<anonymous-schema-408>"
                              }
                            },
                            "x-parser-schema-id": "RealEstateAgent"
                          },
                          {
                            "allOf": [
                              {
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "https://org.example.com/profile/card#me"
                                  }
                                },
                                "x-parser-schema-id": "<anonymous-schema-409>"
                              },
                              {
                                "allOf": [
                                  {
                                    "$id": "http://realestate.yodata.me/schema/Thing",
                                    "type": "object",
                                    "title": "Thing",
                                    "summary": "The root type of all Things.",
                                    "required": [
                                      "type"
                                    ],
                                    "propertyNames": {
                                      "pattern": "^[a-z@$][a-zA-Z0-9-_]+$",
                                      "x-parser-schema-id": "<anonymous-schema-274>"
                                    },
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "pattern": "^[A-Z][a-zA-Z0-9]+$",
                                        "description": "The item type (Linked-Data @type)",
                                        "x-parser-schema-id": "<anonymous-schema-272>"
                                      },
                                      "@id": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "the liked data uri for the Thing",
                                        "x-parser-schema-id": "<anonymous-schema-273>"
                                      }
                                    },
                                    "x-parser-schema-id": "Thing"
                                  },
                                  {
                                    "x-kind": "Organization",
                                    "x-parser-schema-id": "<anonymous-schema-410>"
                                  },
                                  {
                                    "x-hasSubclass": [
                                      "RealEstateOrganization",
                                      "RealEstateOffice",
                                      "RealEstateAgent"
                                    ],
                                    "x-parser-schema-id": "<anonymous-schema-411>"
                                  },
                                  {
                                    "x-subClassOf": [
                                      "https://schema.org/Organization"
                                    ],
                                    "properties": {
                                      "address": {
                                        "type": "object",
                                        "x-range": "PostalAddress",
                                        "description": "A physical address.",
                                        "example": {
                                          "type": "PostalAddress",
                                          "name": "Home",
                                          "addressCountry": "USA",
                                          "addressCounty": "Gotham County",
                                          "addressLocality": "Gotham City",
                                          "addressRegion": "New Jersey",
                                          "addressSubdivision": "Gotham Heights",
                                          "postalCode": "10010",
                                          "postOfficeBoxNumber": "Box 1234",
                                          "streetAddress": "1007 Mountain Gate Rd"
                                        },
                                        "x-parser-schema-id": "<anonymous-schema-370>"
                                      },
                                      "availableLanguage": {
                                        "title": "availableLanguage",
                                        "type": "array",
                                        "description": "Please use one of the language codes from the IETF BCP 47 standard.",
                                        "x-range": "Language",
                                        "items": {
                                          "$id": "htttp://realestate.yodata.me/schema/Language.yaml",
                                          "description": "a written or spoken Language",
                                          "title": "Language",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "name",
                                            "additionalName"
                                          ],
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "const": "Language",
                                              "x-parser-schema-id": "<anonymous-schema-124>"
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "the display name of the language",
                                              "x-parser-schema-id": "<anonymous-schema-125>"
                                            },
                                            "additionalName": {
                                              "type": "string",
                                              "description": "BCP 47 language code",
                                              "x-parser-schema-id": "<anonymous-schema-126>"
                                            }
                                          },
                                          "examples": [
                                            {
                                              "type": "Language",
                                              "name": "English",
                                              "additionalName": "en-us"
                                            },
                                            {
                                              "type": "Language",
                                              "name": "Spanish",
                                              "additionalName": "es"
                                            },
                                            {
                                              "type": "Language",
                                              "name": "French",
                                              "additionalName": "fr"
                                            },
                                            {
                                              "type": "Language",
                                              "name": "German",
                                              "additionalName": "de"
                                            },
                                            {
                                              "type": "Language",
                                              "name": "Italian",
                                              "additionalName": "it"
                                            },
                                            {
                                              "type": "Language",
                                              "name": "Japanese",
                                              "additionalName": "ja"
                                            },
                                            {
                                              "type": "Language",
                                              "name": "Korean",
                                              "additionalName": "ko"
                                            },
                                            {
                                              "type": "Language",
                                              "name": "Portuguese",
                                              "additionalName": "pt"
                                            },
                                            {
                                              "type": "Language",
                                              "name": "Russian",
                                              "additionalName": "ru"
                                            },
                                            {
                                              "type": "Language",
                                              "name": "Chinese",
                                              "additionalName": "zh"
                                            },
                                            {
                                              "type": "Language",
                                              "name": "Arabic",
                                              "additionalName": "ar"
                                            },
                                            {
                                              "type": "Language",
                                              "name": "Hindi",
                                              "additionalName": "hi"
                                            },
                                            {
                                              "type": "Language",
                                              "name": "Bengali",
                                              "additionalName": "bn"
                                            },
                                            {
                                              "type": "Language",
                                              "name": "Portuguese",
                                              "additionalName": "pt"
                                            }
                                          ],
                                          "x-parser-schema-id": "Language"
                                        }
                                      },
                                      "branchCode": {
                                        "description": "A short textual code that uniquely identifies a place of business.",
                                        "example": "for BHHS profile events, see additionalProperty.OfficeId",
                                        "type": "string"
                                      },
                                      "certification": {
                                        "$id": "http://realestate.yodata.me/schema/certification",
                                        "title": "certifications",
                                        "description": "certifications granted to a person or organization",
                                        "type": "array",
                                        "items": [
                                          {
                                            "type": "object",
                                            "title": "Certification",
                                            "description": "A certification issued by an organization to an individual or business.",
                                            "x-range": "Certification",
                                            "properties": {
                                              "type": {
                                                "description": "Certification",
                                                "type": "string",
                                                "enum": [
                                                  "Certification"
                                                ],
                                                "x-parser-schema-id": "<anonymous-schema-594>"
                                              },
                                              "name": {
                                                "type": "string",
                                                "description": "the name of the Certification",
                                                "example": "e-Agent Certified",
                                                "x-parser-schema-id": "<anonymous-schema-595>"
                                              },
                                              "issuedBy": {
                                                "type": "object",
                                                "x-range": "RealEstateOrganization",
                                                "description": "the issuing authority",
                                                "properties": {
                                                  "type": {
                                                    "enum": [
                                                      "RealEstateOrganization"
                                                    ],
                                                    "type": "string",
                                                    "description": "The item type (Linked-Data @type)",
                                                    "x-parser-schema-id": "<anonymous-schema-375>"
                                                  },
                                                  "id": {
                                                    "example": "https://example.com/profile/card#me",
                                                    "type": "string",
                                                    "format": "uri",
                                                    "description": "Linked-Data URI (@id)",
                                                    "x-parser-schema-id": "<anonymous-schema-376>"
                                                  },
                                                  "name": {
                                                    "type": "string",
                                                    "description": "name of the issuing organization",
                                                    "example": "Gotham City Real Estate",
                                                    "x-parser-schema-id": "<anonymous-schema-377>"
                                                  }
                                                },
                                                "x-parser-schema-id": "<anonymous-schema-374>"
                                              },
                                              "issuedTo": {
                                                "x-range": "RealEstateAgent",
                                                "type": "object",
                                                "description": "the subject",
                                                "properties": {
                                                  "type": {
                                                    "enum": [
                                                      "RealEstateAgent"
                                                    ],
                                                    "type": "string",
                                                    "description": "The item type (Linked-Data @type)",
                                                    "x-parser-schema-id": "<anonymous-schema-379>"
                                                  },
                                                  "id": {
                                                    "type": "string",
                                                    "format": "uri",
                                                    "description": "Linked-Data URI (@id)",
                                                    "x-parser-schema-id": "<anonymous-schema-380>"
                                                  },
                                                  "name": {
                                                    "type": "string",
                                                    "description": "the name of the item",
                                                    "x-parser-schema-id": "<anonymous-schema-92>"
                                                  }
                                                },
                                                "x-parser-schema-id": "<anonymous-schema-596>"
                                              }
                                            },
                                            "x-parser-schema-id": "Certification"
                                          }
                                        ]
                                      },
                                      "contactPoint": {
                                        "$id": "http://realestate.yodata.me/definitions/contactPoint.json",
                                        "type": "array",
                                        "description": "a named point of contact - telephone, email, faxNumber, and/or url for the entity",
                                        "items": {
                                          "$id": "htttp://realestate.yodata.me/schema/ContactPoint.json",
                                          "title": "ContactPoint",
                                          "description": "A point of contact for the entity. By convention in the real estate domain, ContactPoints\nare preferred over telephone, email, and faxNumber so the ContactPoint.name property can be used to label values\nfor example, Work Telephone, Home, as named contactPoint values.\n",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "name"
                                          ],
                                          "minProperties": 3,
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "const": "ContactPoint",
                                              "x-parser-schema-id": "<anonymous-schema-110>"
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "a label for the contactPoint, i.e. 'Work', or 'Home'",
                                              "examples": [
                                                "Work",
                                                "Home",
                                                "Vacation",
                                                "Bob's Cell",
                                                "Alice's Work"
                                              ],
                                              "x-parser-schema-id": "<anonymous-schema-111>"
                                            },
                                            "telephone": {
                                              "type": "string",
                                              "x-faker": "phone.phoneNumber",
                                              "examples": [
                                                "555-555-5555",
                                                "555-555-5555 x123",
                                                "555-555-5555 ext. 123",
                                                "+1-555-555-5555"
                                              ],
                                              "x-parser-schema-id": "<anonymous-schema-112>"
                                            },
                                            "faxNumber": {
                                              "type": "string",
                                              "x-faker": "phone.phoneNumber",
                                              "examples": [
                                                "555-555-5555",
                                                "555-555-5555 x123",
                                                "555-555-5555 ext. 123",
                                                "+1-555-555-5555"
                                              ],
                                              "x-parser-schema-id": "<anonymous-schema-113>"
                                            },
                                            "email": {
                                              "description": "an email address for the item.",
                                              "type": "string",
                                              "format": "email",
                                              "x-faker": "internet.email",
                                              "examples": [
                                                "bob@example.com",
                                                "alice@example.com"
                                              ],
                                              "x-parser-schema-id": "<anonymous-schema-114>"
                                            },
                                            "url": {
                                              "description": "primary URL for the item.",
                                              "type": "string",
                                              "format": "uri",
                                              "example": "https://www.facebook.com/hallandoates",
                                              "x-parser-schema-id": "<anonymous-schema-115>"
                                            }
                                          },
                                          "x-parser-schema-id": "ContactPoint"
                                        }
                                      },
                                      "email": {
                                        "type": "string",
                                        "format": "email",
                                        "x-faker": "internet.email",
                                        "x-parser-schema-id": "<anonymous-schema-93>"
                                      },
                                      "faxNumber": {
                                        "type": "string",
                                        "description": "Do people still use fax machines?",
                                        "x-faker": "phone.phoneNumber",
                                        "x-parser-schema-id": "<anonymous-schema-117>"
                                      },
                                      "image": {
                                        "title": "image",
                                        "description": "an ImageObject or URI reference to an image on the web.",
                                        "type": "array",
                                        "x-range": [
                                          "ImageObject"
                                        ],
                                        "items": [
                                          {
                                            "type": "object",
                                            "allOf": [
                                              {
                                                "title": "MediaObject",
                                                "description": "an image, video or document availble for download",
                                                "x-subclass": [
                                                  "ImageObject",
                                                  "DigitalDocument"
                                                ],
                                                "allOf": [
                                                  {
                                                    "$id": "http://realestate.yodata.me/schema/Thing",
                                                    "type": "object",
                                                    "title": "Thing",
                                                    "summary": "The root type of all Things.",
                                                    "required": [
                                                      "type"
                                                    ],
                                                    "propertyNames": {
                                                      "pattern": "^[a-z@$][a-zA-Z0-9-_]+$",
                                                      "x-parser-schema-id": "<anonymous-schema-274>"
                                                    },
                                                    "properties": {
                                                      "type": {
                                                        "type": "string",
                                                        "pattern": "^[A-Z][a-zA-Z0-9]+$",
                                                        "description": "The item type (Linked-Data @type)",
                                                        "x-parser-schema-id": "<anonymous-schema-272>"
                                                      },
                                                      "@id": {
                                                        "type": "string",
                                                        "format": "uri",
                                                        "description": "the liked data uri for the Thing",
                                                        "x-parser-schema-id": "<anonymous-schema-273>"
                                                      }
                                                    },
                                                    "x-parser-schema-id": "Thing"
                                                  },
                                                  {
                                                    "properties": {
                                                      "type": {
                                                        "type": "string",
                                                        "enum": [
                                                          "MediaObject",
                                                          "ImageObject",
                                                          "DigitalDocument"
                                                        ]
                                                      },
                                                      "id": {
                                                        "description": "the URL to access the item.",
                                                        "example": "http://user.example.com/public/logo/fileName.zip",
                                                        "type": "string",
                                                        "format": "uri"
                                                      },
                                                      "name": {
                                                        "type": "string",
                                                        "description": "the file name of the object.",
                                                        "example": "fileName.zip"
                                                      },
                                                      "encodingFormat": {
                                                        "type": "string",
                                                        "description": "MIME type",
                                                        "example": "application/zip"
                                                      },
                                                      "about": {
                                                        "type": "string",
                                                        "format": "uri",
                                                        "description": "URI to the subject of the image or logo",
                                                        "example": "http://user.example.com/profile/card#me"
                                                      },
                                                      "url": {
                                                        "type": "string",
                                                        "format": "uri",
                                                        "description": "URL of the image content",
                                                        "example": "http://user.example.com/public/profile/image.jpg"
                                                      }
                                                    },
                                                    "x-parser-schema-id": "<anonymous-schema-275>"
                                                  }
                                                ],
                                                "x-parser-schema-id": "MediaObject"
                                              },
                                              {
                                                "title": "ImageObject",
                                                "x-range": "ImageObject",
                                                "properties": {
                                                  "type": {
                                                    "enum": [
                                                      "ImageObject"
                                                    ],
                                                    "example": "ImageObject"
                                                  },
                                                  "id": {
                                                    "example": "http://user.example.com/public/logo/image.jpg"
                                                  },
                                                  "name": {
                                                    "example": "image.jpg"
                                                  },
                                                  "encodingFormat": {
                                                    "example": "image/jpeg"
                                                  }
                                                },
                                                "x-parser-schema-id": "<anonymous-schema-276>"
                                              }
                                            ],
                                            "x-parser-schema-id": "<anonymous-schema-271>"
                                          }
                                        ]
                                      },
                                      "logo": {
                                        "description": "a logo associated with the organization.",
                                        "items": {
                                          "allOf": [
                                            {
                                              "type": "object",
                                              "title": "DigitalDocument",
                                              "x-range": "DigitalDocument",
                                              "description": "an electronic file.",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "enum": [
                                                    "DigitalDocument"
                                                  ],
                                                  "x-parser-schema-id": "<anonymous-schema-621>"
                                                },
                                                "id": {
                                                  "type": "string",
                                                  "example": "http://user.example.com/public/logo/archive.zip",
                                                  "x-parser-schema-id": "<anonymous-schema-622>"
                                                },
                                                "name": {
                                                  "type": "string",
                                                  "description": "document name or title",
                                                  "example": "archive.zip",
                                                  "x-parser-schema-id": "<anonymous-schema-623>"
                                                },
                                                "encodingFormat": {
                                                  "type": "string",
                                                  "description": "[ISO Media Type](https://www.iana.org/assignments/media-types/media-types.xhtml)",
                                                  "example": "application/zip",
                                                  "x-parser-schema-id": "<anonymous-schema-624>"
                                                },
                                                "about": {
                                                  "type": "object",
                                                  "description": "subject of the Document",
                                                  "x-range": "Thing",
                                                  "example": {
                                                    "type": "RealEstateTransaction",
                                                    "identifier": {
                                                      "bmsTransactionId": "xxxx"
                                                    }
                                                  },
                                                  "x-parser-schema-id": "<anonymous-schema-625>"
                                                },
                                                "url": {
                                                  "type": "string",
                                                  "description": "public URL of the object",
                                                  "example": "https://example.com",
                                                  "x-parser-schema-id": "<anonymous-schema-626>"
                                                }
                                              },
                                              "x-parser-schema-id": "DigitalDocument"
                                            },
                                            {
                                              "description": "an associated logo",
                                              "type": "object"
                                            }
                                          ],
                                          "type": "object"
                                        },
                                        "type": "array",
                                        "x-range": [
                                          "ImageObject",
                                          "DigitalDocument"
                                        ]
                                      },
                                      "name": {
                                        "description": "Name or DBA.",
                                        "type": "string"
                                      },
                                      "parentOrganization": {
                                        "items": {
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "subOrganization": {
                                        "description": "a child organization",
                                        "x-range": [
                                          "RealEstateOrganization"
                                        ],
                                        "type": "array",
                                        "items": {
                                          "type": "string",
                                          "format": "uri",
                                          "example": "http://org.example.com/profile/card#me"
                                        }
                                      },
                                      "telephone": {
                                        "type": "string",
                                        "description": "Primary phone number.",
                                        "example": "+15558675309",
                                        "x-parser-schema-id": "<anonymous-schema-128>"
                                      },
                                      "type": {
                                        "enum": [
                                          "Organization"
                                        ],
                                        "type": "string"
                                      },
                                      "url": {
                                        "description": "primary website/url for the entity.",
                                        "format": "uri",
                                        "type": "string"
                                      }
                                    },
                                    "x-parser-schema-id": "<anonymous-schema-412>"
                                  }
                                ],
                                "x-parser-schema-id": "Organization"
                              },
                              {
                                "title": "RealEstateTeam",
                                "description": "A real estate team.",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "description": "RealEstateTeam",
                                    "enum": [
                                      "RealEstateTeam"
                                    ]
                                  },
                                  "areaServed": {
                                    "type": "object",
                                    "description": "the physical areas that make up the ServiceArea",
                                    "x-range": [
                                      "City",
                                      "PostalCodeArea"
                                    ],
                                    "example": {
                                      "type": "PostalCode",
                                      "postalCode": "91371",
                                      "addressLocality": "Woodland Hills",
                                      "addressCounty": "Los Angeles",
                                      "addressRegion": "CA",
                                      "addressCountry": "US"
                                    }
                                  },
                                  "description": {
                                    "example": "The number on Gotham City Real Estate Company since 1940",
                                    "type": "string",
                                    "description": "description of the item."
                                  },
                                  "parentOrganization": {
                                    "x-range": "RealEstateOrganization",
                                    "description": "A franchisor or affiliate network of which this organization plays a membership role.",
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "format": "uri"
                                    }
                                  },
                                  "member": {
                                    "type": "array",
                                    "items": {
                                      "allOf": [
                                        {
                                          "title": "OrganizationRole",
                                          "type": "object",
                                          "description": "describes a role played by a member and a group or organization.",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "description": "a role played by the member in the memberOf group",
                                              "enum": [
                                                "OrganizationRole"
                                              ],
                                              "x-parser-schema-id": "<anonymous-schema-391>"
                                            },
                                            "roleName": {
                                              "type": "string",
                                              "description": "the role name",
                                              "example": "Owner",
                                              "x-parser-schema-id": "<anonymous-schema-392>"
                                            },
                                            "memberOf": {
                                              "description": "the org or group where the role is performed",
                                              "type": "object",
                                              "example": {
                                                "type": "RealEstateOrganization",
                                                "id": "http://orgid.example.com/profile/card#me"
                                              },
                                              "x-parser-schema-id": "<anonymous-schema-393>"
                                            },
                                            "member": {
                                              "description": "member object or id",
                                              "type": "string",
                                              "format": "uri",
                                              "example": "https://memberid.example.com/profile/card#me",
                                              "x-parser-schema-id": "<anonymous-schema-394>"
                                            },
                                            "startDate": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "date the member began performing this role",
                                              "x-parser-schema-id": "<anonymous-schema-395>"
                                            },
                                            "endDate": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "date the member stopped performing the role",
                                              "x-parser-schema-id": "<anonymous-schema-396>"
                                            }
                                          },
                                          "x-parser-schema-id": "OrganizationRole"
                                        },
                                        {
                                          "type": "object",
                                          "title": "RealEstateTeamMembership",
                                          "description": "a membership relationship.  Subclass of OrganizationRole",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "description": "a member of a real estate team",
                                              "enum": [
                                                "RealEstateTeamMembership"
                                              ],
                                              "example": "RealEstateTeamMembership",
                                              "x-parser-schema-id": "<anonymous-schema-431>"
                                            },
                                            "roleName": {
                                              "type": "string",
                                              "enum": [
                                                "TeamMember",
                                                "TeamAdmin",
                                                "TeamOwner"
                                              ],
                                              "x-parser-schema-id": "<anonymous-schema-432>"
                                            },
                                            "memberOf": {
                                              "type": "string",
                                              "format": "uri",
                                              "example": "https://{team-id}.example.com/profile/card#me",
                                              "x-parser-schema-id": "<anonymous-schema-433>"
                                            },
                                            "member": {
                                              "type": "string",
                                              "format": "uri",
                                              "example": "https://{agent}.example.com/profile/card#me",
                                              "x-parser-schema-id": "<anonymous-schema-434>"
                                            }
                                          },
                                          "x-parser-schema-id": "<anonymous-schema-430>"
                                        }
                                      ],
                                      "x-parser-schema-id": "RealEstateTeamMembership"
                                    }
                                  }
                                },
                                "x-parser-schema-id": "<anonymous-schema-413>"
                              }
                            ],
                            "x-parser-schema-id": "RealEstateTeam"
                          },
                          {
                            "allOf": [
                              {
                                "allOf": [
                                  {
                                    "$id": "http://realestate.yodata.me/schema/Thing",
                                    "type": "object",
                                    "title": "Thing",
                                    "summary": "The root type of all Things.",
                                    "required": [
                                      "type"
                                    ],
                                    "propertyNames": {
                                      "pattern": "^[a-z@$][a-zA-Z0-9-_]+$",
                                      "x-parser-schema-id": "<anonymous-schema-274>"
                                    },
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "pattern": "^[A-Z][a-zA-Z0-9]+$",
                                        "description": "The item type (Linked-Data @type)",
                                        "x-parser-schema-id": "<anonymous-schema-272>"
                                      },
                                      "@id": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "the liked data uri for the Thing",
                                        "x-parser-schema-id": "<anonymous-schema-273>"
                                      }
                                    },
                                    "x-parser-schema-id": "Thing"
                                  },
                                  {
                                    "x-kind": "Organization",
                                    "x-parser-schema-id": "<anonymous-schema-410>"
                                  },
                                  {
                                    "x-hasSubclass": [
                                      "RealEstateOrganization",
                                      "RealEstateOffice",
                                      "RealEstateAgent"
                                    ],
                                    "x-parser-schema-id": "<anonymous-schema-411>"
                                  },
                                  {
                                    "x-subClassOf": [
                                      "https://schema.org/Organization"
                                    ],
                                    "properties": {
                                      "address": {
                                        "type": "object",
                                        "x-range": "PostalAddress",
                                        "description": "A physical address.",
                                        "example": {
                                          "type": "PostalAddress",
                                          "name": "Home",
                                          "addressCountry": "USA",
                                          "addressCounty": "Gotham County",
                                          "addressLocality": "Gotham City",
                                          "addressRegion": "New Jersey",
                                          "addressSubdivision": "Gotham Heights",
                                          "postalCode": "10010",
                                          "postOfficeBoxNumber": "Box 1234",
                                          "streetAddress": "1007 Mountain Gate Rd"
                                        },
                                        "x-parser-schema-id": "<anonymous-schema-370>"
                                      },
                                      "availableLanguage": {
                                        "title": "availableLanguage",
                                        "type": "array",
                                        "description": "Please use one of the language codes from the IETF BCP 47 standard.",
                                        "x-range": "Language",
                                        "items": {
                                          "$id": "htttp://realestate.yodata.me/schema/Language.yaml",
                                          "description": "a written or spoken Language",
                                          "title": "Language",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "name",
                                            "additionalName"
                                          ],
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "const": "Language",
                                              "x-parser-schema-id": "<anonymous-schema-124>"
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "the display name of the language",
                                              "x-parser-schema-id": "<anonymous-schema-125>"
                                            },
                                            "additionalName": {
                                              "type": "string",
                                              "description": "BCP 47 language code",
                                              "x-parser-schema-id": "<anonymous-schema-126>"
                                            }
                                          },
                                          "examples": [
                                            {
                                              "type": "Language",
                                              "name": "English",
                                              "additionalName": "en-us"
                                            },
                                            {
                                              "type": "Language",
                                              "name": "Spanish",
                                              "additionalName": "es"
                                            },
                                            {
                                              "type": "Language",
                                              "name": "French",
                                              "additionalName": "fr"
                                            },
                                            {
                                              "type": "Language",
                                              "name": "German",
                                              "additionalName": "de"
                                            },
                                            {
                                              "type": "Language",
                                              "name": "Italian",
                                              "additionalName": "it"
                                            },
                                            {
                                              "type": "Language",
                                              "name": "Japanese",
                                              "additionalName": "ja"
                                            },
                                            {
                                              "type": "Language",
                                              "name": "Korean",
                                              "additionalName": "ko"
                                            },
                                            {
                                              "type": "Language",
                                              "name": "Portuguese",
                                              "additionalName": "pt"
                                            },
                                            {
                                              "type": "Language",
                                              "name": "Russian",
                                              "additionalName": "ru"
                                            },
                                            {
                                              "type": "Language",
                                              "name": "Chinese",
                                              "additionalName": "zh"
                                            },
                                            {
                                              "type": "Language",
                                              "name": "Arabic",
                                              "additionalName": "ar"
                                            },
                                            {
                                              "type": "Language",
                                              "name": "Hindi",
                                              "additionalName": "hi"
                                            },
                                            {
                                              "type": "Language",
                                              "name": "Bengali",
                                              "additionalName": "bn"
                                            },
                                            {
                                              "type": "Language",
                                              "name": "Portuguese",
                                              "additionalName": "pt"
                                            }
                                          ],
                                          "x-parser-schema-id": "Language"
                                        }
                                      },
                                      "branchCode": {
                                        "description": "A short textual code that uniquely identifies a place of business.",
                                        "example": "for BHHS profile events, see additionalProperty.OfficeId",
                                        "type": "string"
                                      },
                                      "certification": {
                                        "$id": "http://realestate.yodata.me/schema/certification",
                                        "title": "certifications",
                                        "description": "certifications granted to a person or organization",
                                        "type": "array",
                                        "items": [
                                          {
                                            "type": "object",
                                            "title": "Certification",
                                            "description": "A certification issued by an organization to an individual or business.",
                                            "x-range": "Certification",
                                            "properties": {
                                              "type": {
                                                "description": "Certification",
                                                "type": "string",
                                                "enum": [
                                                  "Certification"
                                                ],
                                                "x-parser-schema-id": "<anonymous-schema-594>"
                                              },
                                              "name": {
                                                "type": "string",
                                                "description": "the name of the Certification",
                                                "example": "e-Agent Certified",
                                                "x-parser-schema-id": "<anonymous-schema-595>"
                                              },
                                              "issuedBy": {
                                                "type": "object",
                                                "x-range": "RealEstateOrganization",
                                                "description": "the issuing authority",
                                                "properties": {
                                                  "type": {
                                                    "enum": [
                                                      "RealEstateOrganization"
                                                    ],
                                                    "type": "string",
                                                    "description": "The item type (Linked-Data @type)",
                                                    "x-parser-schema-id": "<anonymous-schema-375>"
                                                  },
                                                  "id": {
                                                    "example": "https://example.com/profile/card#me",
                                                    "type": "string",
                                                    "format": "uri",
                                                    "description": "Linked-Data URI (@id)",
                                                    "x-parser-schema-id": "<anonymous-schema-376>"
                                                  },
                                                  "name": {
                                                    "type": "string",
                                                    "description": "name of the issuing organization",
                                                    "example": "Gotham City Real Estate",
                                                    "x-parser-schema-id": "<anonymous-schema-377>"
                                                  }
                                                },
                                                "x-parser-schema-id": "<anonymous-schema-374>"
                                              },
                                              "issuedTo": {
                                                "x-range": "RealEstateAgent",
                                                "type": "object",
                                                "description": "the subject",
                                                "properties": {
                                                  "type": {
                                                    "enum": [
                                                      "RealEstateAgent"
                                                    ],
                                                    "type": "string",
                                                    "description": "The item type (Linked-Data @type)",
                                                    "x-parser-schema-id": "<anonymous-schema-379>"
                                                  },
                                                  "id": {
                                                    "type": "string",
                                                    "format": "uri",
                                                    "description": "Linked-Data URI (@id)",
                                                    "x-parser-schema-id": "<anonymous-schema-380>"
                                                  },
                                                  "name": {
                                                    "type": "string",
                                                    "description": "the name of the item",
                                                    "x-parser-schema-id": "<anonymous-schema-92>"
                                                  }
                                                },
                                                "x-parser-schema-id": "<anonymous-schema-596>"
                                              }
                                            },
                                            "x-parser-schema-id": "Certification"
                                          }
                                        ]
                                      },
                                      "contactPoint": {
                                        "$id": "http://realestate.yodata.me/definitions/contactPoint.json",
                                        "type": "array",
                                        "description": "a named point of contact - telephone, email, faxNumber, and/or url for the entity",
                                        "items": {
                                          "$id": "htttp://realestate.yodata.me/schema/ContactPoint.json",
                                          "title": "ContactPoint",
                                          "description": "A point of contact for the entity. By convention in the real estate domain, ContactPoints\nare preferred over telephone, email, and faxNumber so the ContactPoint.name property can be used to label values\nfor example, Work Telephone, Home, as named contactPoint values.\n",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "name"
                                          ],
                                          "minProperties": 3,
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "const": "ContactPoint",
                                              "x-parser-schema-id": "<anonymous-schema-110>"
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "a label for the contactPoint, i.e. 'Work', or 'Home'",
                                              "examples": [
                                                "Work",
                                                "Home",
                                                "Vacation",
                                                "Bob's Cell",
                                                "Alice's Work"
                                              ],
                                              "x-parser-schema-id": "<anonymous-schema-111>"
                                            },
                                            "telephone": {
                                              "type": "string",
                                              "x-faker": "phone.phoneNumber",
                                              "examples": [
                                                "555-555-5555",
                                                "555-555-5555 x123",
                                                "555-555-5555 ext. 123",
                                                "+1-555-555-5555"
                                              ],
                                              "x-parser-schema-id": "<anonymous-schema-112>"
                                            },
                                            "faxNumber": {
                                              "type": "string",
                                              "x-faker": "phone.phoneNumber",
                                              "examples": [
                                                "555-555-5555",
                                                "555-555-5555 x123",
                                                "555-555-5555 ext. 123",
                                                "+1-555-555-5555"
                                              ],
                                              "x-parser-schema-id": "<anonymous-schema-113>"
                                            },
                                            "email": {
                                              "description": "an email address for the item.",
                                              "type": "string",
                                              "format": "email",
                                              "x-faker": "internet.email",
                                              "examples": [
                                                "bob@example.com",
                                                "alice@example.com"
                                              ],
                                              "x-parser-schema-id": "<anonymous-schema-114>"
                                            },
                                            "url": {
                                              "description": "primary URL for the item.",
                                              "type": "string",
                                              "format": "uri",
                                              "example": "https://www.facebook.com/hallandoates",
                                              "x-parser-schema-id": "<anonymous-schema-115>"
                                            }
                                          },
                                          "x-parser-schema-id": "ContactPoint"
                                        }
                                      },
                                      "email": {
                                        "type": "string",
                                        "format": "email",
                                        "x-faker": "internet.email",
                                        "x-parser-schema-id": "<anonymous-schema-93>"
                                      },
                                      "faxNumber": {
                                        "type": "string",
                                        "description": "Do people still use fax machines?",
                                        "x-faker": "phone.phoneNumber",
                                        "x-parser-schema-id": "<anonymous-schema-117>"
                                      },
                                      "image": {
                                        "title": "image",
                                        "description": "an ImageObject or URI reference to an image on the web.",
                                        "type": "array",
                                        "x-range": [
                                          "ImageObject"
                                        ],
                                        "items": [
                                          {
                                            "type": "object",
                                            "allOf": [
                                              {
                                                "title": "MediaObject",
                                                "description": "an image, video or document availble for download",
                                                "x-subclass": [
                                                  "ImageObject",
                                                  "DigitalDocument"
                                                ],
                                                "allOf": [
                                                  {
                                                    "$id": "http://realestate.yodata.me/schema/Thing",
                                                    "type": "object",
                                                    "title": "Thing",
                                                    "summary": "The root type of all Things.",
                                                    "required": [
                                                      "type"
                                                    ],
                                                    "propertyNames": {
                                                      "pattern": "^[a-z@$][a-zA-Z0-9-_]+$",
                                                      "x-parser-schema-id": "<anonymous-schema-274>"
                                                    },
                                                    "properties": {
                                                      "type": {
                                                        "type": "string",
                                                        "pattern": "^[A-Z][a-zA-Z0-9]+$",
                                                        "description": "The item type (Linked-Data @type)",
                                                        "x-parser-schema-id": "<anonymous-schema-272>"
                                                      },
                                                      "@id": {
                                                        "type": "string",
                                                        "format": "uri",
                                                        "description": "the liked data uri for the Thing",
                                                        "x-parser-schema-id": "<anonymous-schema-273>"
                                                      }
                                                    },
                                                    "x-parser-schema-id": "Thing"
                                                  },
                                                  {
                                                    "properties": {
                                                      "type": {
                                                        "type": "string",
                                                        "enum": [
                                                          "MediaObject",
                                                          "ImageObject",
                                                          "DigitalDocument"
                                                        ]
                                                      },
                                                      "id": {
                                                        "description": "the URL to access the item.",
                                                        "example": "http://user.example.com/public/logo/fileName.zip",
                                                        "type": "string",
                                                        "format": "uri"
                                                      },
                                                      "name": {
                                                        "type": "string",
                                                        "description": "the file name of the object.",
                                                        "example": "fileName.zip"
                                                      },
                                                      "encodingFormat": {
                                                        "type": "string",
                                                        "description": "MIME type",
                                                        "example": "application/zip"
                                                      },
                                                      "about": {
                                                        "type": "string",
                                                        "format": "uri",
                                                        "description": "URI to the subject of the image or logo",
                                                        "example": "http://user.example.com/profile/card#me"
                                                      },
                                                      "url": {
                                                        "type": "string",
                                                        "format": "uri",
                                                        "description": "URL of the image content",
                                                        "example": "http://user.example.com/public/profile/image.jpg"
                                                      }
                                                    },
                                                    "x-parser-schema-id": "<anonymous-schema-275>"
                                                  }
                                                ],
                                                "x-parser-schema-id": "MediaObject"
                                              },
                                              {
                                                "title": "ImageObject",
                                                "x-range": "ImageObject",
                                                "properties": {
                                                  "type": {
                                                    "enum": [
                                                      "ImageObject"
                                                    ],
                                                    "example": "ImageObject"
                                                  },
                                                  "id": {
                                                    "example": "http://user.example.com/public/logo/image.jpg"
                                                  },
                                                  "name": {
                                                    "example": "image.jpg"
                                                  },
                                                  "encodingFormat": {
                                                    "example": "image/jpeg"
                                                  }
                                                },
                                                "x-parser-schema-id": "<anonymous-schema-276>"
                                              }
                                            ],
                                            "x-parser-schema-id": "<anonymous-schema-271>"
                                          }
                                        ]
                                      },
                                      "logo": {
                                        "description": "a logo associated with the organization.",
                                        "items": {
                                          "allOf": [
                                            {
                                              "type": "object",
                                              "title": "DigitalDocument",
                                              "x-range": "DigitalDocument",
                                              "description": "an electronic file.",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "enum": [
                                                    "DigitalDocument"
                                                  ],
                                                  "x-parser-schema-id": "<anonymous-schema-621>"
                                                },
                                                "id": {
                                                  "type": "string",
                                                  "example": "http://user.example.com/public/logo/archive.zip",
                                                  "x-parser-schema-id": "<anonymous-schema-622>"
                                                },
                                                "name": {
                                                  "type": "string",
                                                  "description": "document name or title",
                                                  "example": "archive.zip",
                                                  "x-parser-schema-id": "<anonymous-schema-623>"
                                                },
                                                "encodingFormat": {
                                                  "type": "string",
                                                  "description": "[ISO Media Type](https://www.iana.org/assignments/media-types/media-types.xhtml)",
                                                  "example": "application/zip",
                                                  "x-parser-schema-id": "<anonymous-schema-624>"
                                                },
                                                "about": {
                                                  "type": "object",
                                                  "description": "subject of the Document",
                                                  "x-range": "Thing",
                                                  "example": {
                                                    "type": "RealEstateTransaction",
                                                    "identifier": {
                                                      "bmsTransactionId": "xxxx"
                                                    }
                                                  },
                                                  "x-parser-schema-id": "<anonymous-schema-625>"
                                                },
                                                "url": {
                                                  "type": "string",
                                                  "description": "public URL of the object",
                                                  "example": "https://example.com",
                                                  "x-parser-schema-id": "<anonymous-schema-626>"
                                                }
                                              },
                                              "x-parser-schema-id": "DigitalDocument"
                                            },
                                            {
                                              "description": "an associated logo",
                                              "type": "object"
                                            }
                                          ],
                                          "type": "object"
                                        },
                                        "type": "array",
                                        "x-range": [
                                          "ImageObject",
                                          "DigitalDocument"
                                        ]
                                      },
                                      "name": {
                                        "description": "Name or DBA.",
                                        "type": "string"
                                      },
                                      "parentOrganization": {
                                        "items": {
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "subOrganization": {
                                        "description": "a child organization",
                                        "x-range": [
                                          "RealEstateOrganization"
                                        ],
                                        "type": "array",
                                        "items": {
                                          "type": "string",
                                          "format": "uri",
                                          "example": "http://org.example.com/profile/card#me"
                                        }
                                      },
                                      "telephone": {
                                        "type": "string",
                                        "description": "Primary phone number.",
                                        "example": "+15558675309",
                                        "x-parser-schema-id": "<anonymous-schema-128>"
                                      },
                                      "type": {
                                        "enum": [
                                          "Organization"
                                        ],
                                        "type": "string"
                                      },
                                      "url": {
                                        "description": "primary website/url for the entity.",
                                        "format": "uri",
                                        "type": "string"
                                      }
                                    },
                                    "x-parser-schema-id": "<anonymous-schema-412>"
                                  }
                                ],
                                "x-parser-schema-id": "Organization"
                              },
                              {
                                "title": "RealEstateOrganization",
                                "description": "A real estate franchisor, broker or business",
                                "x-range": "RealEstateOrganization",
                                "properties": {
                                  "type": {
                                    "description": "RealEstateOrganzation",
                                    "enum": [
                                      "RealEstateOrganization",
                                      "RealEstateOffice",
                                      "RealEstateAgent"
                                    ],
                                    "example": "RealEstateOrganization"
                                  },
                                  "areaServed": {
                                    "type": "object",
                                    "description": "the physical areas that make up the ServiceArea",
                                    "x-range": [
                                      "City",
                                      "PostalCodeArea"
                                    ],
                                    "example": {
                                      "type": "PostalCode",
                                      "postalCode": "91371",
                                      "addressLocality": "Woodland Hills",
                                      "addressCounty": "Los Angeles",
                                      "addressRegion": "CA",
                                      "addressCountry": "US"
                                    }
                                  },
                                  "description": {
                                    "example": "The number on Gotham City Real Estate Company since 1940",
                                    "type": "string",
                                    "description": "description of the item."
                                  },
                                  "parentOrganization": {
                                    "type": "array",
                                    "x-range": "RealEstateOrganization",
                                    "description": "A franchisor or affiliate network of which this organization plays a membership role.",
                                    "items": {
                                      "type": "string",
                                      "format": "uri"
                                    }
                                  },
                                  "numberOfSubOrganizations": {
                                    "type": "number",
                                    "description": "the number of offices for an affiliate."
                                  },
                                  "member": {
                                    "title": "member",
                                    "description": "A member of an Organization or a ProgramMembership. Organizations can be members of organizations; ProgramMembership is typically for individuals.",
                                    "type": "array",
                                    "x-range": [
                                      "OrganizationRole",
                                      "URI"
                                    ],
                                    "items": {
                                      "anyOf": [
                                        {
                                          "title": "OrganizationRole",
                                          "type": "object",
                                          "description": "describes a role played by a member and a group or organization.",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "description": "a role played by the member in the memberOf group",
                                              "enum": [
                                                "OrganizationRole"
                                              ],
                                              "x-parser-schema-id": "<anonymous-schema-391>"
                                            },
                                            "roleName": {
                                              "type": "string",
                                              "description": "the role name",
                                              "example": "Owner",
                                              "x-parser-schema-id": "<anonymous-schema-392>"
                                            },
                                            "memberOf": {
                                              "description": "the org or group where the role is performed",
                                              "type": "object",
                                              "example": {
                                                "type": "RealEstateOrganization",
                                                "id": "http://orgid.example.com/profile/card#me"
                                              },
                                              "x-parser-schema-id": "<anonymous-schema-393>"
                                            },
                                            "member": {
                                              "description": "member object or id",
                                              "type": "string",
                                              "format": "uri",
                                              "example": "https://memberid.example.com/profile/card#me",
                                              "x-parser-schema-id": "<anonymous-schema-394>"
                                            },
                                            "startDate": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "date the member began performing this role",
                                              "x-parser-schema-id": "<anonymous-schema-395>"
                                            },
                                            "endDate": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "date the member stopped performing the role",
                                              "x-parser-schema-id": "<anonymous-schema-396>"
                                            }
                                          },
                                          "x-parser-schema-id": "OrganizationRole"
                                        },
                                        {
                                          "type": "string",
                                          "format": "uri"
                                        }
                                      ]
                                    }
                                  },
                                  "memberOf": {
                                    "x-range": [
                                      "OrganizationRole",
                                      "MLSMembership"
                                    ],
                                    "description": "An Organization (or ProgramMembership) to which this Person or Organization belongs.",
                                    "type": "array",
                                    "items": {
                                      "allOf": [
                                        {
                                          "title": "OrganizationRole",
                                          "type": "object",
                                          "description": "describes a role played by a member and a group or organization.",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "description": "a role played by the member in the memberOf group",
                                              "enum": [
                                                "OrganizationRole"
                                              ],
                                              "x-parser-schema-id": "<anonymous-schema-391>"
                                            },
                                            "roleName": {
                                              "type": "string",
                                              "description": "the role name",
                                              "example": "Owner",
                                              "x-parser-schema-id": "<anonymous-schema-392>"
                                            },
                                            "memberOf": {
                                              "description": "the org or group where the role is performed",
                                              "type": "object",
                                              "example": {
                                                "type": "RealEstateOrganization",
                                                "id": "http://orgid.example.com/profile/card#me"
                                              },
                                              "x-parser-schema-id": "<anonymous-schema-393>"
                                            },
                                            "member": {
                                              "description": "member object or id",
                                              "type": "string",
                                              "format": "uri",
                                              "example": "https://memberid.example.com/profile/card#me",
                                              "x-parser-schema-id": "<anonymous-schema-394>"
                                            },
                                            "startDate": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "date the member began performing this role",
                                              "x-parser-schema-id": "<anonymous-schema-395>"
                                            },
                                            "endDate": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "date the member stopped performing the role",
                                              "x-parser-schema-id": "<anonymous-schema-396>"
                                            }
                                          },
                                          "x-parser-schema-id": "OrganizationRole"
                                        },
                                        {
                                          "type": "object",
                                          "title": "MLSMembership",
                                          "description": "a membership relationship",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "description": "an MLS member relationship",
                                              "enum": [
                                                "MLSMembership"
                                              ],
                                              "example": "MLSMembership",
                                              "x-parser-schema-id": "<anonymous-schema-664>"
                                            },
                                            "roleName": {
                                              "type": "string",
                                              "example": "MLSMember",
                                              "x-parser-schema-id": "<anonymous-schema-665>"
                                            },
                                            "memberOf": {
                                              "type": "object",
                                              "x-range": "MultipleListingService",
                                              "example": {
                                                "type": "MultipleListingService",
                                                "name": "GreatScottMLS"
                                              },
                                              "x-parser-schema-id": "<anonymous-schema-666>"
                                            },
                                            "member": {
                                              "type": "string",
                                              "format": "uri",
                                              "example": "https://{agent}.example.com/profile/card#me",
                                              "x-parser-schema-id": "<anonymous-schema-667>"
                                            },
                                            "memberId": {
                                              "type": "string",
                                              "description": "the user's MLSID",
                                              "example": "memberid123",
                                              "x-parser-schema-id": "<anonymous-schema-668>"
                                            }
                                          },
                                          "x-parser-schema-id": "<anonymous-schema-663>"
                                        }
                                      ],
                                      "x-parser-schema-id": "MLSMembership"
                                    }
                                  },
                                  "permit": {
                                    "type": "array",
                                    "x-range": "RealEstateLicense",
                                    "items": {
                                      "type": "object",
                                      "example": {
                                        "type": "RealEstateLicense",
                                        "name": "CA-DRE# 02068375",
                                        "identifier": {
                                          "type": "PropertyValue",
                                          "name": "CA-DRE",
                                          "value": "02068375"
                                        },
                                        "issuedBy": {
                                          "type": "State",
                                          "name": "California"
                                        },
                                        "issuedThrough": {
                                          "type": "Service",
                                          "name": "California Department of Real Estate"
                                        },
                                        "validIn": {
                                          "type": "State",
                                          "name": "California"
                                        },
                                        "validFrom": "2019-07-07T10:55:02Z",
                                        "validUntil": "2019-07-07T10:55:02Z"
                                      }
                                    }
                                  }
                                },
                                "x-parser-schema-id": "<anonymous-schema-414>"
                              }
                            ],
                            "x-parser-schema-id": "RealEstateOrganization"
                          }
                        ],
                        "x-parser-schema-id": "<anonymous-schema-368>"
                      }
                    },
                    "x-parser-schema-id": "<anonymous-schema-366>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-364>"
              },
              "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-original-payload": {
                "type": "object",
                "required": [
                  "topic",
                  "data"
                ],
                "properties": {
                  "topic": {
                    "type": "string",
                    "const": "realestate/profile#update"
                  },
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "object"
                    ],
                    "properties": {
                      "type": {
                        "const": "UpdateAction"
                      },
                      "object": {
                        "oneOf": [
                          {
                            "$id": "http://realestate.yodata.me/schema/RealEstateAgent",
                            "title": "RealEstateAgent",
                            "description": "A real estate agent who represents buyers and sellers",
                            "type": "object",
                            "additionalProperties": true,
                            "properties": {
                              "type": {
                                "type": "string",
                                "const": "RealEstateAgent"
                              },
                              "additionalName": {
                                "title": "additionalName",
                                "description": "any other name(s) associated with the entity, i.e. nickname, middle name, maiden name, etc. For multiple names, use a comma without space as a separator.",
                                "type": "string",
                                "examples": [
                                  "Johnny,John",
                                  "Prince,The Artist Formerly Known as Prince,The Artist",
                                  "Babs,Barbara",
                                  "Katheryn Elizabeth Hudson,Katy Perry",
                                  "Destiny Hope Cyrus,Miley Cyrus"
                                ]
                              },
                              "address": {
                                "type": "object",
                                "x-range": "PostalAddress",
                                "description": "A physical address.",
                                "example": {
                                  "type": "PostalAddress",
                                  "name": "Home",
                                  "addressCountry": "USA",
                                  "addressCounty": "Gotham County",
                                  "addressLocality": "Gotham City",
                                  "addressRegion": "New Jersey",
                                  "addressSubdivision": "Gotham Heights",
                                  "postalCode": "10010",
                                  "postOfficeBoxNumber": "Box 1234",
                                  "streetAddress": "1007 Mountain Gate Rd"
                                }
                              },
                              "certification": {
                                "type": "object",
                                "title": "Certification",
                                "description": "A certification issued by an organization to an individual or business.",
                                "x-range": "Certification",
                                "properties": {
                                  "type": {
                                    "description": "Certification",
                                    "type": "string",
                                    "enum": [
                                      "Certification"
                                    ]
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "the name of the Certification",
                                    "example": "e-Agent Certified"
                                  },
                                  "issuedBy": {
                                    "type": "object",
                                    "x-range": "RealEstateOrganization",
                                    "description": "the issuing authority",
                                    "properties": {
                                      "type": {
                                        "enum": [
                                          "RealEstateOrganization"
                                        ],
                                        "type": "string",
                                        "description": "The item type (Linked-Data @type)"
                                      },
                                      "id": {
                                        "example": "https://example.com/profile/card#me",
                                        "type": "string",
                                        "format": "uri",
                                        "description": "Linked-Data URI (@id)"
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "name of the issuing organization",
                                        "example": "Gotham City Real Estate"
                                      }
                                    }
                                  },
                                  "issuedTo": {
                                    "x-range": "RealEstateAgent",
                                    "type": "object",
                                    "description": "the subject",
                                    "properties": {
                                      "type": {
                                        "enum": [
                                          "RealEstateAgent"
                                        ],
                                        "type": "string",
                                        "description": "The item type (Linked-Data @type)"
                                      },
                                      "id": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "Linked-Data URI (@id)"
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "the name of the item"
                                      }
                                    }
                                  }
                                }
                              },
                              "contactPoint": {
                                "$id": "htttp://realestate.yodata.me/schema/ContactPoint.json",
                                "title": "ContactPoint",
                                "description": "A point of contact for the entity. By convention in the real estate domain, ContactPoints\nare preferred over telephone, email, and faxNumber so the ContactPoint.name property can be used to label values\nfor example, Work Telephone, Home, as named contactPoint values.\n",
                                "type": "object",
                                "required": [
                                  "type",
                                  "name"
                                ],
                                "minProperties": 3,
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "const": "ContactPoint"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "a label for the contactPoint, i.e. 'Work', or 'Home'",
                                    "examples": [
                                      "Work",
                                      "Home",
                                      "Vacation",
                                      "Bob's Cell",
                                      "Alice's Work"
                                    ]
                                  },
                                  "telephone": {
                                    "type": "string",
                                    "x-faker": "phone.phoneNumber",
                                    "examples": [
                                      "555-555-5555",
                                      "555-555-5555 x123",
                                      "555-555-5555 ext. 123",
                                      "+1-555-555-5555"
                                    ]
                                  },
                                  "faxNumber": {
                                    "type": "string",
                                    "x-faker": "phone.phoneNumber",
                                    "examples": [
                                      "555-555-5555",
                                      "555-555-5555 x123",
                                      "555-555-5555 ext. 123",
                                      "+1-555-555-5555"
                                    ]
                                  },
                                  "email": {
                                    "description": "an email address for the item.",
                                    "type": "string",
                                    "format": "email",
                                    "x-faker": "internet.email",
                                    "examples": [
                                      "bob@example.com",
                                      "alice@example.com"
                                    ]
                                  },
                                  "url": {
                                    "description": "primary URL for the item.",
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://www.facebook.com/hallandoates"
                                  }
                                }
                              },
                              "email": {
                                "type": "string",
                                "format": "email",
                                "x-faker": "internet.email"
                              },
                              "familyName": {
                                "$id": "htttp://realestate.yodata.me/schema/familyName.yaml",
                                "type": "string",
                                "title": "Family Name",
                                "description": "Last Name of a person",
                                "x-faker": "name.lastName",
                                "maxLength": 50,
                                "externalDocs": {
                                  "description": "Family Name",
                                  "url": "https://schema.org/familyName"
                                },
                                "examples": [
                                  "Smith",
                                  "Jones",
                                  "Parker",
                                  "Monk",
                                  "Brown",
                                  "Miller",
                                  "Davis",
                                  "Wilson",
                                  "Fitzgerald",
                                  "Johnson",
                                  "Williams"
                                ]
                              },
                              "givenName": {
                                "type": "string",
                                "description": "First Name of a person",
                                "x-faker": "name.firstName",
                                "examples": [
                                  "John",
                                  "Jane",
                                  "Mary",
                                  "Joseph",
                                  "William",
                                  "David",
                                  "Richard",
                                  "Charles",
                                  "Thomas",
                                  "Christopher",
                                  "Daniel",
                                  "Matthew",
                                  "Anthony",
                                  "Donald",
                                  "Mark",
                                  "Paul",
                                  "Steven",
                                  "Andrew",
                                  "Kenneth",
                                  "George",
                                  "Joshua",
                                  "Kevin",
                                  "Brian",
                                  "Edward",
                                  "Ronald",
                                  "Timothy",
                                  "Jason",
                                  "Jeffrey",
                                  "Ryan",
                                  "Jacob"
                                ]
                              },
                              "id": {
                                "type": "string",
                                "format": "uri",
                                "description": "Linked-Data URI (@id)"
                              },
                              "identifier": {
                                "title": "identifier",
                                "type": "object",
                                "description": "identifier assigned to a contact by the vendor who originally created the contact",
                                "examples": [
                                  {
                                    "salesforceid": "0031U00002XW1QWQA1"
                                  },
                                  {
                                    "vendoraid": "123456"
                                  },
                                  {
                                    "originating_system_id": "123456"
                                  }
                                ]
                              },
                              "image": {
                                "title": "image",
                                "description": "an ImageObject or URI reference to an image on the web.",
                                "type": "array",
                                "x-range": [
                                  "ImageObject"
                                ],
                                "items": [
                                  {
                                    "type": "object",
                                    "allOf": [
                                      {
                                        "title": "MediaObject",
                                        "description": "an image, video or document availble for download",
                                        "x-subclass": [
                                          "ImageObject",
                                          "DigitalDocument"
                                        ],
                                        "allOf": [
                                          {
                                            "$id": "http://realestate.yodata.me/schema/Thing",
                                            "type": "object",
                                            "title": "Thing",
                                            "summary": "The root type of all Things.",
                                            "required": [
                                              "type"
                                            ],
                                            "propertyNames": {
                                              "pattern": "^[a-z@$][a-zA-Z0-9-_]+$"
                                            },
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "pattern": "^[A-Z][a-zA-Z0-9]+$",
                                                "description": "The item type (Linked-Data @type)"
                                              },
                                              "@id": {
                                                "type": "string",
                                                "format": "uri",
                                                "description": "the liked data uri for the Thing"
                                              }
                                            }
                                          },
                                          {
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "MediaObject",
                                                  "ImageObject",
                                                  "DigitalDocument"
                                                ]
                                              },
                                              "id": {
                                                "description": "the URL to access the item.",
                                                "example": "http://user.example.com/public/logo/fileName.zip",
                                                "type": "string",
                                                "format": "uri"
                                              },
                                              "name": {
                                                "type": "string",
                                                "description": "the file name of the object.",
                                                "example": "fileName.zip"
                                              },
                                              "encodingFormat": {
                                                "type": "string",
                                                "description": "MIME type",
                                                "example": "application/zip"
                                              },
                                              "about": {
                                                "type": "string",
                                                "format": "uri",
                                                "description": "URI to the subject of the image or logo",
                                                "example": "http://user.example.com/profile/card#me"
                                              },
                                              "url": {
                                                "type": "string",
                                                "format": "uri",
                                                "description": "URL of the image content",
                                                "example": "http://user.example.com/public/profile/image.jpg"
                                              }
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "title": "ImageObject",
                                        "x-range": "ImageObject",
                                        "properties": {
                                          "type": {
                                            "enum": [
                                              "ImageObject"
                                            ],
                                            "example": "ImageObject"
                                          },
                                          "id": {
                                            "example": "http://user.example.com/public/logo/image.jpg"
                                          },
                                          "name": {
                                            "example": "image.jpg"
                                          },
                                          "encodingFormat": {
                                            "example": "image/jpeg"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                ]
                              },
                              "jobTitle": {
                                "type": "array",
                                "items": {
                                  "title": "jobTitle",
                                  "description": "The job title of the person (for example, Financial Manager).",
                                  "type": "string",
                                  "x-faker": "name.jobTitle",
                                  "examples": [
                                    "CEO",
                                    "Sales Manager",
                                    "Escrow Officer",
                                    "Transaction Coordinator",
                                    "Director of Marketing",
                                    "Senior Loan Officer",
                                    "Loan Officer",
                                    "Sanitation Engineer",
                                    "Owner",
                                    "Cofounder",
                                    "Founder",
                                    "President",
                                    "Vice President of Sales",
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null
                                  ]
                                }
                              },
                              "memberOf": {
                                "title": "memberOf",
                                "description": "an Organization (or ProgramMembership) to which this Person or Organization belongs.",
                                "type": "array",
                                "x-range": [
                                  "OrganizationRole",
                                  "URI"
                                ],
                                "items": {
                                  "anyOf": [
                                    {
                                      "title": "OrganizationRole",
                                      "type": "object",
                                      "description": "describes a role played by a member and a group or organization.",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "description": "a role played by the member in the memberOf group",
                                          "enum": [
                                            "OrganizationRole"
                                          ]
                                        },
                                        "roleName": {
                                          "type": "string",
                                          "description": "the role name",
                                          "example": "Owner"
                                        },
                                        "memberOf": {
                                          "description": "the org or group where the role is performed",
                                          "type": "object",
                                          "example": {
                                            "type": "RealEstateOrganization",
                                            "id": "http://orgid.example.com/profile/card#me"
                                          }
                                        },
                                        "member": {
                                          "description": "member object or id",
                                          "type": "string",
                                          "format": "uri",
                                          "example": "https://memberid.example.com/profile/card#me"
                                        },
                                        "startDate": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "date the member began performing this role"
                                        },
                                        "endDate": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "date the member stopped performing the role"
                                        }
                                      }
                                    },
                                    {
                                      "type": "string",
                                      "format": "uri"
                                    }
                                  ]
                                }
                              },
                              "name": {
                                "type": "string",
                                "description": "the name of the item"
                              },
                              "parentOrganization": {
                                "$id": "http://realestate.yodata.me/schema/parentOrganization",
                                "title": "parentOrganization",
                                "description": "organizations of which this org is a part.",
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "format": "uri"
                                }
                              },
                              "permit": {
                                "title": "Permit",
                                "description": "A permit issued by an organization to an individual or business.",
                                "type": "object",
                                "x-hasSubclass": [
                                  "RealEstateLicense"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "description": "Permit type.",
                                    "enum": [
                                      "Permit"
                                    ]
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Common or display value of the Permit.",
                                    "example": "DRE Number"
                                  },
                                  "issuedBy": {
                                    "type": "object",
                                    "x-range": "Organization",
                                    "description": "The issuing authority",
                                    "example": {
                                      "type": "State",
                                      "name": "California"
                                    }
                                  },
                                  "issuedThrough": {
                                    "type": "object",
                                    "description": "the service through which the permit was granted",
                                    "example": {
                                      "type": "Service",
                                      "name": "Department of Real Estate"
                                    }
                                  },
                                  "validIn": {
                                    "type": "object",
                                    "x-range": "Place"
                                  },
                                  "validFrom": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "start date"
                                  },
                                  "validUntil": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "end date"
                                  }
                                }
                              },
                              "subOrganization": {
                                "$id": "http://realestate.yodata.me/schema/subOrganization",
                                "title": "subOrganization",
                                "description": "child organizations of the organization",
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "format": "uri"
                                }
                              },
                              "url": {
                                "title": "url",
                                "type": "string",
                                "format": "uri",
                                "description": "URL of the item."
                              }
                            }
                          },
                          {
                            "allOf": [
                              {
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "https://org.example.com/profile/card#me"
                                  }
                                }
                              },
                              {
                                "allOf": [
                                  {
                                    "$id": "http://realestate.yodata.me/schema/Thing",
                                    "type": "object",
                                    "title": "Thing",
                                    "summary": "The root type of all Things.",
                                    "required": [
                                      "type"
                                    ],
                                    "propertyNames": {
                                      "pattern": "^[a-z@$][a-zA-Z0-9-_]+$"
                                    },
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "pattern": "^[A-Z][a-zA-Z0-9]+$",
                                        "description": "The item type (Linked-Data @type)"
                                      },
                                      "@id": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "the liked data uri for the Thing"
                                      }
                                    }
                                  },
                                  {
                                    "x-kind": "Organization"
                                  },
                                  {
                                    "x-hasSubclass": [
                                      "RealEstateOrganization",
                                      "RealEstateOffice",
                                      "RealEstateAgent"
                                    ]
                                  },
                                  {
                                    "x-subClassOf": [
                                      "https://schema.org/Organization"
                                    ],
                                    "properties": {
                                      "address": {
                                        "type": "object",
                                        "x-range": "PostalAddress",
                                        "description": "A physical address.",
                                        "example": {
                                          "type": "PostalAddress",
                                          "name": "Home",
                                          "addressCountry": "USA",
                                          "addressCounty": "Gotham County",
                                          "addressLocality": "Gotham City",
                                          "addressRegion": "New Jersey",
                                          "addressSubdivision": "Gotham Heights",
                                          "postalCode": "10010",
                                          "postOfficeBoxNumber": "Box 1234",
                                          "streetAddress": "1007 Mountain Gate Rd"
                                        }
                                      },
                                      "availableLanguage": {
                                        "title": "availableLanguage",
                                        "type": "array",
                                        "description": "Please use one of the language codes from the IETF BCP 47 standard.",
                                        "x-range": "Language",
                                        "items": {
                                          "$id": "htttp://realestate.yodata.me/schema/Language.yaml",
                                          "description": "a written or spoken Language",
                                          "title": "Language",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "name",
                                            "additionalName"
                                          ],
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "const": "Language"
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "the display name of the language"
                                            },
                                            "additionalName": {
                                              "type": "string",
                                              "description": "BCP 47 language code"
                                            }
                                          },
                                          "examples": [
                                            {
                                              "type": "Language",
                                              "name": "English",
                                              "additionalName": "en-us"
                                            },
                                            {
                                              "type": "Language",
                                              "name": "Spanish",
                                              "additionalName": "es"
                                            },
                                            {
                                              "type": "Language",
                                              "name": "French",
                                              "additionalName": "fr"
                                            },
                                            {
                                              "type": "Language",
                                              "name": "German",
                                              "additionalName": "de"
                                            },
                                            {
                                              "type": "Language",
                                              "name": "Italian",
                                              "additionalName": "it"
                                            },
                                            {
                                              "type": "Language",
                                              "name": "Japanese",
                                              "additionalName": "ja"
                                            },
                                            {
                                              "type": "Language",
                                              "name": "Korean",
                                              "additionalName": "ko"
                                            },
                                            {
                                              "type": "Language",
                                              "name": "Portuguese",
                                              "additionalName": "pt"
                                            },
                                            {
                                              "type": "Language",
                                              "name": "Russian",
                                              "additionalName": "ru"
                                            },
                                            {
                                              "type": "Language",
                                              "name": "Chinese",
                                              "additionalName": "zh"
                                            },
                                            {
                                              "type": "Language",
                                              "name": "Arabic",
                                              "additionalName": "ar"
                                            },
                                            {
                                              "type": "Language",
                                              "name": "Hindi",
                                              "additionalName": "hi"
                                            },
                                            {
                                              "type": "Language",
                                              "name": "Bengali",
                                              "additionalName": "bn"
                                            },
                                            {
                                              "type": "Language",
                                              "name": "Portuguese",
                                              "additionalName": "pt"
                                            }
                                          ]
                                        }
                                      },
                                      "branchCode": {
                                        "description": "A short textual code that uniquely identifies a place of business.",
                                        "example": "for BHHS profile events, see additionalProperty.OfficeId",
                                        "type": "string"
                                      },
                                      "certification": {
                                        "$id": "http://realestate.yodata.me/schema/certification",
                                        "title": "certifications",
                                        "description": "certifications granted to a person or organization",
                                        "type": "array",
                                        "items": [
                                          {
                                            "type": "object",
                                            "title": "Certification",
                                            "description": "A certification issued by an organization to an individual or business.",
                                            "x-range": "Certification",
                                            "properties": {
                                              "type": {
                                                "description": "Certification",
                                                "type": "string",
                                                "enum": [
                                                  "Certification"
                                                ]
                                              },
                                              "name": {
                                                "type": "string",
                                                "description": "the name of the Certification",
                                                "example": "e-Agent Certified"
                                              },
                                              "issuedBy": {
                                                "type": "object",
                                                "x-range": "RealEstateOrganization",
                                                "description": "the issuing authority",
                                                "properties": {
                                                  "type": {
                                                    "enum": [
                                                      "RealEstateOrganization"
                                                    ],
                                                    "type": "string",
                                                    "description": "The item type (Linked-Data @type)"
                                                  },
                                                  "id": {
                                                    "example": "https://example.com/profile/card#me",
                                                    "type": "string",
                                                    "format": "uri",
                                                    "description": "Linked-Data URI (@id)"
                                                  },
                                                  "name": {
                                                    "type": "string",
                                                    "description": "name of the issuing organization",
                                                    "example": "Gotham City Real Estate"
                                                  }
                                                }
                                              },
                                              "issuedTo": {
                                                "x-range": "RealEstateAgent",
                                                "type": "object",
                                                "description": "the subject",
                                                "properties": {
                                                  "type": {
                                                    "enum": [
                                                      "RealEstateAgent"
                                                    ],
                                                    "type": "string",
                                                    "description": "The item type (Linked-Data @type)"
                                                  },
                                                  "id": {
                                                    "type": "string",
                                                    "format": "uri",
                                                    "description": "Linked-Data URI (@id)"
                                                  },
                                                  "name": {
                                                    "type": "string",
                                                    "description": "the name of the item"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        ]
                                      },
                                      "contactPoint": {
                                        "$id": "http://realestate.yodata.me/definitions/contactPoint.json",
                                        "type": "array",
                                        "description": "a named point of contact - telephone, email, faxNumber, and/or url for the entity",
                                        "items": {
                                          "$id": "htttp://realestate.yodata.me/schema/ContactPoint.json",
                                          "title": "ContactPoint",
                                          "description": "A point of contact for the entity. By convention in the real estate domain, ContactPoints\nare preferred over telephone, email, and faxNumber so the ContactPoint.name property can be used to label values\nfor example, Work Telephone, Home, as named contactPoint values.\n",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "name"
                                          ],
                                          "minProperties": 3,
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "const": "ContactPoint"
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "a label for the contactPoint, i.e. 'Work', or 'Home'",
                                              "examples": [
                                                "Work",
                                                "Home",
                                                "Vacation",
                                                "Bob's Cell",
                                                "Alice's Work"
                                              ]
                                            },
                                            "telephone": {
                                              "type": "string",
                                              "x-faker": "phone.phoneNumber",
                                              "examples": [
                                                "555-555-5555",
                                                "555-555-5555 x123",
                                                "555-555-5555 ext. 123",
                                                "+1-555-555-5555"
                                              ]
                                            },
                                            "faxNumber": {
                                              "type": "string",
                                              "x-faker": "phone.phoneNumber",
                                              "examples": [
                                                "555-555-5555",
                                                "555-555-5555 x123",
                                                "555-555-5555 ext. 123",
                                                "+1-555-555-5555"
                                              ]
                                            },
                                            "email": {
                                              "description": "an email address for the item.",
                                              "type": "string",
                                              "format": "email",
                                              "x-faker": "internet.email",
                                              "examples": [
                                                "bob@example.com",
                                                "alice@example.com"
                                              ]
                                            },
                                            "url": {
                                              "description": "primary URL for the item.",
                                              "type": "string",
                                              "format": "uri",
                                              "example": "https://www.facebook.com/hallandoates"
                                            }
                                          }
                                        }
                                      },
                                      "email": {
                                        "type": "string",
                                        "format": "email",
                                        "x-faker": "internet.email"
                                      },
                                      "faxNumber": {
                                        "type": "string",
                                        "description": "Do people still use fax machines?",
                                        "x-faker": "phone.phoneNumber"
                                      },
                                      "image": {
                                        "title": "image",
                                        "description": "an ImageObject or URI reference to an image on the web.",
                                        "type": "array",
                                        "x-range": [
                                          "ImageObject"
                                        ],
                                        "items": [
                                          {
                                            "type": "object",
                                            "allOf": [
                                              {
                                                "title": "MediaObject",
                                                "description": "an image, video or document availble for download",
                                                "x-subclass": [
                                                  "ImageObject",
                                                  "DigitalDocument"
                                                ],
                                                "allOf": [
                                                  {
                                                    "$id": "http://realestate.yodata.me/schema/Thing",
                                                    "type": "object",
                                                    "title": "Thing",
                                                    "summary": "The root type of all Things.",
                                                    "required": [
                                                      "type"
                                                    ],
                                                    "propertyNames": {
                                                      "pattern": "^[a-z@$][a-zA-Z0-9-_]+$"
                                                    },
                                                    "properties": {
                                                      "type": {
                                                        "type": "string",
                                                        "pattern": "^[A-Z][a-zA-Z0-9]+$",
                                                        "description": "The item type (Linked-Data @type)"
                                                      },
                                                      "@id": {
                                                        "type": "string",
                                                        "format": "uri",
                                                        "description": "the liked data uri for the Thing"
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "properties": {
                                                      "type": {
                                                        "type": "string",
                                                        "enum": [
                                                          "MediaObject",
                                                          "ImageObject",
                                                          "DigitalDocument"
                                                        ]
                                                      },
                                                      "id": {
                                                        "description": "the URL to access the item.",
                                                        "example": "http://user.example.com/public/logo/fileName.zip",
                                                        "type": "string",
                                                        "format": "uri"
                                                      },
                                                      "name": {
                                                        "type": "string",
                                                        "description": "the file name of the object.",
                                                        "example": "fileName.zip"
                                                      },
                                                      "encodingFormat": {
                                                        "type": "string",
                                                        "description": "MIME type",
                                                        "example": "application/zip"
                                                      },
                                                      "about": {
                                                        "type": "string",
                                                        "format": "uri",
                                                        "description": "URI to the subject of the image or logo",
                                                        "example": "http://user.example.com/profile/card#me"
                                                      },
                                                      "url": {
                                                        "type": "string",
                                                        "format": "uri",
                                                        "description": "URL of the image content",
                                                        "example": "http://user.example.com/public/profile/image.jpg"
                                                      }
                                                    }
                                                  }
                                                ]
                                              },
                                              {
                                                "title": "ImageObject",
                                                "x-range": "ImageObject",
                                                "properties": {
                                                  "type": {
                                                    "enum": [
                                                      "ImageObject"
                                                    ],
                                                    "example": "ImageObject"
                                                  },
                                                  "id": {
                                                    "example": "http://user.example.com/public/logo/image.jpg"
                                                  },
                                                  "name": {
                                                    "example": "image.jpg"
                                                  },
                                                  "encodingFormat": {
                                                    "example": "image/jpeg"
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      "logo": {
                                        "description": "a logo associated with the organization.",
                                        "items": {
                                          "allOf": [
                                            {
                                              "type": "object",
                                              "title": "DigitalDocument",
                                              "x-range": "DigitalDocument",
                                              "description": "an electronic file.",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "enum": [
                                                    "DigitalDocument"
                                                  ]
                                                },
                                                "id": {
                                                  "type": "string",
                                                  "example": "http://user.example.com/public/logo/archive.zip"
                                                },
                                                "name": {
                                                  "type": "string",
                                                  "description": "document name or title",
                                                  "example": "archive.zip"
                                                },
                                                "encodingFormat": {
                                                  "type": "string",
                                                  "description": "[ISO Media Type](https://www.iana.org/assignments/media-types/media-types.xhtml)",
                                                  "example": "application/zip"
                                                },
                                                "about": {
                                                  "type": "object",
                                                  "description": "subject of the Document",
                                                  "x-range": "Thing",
                                                  "example": {
                                                    "type": "RealEstateTransaction",
                                                    "identifier": {
                                                      "bmsTransactionId": "xxxx"
                                                    }
                                                  }
                                                },
                                                "url": {
                                                  "type": "string",
                                                  "description": "public URL of the object",
                                                  "example": "https://example.com"
                                                }
                                              }
                                            },
                                            {
                                              "description": "an associated logo",
                                              "type": "object"
                                            }
                                          ],
                                          "type": "object"
                                        },
                                        "type": "array",
                                        "x-range": [
                                          "ImageObject",
                                          "DigitalDocument"
                                        ]
                                      },
                                      "name": {
                                        "description": "Name or DBA.",
                                        "type": "string"
                                      },
                                      "parentOrganization": {
                                        "items": {
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "subOrganization": {
                                        "description": "a child organization",
                                        "x-range": [
                                          "RealEstateOrganization"
                                        ],
                                        "type": "array",
                                        "items": {
                                          "type": "string",
                                          "format": "uri",
                                          "example": "http://org.example.com/profile/card#me"
                                        }
                                      },
                                      "telephone": {
                                        "type": "string",
                                        "description": "Primary phone number.",
                                        "example": "+15558675309"
                                      },
                                      "type": {
                                        "enum": [
                                          "Organization"
                                        ],
                                        "type": "string"
                                      },
                                      "url": {
                                        "description": "primary website/url for the entity.",
                                        "format": "uri",
                                        "type": "string"
                                      }
                                    }
                                  }
                                ]
                              },
                              {
                                "title": "RealEstateTeam",
                                "description": "A real estate team.",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "description": "RealEstateTeam",
                                    "enum": [
                                      "RealEstateTeam"
                                    ]
                                  },
                                  "areaServed": {
                                    "type": "object",
                                    "description": "the physical areas that make up the ServiceArea",
                                    "x-range": [
                                      "City",
                                      "PostalCodeArea"
                                    ],
                                    "example": {
                                      "type": "PostalCode",
                                      "postalCode": "91371",
                                      "addressLocality": "Woodland Hills",
                                      "addressCounty": "Los Angeles",
                                      "addressRegion": "CA",
                                      "addressCountry": "US"
                                    }
                                  },
                                  "description": {
                                    "example": "The number on Gotham City Real Estate Company since 1940",
                                    "type": "string",
                                    "description": "description of the item."
                                  },
                                  "parentOrganization": {
                                    "x-range": "RealEstateOrganization",
                                    "description": "A franchisor or affiliate network of which this organization plays a membership role.",
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "format": "uri"
                                    }
                                  },
                                  "member": {
                                    "type": "array",
                                    "items": {
                                      "allOf": [
                                        {
                                          "title": "OrganizationRole",
                                          "type": "object",
                                          "description": "describes a role played by a member and a group or organization.",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "description": "a role played by the member in the memberOf group",
                                              "enum": [
                                                "OrganizationRole"
                                              ]
                                            },
                                            "roleName": {
                                              "type": "string",
                                              "description": "the role name",
                                              "example": "Owner"
                                            },
                                            "memberOf": {
                                              "description": "the org or group where the role is performed",
                                              "type": "object",
                                              "example": {
                                                "type": "RealEstateOrganization",
                                                "id": "http://orgid.example.com/profile/card#me"
                                              }
                                            },
                                            "member": {
                                              "description": "member object or id",
                                              "type": "string",
                                              "format": "uri",
                                              "example": "https://memberid.example.com/profile/card#me"
                                            },
                                            "startDate": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "date the member began performing this role"
                                            },
                                            "endDate": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "date the member stopped performing the role"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "RealEstateTeamMembership",
                                          "description": "a membership relationship.  Subclass of OrganizationRole",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "description": "a member of a real estate team",
                                              "enum": [
                                                "RealEstateTeamMembership"
                                              ],
                                              "example": "RealEstateTeamMembership"
                                            },
                                            "roleName": {
                                              "type": "string",
                                              "enum": [
                                                "TeamMember",
                                                "TeamAdmin",
                                                "TeamOwner"
                                              ]
                                            },
                                            "memberOf": {
                                              "type": "string",
                                              "format": "uri",
                                              "example": "https://{team-id}.example.com/profile/card#me"
                                            },
                                            "member": {
                                              "type": "string",
                                              "format": "uri",
                                              "example": "https://{agent}.example.com/profile/card#me"
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "allOf": [
                              {
                                "allOf": [
                                  {
                                    "$id": "http://realestate.yodata.me/schema/Thing",
                                    "type": "object",
                                    "title": "Thing",
                                    "summary": "The root type of all Things.",
                                    "required": [
                                      "type"
                                    ],
                                    "propertyNames": {
                                      "pattern": "^[a-z@$][a-zA-Z0-9-_]+$"
                                    },
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "pattern": "^[A-Z][a-zA-Z0-9]+$",
                                        "description": "The item type (Linked-Data @type)"
                                      },
                                      "@id": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "the liked data uri for the Thing"
                                      }
                                    }
                                  },
                                  {
                                    "x-kind": "Organization"
                                  },
                                  {
                                    "x-hasSubclass": [
                                      "RealEstateOrganization",
                                      "RealEstateOffice",
                                      "RealEstateAgent"
                                    ]
                                  },
                                  {
                                    "x-subClassOf": [
                                      "https://schema.org/Organization"
                                    ],
                                    "properties": {
                                      "address": {
                                        "type": "object",
                                        "x-range": "PostalAddress",
                                        "description": "A physical address.",
                                        "example": {
                                          "type": "PostalAddress",
                                          "name": "Home",
                                          "addressCountry": "USA",
                                          "addressCounty": "Gotham County",
                                          "addressLocality": "Gotham City",
                                          "addressRegion": "New Jersey",
                                          "addressSubdivision": "Gotham Heights",
                                          "postalCode": "10010",
                                          "postOfficeBoxNumber": "Box 1234",
                                          "streetAddress": "1007 Mountain Gate Rd"
                                        }
                                      },
                                      "availableLanguage": {
                                        "title": "availableLanguage",
                                        "type": "array",
                                        "description": "Please use one of the language codes from the IETF BCP 47 standard.",
                                        "x-range": "Language",
                                        "items": {
                                          "$id": "htttp://realestate.yodata.me/schema/Language.yaml",
                                          "description": "a written or spoken Language",
                                          "title": "Language",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "name",
                                            "additionalName"
                                          ],
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "const": "Language"
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "the display name of the language"
                                            },
                                            "additionalName": {
                                              "type": "string",
                                              "description": "BCP 47 language code"
                                            }
                                          },
                                          "examples": [
                                            {
                                              "type": "Language",
                                              "name": "English",
                                              "additionalName": "en-us"
                                            },
                                            {
                                              "type": "Language",
                                              "name": "Spanish",
                                              "additionalName": "es"
                                            },
                                            {
                                              "type": "Language",
                                              "name": "French",
                                              "additionalName": "fr"
                                            },
                                            {
                                              "type": "Language",
                                              "name": "German",
                                              "additionalName": "de"
                                            },
                                            {
                                              "type": "Language",
                                              "name": "Italian",
                                              "additionalName": "it"
                                            },
                                            {
                                              "type": "Language",
                                              "name": "Japanese",
                                              "additionalName": "ja"
                                            },
                                            {
                                              "type": "Language",
                                              "name": "Korean",
                                              "additionalName": "ko"
                                            },
                                            {
                                              "type": "Language",
                                              "name": "Portuguese",
                                              "additionalName": "pt"
                                            },
                                            {
                                              "type": "Language",
                                              "name": "Russian",
                                              "additionalName": "ru"
                                            },
                                            {
                                              "type": "Language",
                                              "name": "Chinese",
                                              "additionalName": "zh"
                                            },
                                            {
                                              "type": "Language",
                                              "name": "Arabic",
                                              "additionalName": "ar"
                                            },
                                            {
                                              "type": "Language",
                                              "name": "Hindi",
                                              "additionalName": "hi"
                                            },
                                            {
                                              "type": "Language",
                                              "name": "Bengali",
                                              "additionalName": "bn"
                                            },
                                            {
                                              "type": "Language",
                                              "name": "Portuguese",
                                              "additionalName": "pt"
                                            }
                                          ]
                                        }
                                      },
                                      "branchCode": {
                                        "description": "A short textual code that uniquely identifies a place of business.",
                                        "example": "for BHHS profile events, see additionalProperty.OfficeId",
                                        "type": "string"
                                      },
                                      "certification": {
                                        "$id": "http://realestate.yodata.me/schema/certification",
                                        "title": "certifications",
                                        "description": "certifications granted to a person or organization",
                                        "type": "array",
                                        "items": [
                                          {
                                            "type": "object",
                                            "title": "Certification",
                                            "description": "A certification issued by an organization to an individual or business.",
                                            "x-range": "Certification",
                                            "properties": {
                                              "type": {
                                                "description": "Certification",
                                                "type": "string",
                                                "enum": [
                                                  "Certification"
                                                ]
                                              },
                                              "name": {
                                                "type": "string",
                                                "description": "the name of the Certification",
                                                "example": "e-Agent Certified"
                                              },
                                              "issuedBy": {
                                                "type": "object",
                                                "x-range": "RealEstateOrganization",
                                                "description": "the issuing authority",
                                                "properties": {
                                                  "type": {
                                                    "enum": [
                                                      "RealEstateOrganization"
                                                    ],
                                                    "type": "string",
                                                    "description": "The item type (Linked-Data @type)"
                                                  },
                                                  "id": {
                                                    "example": "https://example.com/profile/card#me",
                                                    "type": "string",
                                                    "format": "uri",
                                                    "description": "Linked-Data URI (@id)"
                                                  },
                                                  "name": {
                                                    "type": "string",
                                                    "description": "name of the issuing organization",
                                                    "example": "Gotham City Real Estate"
                                                  }
                                                }
                                              },
                                              "issuedTo": {
                                                "x-range": "RealEstateAgent",
                                                "type": "object",
                                                "description": "the subject",
                                                "properties": {
                                                  "type": {
                                                    "enum": [
                                                      "RealEstateAgent"
                                                    ],
                                                    "type": "string",
                                                    "description": "The item type (Linked-Data @type)"
                                                  },
                                                  "id": {
                                                    "type": "string",
                                                    "format": "uri",
                                                    "description": "Linked-Data URI (@id)"
                                                  },
                                                  "name": {
                                                    "type": "string",
                                                    "description": "the name of the item"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        ]
                                      },
                                      "contactPoint": {
                                        "$id": "http://realestate.yodata.me/definitions/contactPoint.json",
                                        "type": "array",
                                        "description": "a named point of contact - telephone, email, faxNumber, and/or url for the entity",
                                        "items": {
                                          "$id": "htttp://realestate.yodata.me/schema/ContactPoint.json",
                                          "title": "ContactPoint",
                                          "description": "A point of contact for the entity. By convention in the real estate domain, ContactPoints\nare preferred over telephone, email, and faxNumber so the ContactPoint.name property can be used to label values\nfor example, Work Telephone, Home, as named contactPoint values.\n",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "name"
                                          ],
                                          "minProperties": 3,
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "const": "ContactPoint"
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "a label for the contactPoint, i.e. 'Work', or 'Home'",
                                              "examples": [
                                                "Work",
                                                "Home",
                                                "Vacation",
                                                "Bob's Cell",
                                                "Alice's Work"
                                              ]
                                            },
                                            "telephone": {
                                              "type": "string",
                                              "x-faker": "phone.phoneNumber",
                                              "examples": [
                                                "555-555-5555",
                                                "555-555-5555 x123",
                                                "555-555-5555 ext. 123",
                                                "+1-555-555-5555"
                                              ]
                                            },
                                            "faxNumber": {
                                              "type": "string",
                                              "x-faker": "phone.phoneNumber",
                                              "examples": [
                                                "555-555-5555",
                                                "555-555-5555 x123",
                                                "555-555-5555 ext. 123",
                                                "+1-555-555-5555"
                                              ]
                                            },
                                            "email": {
                                              "description": "an email address for the item.",
                                              "type": "string",
                                              "format": "email",
                                              "x-faker": "internet.email",
                                              "examples": [
                                                "bob@example.com",
                                                "alice@example.com"
                                              ]
                                            },
                                            "url": {
                                              "description": "primary URL for the item.",
                                              "type": "string",
                                              "format": "uri",
                                              "example": "https://www.facebook.com/hallandoates"
                                            }
                                          }
                                        }
                                      },
                                      "email": {
                                        "type": "string",
                                        "format": "email",
                                        "x-faker": "internet.email"
                                      },
                                      "faxNumber": {
                                        "type": "string",
                                        "description": "Do people still use fax machines?",
                                        "x-faker": "phone.phoneNumber"
                                      },
                                      "image": {
                                        "title": "image",
                                        "description": "an ImageObject or URI reference to an image on the web.",
                                        "type": "array",
                                        "x-range": [
                                          "ImageObject"
                                        ],
                                        "items": [
                                          {
                                            "type": "object",
                                            "allOf": [
                                              {
                                                "title": "MediaObject",
                                                "description": "an image, video or document availble for download",
                                                "x-subclass": [
                                                  "ImageObject",
                                                  "DigitalDocument"
                                                ],
                                                "allOf": [
                                                  {
                                                    "$id": "http://realestate.yodata.me/schema/Thing",
                                                    "type": "object",
                                                    "title": "Thing",
                                                    "summary": "The root type of all Things.",
                                                    "required": [
                                                      "type"
                                                    ],
                                                    "propertyNames": {
                                                      "pattern": "^[a-z@$][a-zA-Z0-9-_]+$"
                                                    },
                                                    "properties": {
                                                      "type": {
                                                        "type": "string",
                                                        "pattern": "^[A-Z][a-zA-Z0-9]+$",
                                                        "description": "The item type (Linked-Data @type)"
                                                      },
                                                      "@id": {
                                                        "type": "string",
                                                        "format": "uri",
                                                        "description": "the liked data uri for the Thing"
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "properties": {
                                                      "type": {
                                                        "type": "string",
                                                        "enum": [
                                                          "MediaObject",
                                                          "ImageObject",
                                                          "DigitalDocument"
                                                        ]
                                                      },
                                                      "id": {
                                                        "description": "the URL to access the item.",
                                                        "example": "http://user.example.com/public/logo/fileName.zip",
                                                        "type": "string",
                                                        "format": "uri"
                                                      },
                                                      "name": {
                                                        "type": "string",
                                                        "description": "the file name of the object.",
                                                        "example": "fileName.zip"
                                                      },
                                                      "encodingFormat": {
                                                        "type": "string",
                                                        "description": "MIME type",
                                                        "example": "application/zip"
                                                      },
                                                      "about": {
                                                        "type": "string",
                                                        "format": "uri",
                                                        "description": "URI to the subject of the image or logo",
                                                        "example": "http://user.example.com/profile/card#me"
                                                      },
                                                      "url": {
                                                        "type": "string",
                                                        "format": "uri",
                                                        "description": "URL of the image content",
                                                        "example": "http://user.example.com/public/profile/image.jpg"
                                                      }
                                                    }
                                                  }
                                                ]
                                              },
                                              {
                                                "title": "ImageObject",
                                                "x-range": "ImageObject",
                                                "properties": {
                                                  "type": {
                                                    "enum": [
                                                      "ImageObject"
                                                    ],
                                                    "example": "ImageObject"
                                                  },
                                                  "id": {
                                                    "example": "http://user.example.com/public/logo/image.jpg"
                                                  },
                                                  "name": {
                                                    "example": "image.jpg"
                                                  },
                                                  "encodingFormat": {
                                                    "example": "image/jpeg"
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      "logo": {
                                        "description": "a logo associated with the organization.",
                                        "items": {
                                          "allOf": [
                                            {
                                              "type": "object",
                                              "title": "DigitalDocument",
                                              "x-range": "DigitalDocument",
                                              "description": "an electronic file.",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "enum": [
                                                    "DigitalDocument"
                                                  ]
                                                },
                                                "id": {
                                                  "type": "string",
                                                  "example": "http://user.example.com/public/logo/archive.zip"
                                                },
                                                "name": {
                                                  "type": "string",
                                                  "description": "document name or title",
                                                  "example": "archive.zip"
                                                },
                                                "encodingFormat": {
                                                  "type": "string",
                                                  "description": "[ISO Media Type](https://www.iana.org/assignments/media-types/media-types.xhtml)",
                                                  "example": "application/zip"
                                                },
                                                "about": {
                                                  "type": "object",
                                                  "description": "subject of the Document",
                                                  "x-range": "Thing",
                                                  "example": {
                                                    "type": "RealEstateTransaction",
                                                    "identifier": {
                                                      "bmsTransactionId": "xxxx"
                                                    }
                                                  }
                                                },
                                                "url": {
                                                  "type": "string",
                                                  "description": "public URL of the object",
                                                  "example": "https://example.com"
                                                }
                                              }
                                            },
                                            {
                                              "description": "an associated logo",
                                              "type": "object"
                                            }
                                          ],
                                          "type": "object"
                                        },
                                        "type": "array",
                                        "x-range": [
                                          "ImageObject",
                                          "DigitalDocument"
                                        ]
                                      },
                                      "name": {
                                        "description": "Name or DBA.",
                                        "type": "string"
                                      },
                                      "parentOrganization": {
                                        "items": {
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "subOrganization": {
                                        "description": "a child organization",
                                        "x-range": [
                                          "RealEstateOrganization"
                                        ],
                                        "type": "array",
                                        "items": {
                                          "type": "string",
                                          "format": "uri",
                                          "example": "http://org.example.com/profile/card#me"
                                        }
                                      },
                                      "telephone": {
                                        "type": "string",
                                        "description": "Primary phone number.",
                                        "example": "+15558675309"
                                      },
                                      "type": {
                                        "enum": [
                                          "Organization"
                                        ],
                                        "type": "string"
                                      },
                                      "url": {
                                        "description": "primary website/url for the entity.",
                                        "format": "uri",
                                        "type": "string"
                                      }
                                    }
                                  }
                                ]
                              },
                              {
                                "title": "RealEstateOrganization",
                                "description": "A real estate franchisor, broker or business",
                                "x-range": "RealEstateOrganization",
                                "properties": {
                                  "type": {
                                    "description": "RealEstateOrganzation",
                                    "enum": [
                                      "RealEstateOrganization",
                                      "RealEstateOffice",
                                      "RealEstateAgent"
                                    ],
                                    "example": "RealEstateOrganization"
                                  },
                                  "areaServed": {
                                    "type": "object",
                                    "description": "the physical areas that make up the ServiceArea",
                                    "x-range": [
                                      "City",
                                      "PostalCodeArea"
                                    ],
                                    "example": {
                                      "type": "PostalCode",
                                      "postalCode": "91371",
                                      "addressLocality": "Woodland Hills",
                                      "addressCounty": "Los Angeles",
                                      "addressRegion": "CA",
                                      "addressCountry": "US"
                                    }
                                  },
                                  "description": {
                                    "example": "The number on Gotham City Real Estate Company since 1940",
                                    "type": "string",
                                    "description": "description of the item."
                                  },
                                  "parentOrganization": {
                                    "type": "array",
                                    "x-range": "RealEstateOrganization",
                                    "description": "A franchisor or affiliate network of which this organization plays a membership role.",
                                    "items": {
                                      "type": "string",
                                      "format": "uri"
                                    }
                                  },
                                  "numberOfSubOrganizations": {
                                    "type": "number",
                                    "description": "the number of offices for an affiliate."
                                  },
                                  "member": {
                                    "title": "member",
                                    "description": "A member of an Organization or a ProgramMembership. Organizations can be members of organizations; ProgramMembership is typically for individuals.",
                                    "type": "array",
                                    "x-range": [
                                      "OrganizationRole",
                                      "URI"
                                    ],
                                    "items": {
                                      "anyOf": [
                                        {
                                          "title": "OrganizationRole",
                                          "type": "object",
                                          "description": "describes a role played by a member and a group or organization.",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "description": "a role played by the member in the memberOf group",
                                              "enum": [
                                                "OrganizationRole"
                                              ]
                                            },
                                            "roleName": {
                                              "type": "string",
                                              "description": "the role name",
                                              "example": "Owner"
                                            },
                                            "memberOf": {
                                              "description": "the org or group where the role is performed",
                                              "type": "object",
                                              "example": {
                                                "type": "RealEstateOrganization",
                                                "id": "http://orgid.example.com/profile/card#me"
                                              }
                                            },
                                            "member": {
                                              "description": "member object or id",
                                              "type": "string",
                                              "format": "uri",
                                              "example": "https://memberid.example.com/profile/card#me"
                                            },
                                            "startDate": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "date the member began performing this role"
                                            },
                                            "endDate": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "date the member stopped performing the role"
                                            }
                                          }
                                        },
                                        {
                                          "type": "string",
                                          "format": "uri"
                                        }
                                      ]
                                    }
                                  },
                                  "memberOf": {
                                    "x-range": [
                                      "OrganizationRole",
                                      "MLSMembership"
                                    ],
                                    "description": "An Organization (or ProgramMembership) to which this Person or Organization belongs.",
                                    "type": "array",
                                    "items": {
                                      "allOf": [
                                        {
                                          "title": "OrganizationRole",
                                          "type": "object",
                                          "description": "describes a role played by a member and a group or organization.",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "description": "a role played by the member in the memberOf group",
                                              "enum": [
                                                "OrganizationRole"
                                              ]
                                            },
                                            "roleName": {
                                              "type": "string",
                                              "description": "the role name",
                                              "example": "Owner"
                                            },
                                            "memberOf": {
                                              "description": "the org or group where the role is performed",
                                              "type": "object",
                                              "example": {
                                                "type": "RealEstateOrganization",
                                                "id": "http://orgid.example.com/profile/card#me"
                                              }
                                            },
                                            "member": {
                                              "description": "member object or id",
                                              "type": "string",
                                              "format": "uri",
                                              "example": "https://memberid.example.com/profile/card#me"
                                            },
                                            "startDate": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "date the member began performing this role"
                                            },
                                            "endDate": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "date the member stopped performing the role"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "title": "MLSMembership",
                                          "description": "a membership relationship",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "description": "an MLS member relationship",
                                              "enum": [
                                                "MLSMembership"
                                              ],
                                              "example": "MLSMembership"
                                            },
                                            "roleName": {
                                              "type": "string",
                                              "example": "MLSMember"
                                            },
                                            "memberOf": {
                                              "type": "object",
                                              "x-range": "MultipleListingService",
                                              "example": {
                                                "type": "MultipleListingService",
                                                "name": "GreatScottMLS"
                                              }
                                            },
                                            "member": {
                                              "type": "string",
                                              "format": "uri",
                                              "example": "https://{agent}.example.com/profile/card#me"
                                            },
                                            "memberId": {
                                              "type": "string",
                                              "description": "the user's MLSID",
                                              "example": "memberid123"
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "permit": {
                                    "type": "array",
                                    "x-range": "RealEstateLicense",
                                    "items": {
                                      "type": "object",
                                      "example": {
                                        "type": "RealEstateLicense",
                                        "name": "CA-DRE# 02068375",
                                        "identifier": {
                                          "type": "PropertyValue",
                                          "name": "CA-DRE",
                                          "value": "02068375"
                                        },
                                        "issuedBy": {
                                          "type": "State",
                                          "name": "California"
                                        },
                                        "issuedThrough": {
                                          "type": "Service",
                                          "name": "California Department of Real Estate"
                                        },
                                        "validIn": {
                                          "type": "State",
                                          "name": "California"
                                        },
                                        "validFrom": "2019-07-07T10:55:02Z",
                                        "validUntil": "2019-07-07T10:55:02Z"
                                      }
                                    }
                                  }
                                }
                              }
                            ]
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-message-parsed": true
            },
            {
              "messageId": "profile#teamcreate",
              "name": "realestate/profile#teamcreate",
              "summary": "a team profile was creatd",
              "headers": {
                "type": "object",
                "properties": {
                  "topic": {
                    "const": "realestate/profile#teamcreate",
                    "x-parser-schema-id": "<anonymous-schema-416>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-415>"
              },
              "payload": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "const": "CreateAction",
                        "x-parser-schema-id": "<anonymous-schema-419>"
                      },
                      "object": {
                        "allOf": [
                          {
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "https://org.example.com/profile/card#me"
                              }
                            },
                            "x-parser-schema-id": "<anonymous-schema-409>"
                          },
                          {
                            "allOf": [
                              {
                                "$id": "http://realestate.yodata.me/schema/Thing",
                                "type": "object",
                                "title": "Thing",
                                "summary": "The root type of all Things.",
                                "required": [
                                  "type"
                                ],
                                "propertyNames": {
                                  "pattern": "^[a-z@$][a-zA-Z0-9-_]+$",
                                  "x-parser-schema-id": "<anonymous-schema-274>"
                                },
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "pattern": "^[A-Z][a-zA-Z0-9]+$",
                                    "description": "The item type (Linked-Data @type)",
                                    "x-parser-schema-id": "<anonymous-schema-272>"
                                  },
                                  "@id": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "the liked data uri for the Thing",
                                    "x-parser-schema-id": "<anonymous-schema-273>"
                                  }
                                },
                                "x-parser-schema-id": "Thing"
                              },
                              {
                                "x-kind": "Organization",
                                "x-parser-schema-id": "<anonymous-schema-410>"
                              },
                              {
                                "x-hasSubclass": [
                                  "RealEstateOrganization",
                                  "RealEstateOffice",
                                  "RealEstateAgent"
                                ],
                                "x-parser-schema-id": "<anonymous-schema-411>"
                              },
                              {
                                "x-subClassOf": [
                                  "https://schema.org/Organization"
                                ],
                                "properties": {
                                  "address": {
                                    "type": "object",
                                    "x-range": "PostalAddress",
                                    "description": "A physical address.",
                                    "example": {
                                      "type": "PostalAddress",
                                      "name": "Home",
                                      "addressCountry": "USA",
                                      "addressCounty": "Gotham County",
                                      "addressLocality": "Gotham City",
                                      "addressRegion": "New Jersey",
                                      "addressSubdivision": "Gotham Heights",
                                      "postalCode": "10010",
                                      "postOfficeBoxNumber": "Box 1234",
                                      "streetAddress": "1007 Mountain Gate Rd"
                                    },
                                    "x-parser-schema-id": "<anonymous-schema-370>"
                                  },
                                  "availableLanguage": {
                                    "title": "availableLanguage",
                                    "type": "array",
                                    "description": "Please use one of the language codes from the IETF BCP 47 standard.",
                                    "x-range": "Language",
                                    "items": {
                                      "$id": "htttp://realestate.yodata.me/schema/Language.yaml",
                                      "description": "a written or spoken Language",
                                      "title": "Language",
                                      "type": "object",
                                      "required": [
                                        "type",
                                        "name",
                                        "additionalName"
                                      ],
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "const": "Language",
                                          "x-parser-schema-id": "<anonymous-schema-124>"
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "the display name of the language",
                                          "x-parser-schema-id": "<anonymous-schema-125>"
                                        },
                                        "additionalName": {
                                          "type": "string",
                                          "description": "BCP 47 language code",
                                          "x-parser-schema-id": "<anonymous-schema-126>"
                                        }
                                      },
                                      "examples": [
                                        {
                                          "type": "Language",
                                          "name": "English",
                                          "additionalName": "en-us"
                                        },
                                        {
                                          "type": "Language",
                                          "name": "Spanish",
                                          "additionalName": "es"
                                        },
                                        {
                                          "type": "Language",
                                          "name": "French",
                                          "additionalName": "fr"
                                        },
                                        {
                                          "type": "Language",
                                          "name": "German",
                                          "additionalName": "de"
                                        },
                                        {
                                          "type": "Language",
                                          "name": "Italian",
                                          "additionalName": "it"
                                        },
                                        {
                                          "type": "Language",
                                          "name": "Japanese",
                                          "additionalName": "ja"
                                        },
                                        {
                                          "type": "Language",
                                          "name": "Korean",
                                          "additionalName": "ko"
                                        },
                                        {
                                          "type": "Language",
                                          "name": "Portuguese",
                                          "additionalName": "pt"
                                        },
                                        {
                                          "type": "Language",
                                          "name": "Russian",
                                          "additionalName": "ru"
                                        },
                                        {
                                          "type": "Language",
                                          "name": "Chinese",
                                          "additionalName": "zh"
                                        },
                                        {
                                          "type": "Language",
                                          "name": "Arabic",
                                          "additionalName": "ar"
                                        },
                                        {
                                          "type": "Language",
                                          "name": "Hindi",
                                          "additionalName": "hi"
                                        },
                                        {
                                          "type": "Language",
                                          "name": "Bengali",
                                          "additionalName": "bn"
                                        },
                                        {
                                          "type": "Language",
                                          "name": "Portuguese",
                                          "additionalName": "pt"
                                        }
                                      ],
                                      "x-parser-schema-id": "Language"
                                    }
                                  },
                                  "branchCode": {
                                    "description": "A short textual code that uniquely identifies a place of business.",
                                    "example": "for BHHS profile events, see additionalProperty.OfficeId",
                                    "type": "string"
                                  },
                                  "certification": {
                                    "$id": "http://realestate.yodata.me/schema/certification",
                                    "title": "certifications",
                                    "description": "certifications granted to a person or organization",
                                    "type": "array",
                                    "items": [
                                      {
                                        "type": "object",
                                        "title": "Certification",
                                        "description": "A certification issued by an organization to an individual or business.",
                                        "x-range": "Certification",
                                        "properties": {
                                          "type": {
                                            "description": "Certification",
                                            "type": "string",
                                            "enum": [
                                              "Certification"
                                            ],
                                            "x-parser-schema-id": "<anonymous-schema-594>"
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "the name of the Certification",
                                            "example": "e-Agent Certified",
                                            "x-parser-schema-id": "<anonymous-schema-595>"
                                          },
                                          "issuedBy": {
                                            "type": "object",
                                            "x-range": "RealEstateOrganization",
                                            "description": "the issuing authority",
                                            "properties": {
                                              "type": {
                                                "enum": [
                                                  "RealEstateOrganization"
                                                ],
                                                "type": "string",
                                                "description": "The item type (Linked-Data @type)",
                                                "x-parser-schema-id": "<anonymous-schema-375>"
                                              },
                                              "id": {
                                                "example": "https://example.com/profile/card#me",
                                                "type": "string",
                                                "format": "uri",
                                                "description": "Linked-Data URI (@id)",
                                                "x-parser-schema-id": "<anonymous-schema-376>"
                                              },
                                              "name": {
                                                "type": "string",
                                                "description": "name of the issuing organization",
                                                "example": "Gotham City Real Estate",
                                                "x-parser-schema-id": "<anonymous-schema-377>"
                                              }
                                            },
                                            "x-parser-schema-id": "<anonymous-schema-374>"
                                          },
                                          "issuedTo": {
                                            "x-range": "RealEstateAgent",
                                            "type": "object",
                                            "description": "the subject",
                                            "properties": {
                                              "type": {
                                                "enum": [
                                                  "RealEstateAgent"
                                                ],
                                                "type": "string",
                                                "description": "The item type (Linked-Data @type)",
                                                "x-parser-schema-id": "<anonymous-schema-379>"
                                              },
                                              "id": {
                                                "type": "string",
                                                "format": "uri",
                                                "description": "Linked-Data URI (@id)",
                                                "x-parser-schema-id": "<anonymous-schema-380>"
                                              },
                                              "name": {
                                                "type": "string",
                                                "description": "the name of the item",
                                                "x-parser-schema-id": "<anonymous-schema-92>"
                                              }
                                            },
                                            "x-parser-schema-id": "<anonymous-schema-596>"
                                          }
                                        },
                                        "x-parser-schema-id": "Certification"
                                      }
                                    ]
                                  },
                                  "contactPoint": {
                                    "$id": "http://realestate.yodata.me/definitions/contactPoint.json",
                                    "type": "array",
                                    "description": "a named point of contact - telephone, email, faxNumber, and/or url for the entity",
                                    "items": {
                                      "$id": "htttp://realestate.yodata.me/schema/ContactPoint.json",
                                      "title": "ContactPoint",
                                      "description": "A point of contact for the entity. By convention in the real estate domain, ContactPoints\nare preferred over telephone, email, and faxNumber so the ContactPoint.name property can be used to label values\nfor example, Work Telephone, Home, as named contactPoint values.\n",
                                      "type": "object",
                                      "required": [
                                        "type",
                                        "name"
                                      ],
                                      "minProperties": 3,
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "const": "ContactPoint",
                                          "x-parser-schema-id": "<anonymous-schema-110>"
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "a label for the contactPoint, i.e. 'Work', or 'Home'",
                                          "examples": [
                                            "Work",
                                            "Home",
                                            "Vacation",
                                            "Bob's Cell",
                                            "Alice's Work"
                                          ],
                                          "x-parser-schema-id": "<anonymous-schema-111>"
                                        },
                                        "telephone": {
                                          "type": "string",
                                          "x-faker": "phone.phoneNumber",
                                          "examples": [
                                            "555-555-5555",
                                            "555-555-5555 x123",
                                            "555-555-5555 ext. 123",
                                            "+1-555-555-5555"
                                          ],
                                          "x-parser-schema-id": "<anonymous-schema-112>"
                                        },
                                        "faxNumber": {
                                          "type": "string",
                                          "x-faker": "phone.phoneNumber",
                                          "examples": [
                                            "555-555-5555",
                                            "555-555-5555 x123",
                                            "555-555-5555 ext. 123",
                                            "+1-555-555-5555"
                                          ],
                                          "x-parser-schema-id": "<anonymous-schema-113>"
                                        },
                                        "email": {
                                          "description": "an email address for the item.",
                                          "type": "string",
                                          "format": "email",
                                          "x-faker": "internet.email",
                                          "examples": [
                                            "bob@example.com",
                                            "alice@example.com"
                                          ],
                                          "x-parser-schema-id": "<anonymous-schema-114>"
                                        },
                                        "url": {
                                          "description": "primary URL for the item.",
                                          "type": "string",
                                          "format": "uri",
                                          "example": "https://www.facebook.com/hallandoates",
                                          "x-parser-schema-id": "<anonymous-schema-115>"
                                        }
                                      },
                                      "x-parser-schema-id": "ContactPoint"
                                    }
                                  },
                                  "email": {
                                    "type": "string",
                                    "format": "email",
                                    "x-faker": "internet.email",
                                    "x-parser-schema-id": "<anonymous-schema-93>"
                                  },
                                  "faxNumber": {
                                    "type": "string",
                                    "description": "Do people still use fax machines?",
                                    "x-faker": "phone.phoneNumber",
                                    "x-parser-schema-id": "<anonymous-schema-117>"
                                  },
                                  "image": {
                                    "title": "image",
                                    "description": "an ImageObject or URI reference to an image on the web.",
                                    "type": "array",
                                    "x-range": [
                                      "ImageObject"
                                    ],
                                    "items": [
                                      {
                                        "type": "object",
                                        "allOf": [
                                          {
                                            "title": "MediaObject",
                                            "description": "an image, video or document availble for download",
                                            "x-subclass": [
                                              "ImageObject",
                                              "DigitalDocument"
                                            ],
                                            "allOf": [
                                              {
                                                "$id": "http://realestate.yodata.me/schema/Thing",
                                                "type": "object",
                                                "title": "Thing",
                                                "summary": "The root type of all Things.",
                                                "required": [
                                                  "type"
                                                ],
                                                "propertyNames": {
                                                  "pattern": "^[a-z@$][a-zA-Z0-9-_]+$",
                                                  "x-parser-schema-id": "<anonymous-schema-274>"
                                                },
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "pattern": "^[A-Z][a-zA-Z0-9]+$",
                                                    "description": "The item type (Linked-Data @type)",
                                                    "x-parser-schema-id": "<anonymous-schema-272>"
                                                  },
                                                  "@id": {
                                                    "type": "string",
                                                    "format": "uri",
                                                    "description": "the liked data uri for the Thing",
                                                    "x-parser-schema-id": "<anonymous-schema-273>"
                                                  }
                                                },
                                                "x-parser-schema-id": "Thing"
                                              },
                                              {
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "MediaObject",
                                                      "ImageObject",
                                                      "DigitalDocument"
                                                    ]
                                                  },
                                                  "id": {
                                                    "description": "the URL to access the item.",
                                                    "example": "http://user.example.com/public/logo/fileName.zip",
                                                    "type": "string",
                                                    "format": "uri"
                                                  },
                                                  "name": {
                                                    "type": "string",
                                                    "description": "the file name of the object.",
                                                    "example": "fileName.zip"
                                                  },
                                                  "encodingFormat": {
                                                    "type": "string",
                                                    "description": "MIME type",
                                                    "example": "application/zip"
                                                  },
                                                  "about": {
                                                    "type": "string",
                                                    "format": "uri",
                                                    "description": "URI to the subject of the image or logo",
                                                    "example": "http://user.example.com/profile/card#me"
                                                  },
                                                  "url": {
                                                    "type": "string",
                                                    "format": "uri",
                                                    "description": "URL of the image content",
                                                    "example": "http://user.example.com/public/profile/image.jpg"
                                                  }
                                                },
                                                "x-parser-schema-id": "<anonymous-schema-275>"
                                              }
                                            ],
                                            "x-parser-schema-id": "MediaObject"
                                          },
                                          {
                                            "title": "ImageObject",
                                            "x-range": "ImageObject",
                                            "properties": {
                                              "type": {
                                                "enum": [
                                                  "ImageObject"
                                                ],
                                                "example": "ImageObject"
                                              },
                                              "id": {
                                                "example": "http://user.example.com/public/logo/image.jpg"
                                              },
                                              "name": {
                                                "example": "image.jpg"
                                              },
                                              "encodingFormat": {
                                                "example": "image/jpeg"
                                              }
                                            },
                                            "x-parser-schema-id": "<anonymous-schema-276>"
                                          }
                                        ],
                                        "x-parser-schema-id": "<anonymous-schema-271>"
                                      }
                                    ]
                                  },
                                  "logo": {
                                    "description": "a logo associated with the organization.",
                                    "items": {
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "title": "DigitalDocument",
                                          "x-range": "DigitalDocument",
                                          "description": "an electronic file.",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "enum": [
                                                "DigitalDocument"
                                              ],
                                              "x-parser-schema-id": "<anonymous-schema-621>"
                                            },
                                            "id": {
                                              "type": "string",
                                              "example": "http://user.example.com/public/logo/archive.zip",
                                              "x-parser-schema-id": "<anonymous-schema-622>"
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "document name or title",
                                              "example": "archive.zip",
                                              "x-parser-schema-id": "<anonymous-schema-623>"
                                            },
                                            "encodingFormat": {
                                              "type": "string",
                                              "description": "[ISO Media Type](https://www.iana.org/assignments/media-types/media-types.xhtml)",
                                              "example": "application/zip",
                                              "x-parser-schema-id": "<anonymous-schema-624>"
                                            },
                                            "about": {
                                              "type": "object",
                                              "description": "subject of the Document",
                                              "x-range": "Thing",
                                              "example": {
                                                "type": "RealEstateTransaction",
                                                "identifier": {
                                                  "bmsTransactionId": "xxxx"
                                                }
                                              },
                                              "x-parser-schema-id": "<anonymous-schema-625>"
                                            },
                                            "url": {
                                              "type": "string",
                                              "description": "public URL of the object",
                                              "example": "https://example.com",
                                              "x-parser-schema-id": "<anonymous-schema-626>"
                                            }
                                          },
                                          "x-parser-schema-id": "DigitalDocument"
                                        },
                                        {
                                          "description": "an associated logo",
                                          "type": "object"
                                        }
                                      ],
                                      "type": "object"
                                    },
                                    "type": "array",
                                    "x-range": [
                                      "ImageObject",
                                      "DigitalDocument"
                                    ]
                                  },
                                  "name": {
                                    "description": "Name or DBA.",
                                    "type": "string"
                                  },
                                  "parentOrganization": {
                                    "items": {
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "subOrganization": {
                                    "description": "a child organization",
                                    "x-range": [
                                      "RealEstateOrganization"
                                    ],
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "format": "uri",
                                      "example": "http://org.example.com/profile/card#me"
                                    }
                                  },
                                  "telephone": {
                                    "type": "string",
                                    "description": "Primary phone number.",
                                    "example": "+15558675309",
                                    "x-parser-schema-id": "<anonymous-schema-128>"
                                  },
                                  "type": {
                                    "enum": [
                                      "Organization"
                                    ],
                                    "type": "string"
                                  },
                                  "url": {
                                    "description": "primary website/url for the entity.",
                                    "format": "uri",
                                    "type": "string"
                                  }
                                },
                                "x-parser-schema-id": "<anonymous-schema-412>"
                              }
                            ],
                            "x-parser-schema-id": "Organization"
                          },
                          {
                            "title": "RealEstateTeam",
                            "description": "A real estate team.",
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "RealEstateTeam",
                                "enum": [
                                  "RealEstateTeam"
                                ]
                              },
                              "areaServed": {
                                "type": "object",
                                "description": "the physical areas that make up the ServiceArea",
                                "x-range": [
                                  "City",
                                  "PostalCodeArea"
                                ],
                                "example": {
                                  "type": "PostalCode",
                                  "postalCode": "91371",
                                  "addressLocality": "Woodland Hills",
                                  "addressCounty": "Los Angeles",
                                  "addressRegion": "CA",
                                  "addressCountry": "US"
                                }
                              },
                              "description": {
                                "example": "The number on Gotham City Real Estate Company since 1940",
                                "type": "string",
                                "description": "description of the item."
                              },
                              "parentOrganization": {
                                "x-range": "RealEstateOrganization",
                                "description": "A franchisor or affiliate network of which this organization plays a membership role.",
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "format": "uri"
                                }
                              },
                              "member": {
                                "type": "array",
                                "items": {
                                  "allOf": [
                                    {
                                      "title": "OrganizationRole",
                                      "type": "object",
                                      "description": "describes a role played by a member and a group or organization.",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "description": "a role played by the member in the memberOf group",
                                          "enum": [
                                            "OrganizationRole"
                                          ],
                                          "x-parser-schema-id": "<anonymous-schema-391>"
                                        },
                                        "roleName": {
                                          "type": "string",
                                          "description": "the role name",
                                          "example": "Owner",
                                          "x-parser-schema-id": "<anonymous-schema-392>"
                                        },
                                        "memberOf": {
                                          "description": "the org or group where the role is performed",
                                          "type": "object",
                                          "example": {
                                            "type": "RealEstateOrganization",
                                            "id": "http://orgid.example.com/profile/card#me"
                                          },
                                          "x-parser-schema-id": "<anonymous-schema-393>"
                                        },
                                        "member": {
                                          "description": "member object or id",
                                          "type": "string",
                                          "format": "uri",
                                          "example": "https://memberid.example.com/profile/card#me",
                                          "x-parser-schema-id": "<anonymous-schema-394>"
                                        },
                                        "startDate": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "date the member began performing this role",
                                          "x-parser-schema-id": "<anonymous-schema-395>"
                                        },
                                        "endDate": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "date the member stopped performing the role",
                                          "x-parser-schema-id": "<anonymous-schema-396>"
                                        }
                                      },
                                      "x-parser-schema-id": "OrganizationRole"
                                    },
                                    {
                                      "type": "object",
                                      "title": "RealEstateTeamMembership",
                                      "description": "a membership relationship.  Subclass of OrganizationRole",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "description": "a member of a real estate team",
                                          "enum": [
                                            "RealEstateTeamMembership"
                                          ],
                                          "example": "RealEstateTeamMembership",
                                          "x-parser-schema-id": "<anonymous-schema-431>"
                                        },
                                        "roleName": {
                                          "type": "string",
                                          "enum": [
                                            "TeamMember",
                                            "TeamAdmin",
                                            "TeamOwner"
                                          ],
                                          "x-parser-schema-id": "<anonymous-schema-432>"
                                        },
                                        "memberOf": {
                                          "type": "string",
                                          "format": "uri",
                                          "example": "https://{team-id}.example.com/profile/card#me",
                                          "x-parser-schema-id": "<anonymous-schema-433>"
                                        },
                                        "member": {
                                          "type": "string",
                                          "format": "uri",
                                          "example": "https://{agent}.example.com/profile/card#me",
                                          "x-parser-schema-id": "<anonymous-schema-434>"
                                        }
                                      },
                                      "x-parser-schema-id": "<anonymous-schema-430>"
                                    }
                                  ],
                                  "x-parser-schema-id": "RealEstateTeamMembership"
                                }
                              }
                            },
                            "x-parser-schema-id": "<anonymous-schema-413>"
                          }
                        ],
                        "x-parser-schema-id": "RealEstateTeam"
                      }
                    },
                    "x-parser-schema-id": "<anonymous-schema-418>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-417>"
              },
              "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-original-payload": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "const": "CreateAction"
                      },
                      "object": {
                        "allOf": [
                          {
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "https://org.example.com/profile/card#me"
                              }
                            }
                          },
                          {
                            "allOf": [
                              {
                                "$id": "http://realestate.yodata.me/schema/Thing",
                                "type": "object",
                                "title": "Thing",
                                "summary": "The root type of all Things.",
                                "required": [
                                  "type"
                                ],
                                "propertyNames": {
                                  "pattern": "^[a-z@$][a-zA-Z0-9-_]+$"
                                },
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "pattern": "^[A-Z][a-zA-Z0-9]+$",
                                    "description": "The item type (Linked-Data @type)"
                                  },
                                  "@id": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "the liked data uri for the Thing"
                                  }
                                }
                              },
                              {
                                "x-kind": "Organization"
                              },
                              {
                                "x-hasSubclass": [
                                  "RealEstateOrganization",
                                  "RealEstateOffice",
                                  "RealEstateAgent"
                                ]
                              },
                              {
                                "x-subClassOf": [
                                  "https://schema.org/Organization"
                                ],
                                "properties": {
                                  "address": {
                                    "type": "object",
                                    "x-range": "PostalAddress",
                                    "description": "A physical address.",
                                    "example": {
                                      "type": "PostalAddress",
                                      "name": "Home",
                                      "addressCountry": "USA",
                                      "addressCounty": "Gotham County",
                                      "addressLocality": "Gotham City",
                                      "addressRegion": "New Jersey",
                                      "addressSubdivision": "Gotham Heights",
                                      "postalCode": "10010",
                                      "postOfficeBoxNumber": "Box 1234",
                                      "streetAddress": "1007 Mountain Gate Rd"
                                    }
                                  },
                                  "availableLanguage": {
                                    "title": "availableLanguage",
                                    "type": "array",
                                    "description": "Please use one of the language codes from the IETF BCP 47 standard.",
                                    "x-range": "Language",
                                    "items": {
                                      "$id": "htttp://realestate.yodata.me/schema/Language.yaml",
                                      "description": "a written or spoken Language",
                                      "title": "Language",
                                      "type": "object",
                                      "required": [
                                        "type",
                                        "name",
                                        "additionalName"
                                      ],
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "const": "Language"
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "the display name of the language"
                                        },
                                        "additionalName": {
                                          "type": "string",
                                          "description": "BCP 47 language code"
                                        }
                                      },
                                      "examples": [
                                        {
                                          "type": "Language",
                                          "name": "English",
                                          "additionalName": "en-us"
                                        },
                                        {
                                          "type": "Language",
                                          "name": "Spanish",
                                          "additionalName": "es"
                                        },
                                        {
                                          "type": "Language",
                                          "name": "French",
                                          "additionalName": "fr"
                                        },
                                        {
                                          "type": "Language",
                                          "name": "German",
                                          "additionalName": "de"
                                        },
                                        {
                                          "type": "Language",
                                          "name": "Italian",
                                          "additionalName": "it"
                                        },
                                        {
                                          "type": "Language",
                                          "name": "Japanese",
                                          "additionalName": "ja"
                                        },
                                        {
                                          "type": "Language",
                                          "name": "Korean",
                                          "additionalName": "ko"
                                        },
                                        {
                                          "type": "Language",
                                          "name": "Portuguese",
                                          "additionalName": "pt"
                                        },
                                        {
                                          "type": "Language",
                                          "name": "Russian",
                                          "additionalName": "ru"
                                        },
                                        {
                                          "type": "Language",
                                          "name": "Chinese",
                                          "additionalName": "zh"
                                        },
                                        {
                                          "type": "Language",
                                          "name": "Arabic",
                                          "additionalName": "ar"
                                        },
                                        {
                                          "type": "Language",
                                          "name": "Hindi",
                                          "additionalName": "hi"
                                        },
                                        {
                                          "type": "Language",
                                          "name": "Bengali",
                                          "additionalName": "bn"
                                        },
                                        {
                                          "type": "Language",
                                          "name": "Portuguese",
                                          "additionalName": "pt"
                                        }
                                      ]
                                    }
                                  },
                                  "branchCode": {
                                    "description": "A short textual code that uniquely identifies a place of business.",
                                    "example": "for BHHS profile events, see additionalProperty.OfficeId",
                                    "type": "string"
                                  },
                                  "certification": {
                                    "$id": "http://realestate.yodata.me/schema/certification",
                                    "title": "certifications",
                                    "description": "certifications granted to a person or organization",
                                    "type": "array",
                                    "items": [
                                      {
                                        "type": "object",
                                        "title": "Certification",
                                        "description": "A certification issued by an organization to an individual or business.",
                                        "x-range": "Certification",
                                        "properties": {
                                          "type": {
                                            "description": "Certification",
                                            "type": "string",
                                            "enum": [
                                              "Certification"
                                            ]
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "the name of the Certification",
                                            "example": "e-Agent Certified"
                                          },
                                          "issuedBy": {
                                            "type": "object",
                                            "x-range": "RealEstateOrganization",
                                            "description": "the issuing authority",
                                            "properties": {
                                              "type": {
                                                "enum": [
                                                  "RealEstateOrganization"
                                                ],
                                                "type": "string",
                                                "description": "The item type (Linked-Data @type)"
                                              },
                                              "id": {
                                                "example": "https://example.com/profile/card#me",
                                                "type": "string",
                                                "format": "uri",
                                                "description": "Linked-Data URI (@id)"
                                              },
                                              "name": {
                                                "type": "string",
                                                "description": "name of the issuing organization",
                                                "example": "Gotham City Real Estate"
                                              }
                                            }
                                          },
                                          "issuedTo": {
                                            "x-range": "RealEstateAgent",
                                            "type": "object",
                                            "description": "the subject",
                                            "properties": {
                                              "type": {
                                                "enum": [
                                                  "RealEstateAgent"
                                                ],
                                                "type": "string",
                                                "description": "The item type (Linked-Data @type)"
                                              },
                                              "id": {
                                                "type": "string",
                                                "format": "uri",
                                                "description": "Linked-Data URI (@id)"
                                              },
                                              "name": {
                                                "type": "string",
                                                "description": "the name of the item"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "contactPoint": {
                                    "$id": "http://realestate.yodata.me/definitions/contactPoint.json",
                                    "type": "array",
                                    "description": "a named point of contact - telephone, email, faxNumber, and/or url for the entity",
                                    "items": {
                                      "$id": "htttp://realestate.yodata.me/schema/ContactPoint.json",
                                      "title": "ContactPoint",
                                      "description": "A point of contact for the entity. By convention in the real estate domain, ContactPoints\nare preferred over telephone, email, and faxNumber so the ContactPoint.name property can be used to label values\nfor example, Work Telephone, Home, as named contactPoint values.\n",
                                      "type": "object",
                                      "required": [
                                        "type",
                                        "name"
                                      ],
                                      "minProperties": 3,
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "const": "ContactPoint"
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "a label for the contactPoint, i.e. 'Work', or 'Home'",
                                          "examples": [
                                            "Work",
                                            "Home",
                                            "Vacation",
                                            "Bob's Cell",
                                            "Alice's Work"
                                          ]
                                        },
                                        "telephone": {
                                          "type": "string",
                                          "x-faker": "phone.phoneNumber",
                                          "examples": [
                                            "555-555-5555",
                                            "555-555-5555 x123",
                                            "555-555-5555 ext. 123",
                                            "+1-555-555-5555"
                                          ]
                                        },
                                        "faxNumber": {
                                          "type": "string",
                                          "x-faker": "phone.phoneNumber",
                                          "examples": [
                                            "555-555-5555",
                                            "555-555-5555 x123",
                                            "555-555-5555 ext. 123",
                                            "+1-555-555-5555"
                                          ]
                                        },
                                        "email": {
                                          "description": "an email address for the item.",
                                          "type": "string",
                                          "format": "email",
                                          "x-faker": "internet.email",
                                          "examples": [
                                            "bob@example.com",
                                            "alice@example.com"
                                          ]
                                        },
                                        "url": {
                                          "description": "primary URL for the item.",
                                          "type": "string",
                                          "format": "uri",
                                          "example": "https://www.facebook.com/hallandoates"
                                        }
                                      }
                                    }
                                  },
                                  "email": {
                                    "type": "string",
                                    "format": "email",
                                    "x-faker": "internet.email"
                                  },
                                  "faxNumber": {
                                    "type": "string",
                                    "description": "Do people still use fax machines?",
                                    "x-faker": "phone.phoneNumber"
                                  },
                                  "image": {
                                    "title": "image",
                                    "description": "an ImageObject or URI reference to an image on the web.",
                                    "type": "array",
                                    "x-range": [
                                      "ImageObject"
                                    ],
                                    "items": [
                                      {
                                        "type": "object",
                                        "allOf": [
                                          {
                                            "title": "MediaObject",
                                            "description": "an image, video or document availble for download",
                                            "x-subclass": [
                                              "ImageObject",
                                              "DigitalDocument"
                                            ],
                                            "allOf": [
                                              {
                                                "$id": "http://realestate.yodata.me/schema/Thing",
                                                "type": "object",
                                                "title": "Thing",
                                                "summary": "The root type of all Things.",
                                                "required": [
                                                  "type"
                                                ],
                                                "propertyNames": {
                                                  "pattern": "^[a-z@$][a-zA-Z0-9-_]+$"
                                                },
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "pattern": "^[A-Z][a-zA-Z0-9]+$",
                                                    "description": "The item type (Linked-Data @type)"
                                                  },
                                                  "@id": {
                                                    "type": "string",
                                                    "format": "uri",
                                                    "description": "the liked data uri for the Thing"
                                                  }
                                                }
                                              },
                                              {
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "MediaObject",
                                                      "ImageObject",
                                                      "DigitalDocument"
                                                    ]
                                                  },
                                                  "id": {
                                                    "description": "the URL to access the item.",
                                                    "example": "http://user.example.com/public/logo/fileName.zip",
                                                    "type": "string",
                                                    "format": "uri"
                                                  },
                                                  "name": {
                                                    "type": "string",
                                                    "description": "the file name of the object.",
                                                    "example": "fileName.zip"
                                                  },
                                                  "encodingFormat": {
                                                    "type": "string",
                                                    "description": "MIME type",
                                                    "example": "application/zip"
                                                  },
                                                  "about": {
                                                    "type": "string",
                                                    "format": "uri",
                                                    "description": "URI to the subject of the image or logo",
                                                    "example": "http://user.example.com/profile/card#me"
                                                  },
                                                  "url": {
                                                    "type": "string",
                                                    "format": "uri",
                                                    "description": "URL of the image content",
                                                    "example": "http://user.example.com/public/profile/image.jpg"
                                                  }
                                                }
                                              }
                                            ]
                                          },
                                          {
                                            "title": "ImageObject",
                                            "x-range": "ImageObject",
                                            "properties": {
                                              "type": {
                                                "enum": [
                                                  "ImageObject"
                                                ],
                                                "example": "ImageObject"
                                              },
                                              "id": {
                                                "example": "http://user.example.com/public/logo/image.jpg"
                                              },
                                              "name": {
                                                "example": "image.jpg"
                                              },
                                              "encodingFormat": {
                                                "example": "image/jpeg"
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  "logo": {
                                    "description": "a logo associated with the organization.",
                                    "items": {
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "title": "DigitalDocument",
                                          "x-range": "DigitalDocument",
                                          "description": "an electronic file.",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "enum": [
                                                "DigitalDocument"
                                              ]
                                            },
                                            "id": {
                                              "type": "string",
                                              "example": "http://user.example.com/public/logo/archive.zip"
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "document name or title",
                                              "example": "archive.zip"
                                            },
                                            "encodingFormat": {
                                              "type": "string",
                                              "description": "[ISO Media Type](https://www.iana.org/assignments/media-types/media-types.xhtml)",
                                              "example": "application/zip"
                                            },
                                            "about": {
                                              "type": "object",
                                              "description": "subject of the Document",
                                              "x-range": "Thing",
                                              "example": {
                                                "type": "RealEstateTransaction",
                                                "identifier": {
                                                  "bmsTransactionId": "xxxx"
                                                }
                                              }
                                            },
                                            "url": {
                                              "type": "string",
                                              "description": "public URL of the object",
                                              "example": "https://example.com"
                                            }
                                          }
                                        },
                                        {
                                          "description": "an associated logo",
                                          "type": "object"
                                        }
                                      ],
                                      "type": "object"
                                    },
                                    "type": "array",
                                    "x-range": [
                                      "ImageObject",
                                      "DigitalDocument"
                                    ]
                                  },
                                  "name": {
                                    "description": "Name or DBA.",
                                    "type": "string"
                                  },
                                  "parentOrganization": {
                                    "items": {
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "subOrganization": {
                                    "description": "a child organization",
                                    "x-range": [
                                      "RealEstateOrganization"
                                    ],
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "format": "uri",
                                      "example": "http://org.example.com/profile/card#me"
                                    }
                                  },
                                  "telephone": {
                                    "type": "string",
                                    "description": "Primary phone number.",
                                    "example": "+15558675309"
                                  },
                                  "type": {
                                    "enum": [
                                      "Organization"
                                    ],
                                    "type": "string"
                                  },
                                  "url": {
                                    "description": "primary website/url for the entity.",
                                    "format": "uri",
                                    "type": "string"
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "title": "RealEstateTeam",
                            "description": "A real estate team.",
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "RealEstateTeam",
                                "enum": [
                                  "RealEstateTeam"
                                ]
                              },
                              "areaServed": {
                                "type": "object",
                                "description": "the physical areas that make up the ServiceArea",
                                "x-range": [
                                  "City",
                                  "PostalCodeArea"
                                ],
                                "example": {
                                  "type": "PostalCode",
                                  "postalCode": "91371",
                                  "addressLocality": "Woodland Hills",
                                  "addressCounty": "Los Angeles",
                                  "addressRegion": "CA",
                                  "addressCountry": "US"
                                }
                              },
                              "description": {
                                "example": "The number on Gotham City Real Estate Company since 1940",
                                "type": "string",
                                "description": "description of the item."
                              },
                              "parentOrganization": {
                                "x-range": "RealEstateOrganization",
                                "description": "A franchisor or affiliate network of which this organization plays a membership role.",
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "format": "uri"
                                }
                              },
                              "member": {
                                "type": "array",
                                "items": {
                                  "allOf": [
                                    {
                                      "title": "OrganizationRole",
                                      "type": "object",
                                      "description": "describes a role played by a member and a group or organization.",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "description": "a role played by the member in the memberOf group",
                                          "enum": [
                                            "OrganizationRole"
                                          ]
                                        },
                                        "roleName": {
                                          "type": "string",
                                          "description": "the role name",
                                          "example": "Owner"
                                        },
                                        "memberOf": {
                                          "description": "the org or group where the role is performed",
                                          "type": "object",
                                          "example": {
                                            "type": "RealEstateOrganization",
                                            "id": "http://orgid.example.com/profile/card#me"
                                          }
                                        },
                                        "member": {
                                          "description": "member object or id",
                                          "type": "string",
                                          "format": "uri",
                                          "example": "https://memberid.example.com/profile/card#me"
                                        },
                                        "startDate": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "date the member began performing this role"
                                        },
                                        "endDate": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "date the member stopped performing the role"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "title": "RealEstateTeamMembership",
                                      "description": "a membership relationship.  Subclass of OrganizationRole",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "description": "a member of a real estate team",
                                          "enum": [
                                            "RealEstateTeamMembership"
                                          ],
                                          "example": "RealEstateTeamMembership"
                                        },
                                        "roleName": {
                                          "type": "string",
                                          "enum": [
                                            "TeamMember",
                                            "TeamAdmin",
                                            "TeamOwner"
                                          ]
                                        },
                                        "memberOf": {
                                          "type": "string",
                                          "format": "uri",
                                          "example": "https://{team-id}.example.com/profile/card#me"
                                        },
                                        "member": {
                                          "type": "string",
                                          "format": "uri",
                                          "example": "https://{agent}.example.com/profile/card#me"
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-message-parsed": true
            },
            {
              "messageId": "profile#teamdelete",
              "name": "realestate/profile#teamdelete",
              "summary": "a team profile was creatd",
              "headers": {
                "type": "object",
                "properties": {
                  "topic": {
                    "const": "realestate/profile#teamdelete",
                    "x-parser-schema-id": "<anonymous-schema-421>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-420>"
              },
              "payload": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "const": "DeleteAction",
                        "x-parser-schema-id": "<anonymous-schema-424>"
                      },
                      "object": {
                        "allOf": [
                          {
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "https://org.example.com/profile/card#me"
                              }
                            },
                            "x-parser-schema-id": "<anonymous-schema-409>"
                          },
                          {
                            "allOf": [
                              {
                                "$id": "http://realestate.yodata.me/schema/Thing",
                                "type": "object",
                                "title": "Thing",
                                "summary": "The root type of all Things.",
                                "required": [
                                  "type"
                                ],
                                "propertyNames": {
                                  "pattern": "^[a-z@$][a-zA-Z0-9-_]+$",
                                  "x-parser-schema-id": "<anonymous-schema-274>"
                                },
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "pattern": "^[A-Z][a-zA-Z0-9]+$",
                                    "description": "The item type (Linked-Data @type)",
                                    "x-parser-schema-id": "<anonymous-schema-272>"
                                  },
                                  "@id": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "the liked data uri for the Thing",
                                    "x-parser-schema-id": "<anonymous-schema-273>"
                                  }
                                },
                                "x-parser-schema-id": "Thing"
                              },
                              {
                                "x-kind": "Organization",
                                "x-parser-schema-id": "<anonymous-schema-410>"
                              },
                              {
                                "x-hasSubclass": [
                                  "RealEstateOrganization",
                                  "RealEstateOffice",
                                  "RealEstateAgent"
                                ],
                                "x-parser-schema-id": "<anonymous-schema-411>"
                              },
                              {
                                "x-subClassOf": [
                                  "https://schema.org/Organization"
                                ],
                                "properties": {
                                  "address": {
                                    "type": "object",
                                    "x-range": "PostalAddress",
                                    "description": "A physical address.",
                                    "example": {
                                      "type": "PostalAddress",
                                      "name": "Home",
                                      "addressCountry": "USA",
                                      "addressCounty": "Gotham County",
                                      "addressLocality": "Gotham City",
                                      "addressRegion": "New Jersey",
                                      "addressSubdivision": "Gotham Heights",
                                      "postalCode": "10010",
                                      "postOfficeBoxNumber": "Box 1234",
                                      "streetAddress": "1007 Mountain Gate Rd"
                                    },
                                    "x-parser-schema-id": "<anonymous-schema-370>"
                                  },
                                  "availableLanguage": {
                                    "title": "availableLanguage",
                                    "type": "array",
                                    "description": "Please use one of the language codes from the IETF BCP 47 standard.",
                                    "x-range": "Language",
                                    "items": {
                                      "$id": "htttp://realestate.yodata.me/schema/Language.yaml",
                                      "description": "a written or spoken Language",
                                      "title": "Language",
                                      "type": "object",
                                      "required": [
                                        "type",
                                        "name",
                                        "additionalName"
                                      ],
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "const": "Language",
                                          "x-parser-schema-id": "<anonymous-schema-124>"
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "the display name of the language",
                                          "x-parser-schema-id": "<anonymous-schema-125>"
                                        },
                                        "additionalName": {
                                          "type": "string",
                                          "description": "BCP 47 language code",
                                          "x-parser-schema-id": "<anonymous-schema-126>"
                                        }
                                      },
                                      "examples": [
                                        {
                                          "type": "Language",
                                          "name": "English",
                                          "additionalName": "en-us"
                                        },
                                        {
                                          "type": "Language",
                                          "name": "Spanish",
                                          "additionalName": "es"
                                        },
                                        {
                                          "type": "Language",
                                          "name": "French",
                                          "additionalName": "fr"
                                        },
                                        {
                                          "type": "Language",
                                          "name": "German",
                                          "additionalName": "de"
                                        },
                                        {
                                          "type": "Language",
                                          "name": "Italian",
                                          "additionalName": "it"
                                        },
                                        {
                                          "type": "Language",
                                          "name": "Japanese",
                                          "additionalName": "ja"
                                        },
                                        {
                                          "type": "Language",
                                          "name": "Korean",
                                          "additionalName": "ko"
                                        },
                                        {
                                          "type": "Language",
                                          "name": "Portuguese",
                                          "additionalName": "pt"
                                        },
                                        {
                                          "type": "Language",
                                          "name": "Russian",
                                          "additionalName": "ru"
                                        },
                                        {
                                          "type": "Language",
                                          "name": "Chinese",
                                          "additionalName": "zh"
                                        },
                                        {
                                          "type": "Language",
                                          "name": "Arabic",
                                          "additionalName": "ar"
                                        },
                                        {
                                          "type": "Language",
                                          "name": "Hindi",
                                          "additionalName": "hi"
                                        },
                                        {
                                          "type": "Language",
                                          "name": "Bengali",
                                          "additionalName": "bn"
                                        },
                                        {
                                          "type": "Language",
                                          "name": "Portuguese",
                                          "additionalName": "pt"
                                        }
                                      ],
                                      "x-parser-schema-id": "Language"
                                    }
                                  },
                                  "branchCode": {
                                    "description": "A short textual code that uniquely identifies a place of business.",
                                    "example": "for BHHS profile events, see additionalProperty.OfficeId",
                                    "type": "string"
                                  },
                                  "certification": {
                                    "$id": "http://realestate.yodata.me/schema/certification",
                                    "title": "certifications",
                                    "description": "certifications granted to a person or organization",
                                    "type": "array",
                                    "items": [
                                      {
                                        "type": "object",
                                        "title": "Certification",
                                        "description": "A certification issued by an organization to an individual or business.",
                                        "x-range": "Certification",
                                        "properties": {
                                          "type": {
                                            "description": "Certification",
                                            "type": "string",
                                            "enum": [
                                              "Certification"
                                            ],
                                            "x-parser-schema-id": "<anonymous-schema-594>"
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "the name of the Certification",
                                            "example": "e-Agent Certified",
                                            "x-parser-schema-id": "<anonymous-schema-595>"
                                          },
                                          "issuedBy": {
                                            "type": "object",
                                            "x-range": "RealEstateOrganization",
                                            "description": "the issuing authority",
                                            "properties": {
                                              "type": {
                                                "enum": [
                                                  "RealEstateOrganization"
                                                ],
                                                "type": "string",
                                                "description": "The item type (Linked-Data @type)",
                                                "x-parser-schema-id": "<anonymous-schema-375>"
                                              },
                                              "id": {
                                                "example": "https://example.com/profile/card#me",
                                                "type": "string",
                                                "format": "uri",
                                                "description": "Linked-Data URI (@id)",
                                                "x-parser-schema-id": "<anonymous-schema-376>"
                                              },
                                              "name": {
                                                "type": "string",
                                                "description": "name of the issuing organization",
                                                "example": "Gotham City Real Estate",
                                                "x-parser-schema-id": "<anonymous-schema-377>"
                                              }
                                            },
                                            "x-parser-schema-id": "<anonymous-schema-374>"
                                          },
                                          "issuedTo": {
                                            "x-range": "RealEstateAgent",
                                            "type": "object",
                                            "description": "the subject",
                                            "properties": {
                                              "type": {
                                                "enum": [
                                                  "RealEstateAgent"
                                                ],
                                                "type": "string",
                                                "description": "The item type (Linked-Data @type)",
                                                "x-parser-schema-id": "<anonymous-schema-379>"
                                              },
                                              "id": {
                                                "type": "string",
                                                "format": "uri",
                                                "description": "Linked-Data URI (@id)",
                                                "x-parser-schema-id": "<anonymous-schema-380>"
                                              },
                                              "name": {
                                                "type": "string",
                                                "description": "the name of the item",
                                                "x-parser-schema-id": "<anonymous-schema-92>"
                                              }
                                            },
                                            "x-parser-schema-id": "<anonymous-schema-596>"
                                          }
                                        },
                                        "x-parser-schema-id": "Certification"
                                      }
                                    ]
                                  },
                                  "contactPoint": {
                                    "$id": "http://realestate.yodata.me/definitions/contactPoint.json",
                                    "type": "array",
                                    "description": "a named point of contact - telephone, email, faxNumber, and/or url for the entity",
                                    "items": {
                                      "$id": "htttp://realestate.yodata.me/schema/ContactPoint.json",
                                      "title": "ContactPoint",
                                      "description": "A point of contact for the entity. By convention in the real estate domain, ContactPoints\nare preferred over telephone, email, and faxNumber so the ContactPoint.name property can be used to label values\nfor example, Work Telephone, Home, as named contactPoint values.\n",
                                      "type": "object",
                                      "required": [
                                        "type",
                                        "name"
                                      ],
                                      "minProperties": 3,
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "const": "ContactPoint",
                                          "x-parser-schema-id": "<anonymous-schema-110>"
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "a label for the contactPoint, i.e. 'Work', or 'Home'",
                                          "examples": [
                                            "Work",
                                            "Home",
                                            "Vacation",
                                            "Bob's Cell",
                                            "Alice's Work"
                                          ],
                                          "x-parser-schema-id": "<anonymous-schema-111>"
                                        },
                                        "telephone": {
                                          "type": "string",
                                          "x-faker": "phone.phoneNumber",
                                          "examples": [
                                            "555-555-5555",
                                            "555-555-5555 x123",
                                            "555-555-5555 ext. 123",
                                            "+1-555-555-5555"
                                          ],
                                          "x-parser-schema-id": "<anonymous-schema-112>"
                                        },
                                        "faxNumber": {
                                          "type": "string",
                                          "x-faker": "phone.phoneNumber",
                                          "examples": [
                                            "555-555-5555",
                                            "555-555-5555 x123",
                                            "555-555-5555 ext. 123",
                                            "+1-555-555-5555"
                                          ],
                                          "x-parser-schema-id": "<anonymous-schema-113>"
                                        },
                                        "email": {
                                          "description": "an email address for the item.",
                                          "type": "string",
                                          "format": "email",
                                          "x-faker": "internet.email",
                                          "examples": [
                                            "bob@example.com",
                                            "alice@example.com"
                                          ],
                                          "x-parser-schema-id": "<anonymous-schema-114>"
                                        },
                                        "url": {
                                          "description": "primary URL for the item.",
                                          "type": "string",
                                          "format": "uri",
                                          "example": "https://www.facebook.com/hallandoates",
                                          "x-parser-schema-id": "<anonymous-schema-115>"
                                        }
                                      },
                                      "x-parser-schema-id": "ContactPoint"
                                    }
                                  },
                                  "email": {
                                    "type": "string",
                                    "format": "email",
                                    "x-faker": "internet.email",
                                    "x-parser-schema-id": "<anonymous-schema-93>"
                                  },
                                  "faxNumber": {
                                    "type": "string",
                                    "description": "Do people still use fax machines?",
                                    "x-faker": "phone.phoneNumber",
                                    "x-parser-schema-id": "<anonymous-schema-117>"
                                  },
                                  "image": {
                                    "title": "image",
                                    "description": "an ImageObject or URI reference to an image on the web.",
                                    "type": "array",
                                    "x-range": [
                                      "ImageObject"
                                    ],
                                    "items": [
                                      {
                                        "type": "object",
                                        "allOf": [
                                          {
                                            "title": "MediaObject",
                                            "description": "an image, video or document availble for download",
                                            "x-subclass": [
                                              "ImageObject",
                                              "DigitalDocument"
                                            ],
                                            "allOf": [
                                              {
                                                "$id": "http://realestate.yodata.me/schema/Thing",
                                                "type": "object",
                                                "title": "Thing",
                                                "summary": "The root type of all Things.",
                                                "required": [
                                                  "type"
                                                ],
                                                "propertyNames": {
                                                  "pattern": "^[a-z@$][a-zA-Z0-9-_]+$",
                                                  "x-parser-schema-id": "<anonymous-schema-274>"
                                                },
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "pattern": "^[A-Z][a-zA-Z0-9]+$",
                                                    "description": "The item type (Linked-Data @type)",
                                                    "x-parser-schema-id": "<anonymous-schema-272>"
                                                  },
                                                  "@id": {
                                                    "type": "string",
                                                    "format": "uri",
                                                    "description": "the liked data uri for the Thing",
                                                    "x-parser-schema-id": "<anonymous-schema-273>"
                                                  }
                                                },
                                                "x-parser-schema-id": "Thing"
                                              },
                                              {
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "MediaObject",
                                                      "ImageObject",
                                                      "DigitalDocument"
                                                    ]
                                                  },
                                                  "id": {
                                                    "description": "the URL to access the item.",
                                                    "example": "http://user.example.com/public/logo/fileName.zip",
                                                    "type": "string",
                                                    "format": "uri"
                                                  },
                                                  "name": {
                                                    "type": "string",
                                                    "description": "the file name of the object.",
                                                    "example": "fileName.zip"
                                                  },
                                                  "encodingFormat": {
                                                    "type": "string",
                                                    "description": "MIME type",
                                                    "example": "application/zip"
                                                  },
                                                  "about": {
                                                    "type": "string",
                                                    "format": "uri",
                                                    "description": "URI to the subject of the image or logo",
                                                    "example": "http://user.example.com/profile/card#me"
                                                  },
                                                  "url": {
                                                    "type": "string",
                                                    "format": "uri",
                                                    "description": "URL of the image content",
                                                    "example": "http://user.example.com/public/profile/image.jpg"
                                                  }
                                                },
                                                "x-parser-schema-id": "<anonymous-schema-275>"
                                              }
                                            ],
                                            "x-parser-schema-id": "MediaObject"
                                          },
                                          {
                                            "title": "ImageObject",
                                            "x-range": "ImageObject",
                                            "properties": {
                                              "type": {
                                                "enum": [
                                                  "ImageObject"
                                                ],
                                                "example": "ImageObject"
                                              },
                                              "id": {
                                                "example": "http://user.example.com/public/logo/image.jpg"
                                              },
                                              "name": {
                                                "example": "image.jpg"
                                              },
                                              "encodingFormat": {
                                                "example": "image/jpeg"
                                              }
                                            },
                                            "x-parser-schema-id": "<anonymous-schema-276>"
                                          }
                                        ],
                                        "x-parser-schema-id": "<anonymous-schema-271>"
                                      }
                                    ]
                                  },
                                  "logo": {
                                    "description": "a logo associated with the organization.",
                                    "items": {
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "title": "DigitalDocument",
                                          "x-range": "DigitalDocument",
                                          "description": "an electronic file.",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "enum": [
                                                "DigitalDocument"
                                              ],
                                              "x-parser-schema-id": "<anonymous-schema-621>"
                                            },
                                            "id": {
                                              "type": "string",
                                              "example": "http://user.example.com/public/logo/archive.zip",
                                              "x-parser-schema-id": "<anonymous-schema-622>"
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "document name or title",
                                              "example": "archive.zip",
                                              "x-parser-schema-id": "<anonymous-schema-623>"
                                            },
                                            "encodingFormat": {
                                              "type": "string",
                                              "description": "[ISO Media Type](https://www.iana.org/assignments/media-types/media-types.xhtml)",
                                              "example": "application/zip",
                                              "x-parser-schema-id": "<anonymous-schema-624>"
                                            },
                                            "about": {
                                              "type": "object",
                                              "description": "subject of the Document",
                                              "x-range": "Thing",
                                              "example": {
                                                "type": "RealEstateTransaction",
                                                "identifier": {
                                                  "bmsTransactionId": "xxxx"
                                                }
                                              },
                                              "x-parser-schema-id": "<anonymous-schema-625>"
                                            },
                                            "url": {
                                              "type": "string",
                                              "description": "public URL of the object",
                                              "example": "https://example.com",
                                              "x-parser-schema-id": "<anonymous-schema-626>"
                                            }
                                          },
                                          "x-parser-schema-id": "DigitalDocument"
                                        },
                                        {
                                          "description": "an associated logo",
                                          "type": "object"
                                        }
                                      ],
                                      "type": "object"
                                    },
                                    "type": "array",
                                    "x-range": [
                                      "ImageObject",
                                      "DigitalDocument"
                                    ]
                                  },
                                  "name": {
                                    "description": "Name or DBA.",
                                    "type": "string"
                                  },
                                  "parentOrganization": {
                                    "items": {
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "subOrganization": {
                                    "description": "a child organization",
                                    "x-range": [
                                      "RealEstateOrganization"
                                    ],
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "format": "uri",
                                      "example": "http://org.example.com/profile/card#me"
                                    }
                                  },
                                  "telephone": {
                                    "type": "string",
                                    "description": "Primary phone number.",
                                    "example": "+15558675309",
                                    "x-parser-schema-id": "<anonymous-schema-128>"
                                  },
                                  "type": {
                                    "enum": [
                                      "Organization"
                                    ],
                                    "type": "string"
                                  },
                                  "url": {
                                    "description": "primary website/url for the entity.",
                                    "format": "uri",
                                    "type": "string"
                                  }
                                },
                                "x-parser-schema-id": "<anonymous-schema-412>"
                              }
                            ],
                            "x-parser-schema-id": "Organization"
                          },
                          {
                            "title": "RealEstateTeam",
                            "description": "A real estate team.",
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "RealEstateTeam",
                                "enum": [
                                  "RealEstateTeam"
                                ]
                              },
                              "areaServed": {
                                "type": "object",
                                "description": "the physical areas that make up the ServiceArea",
                                "x-range": [
                                  "City",
                                  "PostalCodeArea"
                                ],
                                "example": {
                                  "type": "PostalCode",
                                  "postalCode": "91371",
                                  "addressLocality": "Woodland Hills",
                                  "addressCounty": "Los Angeles",
                                  "addressRegion": "CA",
                                  "addressCountry": "US"
                                }
                              },
                              "description": {
                                "example": "The number on Gotham City Real Estate Company since 1940",
                                "type": "string",
                                "description": "description of the item."
                              },
                              "parentOrganization": {
                                "x-range": "RealEstateOrganization",
                                "description": "A franchisor or affiliate network of which this organization plays a membership role.",
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "format": "uri"
                                }
                              },
                              "member": {
                                "type": "array",
                                "items": {
                                  "allOf": [
                                    {
                                      "title": "OrganizationRole",
                                      "type": "object",
                                      "description": "describes a role played by a member and a group or organization.",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "description": "a role played by the member in the memberOf group",
                                          "enum": [
                                            "OrganizationRole"
                                          ],
                                          "x-parser-schema-id": "<anonymous-schema-391>"
                                        },
                                        "roleName": {
                                          "type": "string",
                                          "description": "the role name",
                                          "example": "Owner",
                                          "x-parser-schema-id": "<anonymous-schema-392>"
                                        },
                                        "memberOf": {
                                          "description": "the org or group where the role is performed",
                                          "type": "object",
                                          "example": {
                                            "type": "RealEstateOrganization",
                                            "id": "http://orgid.example.com/profile/card#me"
                                          },
                                          "x-parser-schema-id": "<anonymous-schema-393>"
                                        },
                                        "member": {
                                          "description": "member object or id",
                                          "type": "string",
                                          "format": "uri",
                                          "example": "https://memberid.example.com/profile/card#me",
                                          "x-parser-schema-id": "<anonymous-schema-394>"
                                        },
                                        "startDate": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "date the member began performing this role",
                                          "x-parser-schema-id": "<anonymous-schema-395>"
                                        },
                                        "endDate": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "date the member stopped performing the role",
                                          "x-parser-schema-id": "<anonymous-schema-396>"
                                        }
                                      },
                                      "x-parser-schema-id": "OrganizationRole"
                                    },
                                    {
                                      "type": "object",
                                      "title": "RealEstateTeamMembership",
                                      "description": "a membership relationship.  Subclass of OrganizationRole",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "description": "a member of a real estate team",
                                          "enum": [
                                            "RealEstateTeamMembership"
                                          ],
                                          "example": "RealEstateTeamMembership",
                                          "x-parser-schema-id": "<anonymous-schema-431>"
                                        },
                                        "roleName": {
                                          "type": "string",
                                          "enum": [
                                            "TeamMember",
                                            "TeamAdmin",
                                            "TeamOwner"
                                          ],
                                          "x-parser-schema-id": "<anonymous-schema-432>"
                                        },
                                        "memberOf": {
                                          "type": "string",
                                          "format": "uri",
                                          "example": "https://{team-id}.example.com/profile/card#me",
                                          "x-parser-schema-id": "<anonymous-schema-433>"
                                        },
                                        "member": {
                                          "type": "string",
                                          "format": "uri",
                                          "example": "https://{agent}.example.com/profile/card#me",
                                          "x-parser-schema-id": "<anonymous-schema-434>"
                                        }
                                      },
                                      "x-parser-schema-id": "<anonymous-schema-430>"
                                    }
                                  ],
                                  "x-parser-schema-id": "RealEstateTeamMembership"
                                }
                              }
                            },
                            "x-parser-schema-id": "<anonymous-schema-413>"
                          }
                        ],
                        "x-parser-schema-id": "RealEstateTeam"
                      }
                    },
                    "x-parser-schema-id": "<anonymous-schema-423>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-422>"
              },
              "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-original-payload": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "const": "DeleteAction"
                      },
                      "object": {
                        "allOf": [
                          {
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "https://org.example.com/profile/card#me"
                              }
                            }
                          },
                          {
                            "allOf": [
                              {
                                "$id": "http://realestate.yodata.me/schema/Thing",
                                "type": "object",
                                "title": "Thing",
                                "summary": "The root type of all Things.",
                                "required": [
                                  "type"
                                ],
                                "propertyNames": {
                                  "pattern": "^[a-z@$][a-zA-Z0-9-_]+$"
                                },
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "pattern": "^[A-Z][a-zA-Z0-9]+$",
                                    "description": "The item type (Linked-Data @type)"
                                  },
                                  "@id": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "the liked data uri for the Thing"
                                  }
                                }
                              },
                              {
                                "x-kind": "Organization"
                              },
                              {
                                "x-hasSubclass": [
                                  "RealEstateOrganization",
                                  "RealEstateOffice",
                                  "RealEstateAgent"
                                ]
                              },
                              {
                                "x-subClassOf": [
                                  "https://schema.org/Organization"
                                ],
                                "properties": {
                                  "address": {
                                    "type": "object",
                                    "x-range": "PostalAddress",
                                    "description": "A physical address.",
                                    "example": {
                                      "type": "PostalAddress",
                                      "name": "Home",
                                      "addressCountry": "USA",
                                      "addressCounty": "Gotham County",
                                      "addressLocality": "Gotham City",
                                      "addressRegion": "New Jersey",
                                      "addressSubdivision": "Gotham Heights",
                                      "postalCode": "10010",
                                      "postOfficeBoxNumber": "Box 1234",
                                      "streetAddress": "1007 Mountain Gate Rd"
                                    }
                                  },
                                  "availableLanguage": {
                                    "title": "availableLanguage",
                                    "type": "array",
                                    "description": "Please use one of the language codes from the IETF BCP 47 standard.",
                                    "x-range": "Language",
                                    "items": {
                                      "$id": "htttp://realestate.yodata.me/schema/Language.yaml",
                                      "description": "a written or spoken Language",
                                      "title": "Language",
                                      "type": "object",
                                      "required": [
                                        "type",
                                        "name",
                                        "additionalName"
                                      ],
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "const": "Language"
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "the display name of the language"
                                        },
                                        "additionalName": {
                                          "type": "string",
                                          "description": "BCP 47 language code"
                                        }
                                      },
                                      "examples": [
                                        {
                                          "type": "Language",
                                          "name": "English",
                                          "additionalName": "en-us"
                                        },
                                        {
                                          "type": "Language",
                                          "name": "Spanish",
                                          "additionalName": "es"
                                        },
                                        {
                                          "type": "Language",
                                          "name": "French",
                                          "additionalName": "fr"
                                        },
                                        {
                                          "type": "Language",
                                          "name": "German",
                                          "additionalName": "de"
                                        },
                                        {
                                          "type": "Language",
                                          "name": "Italian",
                                          "additionalName": "it"
                                        },
                                        {
                                          "type": "Language",
                                          "name": "Japanese",
                                          "additionalName": "ja"
                                        },
                                        {
                                          "type": "Language",
                                          "name": "Korean",
                                          "additionalName": "ko"
                                        },
                                        {
                                          "type": "Language",
                                          "name": "Portuguese",
                                          "additionalName": "pt"
                                        },
                                        {
                                          "type": "Language",
                                          "name": "Russian",
                                          "additionalName": "ru"
                                        },
                                        {
                                          "type": "Language",
                                          "name": "Chinese",
                                          "additionalName": "zh"
                                        },
                                        {
                                          "type": "Language",
                                          "name": "Arabic",
                                          "additionalName": "ar"
                                        },
                                        {
                                          "type": "Language",
                                          "name": "Hindi",
                                          "additionalName": "hi"
                                        },
                                        {
                                          "type": "Language",
                                          "name": "Bengali",
                                          "additionalName": "bn"
                                        },
                                        {
                                          "type": "Language",
                                          "name": "Portuguese",
                                          "additionalName": "pt"
                                        }
                                      ]
                                    }
                                  },
                                  "branchCode": {
                                    "description": "A short textual code that uniquely identifies a place of business.",
                                    "example": "for BHHS profile events, see additionalProperty.OfficeId",
                                    "type": "string"
                                  },
                                  "certification": {
                                    "$id": "http://realestate.yodata.me/schema/certification",
                                    "title": "certifications",
                                    "description": "certifications granted to a person or organization",
                                    "type": "array",
                                    "items": [
                                      {
                                        "type": "object",
                                        "title": "Certification",
                                        "description": "A certification issued by an organization to an individual or business.",
                                        "x-range": "Certification",
                                        "properties": {
                                          "type": {
                                            "description": "Certification",
                                            "type": "string",
                                            "enum": [
                                              "Certification"
                                            ]
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "the name of the Certification",
                                            "example": "e-Agent Certified"
                                          },
                                          "issuedBy": {
                                            "type": "object",
                                            "x-range": "RealEstateOrganization",
                                            "description": "the issuing authority",
                                            "properties": {
                                              "type": {
                                                "enum": [
                                                  "RealEstateOrganization"
                                                ],
                                                "type": "string",
                                                "description": "The item type (Linked-Data @type)"
                                              },
                                              "id": {
                                                "example": "https://example.com/profile/card#me",
                                                "type": "string",
                                                "format": "uri",
                                                "description": "Linked-Data URI (@id)"
                                              },
                                              "name": {
                                                "type": "string",
                                                "description": "name of the issuing organization",
                                                "example": "Gotham City Real Estate"
                                              }
                                            }
                                          },
                                          "issuedTo": {
                                            "x-range": "RealEstateAgent",
                                            "type": "object",
                                            "description": "the subject",
                                            "properties": {
                                              "type": {
                                                "enum": [
                                                  "RealEstateAgent"
                                                ],
                                                "type": "string",
                                                "description": "The item type (Linked-Data @type)"
                                              },
                                              "id": {
                                                "type": "string",
                                                "format": "uri",
                                                "description": "Linked-Data URI (@id)"
                                              },
                                              "name": {
                                                "type": "string",
                                                "description": "the name of the item"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "contactPoint": {
                                    "$id": "http://realestate.yodata.me/definitions/contactPoint.json",
                                    "type": "array",
                                    "description": "a named point of contact - telephone, email, faxNumber, and/or url for the entity",
                                    "items": {
                                      "$id": "htttp://realestate.yodata.me/schema/ContactPoint.json",
                                      "title": "ContactPoint",
                                      "description": "A point of contact for the entity. By convention in the real estate domain, ContactPoints\nare preferred over telephone, email, and faxNumber so the ContactPoint.name property can be used to label values\nfor example, Work Telephone, Home, as named contactPoint values.\n",
                                      "type": "object",
                                      "required": [
                                        "type",
                                        "name"
                                      ],
                                      "minProperties": 3,
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "const": "ContactPoint"
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "a label for the contactPoint, i.e. 'Work', or 'Home'",
                                          "examples": [
                                            "Work",
                                            "Home",
                                            "Vacation",
                                            "Bob's Cell",
                                            "Alice's Work"
                                          ]
                                        },
                                        "telephone": {
                                          "type": "string",
                                          "x-faker": "phone.phoneNumber",
                                          "examples": [
                                            "555-555-5555",
                                            "555-555-5555 x123",
                                            "555-555-5555 ext. 123",
                                            "+1-555-555-5555"
                                          ]
                                        },
                                        "faxNumber": {
                                          "type": "string",
                                          "x-faker": "phone.phoneNumber",
                                          "examples": [
                                            "555-555-5555",
                                            "555-555-5555 x123",
                                            "555-555-5555 ext. 123",
                                            "+1-555-555-5555"
                                          ]
                                        },
                                        "email": {
                                          "description": "an email address for the item.",
                                          "type": "string",
                                          "format": "email",
                                          "x-faker": "internet.email",
                                          "examples": [
                                            "bob@example.com",
                                            "alice@example.com"
                                          ]
                                        },
                                        "url": {
                                          "description": "primary URL for the item.",
                                          "type": "string",
                                          "format": "uri",
                                          "example": "https://www.facebook.com/hallandoates"
                                        }
                                      }
                                    }
                                  },
                                  "email": {
                                    "type": "string",
                                    "format": "email",
                                    "x-faker": "internet.email"
                                  },
                                  "faxNumber": {
                                    "type": "string",
                                    "description": "Do people still use fax machines?",
                                    "x-faker": "phone.phoneNumber"
                                  },
                                  "image": {
                                    "title": "image",
                                    "description": "an ImageObject or URI reference to an image on the web.",
                                    "type": "array",
                                    "x-range": [
                                      "ImageObject"
                                    ],
                                    "items": [
                                      {
                                        "type": "object",
                                        "allOf": [
                                          {
                                            "title": "MediaObject",
                                            "description": "an image, video or document availble for download",
                                            "x-subclass": [
                                              "ImageObject",
                                              "DigitalDocument"
                                            ],
                                            "allOf": [
                                              {
                                                "$id": "http://realestate.yodata.me/schema/Thing",
                                                "type": "object",
                                                "title": "Thing",
                                                "summary": "The root type of all Things.",
                                                "required": [
                                                  "type"
                                                ],
                                                "propertyNames": {
                                                  "pattern": "^[a-z@$][a-zA-Z0-9-_]+$"
                                                },
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "pattern": "^[A-Z][a-zA-Z0-9]+$",
                                                    "description": "The item type (Linked-Data @type)"
                                                  },
                                                  "@id": {
                                                    "type": "string",
                                                    "format": "uri",
                                                    "description": "the liked data uri for the Thing"
                                                  }
                                                }
                                              },
                                              {
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "MediaObject",
                                                      "ImageObject",
                                                      "DigitalDocument"
                                                    ]
                                                  },
                                                  "id": {
                                                    "description": "the URL to access the item.",
                                                    "example": "http://user.example.com/public/logo/fileName.zip",
                                                    "type": "string",
                                                    "format": "uri"
                                                  },
                                                  "name": {
                                                    "type": "string",
                                                    "description": "the file name of the object.",
                                                    "example": "fileName.zip"
                                                  },
                                                  "encodingFormat": {
                                                    "type": "string",
                                                    "description": "MIME type",
                                                    "example": "application/zip"
                                                  },
                                                  "about": {
                                                    "type": "string",
                                                    "format": "uri",
                                                    "description": "URI to the subject of the image or logo",
                                                    "example": "http://user.example.com/profile/card#me"
                                                  },
                                                  "url": {
                                                    "type": "string",
                                                    "format": "uri",
                                                    "description": "URL of the image content",
                                                    "example": "http://user.example.com/public/profile/image.jpg"
                                                  }
                                                }
                                              }
                                            ]
                                          },
                                          {
                                            "title": "ImageObject",
                                            "x-range": "ImageObject",
                                            "properties": {
                                              "type": {
                                                "enum": [
                                                  "ImageObject"
                                                ],
                                                "example": "ImageObject"
                                              },
                                              "id": {
                                                "example": "http://user.example.com/public/logo/image.jpg"
                                              },
                                              "name": {
                                                "example": "image.jpg"
                                              },
                                              "encodingFormat": {
                                                "example": "image/jpeg"
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  "logo": {
                                    "description": "a logo associated with the organization.",
                                    "items": {
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "title": "DigitalDocument",
                                          "x-range": "DigitalDocument",
                                          "description": "an electronic file.",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "enum": [
                                                "DigitalDocument"
                                              ]
                                            },
                                            "id": {
                                              "type": "string",
                                              "example": "http://user.example.com/public/logo/archive.zip"
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "document name or title",
                                              "example": "archive.zip"
                                            },
                                            "encodingFormat": {
                                              "type": "string",
                                              "description": "[ISO Media Type](https://www.iana.org/assignments/media-types/media-types.xhtml)",
                                              "example": "application/zip"
                                            },
                                            "about": {
                                              "type": "object",
                                              "description": "subject of the Document",
                                              "x-range": "Thing",
                                              "example": {
                                                "type": "RealEstateTransaction",
                                                "identifier": {
                                                  "bmsTransactionId": "xxxx"
                                                }
                                              }
                                            },
                                            "url": {
                                              "type": "string",
                                              "description": "public URL of the object",
                                              "example": "https://example.com"
                                            }
                                          }
                                        },
                                        {
                                          "description": "an associated logo",
                                          "type": "object"
                                        }
                                      ],
                                      "type": "object"
                                    },
                                    "type": "array",
                                    "x-range": [
                                      "ImageObject",
                                      "DigitalDocument"
                                    ]
                                  },
                                  "name": {
                                    "description": "Name or DBA.",
                                    "type": "string"
                                  },
                                  "parentOrganization": {
                                    "items": {
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "subOrganization": {
                                    "description": "a child organization",
                                    "x-range": [
                                      "RealEstateOrganization"
                                    ],
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "format": "uri",
                                      "example": "http://org.example.com/profile/card#me"
                                    }
                                  },
                                  "telephone": {
                                    "type": "string",
                                    "description": "Primary phone number.",
                                    "example": "+15558675309"
                                  },
                                  "type": {
                                    "enum": [
                                      "Organization"
                                    ],
                                    "type": "string"
                                  },
                                  "url": {
                                    "description": "primary website/url for the entity.",
                                    "format": "uri",
                                    "type": "string"
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "title": "RealEstateTeam",
                            "description": "A real estate team.",
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "RealEstateTeam",
                                "enum": [
                                  "RealEstateTeam"
                                ]
                              },
                              "areaServed": {
                                "type": "object",
                                "description": "the physical areas that make up the ServiceArea",
                                "x-range": [
                                  "City",
                                  "PostalCodeArea"
                                ],
                                "example": {
                                  "type": "PostalCode",
                                  "postalCode": "91371",
                                  "addressLocality": "Woodland Hills",
                                  "addressCounty": "Los Angeles",
                                  "addressRegion": "CA",
                                  "addressCountry": "US"
                                }
                              },
                              "description": {
                                "example": "The number on Gotham City Real Estate Company since 1940",
                                "type": "string",
                                "description": "description of the item."
                              },
                              "parentOrganization": {
                                "x-range": "RealEstateOrganization",
                                "description": "A franchisor or affiliate network of which this organization plays a membership role.",
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "format": "uri"
                                }
                              },
                              "member": {
                                "type": "array",
                                "items": {
                                  "allOf": [
                                    {
                                      "title": "OrganizationRole",
                                      "type": "object",
                                      "description": "describes a role played by a member and a group or organization.",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "description": "a role played by the member in the memberOf group",
                                          "enum": [
                                            "OrganizationRole"
                                          ]
                                        },
                                        "roleName": {
                                          "type": "string",
                                          "description": "the role name",
                                          "example": "Owner"
                                        },
                                        "memberOf": {
                                          "description": "the org or group where the role is performed",
                                          "type": "object",
                                          "example": {
                                            "type": "RealEstateOrganization",
                                            "id": "http://orgid.example.com/profile/card#me"
                                          }
                                        },
                                        "member": {
                                          "description": "member object or id",
                                          "type": "string",
                                          "format": "uri",
                                          "example": "https://memberid.example.com/profile/card#me"
                                        },
                                        "startDate": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "date the member began performing this role"
                                        },
                                        "endDate": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "date the member stopped performing the role"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "title": "RealEstateTeamMembership",
                                      "description": "a membership relationship.  Subclass of OrganizationRole",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "description": "a member of a real estate team",
                                          "enum": [
                                            "RealEstateTeamMembership"
                                          ],
                                          "example": "RealEstateTeamMembership"
                                        },
                                        "roleName": {
                                          "type": "string",
                                          "enum": [
                                            "TeamMember",
                                            "TeamAdmin",
                                            "TeamOwner"
                                          ]
                                        },
                                        "memberOf": {
                                          "type": "string",
                                          "format": "uri",
                                          "example": "https://{team-id}.example.com/profile/card#me"
                                        },
                                        "member": {
                                          "type": "string",
                                          "format": "uri",
                                          "example": "https://{agent}.example.com/profile/card#me"
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-message-parsed": true
            },
            {
              "messageId": "profile#teammemberadd",
              "name": "realestate/profile#teammemberadd",
              "summary": "a team member was added",
              "headers": {
                "type": "object",
                "properties": {
                  "topic": {
                    "const": "realestate/profile#teammemberadd",
                    "x-parser-schema-id": "<anonymous-schema-426>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-425>"
              },
              "payload": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "const": "AddAction",
                        "x-parser-schema-id": "<anonymous-schema-429>"
                      },
                      "object": {
                        "allOf": [
                          {
                            "title": "OrganizationRole",
                            "type": "object",
                            "description": "describes a role played by a member and a group or organization.",
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "a role played by the member in the memberOf group",
                                "enum": [
                                  "OrganizationRole"
                                ],
                                "x-parser-schema-id": "<anonymous-schema-391>"
                              },
                              "roleName": {
                                "type": "string",
                                "description": "the role name",
                                "example": "Owner",
                                "x-parser-schema-id": "<anonymous-schema-392>"
                              },
                              "memberOf": {
                                "description": "the org or group where the role is performed",
                                "type": "object",
                                "example": {
                                  "type": "RealEstateOrganization",
                                  "id": "http://orgid.example.com/profile/card#me"
                                },
                                "x-parser-schema-id": "<anonymous-schema-393>"
                              },
                              "member": {
                                "description": "member object or id",
                                "type": "string",
                                "format": "uri",
                                "example": "https://memberid.example.com/profile/card#me",
                                "x-parser-schema-id": "<anonymous-schema-394>"
                              },
                              "startDate": {
                                "type": "string",
                                "format": "date-time",
                                "description": "date the member began performing this role",
                                "x-parser-schema-id": "<anonymous-schema-395>"
                              },
                              "endDate": {
                                "type": "string",
                                "format": "date-time",
                                "description": "date the member stopped performing the role",
                                "x-parser-schema-id": "<anonymous-schema-396>"
                              }
                            },
                            "x-parser-schema-id": "OrganizationRole"
                          },
                          {
                            "type": "object",
                            "title": "RealEstateTeamMembership",
                            "description": "a membership relationship.  Subclass of OrganizationRole",
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "a member of a real estate team",
                                "enum": [
                                  "RealEstateTeamMembership"
                                ],
                                "example": "RealEstateTeamMembership",
                                "x-parser-schema-id": "<anonymous-schema-431>"
                              },
                              "roleName": {
                                "type": "string",
                                "enum": [
                                  "TeamMember",
                                  "TeamAdmin",
                                  "TeamOwner"
                                ],
                                "x-parser-schema-id": "<anonymous-schema-432>"
                              },
                              "memberOf": {
                                "type": "string",
                                "format": "uri",
                                "example": "https://{team-id}.example.com/profile/card#me",
                                "x-parser-schema-id": "<anonymous-schema-433>"
                              },
                              "member": {
                                "type": "string",
                                "format": "uri",
                                "example": "https://{agent}.example.com/profile/card#me",
                                "x-parser-schema-id": "<anonymous-schema-434>"
                              }
                            },
                            "x-parser-schema-id": "<anonymous-schema-430>"
                          }
                        ],
                        "x-parser-schema-id": "RealEstateTeamMembership"
                      }
                    },
                    "x-parser-schema-id": "<anonymous-schema-428>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-427>"
              },
              "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-original-payload": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "const": "AddAction"
                      },
                      "object": {
                        "allOf": [
                          {
                            "title": "OrganizationRole",
                            "type": "object",
                            "description": "describes a role played by a member and a group or organization.",
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "a role played by the member in the memberOf group",
                                "enum": [
                                  "OrganizationRole"
                                ]
                              },
                              "roleName": {
                                "type": "string",
                                "description": "the role name",
                                "example": "Owner"
                              },
                              "memberOf": {
                                "description": "the org or group where the role is performed",
                                "type": "object",
                                "example": {
                                  "type": "RealEstateOrganization",
                                  "id": "http://orgid.example.com/profile/card#me"
                                }
                              },
                              "member": {
                                "description": "member object or id",
                                "type": "string",
                                "format": "uri",
                                "example": "https://memberid.example.com/profile/card#me"
                              },
                              "startDate": {
                                "type": "string",
                                "format": "date-time",
                                "description": "date the member began performing this role"
                              },
                              "endDate": {
                                "type": "string",
                                "format": "date-time",
                                "description": "date the member stopped performing the role"
                              }
                            }
                          },
                          {
                            "type": "object",
                            "title": "RealEstateTeamMembership",
                            "description": "a membership relationship.  Subclass of OrganizationRole",
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "a member of a real estate team",
                                "enum": [
                                  "RealEstateTeamMembership"
                                ],
                                "example": "RealEstateTeamMembership"
                              },
                              "roleName": {
                                "type": "string",
                                "enum": [
                                  "TeamMember",
                                  "TeamAdmin",
                                  "TeamOwner"
                                ]
                              },
                              "memberOf": {
                                "type": "string",
                                "format": "uri",
                                "example": "https://{team-id}.example.com/profile/card#me"
                              },
                              "member": {
                                "type": "string",
                                "format": "uri",
                                "example": "https://{agent}.example.com/profile/card#me"
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-message-parsed": true
            },
            {
              "messageId": "profile#teammemberremove",
              "name": "realestate/profile#teammemberremove",
              "summary": "a member (user) is removed from the team",
              "headers": {
                "type": "object",
                "properties": {
                  "topic": {
                    "const": "realestate/profile#teammemberremove",
                    "x-parser-schema-id": "<anonymous-schema-436>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-435>"
              },
              "payload": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "const": "RemoveAction",
                        "x-parser-schema-id": "<anonymous-schema-439>"
                      },
                      "object": {
                        "allOf": [
                          {
                            "title": "OrganizationRole",
                            "type": "object",
                            "description": "describes a role played by a member and a group or organization.",
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "a role played by the member in the memberOf group",
                                "enum": [
                                  "OrganizationRole"
                                ],
                                "x-parser-schema-id": "<anonymous-schema-391>"
                              },
                              "roleName": {
                                "type": "string",
                                "description": "the role name",
                                "example": "Owner",
                                "x-parser-schema-id": "<anonymous-schema-392>"
                              },
                              "memberOf": {
                                "description": "the org or group where the role is performed",
                                "type": "object",
                                "example": {
                                  "type": "RealEstateOrganization",
                                  "id": "http://orgid.example.com/profile/card#me"
                                },
                                "x-parser-schema-id": "<anonymous-schema-393>"
                              },
                              "member": {
                                "description": "member object or id",
                                "type": "string",
                                "format": "uri",
                                "example": "https://memberid.example.com/profile/card#me",
                                "x-parser-schema-id": "<anonymous-schema-394>"
                              },
                              "startDate": {
                                "type": "string",
                                "format": "date-time",
                                "description": "date the member began performing this role",
                                "x-parser-schema-id": "<anonymous-schema-395>"
                              },
                              "endDate": {
                                "type": "string",
                                "format": "date-time",
                                "description": "date the member stopped performing the role",
                                "x-parser-schema-id": "<anonymous-schema-396>"
                              }
                            },
                            "x-parser-schema-id": "OrganizationRole"
                          },
                          {
                            "type": "object",
                            "title": "RealEstateTeamMembership",
                            "description": "a membership relationship.  Subclass of OrganizationRole",
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "a member of a real estate team",
                                "enum": [
                                  "RealEstateTeamMembership"
                                ],
                                "example": "RealEstateTeamMembership",
                                "x-parser-schema-id": "<anonymous-schema-431>"
                              },
                              "roleName": {
                                "type": "string",
                                "enum": [
                                  "TeamMember",
                                  "TeamAdmin",
                                  "TeamOwner"
                                ],
                                "x-parser-schema-id": "<anonymous-schema-432>"
                              },
                              "memberOf": {
                                "type": "string",
                                "format": "uri",
                                "example": "https://{team-id}.example.com/profile/card#me",
                                "x-parser-schema-id": "<anonymous-schema-433>"
                              },
                              "member": {
                                "type": "string",
                                "format": "uri",
                                "example": "https://{agent}.example.com/profile/card#me",
                                "x-parser-schema-id": "<anonymous-schema-434>"
                              }
                            },
                            "x-parser-schema-id": "<anonymous-schema-430>"
                          }
                        ],
                        "x-parser-schema-id": "RealEstateTeamMembership"
                      }
                    },
                    "x-parser-schema-id": "<anonymous-schema-438>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-437>"
              },
              "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-original-payload": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "const": "RemoveAction"
                      },
                      "object": {
                        "allOf": [
                          {
                            "title": "OrganizationRole",
                            "type": "object",
                            "description": "describes a role played by a member and a group or organization.",
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "a role played by the member in the memberOf group",
                                "enum": [
                                  "OrganizationRole"
                                ]
                              },
                              "roleName": {
                                "type": "string",
                                "description": "the role name",
                                "example": "Owner"
                              },
                              "memberOf": {
                                "description": "the org or group where the role is performed",
                                "type": "object",
                                "example": {
                                  "type": "RealEstateOrganization",
                                  "id": "http://orgid.example.com/profile/card#me"
                                }
                              },
                              "member": {
                                "description": "member object or id",
                                "type": "string",
                                "format": "uri",
                                "example": "https://memberid.example.com/profile/card#me"
                              },
                              "startDate": {
                                "type": "string",
                                "format": "date-time",
                                "description": "date the member began performing this role"
                              },
                              "endDate": {
                                "type": "string",
                                "format": "date-time",
                                "description": "date the member stopped performing the role"
                              }
                            }
                          },
                          {
                            "type": "object",
                            "title": "RealEstateTeamMembership",
                            "description": "a membership relationship.  Subclass of OrganizationRole",
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "a member of a real estate team",
                                "enum": [
                                  "RealEstateTeamMembership"
                                ],
                                "example": "RealEstateTeamMembership"
                              },
                              "roleName": {
                                "type": "string",
                                "enum": [
                                  "TeamMember",
                                  "TeamAdmin",
                                  "TeamOwner"
                                ]
                              },
                              "memberOf": {
                                "type": "string",
                                "format": "uri",
                                "example": "https://{team-id}.example.com/profile/card#me"
                              },
                              "member": {
                                "type": "string",
                                "format": "uri",
                                "example": "https://{agent}.example.com/profile/card#me"
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-message-parsed": true
            }
          ]
        }
      }
    },
    "servicearea": {
      "subscribe": {
        "message": {
          "oneOf": [
            {
              "messageId": "servicearea#create",
              "name": "realestate/servicearea#create",
              "summary": "service area created",
              "headers": {
                "type": "object",
                "properties": {
                  "topic": {
                    "const": "realestate/servicearea#create",
                    "x-parser-schema-id": "<anonymous-schema-441>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-440>"
              },
              "payload": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "const": "CreateAction",
                        "x-parser-schema-id": "<anonymous-schema-444>"
                      },
                      "object": {
                        "title": "ServiceArea",
                        "type": "object",
                        "description": "an area when a provider provides a service. additional information available; see [Using Service Areas](/reference-using-service-area)",
                        "x-kind": "ServiceArea",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "\"ServiceArea\"",
                            "enum": [
                              "ServiceArea"
                            ],
                            "x-parser-schema-id": "<anonymous-schema-446>"
                          },
                          "kind": {
                            "type": "string",
                            "description": "ServiceArea sub-type.  City or PostalCode",
                            "enum": [
                              "City",
                              "PostalCode"
                            ],
                            "example": "PostalCode",
                            "x-parser-schema-id": "<anonymous-schema-447>"
                          },
                          "identifier": {
                            "type": "object",
                            "description": "vendor namespaced item identifiers, value should be stored and included in any future events that reference the same item.",
                            "properties": {
                              "bhhsESAId": {
                                "type": "string",
                                "description": "BHHS internal ESA ID",
                                "x-parser-schema-id": "<anonymous-schema-449>"
                              }
                            },
                            "x-parser-schema-id": "<anonymous-schema-448>"
                          },
                          "addressLocality": {
                            "type": "string",
                            "description": "City, Township.",
                            "example": "Woodland Hills",
                            "x-parser-schema-id": "<anonymous-schema-450>"
                          },
                          "postalCode": {
                            "type": "string",
                            "description": "Zip/Post Code",
                            "example": "91371",
                            "x-parser-schema-id": "<anonymous-schema-451>"
                          },
                          "addressRegion": {
                            "type": "string",
                            "description": "State or Province.",
                            "example": "CA",
                            "x-parser-schema-id": "<anonymous-schema-452>"
                          },
                          "addressCountry": {
                            "type": "string",
                            "description": "The country. For example, USA. You can also provide the two-letter ISO 3166-1 alpha-2 country code.",
                            "example": "US",
                            "x-parser-schema-id": "<anonymous-schema-453>"
                          },
                          "addressCounty": {
                            "type": "string",
                            "description": "the county (us real estate extension)",
                            "example": "Los Angeles",
                            "x-parser-schema-id": "<anonymous-schema-454>"
                          },
                          "provider": {
                            "type": "object",
                            "description": "a broker or company who provides service in the ServiceArea",
                            "x-range": [
                              "RealEstateOrganization"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "\"RealEstateOrganization\"",
                                "enum": [
                                  "RealEstateOrganization"
                                ],
                                "x-parser-schema-id": "<anonymous-schema-456>"
                              },
                              "id": {
                                "type": "string",
                                "description": "profile URI",
                                "example": "https://org.example.com/profile/card#me",
                                "x-parser-schema-id": "<anonymous-schema-457>"
                              }
                            },
                            "x-parser-schema-id": "<anonymous-schema-455>"
                          },
                          "additionalProperty": {
                            "type": "object",
                            "description": "BHHS specific ServiceArea properties",
                            "properties": {
                              "relocationOffice": {
                                "type": "object",
                                "description": "relocation office",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "description": "The item type (Linked-Data @type)",
                                    "enum": [
                                      "RealEstateOffice"
                                    ],
                                    "x-parser-schema-id": "<anonymous-schema-460>"
                                  },
                                  "id": {
                                    "type": "string",
                                    "x-subPropertyOf": "identifier",
                                    "example": "https://org.example.com/profile/card#me",
                                    "x-parser-schema-id": "<anonymous-schema-461>"
                                  }
                                },
                                "x-parser-schema-id": "<anonymous-schema-459>"
                              },
                              "weight": {
                                "type": "integer",
                                "description": "weight",
                                "x-parser-schema-id": "<anonymous-schema-462>"
                              },
                              "officeInPostalCode": {
                                "type": "boolean",
                                "description": "true if the service area provider is physically located in the ServiceArea.",
                                "x-parser-schema-id": "<anonymous-schema-463>"
                              },
                              "sortOrder": {
                                "type": "integer",
                                "description": "sort order",
                                "x-parser-schema-id": "<anonymous-schema-464>"
                              },
                              "sentToConsumerSite": {
                                "type": "boolean",
                                "description": "sent to consumer site",
                                "x-parser-schema-id": "<anonymous-schema-465>"
                              },
                              "sentToCompanyLocator": {
                                "type": "boolean",
                                "description": "sent to company locator",
                                "x-parser-schema-id": "<anonymous-schema-466>"
                              },
                              "sentToReferralSolutions": {
                                "type": "boolean",
                                "description": "sent to referral solutions",
                                "x-parser-schema-id": "<anonymous-schema-467>"
                              },
                              "luxuryPriceMinimum": {
                                "description": "minimum price for a property listing in the area to be considered a luxury property",
                                "type": "object",
                                "x-range": "PriceSpecification",
                                "example": {
                                  "type": "PriceSpecification",
                                  "price": 1000000,
                                  "priceCurrency": "USD"
                                },
                                "x-parser-schema-id": "<anonymous-schema-468>"
                              }
                            },
                            "x-parser-schema-id": "<anonymous-schema-458>"
                          }
                        },
                        "x-parser-schema-id": "<anonymous-schema-445>"
                      }
                    },
                    "x-parser-schema-id": "<anonymous-schema-443>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-442>"
              },
              "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-original-payload": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "const": "CreateAction"
                      },
                      "object": {
                        "title": "ServiceArea",
                        "type": "object",
                        "description": "an area when a provider provides a service. additional information available; see [Using Service Areas](/reference-using-service-area)",
                        "x-kind": "ServiceArea",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "\"ServiceArea\"",
                            "enum": [
                              "ServiceArea"
                            ]
                          },
                          "kind": {
                            "type": "string",
                            "description": "ServiceArea sub-type.  City or PostalCode",
                            "enum": [
                              "City",
                              "PostalCode"
                            ],
                            "example": "PostalCode"
                          },
                          "identifier": {
                            "type": "object",
                            "description": "vendor namespaced item identifiers, value should be stored and included in any future events that reference the same item.",
                            "properties": {
                              "bhhsESAId": {
                                "type": "string",
                                "description": "BHHS internal ESA ID"
                              }
                            }
                          },
                          "addressLocality": {
                            "type": "string",
                            "description": "City, Township.",
                            "example": "Woodland Hills"
                          },
                          "postalCode": {
                            "type": "string",
                            "description": "Zip/Post Code",
                            "example": "91371"
                          },
                          "addressRegion": {
                            "type": "string",
                            "description": "State or Province.",
                            "example": "CA"
                          },
                          "addressCountry": {
                            "type": "string",
                            "description": "The country. For example, USA. You can also provide the two-letter ISO 3166-1 alpha-2 country code.",
                            "example": "US"
                          },
                          "addressCounty": {
                            "type": "string",
                            "description": "the county (us real estate extension)",
                            "example": "Los Angeles"
                          },
                          "provider": {
                            "type": "object",
                            "description": "a broker or company who provides service in the ServiceArea",
                            "x-range": [
                              "RealEstateOrganization"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "\"RealEstateOrganization\"",
                                "enum": [
                                  "RealEstateOrganization"
                                ]
                              },
                              "id": {
                                "type": "string",
                                "description": "profile URI",
                                "example": "https://org.example.com/profile/card#me"
                              }
                            }
                          },
                          "additionalProperty": {
                            "type": "object",
                            "description": "BHHS specific ServiceArea properties",
                            "properties": {
                              "relocationOffice": {
                                "type": "object",
                                "description": "relocation office",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "description": "The item type (Linked-Data @type)",
                                    "enum": [
                                      "RealEstateOffice"
                                    ]
                                  },
                                  "id": {
                                    "type": "string",
                                    "x-subPropertyOf": "identifier",
                                    "example": "https://org.example.com/profile/card#me"
                                  }
                                }
                              },
                              "weight": {
                                "type": "integer",
                                "description": "weight"
                              },
                              "officeInPostalCode": {
                                "type": "boolean",
                                "description": "true if the service area provider is physically located in the ServiceArea."
                              },
                              "sortOrder": {
                                "type": "integer",
                                "description": "sort order"
                              },
                              "sentToConsumerSite": {
                                "type": "boolean",
                                "description": "sent to consumer site"
                              },
                              "sentToCompanyLocator": {
                                "type": "boolean",
                                "description": "sent to company locator"
                              },
                              "sentToReferralSolutions": {
                                "type": "boolean",
                                "description": "sent to referral solutions"
                              },
                              "luxuryPriceMinimum": {
                                "description": "minimum price for a property listing in the area to be considered a luxury property",
                                "type": "object",
                                "x-range": "PriceSpecification",
                                "example": {
                                  "type": "PriceSpecification",
                                  "price": 1000000,
                                  "priceCurrency": "USD"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-message-parsed": true
            },
            {
              "messageId": "servicearea#update",
              "name": "realestate/servicearea#update",
              "summary": "service area update",
              "headers": {
                "type": "object",
                "properties": {
                  "topic": {
                    "const": "realestate/servicearea#update",
                    "x-parser-schema-id": "<anonymous-schema-470>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-469>"
              },
              "payload": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "const": "UpdateAction",
                        "x-parser-schema-id": "<anonymous-schema-473>"
                      },
                      "object": {
                        "title": "ServiceArea",
                        "type": "object",
                        "description": "an area when a provider provides a service. additional information available; see [Using Service Areas](/reference-using-service-area)",
                        "x-kind": "ServiceArea",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "\"ServiceArea\"",
                            "enum": [
                              "ServiceArea"
                            ],
                            "x-parser-schema-id": "<anonymous-schema-446>"
                          },
                          "kind": {
                            "type": "string",
                            "description": "ServiceArea sub-type.  City or PostalCode",
                            "enum": [
                              "City",
                              "PostalCode"
                            ],
                            "example": "PostalCode",
                            "x-parser-schema-id": "<anonymous-schema-447>"
                          },
                          "identifier": {
                            "type": "object",
                            "description": "vendor namespaced item identifiers, value should be stored and included in any future events that reference the same item.",
                            "properties": {
                              "bhhsESAId": {
                                "type": "string",
                                "description": "BHHS internal ESA ID",
                                "x-parser-schema-id": "<anonymous-schema-449>"
                              }
                            },
                            "x-parser-schema-id": "<anonymous-schema-448>"
                          },
                          "addressLocality": {
                            "type": "string",
                            "description": "City, Township.",
                            "example": "Woodland Hills",
                            "x-parser-schema-id": "<anonymous-schema-450>"
                          },
                          "postalCode": {
                            "type": "string",
                            "description": "Zip/Post Code",
                            "example": "91371",
                            "x-parser-schema-id": "<anonymous-schema-451>"
                          },
                          "addressRegion": {
                            "type": "string",
                            "description": "State or Province.",
                            "example": "CA",
                            "x-parser-schema-id": "<anonymous-schema-452>"
                          },
                          "addressCountry": {
                            "type": "string",
                            "description": "The country. For example, USA. You can also provide the two-letter ISO 3166-1 alpha-2 country code.",
                            "example": "US",
                            "x-parser-schema-id": "<anonymous-schema-453>"
                          },
                          "addressCounty": {
                            "type": "string",
                            "description": "the county (us real estate extension)",
                            "example": "Los Angeles",
                            "x-parser-schema-id": "<anonymous-schema-454>"
                          },
                          "provider": {
                            "type": "object",
                            "description": "a broker or company who provides service in the ServiceArea",
                            "x-range": [
                              "RealEstateOrganization"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "\"RealEstateOrganization\"",
                                "enum": [
                                  "RealEstateOrganization"
                                ],
                                "x-parser-schema-id": "<anonymous-schema-456>"
                              },
                              "id": {
                                "type": "string",
                                "description": "profile URI",
                                "example": "https://org.example.com/profile/card#me",
                                "x-parser-schema-id": "<anonymous-schema-457>"
                              }
                            },
                            "x-parser-schema-id": "<anonymous-schema-455>"
                          },
                          "additionalProperty": {
                            "type": "object",
                            "description": "BHHS specific ServiceArea properties",
                            "properties": {
                              "relocationOffice": {
                                "type": "object",
                                "description": "relocation office",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "description": "The item type (Linked-Data @type)",
                                    "enum": [
                                      "RealEstateOffice"
                                    ],
                                    "x-parser-schema-id": "<anonymous-schema-460>"
                                  },
                                  "id": {
                                    "type": "string",
                                    "x-subPropertyOf": "identifier",
                                    "example": "https://org.example.com/profile/card#me",
                                    "x-parser-schema-id": "<anonymous-schema-461>"
                                  }
                                },
                                "x-parser-schema-id": "<anonymous-schema-459>"
                              },
                              "weight": {
                                "type": "integer",
                                "description": "weight",
                                "x-parser-schema-id": "<anonymous-schema-462>"
                              },
                              "officeInPostalCode": {
                                "type": "boolean",
                                "description": "true if the service area provider is physically located in the ServiceArea.",
                                "x-parser-schema-id": "<anonymous-schema-463>"
                              },
                              "sortOrder": {
                                "type": "integer",
                                "description": "sort order",
                                "x-parser-schema-id": "<anonymous-schema-464>"
                              },
                              "sentToConsumerSite": {
                                "type": "boolean",
                                "description": "sent to consumer site",
                                "x-parser-schema-id": "<anonymous-schema-465>"
                              },
                              "sentToCompanyLocator": {
                                "type": "boolean",
                                "description": "sent to company locator",
                                "x-parser-schema-id": "<anonymous-schema-466>"
                              },
                              "sentToReferralSolutions": {
                                "type": "boolean",
                                "description": "sent to referral solutions",
                                "x-parser-schema-id": "<anonymous-schema-467>"
                              },
                              "luxuryPriceMinimum": {
                                "description": "minimum price for a property listing in the area to be considered a luxury property",
                                "type": "object",
                                "x-range": "PriceSpecification",
                                "example": {
                                  "type": "PriceSpecification",
                                  "price": 1000000,
                                  "priceCurrency": "USD"
                                },
                                "x-parser-schema-id": "<anonymous-schema-468>"
                              }
                            },
                            "x-parser-schema-id": "<anonymous-schema-458>"
                          }
                        },
                        "x-parser-schema-id": "ServiceArea"
                      }
                    },
                    "x-parser-schema-id": "<anonymous-schema-472>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-471>"
              },
              "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-original-payload": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "const": "UpdateAction"
                      },
                      "object": {
                        "title": "ServiceArea",
                        "type": "object",
                        "description": "an area when a provider provides a service. additional information available; see [Using Service Areas](/reference-using-service-area)",
                        "x-kind": "ServiceArea",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "\"ServiceArea\"",
                            "enum": [
                              "ServiceArea"
                            ]
                          },
                          "kind": {
                            "type": "string",
                            "description": "ServiceArea sub-type.  City or PostalCode",
                            "enum": [
                              "City",
                              "PostalCode"
                            ],
                            "example": "PostalCode"
                          },
                          "identifier": {
                            "type": "object",
                            "description": "vendor namespaced item identifiers, value should be stored and included in any future events that reference the same item.",
                            "properties": {
                              "bhhsESAId": {
                                "type": "string",
                                "description": "BHHS internal ESA ID"
                              }
                            }
                          },
                          "addressLocality": {
                            "type": "string",
                            "description": "City, Township.",
                            "example": "Woodland Hills"
                          },
                          "postalCode": {
                            "type": "string",
                            "description": "Zip/Post Code",
                            "example": "91371"
                          },
                          "addressRegion": {
                            "type": "string",
                            "description": "State or Province.",
                            "example": "CA"
                          },
                          "addressCountry": {
                            "type": "string",
                            "description": "The country. For example, USA. You can also provide the two-letter ISO 3166-1 alpha-2 country code.",
                            "example": "US"
                          },
                          "addressCounty": {
                            "type": "string",
                            "description": "the county (us real estate extension)",
                            "example": "Los Angeles"
                          },
                          "provider": {
                            "type": "object",
                            "description": "a broker or company who provides service in the ServiceArea",
                            "x-range": [
                              "RealEstateOrganization"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "\"RealEstateOrganization\"",
                                "enum": [
                                  "RealEstateOrganization"
                                ]
                              },
                              "id": {
                                "type": "string",
                                "description": "profile URI",
                                "example": "https://org.example.com/profile/card#me"
                              }
                            }
                          },
                          "additionalProperty": {
                            "type": "object",
                            "description": "BHHS specific ServiceArea properties",
                            "properties": {
                              "relocationOffice": {
                                "type": "object",
                                "description": "relocation office",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "description": "The item type (Linked-Data @type)",
                                    "enum": [
                                      "RealEstateOffice"
                                    ]
                                  },
                                  "id": {
                                    "type": "string",
                                    "x-subPropertyOf": "identifier",
                                    "example": "https://org.example.com/profile/card#me"
                                  }
                                }
                              },
                              "weight": {
                                "type": "integer",
                                "description": "weight"
                              },
                              "officeInPostalCode": {
                                "type": "boolean",
                                "description": "true if the service area provider is physically located in the ServiceArea."
                              },
                              "sortOrder": {
                                "type": "integer",
                                "description": "sort order"
                              },
                              "sentToConsumerSite": {
                                "type": "boolean",
                                "description": "sent to consumer site"
                              },
                              "sentToCompanyLocator": {
                                "type": "boolean",
                                "description": "sent to company locator"
                              },
                              "sentToReferralSolutions": {
                                "type": "boolean",
                                "description": "sent to referral solutions"
                              },
                              "luxuryPriceMinimum": {
                                "description": "minimum price for a property listing in the area to be considered a luxury property",
                                "type": "object",
                                "x-range": "PriceSpecification",
                                "example": {
                                  "type": "PriceSpecification",
                                  "price": 1000000,
                                  "priceCurrency": "USD"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-message-parsed": true
            },
            {
              "messageId": "servicearea#delete",
              "name": "realestate/servicearea#delete",
              "summary": "ServiceArea (data.object) has been deleted.  Identifier is required.",
              "headers": {
                "type": "object",
                "properties": {
                  "topic": {
                    "const": "realestate/servicearea#delete",
                    "x-parser-schema-id": "<anonymous-schema-475>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-474>"
              },
              "payload": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "const": "DeleteAction",
                        "x-parser-schema-id": "<anonymous-schema-478>"
                      },
                      "object": {
                        "title": "ServiceArea",
                        "type": "object",
                        "description": "an area when a provider provides a service. additional information available; see [Using Service Areas](/reference-using-service-area)",
                        "x-kind": "ServiceArea",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "\"ServiceArea\"",
                            "enum": [
                              "ServiceArea"
                            ],
                            "x-parser-schema-id": "<anonymous-schema-446>"
                          },
                          "kind": {
                            "type": "string",
                            "description": "ServiceArea sub-type.  City or PostalCode",
                            "enum": [
                              "City",
                              "PostalCode"
                            ],
                            "example": "PostalCode",
                            "x-parser-schema-id": "<anonymous-schema-447>"
                          },
                          "identifier": {
                            "type": "object",
                            "description": "vendor namespaced item identifiers, value should be stored and included in any future events that reference the same item.",
                            "properties": {
                              "bhhsESAId": {
                                "type": "string",
                                "description": "BHHS internal ESA ID",
                                "x-parser-schema-id": "<anonymous-schema-449>"
                              }
                            },
                            "x-parser-schema-id": "<anonymous-schema-448>"
                          },
                          "addressLocality": {
                            "type": "string",
                            "description": "City, Township.",
                            "example": "Woodland Hills",
                            "x-parser-schema-id": "<anonymous-schema-450>"
                          },
                          "postalCode": {
                            "type": "string",
                            "description": "Zip/Post Code",
                            "example": "91371",
                            "x-parser-schema-id": "<anonymous-schema-451>"
                          },
                          "addressRegion": {
                            "type": "string",
                            "description": "State or Province.",
                            "example": "CA",
                            "x-parser-schema-id": "<anonymous-schema-452>"
                          },
                          "addressCountry": {
                            "type": "string",
                            "description": "The country. For example, USA. You can also provide the two-letter ISO 3166-1 alpha-2 country code.",
                            "example": "US",
                            "x-parser-schema-id": "<anonymous-schema-453>"
                          },
                          "addressCounty": {
                            "type": "string",
                            "description": "the county (us real estate extension)",
                            "example": "Los Angeles",
                            "x-parser-schema-id": "<anonymous-schema-454>"
                          },
                          "provider": {
                            "type": "object",
                            "description": "a broker or company who provides service in the ServiceArea",
                            "x-range": [
                              "RealEstateOrganization"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "\"RealEstateOrganization\"",
                                "enum": [
                                  "RealEstateOrganization"
                                ],
                                "x-parser-schema-id": "<anonymous-schema-456>"
                              },
                              "id": {
                                "type": "string",
                                "description": "profile URI",
                                "example": "https://org.example.com/profile/card#me",
                                "x-parser-schema-id": "<anonymous-schema-457>"
                              }
                            },
                            "x-parser-schema-id": "<anonymous-schema-455>"
                          },
                          "additionalProperty": {
                            "type": "object",
                            "description": "BHHS specific ServiceArea properties",
                            "properties": {
                              "relocationOffice": {
                                "type": "object",
                                "description": "relocation office",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "description": "The item type (Linked-Data @type)",
                                    "enum": [
                                      "RealEstateOffice"
                                    ],
                                    "x-parser-schema-id": "<anonymous-schema-460>"
                                  },
                                  "id": {
                                    "type": "string",
                                    "x-subPropertyOf": "identifier",
                                    "example": "https://org.example.com/profile/card#me",
                                    "x-parser-schema-id": "<anonymous-schema-461>"
                                  }
                                },
                                "x-parser-schema-id": "<anonymous-schema-459>"
                              },
                              "weight": {
                                "type": "integer",
                                "description": "weight",
                                "x-parser-schema-id": "<anonymous-schema-462>"
                              },
                              "officeInPostalCode": {
                                "type": "boolean",
                                "description": "true if the service area provider is physically located in the ServiceArea.",
                                "x-parser-schema-id": "<anonymous-schema-463>"
                              },
                              "sortOrder": {
                                "type": "integer",
                                "description": "sort order",
                                "x-parser-schema-id": "<anonymous-schema-464>"
                              },
                              "sentToConsumerSite": {
                                "type": "boolean",
                                "description": "sent to consumer site",
                                "x-parser-schema-id": "<anonymous-schema-465>"
                              },
                              "sentToCompanyLocator": {
                                "type": "boolean",
                                "description": "sent to company locator",
                                "x-parser-schema-id": "<anonymous-schema-466>"
                              },
                              "sentToReferralSolutions": {
                                "type": "boolean",
                                "description": "sent to referral solutions",
                                "x-parser-schema-id": "<anonymous-schema-467>"
                              },
                              "luxuryPriceMinimum": {
                                "description": "minimum price for a property listing in the area to be considered a luxury property",
                                "type": "object",
                                "x-range": "PriceSpecification",
                                "example": {
                                  "type": "PriceSpecification",
                                  "price": 1000000,
                                  "priceCurrency": "USD"
                                },
                                "x-parser-schema-id": "<anonymous-schema-468>"
                              }
                            },
                            "x-parser-schema-id": "<anonymous-schema-458>"
                          }
                        },
                        "x-parser-schema-id": "<anonymous-schema-479>"
                      },
                      "identifier": {
                        "title": "identifier",
                        "type": "object",
                        "description": "identifier assigned to a contact by the vendor who originally created the contact",
                        "examples": [
                          {
                            "salesforceid": "0031U00002XW1QWQA1"
                          },
                          {
                            "vendoraid": "123456"
                          },
                          {
                            "originating_system_id": "123456"
                          }
                        ],
                        "example": {
                          "bhhsESAId": "abcde"
                        },
                        "x-parser-schema-id": "<anonymous-schema-480>"
                      }
                    },
                    "x-parser-schema-id": "<anonymous-schema-477>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-476>"
              },
              "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-original-payload": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "const": "DeleteAction"
                      },
                      "object": {
                        "title": "ServiceArea",
                        "type": "object",
                        "description": "an area when a provider provides a service. additional information available; see [Using Service Areas](/reference-using-service-area)",
                        "x-kind": "ServiceArea",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "\"ServiceArea\"",
                            "enum": [
                              "ServiceArea"
                            ]
                          },
                          "kind": {
                            "type": "string",
                            "description": "ServiceArea sub-type.  City or PostalCode",
                            "enum": [
                              "City",
                              "PostalCode"
                            ],
                            "example": "PostalCode"
                          },
                          "identifier": {
                            "type": "object",
                            "description": "vendor namespaced item identifiers, value should be stored and included in any future events that reference the same item.",
                            "properties": {
                              "bhhsESAId": {
                                "type": "string",
                                "description": "BHHS internal ESA ID"
                              }
                            }
                          },
                          "addressLocality": {
                            "type": "string",
                            "description": "City, Township.",
                            "example": "Woodland Hills"
                          },
                          "postalCode": {
                            "type": "string",
                            "description": "Zip/Post Code",
                            "example": "91371"
                          },
                          "addressRegion": {
                            "type": "string",
                            "description": "State or Province.",
                            "example": "CA"
                          },
                          "addressCountry": {
                            "type": "string",
                            "description": "The country. For example, USA. You can also provide the two-letter ISO 3166-1 alpha-2 country code.",
                            "example": "US"
                          },
                          "addressCounty": {
                            "type": "string",
                            "description": "the county (us real estate extension)",
                            "example": "Los Angeles"
                          },
                          "provider": {
                            "type": "object",
                            "description": "a broker or company who provides service in the ServiceArea",
                            "x-range": [
                              "RealEstateOrganization"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "\"RealEstateOrganization\"",
                                "enum": [
                                  "RealEstateOrganization"
                                ]
                              },
                              "id": {
                                "type": "string",
                                "description": "profile URI",
                                "example": "https://org.example.com/profile/card#me"
                              }
                            }
                          },
                          "additionalProperty": {
                            "type": "object",
                            "description": "BHHS specific ServiceArea properties",
                            "properties": {
                              "relocationOffice": {
                                "type": "object",
                                "description": "relocation office",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "description": "The item type (Linked-Data @type)",
                                    "enum": [
                                      "RealEstateOffice"
                                    ]
                                  },
                                  "id": {
                                    "type": "string",
                                    "x-subPropertyOf": "identifier",
                                    "example": "https://org.example.com/profile/card#me"
                                  }
                                }
                              },
                              "weight": {
                                "type": "integer",
                                "description": "weight"
                              },
                              "officeInPostalCode": {
                                "type": "boolean",
                                "description": "true if the service area provider is physically located in the ServiceArea."
                              },
                              "sortOrder": {
                                "type": "integer",
                                "description": "sort order"
                              },
                              "sentToConsumerSite": {
                                "type": "boolean",
                                "description": "sent to consumer site"
                              },
                              "sentToCompanyLocator": {
                                "type": "boolean",
                                "description": "sent to company locator"
                              },
                              "sentToReferralSolutions": {
                                "type": "boolean",
                                "description": "sent to referral solutions"
                              },
                              "luxuryPriceMinimum": {
                                "description": "minimum price for a property listing in the area to be considered a luxury property",
                                "type": "object",
                                "x-range": "PriceSpecification",
                                "example": {
                                  "type": "PriceSpecification",
                                  "price": 1000000,
                                  "priceCurrency": "USD"
                                }
                              }
                            }
                          }
                        }
                      },
                      "identifier": {
                        "title": "identifier",
                        "type": "object",
                        "description": "identifier assigned to a contact by the vendor who originally created the contact",
                        "examples": [
                          {
                            "salesforceid": "0031U00002XW1QWQA1"
                          },
                          {
                            "vendoraid": "123456"
                          },
                          {
                            "originating_system_id": "123456"
                          }
                        ],
                        "example": {
                          "bhhsESAId": "abcde"
                        }
                      }
                    }
                  }
                }
              },
              "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-message-parsed": true
            }
          ]
        }
      }
    },
    "website": {
      "subscribe": {
        "message": {
          "oneOf": [
            {
              "messageId": "website#askquestion",
              "name": "realestate/website#askquestion",
              "summary": "website user asks a question",
              "headers": {
                "type": "object",
                "properties": {
                  "topic": {
                    "const": "realestate/website#askquestion",
                    "x-parser-schema-id": "<anonymous-schema-482>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-481>"
              },
              "payload": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "agent",
                      "object",
                      "recipient"
                    ],
                    "properties": {
                      "type": {
                        "const": "AskAction",
                        "x-parser-schema-id": "<anonymous-schema-485>"
                      },
                      "agent": {
                        "type": "object",
                        "description": "a website user/visitor",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "Person",
                              "Contact"
                            ],
                            "x-parser-schema-id": "<anonymous-schema-487>"
                          },
                          "name": {
                            "type": "string",
                            "x-parser-schema-id": "<anonymous-schema-488>"
                          },
                          "givenName": {
                            "type": "string",
                            "x-parser-schema-id": "<anonymous-schema-489>"
                          },
                          "familyName": {
                            "type": "string",
                            "x-parser-schema-id": "<anonymous-schema-490>"
                          },
                          "email": {
                            "type": "string",
                            "format": "email",
                            "x-parser-schema-id": "<anonymous-schema-491>"
                          },
                          "telephone": {
                            "type": "string",
                            "x-parser-schema-id": "<anonymous-schema-492>"
                          },
                          "identifier": {
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ],
                            "x-parser-schema-id": "<anonymous-schema-94>"
                          },
                          "sameAs": {
                            "title": "sameAs",
                            "type": "string",
                            "format": "uri",
                            "description": "vendor specific identifier for the user can be shared with other vendors to identify the user",
                            "examples": [
                              {
                                "amcecrmid": 1234567,
                                "salesForceId": "parsing"
                              },
                              {
                                "salesForceId": "ad4fa5f4as"
                              }
                            ],
                            "x-parser-schema-id": "<anonymous-schema-493>"
                          },
                          "contactPoint": {
                            "$id": "htttp://realestate.yodata.me/schema/ContactPoint.json",
                            "title": "ContactPoint",
                            "description": "A point of contact for the entity. By convention in the real estate domain, ContactPoints\nare preferred over telephone, email, and faxNumber so the ContactPoint.name property can be used to label values\nfor example, Work Telephone, Home, as named contactPoint values.\n",
                            "type": "object",
                            "required": [
                              "type",
                              "name"
                            ],
                            "minProperties": 3,
                            "properties": {
                              "type": {
                                "type": "string",
                                "const": "ContactPoint",
                                "x-parser-schema-id": "<anonymous-schema-381>"
                              },
                              "name": {
                                "type": "string",
                                "description": "a label for the contactPoint, i.e. 'Work', or 'Home'",
                                "examples": [
                                  "Work",
                                  "Home",
                                  "Vacation",
                                  "Bob's Cell",
                                  "Alice's Work"
                                ],
                                "x-parser-schema-id": "<anonymous-schema-382>"
                              },
                              "telephone": {
                                "type": "string",
                                "x-faker": "phone.phoneNumber",
                                "examples": [
                                  "555-555-5555",
                                  "555-555-5555 x123",
                                  "555-555-5555 ext. 123",
                                  "+1-555-555-5555"
                                ],
                                "x-parser-schema-id": "<anonymous-schema-383>"
                              },
                              "faxNumber": {
                                "type": "string",
                                "x-faker": "phone.phoneNumber",
                                "examples": [
                                  "555-555-5555",
                                  "555-555-5555 x123",
                                  "555-555-5555 ext. 123",
                                  "+1-555-555-5555"
                                ],
                                "x-parser-schema-id": "<anonymous-schema-384>"
                              },
                              "email": {
                                "description": "an email address for the item.",
                                "type": "string",
                                "format": "email",
                                "x-faker": "internet.email",
                                "examples": [
                                  "bob@example.com",
                                  "alice@example.com"
                                ],
                                "x-parser-schema-id": "<anonymous-schema-385>"
                              },
                              "url": {
                                "description": "primary URL for the item.",
                                "type": "string",
                                "format": "uri",
                                "example": "https://www.facebook.com/hallandoates",
                                "x-parser-schema-id": "<anonymous-schema-386>"
                              }
                            }
                          },
                          "additionalProperties": {
                            "type": "object",
                            "description": "additional properties for the website user",
                            "properties": {
                              "workingWithAgent": {
                                "type": "boolean",
                                "x-parser-schema-id": "<anonymous-schema-495>"
                              }
                            },
                            "x-parser-schema-id": "<anonymous-schema-494>"
                          }
                        },
                        "x-parser-schema-id": "<anonymous-schema-486>"
                      },
                      "object": {
                        "type": "object",
                        "description": "A specific question - e.g. from a user seeking answers online, or collected in a Frequently Asked Questions (FAQ) document.",
                        "title": "Question",
                        "properties": {
                          "type": {
                            "const": "Question",
                            "x-parser-schema-id": "<anonymous-schema-496>"
                          },
                          "text": {
                            "$id": "http://realestate.yodata.me/schema/text.yaml",
                            "title": "text",
                            "type": "string",
                            "examples": [
                              "Populus debet control notitia sua",
                              "Aspicio pinguem in his vestimentis?",
                              "Et id ipsum vitae.",
                              "Amici, Romani et cives, aures vestras mihi praebe",
                              "Heus, ego iustus occurrit tibi et hoc est insanus, sed hic numerus meus est, ut me vocas fortasse."
                            ]
                          }
                        },
                        "x-parser-schema-id": "Question"
                      },
                      "recipient": {
                        "description": "the agent being asked",
                        "x-range": [
                          "RealEstateAgent",
                          "RealEstateOffice",
                          "RealEstateOrganization"
                        ],
                        "title": "recipient",
                        "type": "object",
                        "examples": [
                          {
                            "type": "RealEstateAgent",
                            "name": "Randy Real Estate",
                            "id": "https://8675309.example.com/profile/card#me"
                          },
                          {
                            "type": "Contact",
                            "name": "Gretchen Olson",
                            "telephone": "1+888-867-5309",
                            "email": "Gretchen_Olson@example.org",
                            "contactPoint": [
                              {
                                "type": "ContactPoint",
                                "name": "Home",
                                "contactType": "customer service",
                                "telephone": "(846) 239-2439 x529",
                                "email": "Justice.Parker2@example.com"
                              },
                              {
                                "type": "ContactPoint",
                                "name": "Work",
                                "telephone": "1+888-867-5309"
                              }
                            ],
                            "identifier": {
                              "hsfconsumerid": 1234568
                            }
                          },
                          {
                            "type": "Person",
                            "identifier": {
                              "hsfconsumerid": 1234568
                            }
                          }
                        ],
                        "x-parser-schema-id": "<anonymous-schema-497>"
                      },
                      "about": {
                        "title": "PropertyListing",
                        "type": "object",
                        "x-range": "PropertyListing",
                        "description": "a real estate property listed for sale",
                        "properties": {
                          "type": {
                            "enum": [
                              "PropertyListing"
                            ],
                            "type": "string",
                            "x-parser-schema-id": "<anonymous-schema-263>"
                          },
                          "addressCountry": {
                            "type": "string",
                            "description": "two-letter ISO 3166-1 alpha-2 country code",
                            "example": "US",
                            "enum": [
                              "CA",
                              "DE",
                              "GR",
                              "IN",
                              "IT",
                              "MX",
                              "PE",
                              "PT",
                              "ES",
                              "AE",
                              "GB",
                              "US"
                            ],
                            "x-parser-schema-id": "<anonymous-schema-264>"
                          },
                          "addressLocality": {
                            "type": "string",
                            "description": "City, Township.",
                            "example": "Gotham City",
                            "maxLength": 50,
                            "x-parser-schema-id": "<anonymous-schema-265>"
                          },
                          "addressRegion": {
                            "type": "string",
                            "description": "State or Province.",
                            "example": "New Jersey",
                            "maxLength": 3,
                            "x-parser-schema-id": "<anonymous-schema-266>"
                          },
                          "buyerAgent": {
                            "description": "the buyer's RealEstateAgent",
                            "example": {
                              "email": "butch.byers@example.com",
                              "identifier": {
                                "agentKey": "xxxx"
                              },
                              "name": "Butch Byers",
                              "type": "RealEstateAgent"
                            },
                            "type": "object",
                            "x-range": "RealEstateAgent",
                            "x-parser-schema-id": "<anonymous-schema-267>"
                          },
                          "buyerOffice": {
                            "description": "the buyer's RealEstateOffice",
                            "example": {
                              "email": "gcr@example.com",
                              "identifier": {
                                "officeKey": "grc1"
                              },
                              "name": "Gotham City Real Estate",
                              "type": "RealEstateOffice"
                            },
                            "type": "object",
                            "x-range": "RealEstateOffice",
                            "x-parser-schema-id": "<anonymous-schema-268>"
                          },
                          "closeDate": {
                            "title": "closeDate",
                            "type": "string",
                            "format": "date-time",
                            "description": "With for-sale listings, the date the purchase agreement was fulfilled. With lease listings, the date the requirements were fulfilled, such as contract and/or deposit.",
                            "x-range": "DateTime",
                            "x-parser-schema-id": "<anonymous-schema-269>"
                          },
                          "image": {
                            "title": "image",
                            "description": "an ImageObject or URI reference to an image on the web.",
                            "type": "array",
                            "x-range": [
                              "ImageObject"
                            ],
                            "items": [
                              {
                                "type": "object",
                                "allOf": [
                                  {
                                    "title": "MediaObject",
                                    "description": "an image, video or document availble for download",
                                    "x-subclass": [
                                      "ImageObject",
                                      "DigitalDocument"
                                    ],
                                    "allOf": [
                                      {
                                        "$id": "http://realestate.yodata.me/schema/Thing",
                                        "type": "object",
                                        "title": "Thing",
                                        "summary": "The root type of all Things.",
                                        "required": [
                                          "type"
                                        ],
                                        "propertyNames": {
                                          "pattern": "^[a-z@$][a-zA-Z0-9-_]+$",
                                          "x-parser-schema-id": "<anonymous-schema-274>"
                                        },
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "pattern": "^[A-Z][a-zA-Z0-9]+$",
                                            "description": "The item type (Linked-Data @type)",
                                            "x-parser-schema-id": "<anonymous-schema-272>"
                                          },
                                          "@id": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "the liked data uri for the Thing",
                                            "x-parser-schema-id": "<anonymous-schema-273>"
                                          }
                                        },
                                        "x-parser-schema-id": "Thing"
                                      },
                                      {
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "MediaObject",
                                              "ImageObject",
                                              "DigitalDocument"
                                            ]
                                          },
                                          "id": {
                                            "description": "the URL to access the item.",
                                            "example": "http://user.example.com/public/logo/fileName.zip",
                                            "type": "string",
                                            "format": "uri"
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "the file name of the object.",
                                            "example": "fileName.zip"
                                          },
                                          "encodingFormat": {
                                            "type": "string",
                                            "description": "MIME type",
                                            "example": "application/zip"
                                          },
                                          "about": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "URI to the subject of the image or logo",
                                            "example": "http://user.example.com/profile/card#me"
                                          },
                                          "url": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "URL of the image content",
                                            "example": "http://user.example.com/public/profile/image.jpg"
                                          }
                                        },
                                        "x-parser-schema-id": "<anonymous-schema-275>"
                                      }
                                    ],
                                    "x-parser-schema-id": "MediaObject"
                                  },
                                  {
                                    "title": "ImageObject",
                                    "x-range": "ImageObject",
                                    "properties": {
                                      "type": {
                                        "enum": [
                                          "ImageObject"
                                        ],
                                        "example": "ImageObject"
                                      },
                                      "id": {
                                        "example": "http://user.example.com/public/logo/image.jpg"
                                      },
                                      "name": {
                                        "example": "image.jpg"
                                      },
                                      "encodingFormat": {
                                        "example": "image/jpeg"
                                      }
                                    },
                                    "x-parser-schema-id": "<anonymous-schema-276>"
                                  }
                                ],
                                "x-parser-schema-id": "<anonymous-schema-271>"
                              }
                            ],
                            "x-parser-schema-id": "<anonymous-schema-270>"
                          },
                          "internetAddressDisplayYN": {
                            "enum": [
                              "Y",
                              "N"
                            ],
                            "type": "string",
                            "x-parser-schema-id": "<anonymous-schema-277>"
                          },
                          "latitude": {
                            "type": "number",
                            "description": "The latitude of a location.",
                            "x-title": "latitude",
                            "example": 40.75,
                            "x-parser-schema-id": "<anonymous-schema-278>"
                          },
                          "listingAgent": {
                            "type": "object",
                            "description": "the agent/broker representing the seller in a real estate transaction",
                            "x-range": [
                              "RealEstateAgent",
                              "RealEstateOrganization"
                            ],
                            "example": {
                              "type": "RealEstateAgent",
                              "name": "Lori Listagent",
                              "telephone": "1-252-574-0160",
                              "email": "lorilistagent@example.com"
                            },
                            "x-parser-schema-id": "<anonymous-schema-279>"
                          },
                          "listingContractDate": {
                            "description": "The effective date of the agreement between the seller and the seller's broker.",
                            "format": "date-time",
                            "type": "string",
                            "x-parser-schema-id": "<anonymous-schema-280>"
                          },
                          "listingId": {
                            "description": "the local identifier for the listing",
                            "example": "GOTHAM-MLS+12345",
                            "type": "string",
                            "x-parser-schema-id": "<anonymous-schema-281>"
                          },
                          "listingOffice": {
                            "description": "the listing office",
                            "example": {
                              "name": "Gotham City Real Estate",
                              "type": "RealEstateOffice"
                            },
                            "type": "object",
                            "x-range": "RealEstateOrganization",
                            "x-parser-schema-id": "<anonymous-schema-282>"
                          },
                          "listingOriginatingSystem": {
                            "description": "The place where the item is originally input by the user.",
                            "example": {
                              "identifier": {
                                "bhhsmlsid": "xxxx",
                                "resoouid": "not-yet-available"
                              },
                              "name": "MLSListings",
                              "type": "MultipleListingService"
                            },
                            "type": "object",
                            "x-range": "MultipleListingService",
                            "x-subPropertyOf": "instrument",
                            "x-parser-schema-id": "<anonymous-schema-283>"
                          },
                          "listingPrice": {
                            "type": "object",
                            "x-range": "PriceSpecification",
                            "example": {
                              "type": "PriceSpecification",
                              "price": 75000,
                              "priceCurrency": "USD"
                            },
                            "x-parser-schema-id": "<anonymous-schema-284>"
                          },
                          "listingStatus": {
                            "enum": [
                              "Active",
                              "Pending",
                              "Sold",
                              "Canceled",
                              "Prelisted",
                              "OffMarket",
                              "Private"
                            ],
                            "type": "string",
                            "x-parser-schema-id": "<anonymous-schema-285>"
                          },
                          "livingArea": {
                            "description": "property indoor space",
                            "example": {
                              "type": "QuantitativeValue",
                              "unitCode": "SqFt",
                              "unitText": "Square Feet",
                              "value": 1500
                            },
                            "type": "object",
                            "x-range": "QuantitativeValue",
                            "x-parser-schema-id": "<anonymous-schema-286>"
                          },
                          "longitude": {
                            "type": "number",
                            "description": "The longitude of a location.",
                            "x-title": "longitude",
                            "example": 73.98,
                            "x-parser-schema-id": "<anonymous-schema-287>"
                          },
                          "lotSize": {
                            "description": "outdoor space minValue, maxValue",
                            "example": {
                              "type": "QuantitativeValue",
                              "unitCode": "AC",
                              "unitText": "Acres",
                              "value": 0.5
                            },
                            "type": "object",
                            "x-range": "QuantitativeValue",
                            "x-parser-schema-id": "<anonymous-schema-288>"
                          },
                          "numberOfBathrooms": {
                            "description": "the number of bathrooms",
                            "example": "2",
                            "type": "string",
                            "x-parser-schema-id": "<anonymous-schema-289>"
                          },
                          "numberOfBedrooms": {
                            "description": "the number of bedrooms",
                            "example": "3",
                            "type": "string",
                            "x-parser-schema-id": "<anonymous-schema-290>"
                          },
                          "numberOfRooms": {
                            "description": "the total number of rooms in the building",
                            "example": "7",
                            "type": "string",
                            "x-parser-schema-id": "<anonymous-schema-291>"
                          },
                          "originatingSystemKey": {
                            "description": "the listing identifier from the original MLS, aka MLSID.",
                            "example": 12345,
                            "type": "string",
                            "x-parser-schema-id": "<anonymous-schema-292>"
                          },
                          "originatingSystemName": {
                            "description": "the name of the MLS where the listing was originally input",
                            "example": "GOTHAM-MLS",
                            "type": "string",
                            "x-parser-schema-id": "<anonymous-schema-293>"
                          },
                          "postalCode": {
                            "type": "string",
                            "description": "Zip/Post Code",
                            "example": "10010",
                            "maxLength": 12,
                            "x-parser-schema-id": "<anonymous-schema-294>"
                          },
                          "propertySubType": {
                            "title": "propertySubType",
                            "type": "string",
                            "x-range": "PropertySubType",
                            "description": "RESO property sub-type (see range for allowed values)",
                            "enum": [
                              "ApartmentPropertyType",
                              "BoatSlipPropertyType",
                              "CabinPropertyType",
                              "CondominiumPropertyType",
                              "DeededParkingPropertyType",
                              "DuplexPropertyType",
                              "FarmPropertyType",
                              "ManufacturedHomePropertyType",
                              "ManufacturedOnLandPropertyType",
                              "MobileHomePropertyType",
                              "OwnYourOwnPropertyType",
                              "QuadruplexPropertyType",
                              "RanchPropertyType",
                              "SingleFamilyPropertyType",
                              "StockCooperativePropertyType",
                              "TimesharePropertyType",
                              "TownhousePropertyType",
                              "TriplexPropertyType",
                              "AgriculturePropertyType",
                              "BusinessPropertyType",
                              "HotelMotelPropertyType",
                              "IndustrialPropertyType",
                              "MixedUsePropertyType",
                              "MultiFamilyPropertyType",
                              "OfficePropertyType",
                              "RetailPropertyType",
                              "UnimprovedLandPropertyType",
                              "WarehousePropertyType"
                            ],
                            "x-parser-schema-id": "<anonymous-schema-295>"
                          },
                          "propertyType": {
                            "type": "string",
                            "description": "RESO property type (see range for allowed values)",
                            "x-range": "PropertyType",
                            "minLength": 4,
                            "maxLength": 4,
                            "enum": [
                              "RESI",
                              "RLSE",
                              "RINC",
                              "LAND",
                              "MOBI",
                              "FARM",
                              "COMS",
                              "COML",
                              "BUSO"
                            ],
                            "x-parser-schema-id": "<anonymous-schema-296>"
                          },
                          "purchaseContractDate": {
                            "description": "With for-sale listings, the date an offer was accepted and the listing was no longer on market. With lease listings this may represent a meeting of the minds to lease, but some contractual requirements are yet to be fulfilled, such as contract signing or receipt of the deposit.",
                            "format": "date-time",
                            "type": "string",
                            "x-parser-schema-id": "<anonymous-schema-297>"
                          },
                          "stories": {
                            "type": "number",
                            "description": "he number of floors in the property",
                            "example": 2,
                            "x-parser-schema-id": "<anonymous-schema-298>"
                          },
                          "streetAddress": {
                            "type": "string",
                            "description": "the street address",
                            "example": "1007 Mountain Gate Rd",
                            "maxLength": 75,
                            "x-parser-schema-id": "<anonymous-schema-299>"
                          },
                          "universalPropertyId": {
                            "type": "string",
                            "title": "universalPropertyId",
                            "description": "The Universal Property Identifier is a unique identifier for all real property in the US and Canada.  It is based on country and local identification methods and is limited to real property.  For cases such as shares of real property, units, and other more granular cases, please utilize the UniversalPropertySubId.",
                            "example": "US-04015-N-R-11022331-N",
                            "x-parser-schema-id": "<anonymous-schema-300>"
                          },
                          "url": {
                            "title": "url",
                            "type": "string",
                            "format": "uri",
                            "description": "URL of the item.",
                            "example": "https://www.example.com/homedetails/1007-Mountain-Gate-Rd-Gotham-City-Gotham/10007",
                            "x-parser-schema-id": "<anonymous-schema-301>"
                          },
                          "yearBuilt": {
                            "type": "number",
                            "description": "the year the structure was created",
                            "example": 1988,
                            "x-parser-schema-id": "<anonymous-schema-302>"
                          }
                        },
                        "example": {
                          "$ref": "../../example-propertylisting.yaml"
                        },
                        "x-parser-schema-id": "<anonymous-schema-498>"
                      }
                    },
                    "x-parser-schema-id": "<anonymous-schema-484>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-483>"
              },
              "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-original-payload": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "agent",
                      "object",
                      "recipient"
                    ],
                    "properties": {
                      "type": {
                        "const": "AskAction"
                      },
                      "agent": {
                        "type": "object",
                        "description": "a website user/visitor",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "Person",
                              "Contact"
                            ]
                          },
                          "name": {
                            "type": "string"
                          },
                          "givenName": {
                            "type": "string"
                          },
                          "familyName": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string",
                            "format": "email"
                          },
                          "telephone": {
                            "type": "string"
                          },
                          "identifier": {
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ]
                          },
                          "sameAs": {
                            "title": "sameAs",
                            "type": "string",
                            "format": "uri",
                            "description": "vendor specific identifier for the user can be shared with other vendors to identify the user",
                            "examples": [
                              {
                                "amcecrmid": 1234567,
                                "salesForceId": "parsing"
                              },
                              {
                                "salesForceId": "ad4fa5f4as"
                              }
                            ]
                          },
                          "contactPoint": {
                            "$id": "htttp://realestate.yodata.me/schema/ContactPoint.json",
                            "title": "ContactPoint",
                            "description": "A point of contact for the entity. By convention in the real estate domain, ContactPoints\nare preferred over telephone, email, and faxNumber so the ContactPoint.name property can be used to label values\nfor example, Work Telephone, Home, as named contactPoint values.\n",
                            "type": "object",
                            "required": [
                              "type",
                              "name"
                            ],
                            "minProperties": 3,
                            "properties": {
                              "type": {
                                "type": "string",
                                "const": "ContactPoint"
                              },
                              "name": {
                                "type": "string",
                                "description": "a label for the contactPoint, i.e. 'Work', or 'Home'",
                                "examples": [
                                  "Work",
                                  "Home",
                                  "Vacation",
                                  "Bob's Cell",
                                  "Alice's Work"
                                ]
                              },
                              "telephone": {
                                "type": "string",
                                "x-faker": "phone.phoneNumber",
                                "examples": [
                                  "555-555-5555",
                                  "555-555-5555 x123",
                                  "555-555-5555 ext. 123",
                                  "+1-555-555-5555"
                                ]
                              },
                              "faxNumber": {
                                "type": "string",
                                "x-faker": "phone.phoneNumber",
                                "examples": [
                                  "555-555-5555",
                                  "555-555-5555 x123",
                                  "555-555-5555 ext. 123",
                                  "+1-555-555-5555"
                                ]
                              },
                              "email": {
                                "description": "an email address for the item.",
                                "type": "string",
                                "format": "email",
                                "x-faker": "internet.email",
                                "examples": [
                                  "bob@example.com",
                                  "alice@example.com"
                                ]
                              },
                              "url": {
                                "description": "primary URL for the item.",
                                "type": "string",
                                "format": "uri",
                                "example": "https://www.facebook.com/hallandoates"
                              }
                            }
                          },
                          "additionalProperties": {
                            "type": "object",
                            "description": "additional properties for the website user",
                            "properties": {
                              "workingWithAgent": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      },
                      "object": {
                        "type": "object",
                        "description": "A specific question - e.g. from a user seeking answers online, or collected in a Frequently Asked Questions (FAQ) document.",
                        "title": "Question",
                        "properties": {
                          "type": {
                            "const": "Question"
                          },
                          "text": {
                            "$id": "http://realestate.yodata.me/schema/text.yaml",
                            "title": "text",
                            "type": "string",
                            "examples": [
                              "Populus debet control notitia sua",
                              "Aspicio pinguem in his vestimentis?",
                              "Et id ipsum vitae.",
                              "Amici, Romani et cives, aures vestras mihi praebe",
                              "Heus, ego iustus occurrit tibi et hoc est insanus, sed hic numerus meus est, ut me vocas fortasse."
                            ]
                          }
                        }
                      },
                      "recipient": {
                        "description": "the agent being asked",
                        "x-range": [
                          "RealEstateAgent",
                          "RealEstateOffice",
                          "RealEstateOrganization"
                        ],
                        "title": "recipient",
                        "type": "object",
                        "examples": [
                          {
                            "type": "RealEstateAgent",
                            "name": "Randy Real Estate",
                            "id": "https://8675309.example.com/profile/card#me"
                          },
                          {
                            "type": "Contact",
                            "name": "Gretchen Olson",
                            "telephone": "1+888-867-5309",
                            "email": "Gretchen_Olson@example.org",
                            "contactPoint": [
                              {
                                "type": "ContactPoint",
                                "name": "Home",
                                "contactType": "customer service",
                                "telephone": "(846) 239-2439 x529",
                                "email": "Justice.Parker2@example.com"
                              },
                              {
                                "type": "ContactPoint",
                                "name": "Work",
                                "telephone": "1+888-867-5309"
                              }
                            ],
                            "identifier": {
                              "hsfconsumerid": 1234568
                            }
                          },
                          {
                            "type": "Person",
                            "identifier": {
                              "hsfconsumerid": 1234568
                            }
                          }
                        ]
                      },
                      "about": {
                        "title": "PropertyListing",
                        "type": "object",
                        "x-range": "PropertyListing",
                        "description": "a real estate property listed for sale",
                        "properties": {
                          "type": {
                            "enum": [
                              "PropertyListing"
                            ],
                            "type": "string"
                          },
                          "addressCountry": {
                            "type": "string",
                            "description": "two-letter ISO 3166-1 alpha-2 country code",
                            "example": "US",
                            "enum": [
                              "CA",
                              "DE",
                              "GR",
                              "IN",
                              "IT",
                              "MX",
                              "PE",
                              "PT",
                              "ES",
                              "AE",
                              "GB",
                              "US"
                            ]
                          },
                          "addressLocality": {
                            "type": "string",
                            "description": "City, Township.",
                            "example": "Gotham City",
                            "maxLength": 50
                          },
                          "addressRegion": {
                            "type": "string",
                            "description": "State or Province.",
                            "example": "New Jersey",
                            "maxLength": 3
                          },
                          "buyerAgent": {
                            "description": "the buyer's RealEstateAgent",
                            "example": {
                              "email": "butch.byers@example.com",
                              "identifier": {
                                "agentKey": "xxxx"
                              },
                              "name": "Butch Byers",
                              "type": "RealEstateAgent"
                            },
                            "type": "object",
                            "x-range": "RealEstateAgent"
                          },
                          "buyerOffice": {
                            "description": "the buyer's RealEstateOffice",
                            "example": {
                              "email": "gcr@example.com",
                              "identifier": {
                                "officeKey": "grc1"
                              },
                              "name": "Gotham City Real Estate",
                              "type": "RealEstateOffice"
                            },
                            "type": "object",
                            "x-range": "RealEstateOffice"
                          },
                          "closeDate": {
                            "title": "closeDate",
                            "type": "string",
                            "format": "date-time",
                            "description": "With for-sale listings, the date the purchase agreement was fulfilled. With lease listings, the date the requirements were fulfilled, such as contract and/or deposit.",
                            "x-range": "DateTime"
                          },
                          "image": {
                            "title": "image",
                            "description": "an ImageObject or URI reference to an image on the web.",
                            "type": "array",
                            "x-range": [
                              "ImageObject"
                            ],
                            "items": [
                              {
                                "type": "object",
                                "allOf": [
                                  {
                                    "title": "MediaObject",
                                    "description": "an image, video or document availble for download",
                                    "x-subclass": [
                                      "ImageObject",
                                      "DigitalDocument"
                                    ],
                                    "allOf": [
                                      {
                                        "$id": "http://realestate.yodata.me/schema/Thing",
                                        "type": "object",
                                        "title": "Thing",
                                        "summary": "The root type of all Things.",
                                        "required": [
                                          "type"
                                        ],
                                        "propertyNames": {
                                          "pattern": "^[a-z@$][a-zA-Z0-9-_]+$"
                                        },
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "pattern": "^[A-Z][a-zA-Z0-9]+$",
                                            "description": "The item type (Linked-Data @type)"
                                          },
                                          "@id": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "the liked data uri for the Thing"
                                          }
                                        }
                                      },
                                      {
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "enum": [
                                              "MediaObject",
                                              "ImageObject",
                                              "DigitalDocument"
                                            ]
                                          },
                                          "id": {
                                            "description": "the URL to access the item.",
                                            "example": "http://user.example.com/public/logo/fileName.zip",
                                            "type": "string",
                                            "format": "uri"
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "the file name of the object.",
                                            "example": "fileName.zip"
                                          },
                                          "encodingFormat": {
                                            "type": "string",
                                            "description": "MIME type",
                                            "example": "application/zip"
                                          },
                                          "about": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "URI to the subject of the image or logo",
                                            "example": "http://user.example.com/profile/card#me"
                                          },
                                          "url": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "URL of the image content",
                                            "example": "http://user.example.com/public/profile/image.jpg"
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "title": "ImageObject",
                                    "x-range": "ImageObject",
                                    "properties": {
                                      "type": {
                                        "enum": [
                                          "ImageObject"
                                        ],
                                        "example": "ImageObject"
                                      },
                                      "id": {
                                        "example": "http://user.example.com/public/logo/image.jpg"
                                      },
                                      "name": {
                                        "example": "image.jpg"
                                      },
                                      "encodingFormat": {
                                        "example": "image/jpeg"
                                      }
                                    }
                                  }
                                ]
                              }
                            ]
                          },
                          "internetAddressDisplayYN": {
                            "enum": [
                              "Y",
                              "N"
                            ],
                            "type": "string"
                          },
                          "latitude": {
                            "type": "number",
                            "description": "The latitude of a location.",
                            "x-title": "latitude",
                            "example": 40.75
                          },
                          "listingAgent": {
                            "type": "object",
                            "description": "the agent/broker representing the seller in a real estate transaction",
                            "x-range": [
                              "RealEstateAgent",
                              "RealEstateOrganization"
                            ],
                            "example": {
                              "type": "RealEstateAgent",
                              "name": "Lori Listagent",
                              "telephone": "1-252-574-0160",
                              "email": "lorilistagent@example.com"
                            }
                          },
                          "listingContractDate": {
                            "description": "The effective date of the agreement between the seller and the seller's broker.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "listingId": {
                            "description": "the local identifier for the listing",
                            "example": "GOTHAM-MLS+12345",
                            "type": "string"
                          },
                          "listingOffice": {
                            "description": "the listing office",
                            "example": {
                              "name": "Gotham City Real Estate",
                              "type": "RealEstateOffice"
                            },
                            "type": "object",
                            "x-range": "RealEstateOrganization"
                          },
                          "listingOriginatingSystem": {
                            "description": "The place where the item is originally input by the user.",
                            "example": {
                              "identifier": {
                                "bhhsmlsid": "xxxx",
                                "resoouid": "not-yet-available"
                              },
                              "name": "MLSListings",
                              "type": "MultipleListingService"
                            },
                            "type": "object",
                            "x-range": "MultipleListingService",
                            "x-subPropertyOf": "instrument"
                          },
                          "listingPrice": {
                            "type": "object",
                            "x-range": "PriceSpecification",
                            "example": {
                              "type": "PriceSpecification",
                              "price": 75000,
                              "priceCurrency": "USD"
                            }
                          },
                          "listingStatus": {
                            "enum": [
                              "Active",
                              "Pending",
                              "Sold",
                              "Canceled",
                              "Prelisted",
                              "OffMarket",
                              "Private"
                            ],
                            "type": "string"
                          },
                          "livingArea": {
                            "description": "property indoor space",
                            "example": {
                              "type": "QuantitativeValue",
                              "unitCode": "SqFt",
                              "unitText": "Square Feet",
                              "value": 1500
                            },
                            "type": "object",
                            "x-range": "QuantitativeValue"
                          },
                          "longitude": {
                            "type": "number",
                            "description": "The longitude of a location.",
                            "x-title": "longitude",
                            "example": 73.98
                          },
                          "lotSize": {
                            "description": "outdoor space minValue, maxValue",
                            "example": {
                              "type": "QuantitativeValue",
                              "unitCode": "AC",
                              "unitText": "Acres",
                              "value": 0.5
                            },
                            "type": "object",
                            "x-range": "QuantitativeValue"
                          },
                          "numberOfBathrooms": {
                            "description": "the number of bathrooms",
                            "example": "2",
                            "type": "string"
                          },
                          "numberOfBedrooms": {
                            "description": "the number of bedrooms",
                            "example": "3",
                            "type": "string"
                          },
                          "numberOfRooms": {
                            "description": "the total number of rooms in the building",
                            "example": "7",
                            "type": "string"
                          },
                          "originatingSystemKey": {
                            "description": "the listing identifier from the original MLS, aka MLSID.",
                            "example": 12345,
                            "type": "string"
                          },
                          "originatingSystemName": {
                            "description": "the name of the MLS where the listing was originally input",
                            "example": "GOTHAM-MLS",
                            "type": "string"
                          },
                          "postalCode": {
                            "type": "string",
                            "description": "Zip/Post Code",
                            "example": "10010",
                            "maxLength": 12
                          },
                          "propertySubType": {
                            "title": "propertySubType",
                            "type": "string",
                            "x-range": "PropertySubType",
                            "description": "RESO property sub-type (see range for allowed values)",
                            "enum": [
                              "ApartmentPropertyType",
                              "BoatSlipPropertyType",
                              "CabinPropertyType",
                              "CondominiumPropertyType",
                              "DeededParkingPropertyType",
                              "DuplexPropertyType",
                              "FarmPropertyType",
                              "ManufacturedHomePropertyType",
                              "ManufacturedOnLandPropertyType",
                              "MobileHomePropertyType",
                              "OwnYourOwnPropertyType",
                              "QuadruplexPropertyType",
                              "RanchPropertyType",
                              "SingleFamilyPropertyType",
                              "StockCooperativePropertyType",
                              "TimesharePropertyType",
                              "TownhousePropertyType",
                              "TriplexPropertyType",
                              "AgriculturePropertyType",
                              "BusinessPropertyType",
                              "HotelMotelPropertyType",
                              "IndustrialPropertyType",
                              "MixedUsePropertyType",
                              "MultiFamilyPropertyType",
                              "OfficePropertyType",
                              "RetailPropertyType",
                              "UnimprovedLandPropertyType",
                              "WarehousePropertyType"
                            ]
                          },
                          "propertyType": {
                            "type": "string",
                            "description": "RESO property type (see range for allowed values)",
                            "x-range": "PropertyType",
                            "minLength": 4,
                            "maxLength": 4,
                            "enum": [
                              "RESI",
                              "RLSE",
                              "RINC",
                              "LAND",
                              "MOBI",
                              "FARM",
                              "COMS",
                              "COML",
                              "BUSO"
                            ]
                          },
                          "purchaseContractDate": {
                            "description": "With for-sale listings, the date an offer was accepted and the listing was no longer on market. With lease listings this may represent a meeting of the minds to lease, but some contractual requirements are yet to be fulfilled, such as contract signing or receipt of the deposit.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "stories": {
                            "type": "number",
                            "description": "he number of floors in the property",
                            "example": 2
                          },
                          "streetAddress": {
                            "type": "string",
                            "description": "the street address",
                            "example": "1007 Mountain Gate Rd",
                            "maxLength": 75
                          },
                          "universalPropertyId": {
                            "type": "string",
                            "title": "universalPropertyId",
                            "description": "The Universal Property Identifier is a unique identifier for all real property in the US and Canada.  It is based on country and local identification methods and is limited to real property.  For cases such as shares of real property, units, and other more granular cases, please utilize the UniversalPropertySubId.",
                            "example": "US-04015-N-R-11022331-N"
                          },
                          "url": {
                            "title": "url",
                            "type": "string",
                            "format": "uri",
                            "description": "URL of the item.",
                            "example": "https://www.example.com/homedetails/1007-Mountain-Gate-Rd-Gotham-City-Gotham/10007"
                          },
                          "yearBuilt": {
                            "type": "number",
                            "description": "the year the structure was created",
                            "example": 1988
                          }
                        },
                        "example": {
                          "$ref": "../../example-propertylisting.yaml"
                        }
                      }
                    }
                  }
                }
              },
              "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-message-parsed": true
            },
            {
              "messageId": "website#listingoffer",
              "name": "realestate/website#listingoffer",
              "summary": "website user makes a listing offer",
              "headers": {
                "type": "object",
                "properties": {
                  "topic": {
                    "const": "realestate/website#listingoffer",
                    "x-parser-schema-id": "<anonymous-schema-500>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-499>"
              },
              "payload": {
                "type": "object",
                "properties": {
                  "data": {
                    "$id": "http://realestate.yodata.me/schemas/ListingOffer.yaml",
                    "type": "object",
                    "title": "Listing Offer",
                    "description": "an offer is made to buy a PropertyListing",
                    "name": "ListingOffer",
                    "required": [
                      "type",
                      "agent",
                      "object",
                      "recipient",
                      "offerPrice"
                    ],
                    "properties": {
                      "type": {
                        "const": "ListingOffer",
                        "x-parser-schema-id": "<anonymous-schema-502>"
                      },
                      "agent": {
                        "type": "object",
                        "description": "a website user/visitor",
                        "x-range": [
                          "Contact",
                          "Person"
                        ],
                        "example": {
                          "type": "Contact",
                          "name": "Bruce Wayne",
                          "givenName": "Bruce",
                          "familyName": "Wayne",
                          "email": "batman@example.com",
                          "telephone": "1+888-867-5309",
                          "identifier": {
                            "hsfconsumerid": "xxxxxxxxxxxxx"
                          },
                          "sameAs": {
                            "amcecrmid": "1234567",
                            "salesForceId": "xxxxxxxxxxxxx"
                          }
                        },
                        "x-parser-schema-id": "<anonymous-schema-503>"
                      },
                      "offerPrice": {
                        "description": "the offer price or range",
                        "type": "object",
                        "title": "PriceSpecification",
                        "x-range": "PriceSpecification",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "PriceSpecification",
                            "enum": [
                              "PriceSpecification"
                            ],
                            "x-parser-schema-id": "<anonymous-schema-505>"
                          },
                          "minPrice": {
                            "type": "number",
                            "description": "the low price offered if price is a range.",
                            "example": 75000,
                            "x-parser-schema-id": "<anonymous-schema-506>"
                          },
                          "maxPrice": {
                            "type": "number",
                            "description": "the high price offered if price is a range.",
                            "example": 100000,
                            "x-parser-schema-id": "<anonymous-schema-507>"
                          },
                          "price": {
                            "type": "number",
                            "description": "the offer price.",
                            "example": 75000,
                            "x-parser-schema-id": "<anonymous-schema-508>"
                          },
                          "priceCurrency": {
                            "type": "string",
                            "description": "use ISO4217",
                            "example": "USD",
                            "x-parser-schema-id": "<anonymous-schema-509>"
                          }
                        },
                        "x-parser-schema-id": "<anonymous-schema-504>"
                      },
                      "propertyListing": {
                        "type": "object",
                        "description": "the listing on which the offer is made.",
                        "example": {
                          "type": "PropertyListing",
                          "originatingSystemName": "GOTHAM-MLS",
                          "originatingSystemKey": "12345",
                          "url": "https://{company-website-url}/{path-to-listing}",
                          "streetAddress": "1007 Mountain Gate Rd",
                          "addressRegion": "New Jersey",
                          "addressLocality": "Gotham City",
                          "postalCode": "10010",
                          "addressCountry": "USA",
                          "listingPrice": {
                            "type": "PriceSpecification",
                            "price": 7500000,
                            "priceCurrency": "USD"
                          }
                        },
                        "x-parser-schema-id": "<anonymous-schema-510>"
                      },
                      "recipient": {
                        "description": "listing agent or offer recipient",
                        "oneOf": [
                          {
                            "$id": "http://realestate.yodata.me/schema/RealEstateAgent",
                            "title": "RealEstateAgent",
                            "description": "A real estate agent who represents buyers and sellers",
                            "type": "object",
                            "additionalProperties": true,
                            "properties": {
                              "type": {
                                "type": "string",
                                "const": "RealEstateAgent",
                                "x-parser-schema-id": "<anonymous-schema-369>"
                              },
                              "additionalName": {
                                "title": "additionalName",
                                "description": "any other name(s) associated with the entity, i.e. nickname, middle name, maiden name, etc. For multiple names, use a comma without space as a separator.",
                                "type": "string",
                                "examples": [
                                  "Johnny,John",
                                  "Prince,The Artist Formerly Known as Prince,The Artist",
                                  "Babs,Barbara",
                                  "Katheryn Elizabeth Hudson,Katy Perry",
                                  "Destiny Hope Cyrus,Miley Cyrus"
                                ],
                                "x-parser-schema-id": "<anonymous-schema-116>"
                              },
                              "address": {
                                "type": "object",
                                "x-range": "PostalAddress",
                                "description": "A physical address.",
                                "example": {
                                  "type": "PostalAddress",
                                  "name": "Home",
                                  "addressCountry": "USA",
                                  "addressCounty": "Gotham County",
                                  "addressLocality": "Gotham City",
                                  "addressRegion": "New Jersey",
                                  "addressSubdivision": "Gotham Heights",
                                  "postalCode": "10010",
                                  "postOfficeBoxNumber": "Box 1234",
                                  "streetAddress": "1007 Mountain Gate Rd"
                                },
                                "x-parser-schema-id": "<anonymous-schema-370>"
                              },
                              "certification": {
                                "type": "object",
                                "title": "Certification",
                                "description": "A certification issued by an organization to an individual or business.",
                                "x-range": "Certification",
                                "properties": {
                                  "type": {
                                    "description": "Certification",
                                    "type": "string",
                                    "enum": [
                                      "Certification"
                                    ],
                                    "x-parser-schema-id": "<anonymous-schema-372>"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "the name of the Certification",
                                    "example": "e-Agent Certified",
                                    "x-parser-schema-id": "<anonymous-schema-373>"
                                  },
                                  "issuedBy": {
                                    "type": "object",
                                    "x-range": "RealEstateOrganization",
                                    "description": "the issuing authority",
                                    "properties": {
                                      "type": {
                                        "enum": [
                                          "RealEstateOrganization"
                                        ],
                                        "type": "string",
                                        "description": "The item type (Linked-Data @type)",
                                        "x-parser-schema-id": "<anonymous-schema-375>"
                                      },
                                      "id": {
                                        "example": "https://example.com/profile/card#me",
                                        "type": "string",
                                        "format": "uri",
                                        "description": "Linked-Data URI (@id)",
                                        "x-parser-schema-id": "<anonymous-schema-376>"
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "name of the issuing organization",
                                        "example": "Gotham City Real Estate",
                                        "x-parser-schema-id": "<anonymous-schema-377>"
                                      }
                                    },
                                    "x-parser-schema-id": "<anonymous-schema-374>"
                                  },
                                  "issuedTo": {
                                    "x-range": "RealEstateAgent",
                                    "type": "object",
                                    "description": "the subject",
                                    "properties": {
                                      "type": {
                                        "enum": [
                                          "RealEstateAgent"
                                        ],
                                        "type": "string",
                                        "description": "The item type (Linked-Data @type)",
                                        "x-parser-schema-id": "<anonymous-schema-379>"
                                      },
                                      "id": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "Linked-Data URI (@id)",
                                        "x-parser-schema-id": "<anonymous-schema-380>"
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "the name of the item",
                                        "x-parser-schema-id": "<anonymous-schema-92>"
                                      }
                                    },
                                    "x-parser-schema-id": "<anonymous-schema-378>"
                                  }
                                },
                                "x-parser-schema-id": "<anonymous-schema-371>"
                              },
                              "contactPoint": {
                                "$id": "htttp://realestate.yodata.me/schema/ContactPoint.json",
                                "title": "ContactPoint",
                                "description": "A point of contact for the entity. By convention in the real estate domain, ContactPoints\nare preferred over telephone, email, and faxNumber so the ContactPoint.name property can be used to label values\nfor example, Work Telephone, Home, as named contactPoint values.\n",
                                "type": "object",
                                "required": [
                                  "type",
                                  "name"
                                ],
                                "minProperties": 3,
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "const": "ContactPoint",
                                    "x-parser-schema-id": "<anonymous-schema-381>"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "a label for the contactPoint, i.e. 'Work', or 'Home'",
                                    "examples": [
                                      "Work",
                                      "Home",
                                      "Vacation",
                                      "Bob's Cell",
                                      "Alice's Work"
                                    ],
                                    "x-parser-schema-id": "<anonymous-schema-382>"
                                  },
                                  "telephone": {
                                    "type": "string",
                                    "x-faker": "phone.phoneNumber",
                                    "examples": [
                                      "555-555-5555",
                                      "555-555-5555 x123",
                                      "555-555-5555 ext. 123",
                                      "+1-555-555-5555"
                                    ],
                                    "x-parser-schema-id": "<anonymous-schema-383>"
                                  },
                                  "faxNumber": {
                                    "type": "string",
                                    "x-faker": "phone.phoneNumber",
                                    "examples": [
                                      "555-555-5555",
                                      "555-555-5555 x123",
                                      "555-555-5555 ext. 123",
                                      "+1-555-555-5555"
                                    ],
                                    "x-parser-schema-id": "<anonymous-schema-384>"
                                  },
                                  "email": {
                                    "description": "an email address for the item.",
                                    "type": "string",
                                    "format": "email",
                                    "x-faker": "internet.email",
                                    "examples": [
                                      "bob@example.com",
                                      "alice@example.com"
                                    ],
                                    "x-parser-schema-id": "<anonymous-schema-385>"
                                  },
                                  "url": {
                                    "description": "primary URL for the item.",
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://www.facebook.com/hallandoates",
                                    "x-parser-schema-id": "<anonymous-schema-386>"
                                  }
                                }
                              },
                              "email": {
                                "type": "string",
                                "format": "email",
                                "x-faker": "internet.email",
                                "x-parser-schema-id": "<anonymous-schema-93>"
                              },
                              "familyName": {
                                "$id": "htttp://realestate.yodata.me/schema/familyName.yaml",
                                "type": "string",
                                "title": "Family Name",
                                "description": "Last Name of a person",
                                "x-faker": "name.lastName",
                                "maxLength": 50,
                                "externalDocs": {
                                  "description": "Family Name",
                                  "url": "https://schema.org/familyName"
                                },
                                "examples": [
                                  "Smith",
                                  "Jones",
                                  "Parker",
                                  "Monk",
                                  "Brown",
                                  "Miller",
                                  "Davis",
                                  "Wilson",
                                  "Fitzgerald",
                                  "Johnson",
                                  "Williams"
                                ]
                              },
                              "givenName": {
                                "type": "string",
                                "description": "First Name of a person",
                                "x-faker": "name.firstName",
                                "examples": [
                                  "John",
                                  "Jane",
                                  "Mary",
                                  "Joseph",
                                  "William",
                                  "David",
                                  "Richard",
                                  "Charles",
                                  "Thomas",
                                  "Christopher",
                                  "Daniel",
                                  "Matthew",
                                  "Anthony",
                                  "Donald",
                                  "Mark",
                                  "Paul",
                                  "Steven",
                                  "Andrew",
                                  "Kenneth",
                                  "George",
                                  "Joshua",
                                  "Kevin",
                                  "Brian",
                                  "Edward",
                                  "Ronald",
                                  "Timothy",
                                  "Jason",
                                  "Jeffrey",
                                  "Ryan",
                                  "Jacob"
                                ],
                                "x-parser-schema-id": "<anonymous-schema-118>"
                              },
                              "id": {
                                "type": "string",
                                "format": "uri",
                                "description": "Linked-Data URI (@id)",
                                "x-parser-schema-id": "<anonymous-schema-380>"
                              },
                              "identifier": {
                                "title": "identifier",
                                "type": "object",
                                "description": "identifier assigned to a contact by the vendor who originally created the contact",
                                "examples": [
                                  {
                                    "salesforceid": "0031U00002XW1QWQA1"
                                  },
                                  {
                                    "vendoraid": "123456"
                                  },
                                  {
                                    "originating_system_id": "123456"
                                  }
                                ],
                                "x-parser-schema-id": "<anonymous-schema-94>"
                              },
                              "image": {
                                "title": "image",
                                "description": "an ImageObject or URI reference to an image on the web.",
                                "type": "array",
                                "x-range": [
                                  "ImageObject"
                                ],
                                "items": [
                                  {
                                    "type": "object",
                                    "allOf": [
                                      {
                                        "title": "MediaObject",
                                        "description": "an image, video or document availble for download",
                                        "x-subclass": [
                                          "ImageObject",
                                          "DigitalDocument"
                                        ],
                                        "allOf": [
                                          {
                                            "$id": "http://realestate.yodata.me/schema/Thing",
                                            "type": "object",
                                            "title": "Thing",
                                            "summary": "The root type of all Things.",
                                            "required": [
                                              "type"
                                            ],
                                            "propertyNames": {
                                              "pattern": "^[a-z@$][a-zA-Z0-9-_]+$",
                                              "x-parser-schema-id": "<anonymous-schema-274>"
                                            },
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "pattern": "^[A-Z][a-zA-Z0-9]+$",
                                                "description": "The item type (Linked-Data @type)",
                                                "x-parser-schema-id": "<anonymous-schema-272>"
                                              },
                                              "@id": {
                                                "type": "string",
                                                "format": "uri",
                                                "description": "the liked data uri for the Thing",
                                                "x-parser-schema-id": "<anonymous-schema-273>"
                                              }
                                            },
                                            "x-parser-schema-id": "Thing"
                                          },
                                          {
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "MediaObject",
                                                  "ImageObject",
                                                  "DigitalDocument"
                                                ]
                                              },
                                              "id": {
                                                "description": "the URL to access the item.",
                                                "example": "http://user.example.com/public/logo/fileName.zip",
                                                "type": "string",
                                                "format": "uri"
                                              },
                                              "name": {
                                                "type": "string",
                                                "description": "the file name of the object.",
                                                "example": "fileName.zip"
                                              },
                                              "encodingFormat": {
                                                "type": "string",
                                                "description": "MIME type",
                                                "example": "application/zip"
                                              },
                                              "about": {
                                                "type": "string",
                                                "format": "uri",
                                                "description": "URI to the subject of the image or logo",
                                                "example": "http://user.example.com/profile/card#me"
                                              },
                                              "url": {
                                                "type": "string",
                                                "format": "uri",
                                                "description": "URL of the image content",
                                                "example": "http://user.example.com/public/profile/image.jpg"
                                              }
                                            },
                                            "x-parser-schema-id": "<anonymous-schema-275>"
                                          }
                                        ],
                                        "x-parser-schema-id": "MediaObject"
                                      },
                                      {
                                        "title": "ImageObject",
                                        "x-range": "ImageObject",
                                        "properties": {
                                          "type": {
                                            "enum": [
                                              "ImageObject"
                                            ],
                                            "example": "ImageObject"
                                          },
                                          "id": {
                                            "example": "http://user.example.com/public/logo/image.jpg"
                                          },
                                          "name": {
                                            "example": "image.jpg"
                                          },
                                          "encodingFormat": {
                                            "example": "image/jpeg"
                                          }
                                        },
                                        "x-parser-schema-id": "<anonymous-schema-276>"
                                      }
                                    ],
                                    "x-parser-schema-id": "<anonymous-schema-271>"
                                  }
                                ],
                                "x-parser-schema-id": "<anonymous-schema-270>"
                              },
                              "jobTitle": {
                                "type": "array",
                                "items": {
                                  "title": "jobTitle",
                                  "description": "The job title of the person (for example, Financial Manager).",
                                  "type": "string",
                                  "x-faker": "name.jobTitle",
                                  "examples": [
                                    "CEO",
                                    "Sales Manager",
                                    "Escrow Officer",
                                    "Transaction Coordinator",
                                    "Director of Marketing",
                                    "Senior Loan Officer",
                                    "Loan Officer",
                                    "Sanitation Engineer",
                                    "Owner",
                                    "Cofounder",
                                    "Founder",
                                    "President",
                                    "Vice President of Sales",
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null
                                  ],
                                  "x-parser-schema-id": "<anonymous-schema-388>"
                                },
                                "x-parser-schema-id": "<anonymous-schema-387>"
                              },
                              "memberOf": {
                                "title": "memberOf",
                                "description": "an Organization (or ProgramMembership) to which this Person or Organization belongs.",
                                "type": "array",
                                "x-range": [
                                  "OrganizationRole",
                                  "URI"
                                ],
                                "items": {
                                  "anyOf": [
                                    {
                                      "title": "OrganizationRole",
                                      "type": "object",
                                      "description": "describes a role played by a member and a group or organization.",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "description": "a role played by the member in the memberOf group",
                                          "enum": [
                                            "OrganizationRole"
                                          ],
                                          "x-parser-schema-id": "<anonymous-schema-391>"
                                        },
                                        "roleName": {
                                          "type": "string",
                                          "description": "the role name",
                                          "example": "Owner",
                                          "x-parser-schema-id": "<anonymous-schema-392>"
                                        },
                                        "memberOf": {
                                          "description": "the org or group where the role is performed",
                                          "type": "object",
                                          "example": {
                                            "type": "RealEstateOrganization",
                                            "id": "http://orgid.example.com/profile/card#me"
                                          },
                                          "x-parser-schema-id": "<anonymous-schema-393>"
                                        },
                                        "member": {
                                          "description": "member object or id",
                                          "type": "string",
                                          "format": "uri",
                                          "example": "https://memberid.example.com/profile/card#me",
                                          "x-parser-schema-id": "<anonymous-schema-394>"
                                        },
                                        "startDate": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "date the member began performing this role",
                                          "x-parser-schema-id": "<anonymous-schema-395>"
                                        },
                                        "endDate": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "date the member stopped performing the role",
                                          "x-parser-schema-id": "<anonymous-schema-396>"
                                        }
                                      },
                                      "x-parser-schema-id": "OrganizationRole"
                                    },
                                    {
                                      "type": "string",
                                      "format": "uri",
                                      "x-parser-schema-id": "<anonymous-schema-397>"
                                    }
                                  ],
                                  "x-parser-schema-id": "<anonymous-schema-390>"
                                },
                                "x-parser-schema-id": "<anonymous-schema-389>"
                              },
                              "name": {
                                "type": "string",
                                "description": "the name of the item",
                                "x-parser-schema-id": "<anonymous-schema-92>"
                              },
                              "parentOrganization": {
                                "$id": "http://realestate.yodata.me/schema/parentOrganization",
                                "title": "parentOrganization",
                                "description": "organizations of which this org is a part.",
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "format": "uri",
                                  "x-parser-schema-id": "<anonymous-schema-398>"
                                }
                              },
                              "permit": {
                                "title": "Permit",
                                "description": "A permit issued by an organization to an individual or business.",
                                "type": "object",
                                "x-hasSubclass": [
                                  "RealEstateLicense"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "description": "Permit type.",
                                    "enum": [
                                      "Permit"
                                    ],
                                    "x-parser-schema-id": "<anonymous-schema-400>"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Common or display value of the Permit.",
                                    "example": "DRE Number",
                                    "x-parser-schema-id": "<anonymous-schema-401>"
                                  },
                                  "issuedBy": {
                                    "type": "object",
                                    "x-range": "Organization",
                                    "description": "The issuing authority",
                                    "example": {
                                      "type": "State",
                                      "name": "California"
                                    },
                                    "x-parser-schema-id": "<anonymous-schema-402>"
                                  },
                                  "issuedThrough": {
                                    "type": "object",
                                    "description": "the service through which the permit was granted",
                                    "example": {
                                      "type": "Service",
                                      "name": "Department of Real Estate"
                                    },
                                    "x-parser-schema-id": "<anonymous-schema-403>"
                                  },
                                  "validIn": {
                                    "type": "object",
                                    "x-range": "Place",
                                    "x-parser-schema-id": "<anonymous-schema-404>"
                                  },
                                  "validFrom": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "start date",
                                    "x-parser-schema-id": "<anonymous-schema-405>"
                                  },
                                  "validUntil": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "end date",
                                    "x-parser-schema-id": "<anonymous-schema-406>"
                                  }
                                },
                                "x-parser-schema-id": "<anonymous-schema-399>"
                              },
                              "subOrganization": {
                                "$id": "http://realestate.yodata.me/schema/subOrganization",
                                "title": "subOrganization",
                                "description": "child organizations of the organization",
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "format": "uri",
                                  "x-parser-schema-id": "<anonymous-schema-407>"
                                }
                              },
                              "url": {
                                "title": "url",
                                "type": "string",
                                "format": "uri",
                                "description": "URL of the item.",
                                "x-parser-schema-id": "<anonymous-schema-408>"
                              }
                            },
                            "x-parser-schema-id": "RealEstateAgent"
                          },
                          {
                            "title": "Person",
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "x-parser-schema-id": "<anonymous-schema-95>"
                              },
                              "affiliation": {
                                "description": "An organization that this person is affiliated with",
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://example.com/profile/card#me",
                                  "x-parser-schema-id": "<anonymous-schema-97>"
                                },
                                "x-parser-schema-id": "<anonymous-schema-96>"
                              },
                              "address": {
                                "type": "array",
                                "items": {
                                  "$id": "http://realestate.yodata.me/schemas/PostalAddress.yaml",
                                  "title": "PostalAddress",
                                  "type": "object",
                                  "description": "A physical address.",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "PostalAddress",
                                      "x-parser-schema-id": "<anonymous-schema-99>"
                                    },
                                    "streetAddress": {
                                      "type": "string",
                                      "description": "the street number and name.",
                                      "x-faker": "address.streetAddress",
                                      "examples": [
                                        "5046 Ottis Point",
                                        "166 Marion Burg",
                                        "93044 Haley Stream"
                                      ],
                                      "x-parser-schema-id": "<anonymous-schema-100>"
                                    },
                                    "postOfficeBoxNumber": {
                                      "type": "string",
                                      "description": "The post office box number for PO box addresses.",
                                      "x-faker": "address.secondaryAddress",
                                      "examples": [
                                        "Box 1234",
                                        "Apt. 161",
                                        "Apt. 623"
                                      ],
                                      "x-parser-schema-id": "<anonymous-schema-101>"
                                    },
                                    "addressRegion": {
                                      "type": "string",
                                      "description": "State or Province.",
                                      "x-faker": "address.state",
                                      "examples": [
                                        "New Jersey",
                                        "California",
                                        "MI",
                                        null
                                      ],
                                      "x-parser-schema-id": "<anonymous-schema-102>"
                                    },
                                    "addressLocality": {
                                      "type": "string",
                                      "description": "City, Township.",
                                      "x-faker": "address.city",
                                      "examples": [
                                        "Gotham City",
                                        "Kulasmouth",
                                        "Heidistad",
                                        "Altamonte Springs",
                                        "West Ahmed",
                                        "Blaiseview"
                                      ],
                                      "x-parser-schema-id": "<anonymous-schema-103>"
                                    },
                                    "postalCode": {
                                      "type": "string",
                                      "description": "Zip/Post Code",
                                      "x-faker": "address.zipCode",
                                      "examples": [
                                        "10010",
                                        "38859",
                                        "40387",
                                        "50239-7698",
                                        null
                                      ],
                                      "x-parser-schema-id": "<anonymous-schema-104>"
                                    },
                                    "addressCountry": {
                                      "type": "string",
                                      "description": "The country. For example, USA. You can also provide the two-letter ISO 3166-1 alpha-2 country code.",
                                      "examples": [
                                        "USA",
                                        "TH",
                                        "NZ",
                                        "EG",
                                        "SJ",
                                        "VN"
                                      ],
                                      "x-faker": "address.countryCode",
                                      "x-parser-schema-id": "<anonymous-schema-105>"
                                    },
                                    "addressCounty": {
                                      "type": "string",
                                      "description": "the county (us real estate extension)",
                                      "faker": "address.county",
                                      "examples": [
                                        "Gotham County",
                                        "Buckinghamshire",
                                        "Borders",
                                        null
                                      ],
                                      "x-parser-schema-id": "<anonymous-schema-106>"
                                    },
                                    "addressSubdivision": {
                                      "type": "string",
                                      "description": "the subdivision or neighborhood (us real estate extension)",
                                      "x-faker": "address.streetName",
                                      "examples": [
                                        "Gotham Heights",
                                        "South Kensington",
                                        "SOMA (South of Market)",
                                        "Nob Hill"
                                      ],
                                      "x-parser-schema-id": "<anonymous-schema-107>"
                                    }
                                  },
                                  "x-parser-schema-id": "PostalAddress"
                                },
                                "x-parser-schema-id": "<anonymous-schema-98>"
                              },
                              "birthDate": {
                                "description": "date of birth.",
                                "type": "string",
                                "format": "date",
                                "x-parser-schema-id": "<anonymous-schema-108>"
                              },
                              "contactPoint": {
                                "description": "contact points for the person",
                                "type": "array",
                                "items": {
                                  "$id": "htttp://realestate.yodata.me/schema/ContactPoint.json",
                                  "title": "ContactPoint",
                                  "description": "A point of contact for the entity. By convention in the real estate domain, ContactPoints\nare preferred over telephone, email, and faxNumber so the ContactPoint.name property can be used to label values\nfor example, Work Telephone, Home, as named contactPoint values.\n",
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "name"
                                  ],
                                  "minProperties": 3,
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "ContactPoint",
                                      "x-parser-schema-id": "<anonymous-schema-110>"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "a label for the contactPoint, i.e. 'Work', or 'Home'",
                                      "examples": [
                                        "Work",
                                        "Home",
                                        "Vacation",
                                        "Bob's Cell",
                                        "Alice's Work"
                                      ],
                                      "x-parser-schema-id": "<anonymous-schema-111>"
                                    },
                                    "telephone": {
                                      "type": "string",
                                      "x-faker": "phone.phoneNumber",
                                      "examples": [
                                        "555-555-5555",
                                        "555-555-5555 x123",
                                        "555-555-5555 ext. 123",
                                        "+1-555-555-5555"
                                      ],
                                      "x-parser-schema-id": "<anonymous-schema-112>"
                                    },
                                    "faxNumber": {
                                      "type": "string",
                                      "x-faker": "phone.phoneNumber",
                                      "examples": [
                                        "555-555-5555",
                                        "555-555-5555 x123",
                                        "555-555-5555 ext. 123",
                                        "+1-555-555-5555"
                                      ],
                                      "x-parser-schema-id": "<anonymous-schema-113>"
                                    },
                                    "email": {
                                      "description": "an email address for the item.",
                                      "type": "string",
                                      "format": "email",
                                      "x-faker": "internet.email",
                                      "examples": [
                                        "bob@example.com",
                                        "alice@example.com"
                                      ],
                                      "x-parser-schema-id": "<anonymous-schema-114>"
                                    },
                                    "url": {
                                      "description": "primary URL for the item.",
                                      "type": "string",
                                      "format": "uri",
                                      "example": "https://www.facebook.com/hallandoates",
                                      "x-parser-schema-id": "<anonymous-schema-115>"
                                    }
                                  },
                                  "x-parser-schema-id": "ContactPoint"
                                },
                                "x-parser-schema-id": "<anonymous-schema-109>"
                              },
                              "email": {
                                "type": "string",
                                "format": "email",
                                "x-faker": "internet.email",
                                "x-parser-schema-id": "<anonymous-schema-93>"
                              },
                              "additionalName": {
                                "title": "additionalName",
                                "description": "any other name(s) associated with the entity, i.e. nickname, middle name, maiden name, etc. For multiple names, use a comma without space as a separator.",
                                "type": "string",
                                "examples": [
                                  "Johnny,John",
                                  "Prince,The Artist Formerly Known as Prince,The Artist",
                                  "Babs,Barbara",
                                  "Katheryn Elizabeth Hudson,Katy Perry",
                                  "Destiny Hope Cyrus,Miley Cyrus"
                                ],
                                "x-parser-schema-id": "<anonymous-schema-116>"
                              },
                              "familyName": {
                                "$id": "htttp://realestate.yodata.me/schema/familyName.yaml",
                                "type": "string",
                                "title": "Family Name",
                                "description": "Last Name of a person",
                                "x-faker": "name.lastName",
                                "maxLength": 50,
                                "externalDocs": {
                                  "description": "Family Name",
                                  "url": "https://schema.org/familyName"
                                },
                                "examples": [
                                  "Smith",
                                  "Jones",
                                  "Parker",
                                  "Monk",
                                  "Brown",
                                  "Miller",
                                  "Davis",
                                  "Wilson",
                                  "Fitzgerald",
                                  "Johnson",
                                  "Williams"
                                ]
                              },
                              "faxNumber": {
                                "type": "string",
                                "description": "Do people still use fax machines?",
                                "x-faker": "phone.phoneNumber",
                                "x-parser-schema-id": "<anonymous-schema-117>"
                              },
                              "givenName": {
                                "type": "string",
                                "description": "First Name of a person",
                                "x-faker": "name.firstName",
                                "examples": [
                                  "John",
                                  "Jane",
                                  "Mary",
                                  "Joseph",
                                  "William",
                                  "David",
                                  "Richard",
                                  "Charles",
                                  "Thomas",
                                  "Christopher",
                                  "Daniel",
                                  "Matthew",
                                  "Anthony",
                                  "Donald",
                                  "Mark",
                                  "Paul",
                                  "Steven",
                                  "Andrew",
                                  "Kenneth",
                                  "George",
                                  "Joshua",
                                  "Kevin",
                                  "Brian",
                                  "Edward",
                                  "Ronald",
                                  "Timothy",
                                  "Jason",
                                  "Jeffrey",
                                  "Ryan",
                                  "Jacob"
                                ],
                                "x-parser-schema-id": "<anonymous-schema-118>"
                              },
                              "honorificPrefix": {
                                "title": "honorificPrefix",
                                "description": "An honorific prefix preceding a Person's name such as Dr/Mrs/Mr.",
                                "type": "string",
                                "example": "Dr",
                                "x-parser-schema-id": "<anonymous-schema-119>"
                              },
                              "honorificSuffix": {
                                "title": "honorificSuffix",
                                "description": "An honorific title following a person's name like M.D.",
                                "type": "string",
                                "example": "Esq",
                                "x-parser-schema-id": "<anonymous-schema-120>"
                              },
                              "jobTitle": {
                                "title": "jobTitle",
                                "description": "job tiles associated with the item",
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "x-parser-schema-id": "<anonymous-schema-122>"
                                },
                                "example": [
                                  "Chief Data Officer",
                                  "Sanitation Engineer"
                                ],
                                "x-parser-schema-id": "<anonymous-schema-121>"
                              },
                              "knowsLanguage": {
                                "description": "languages spoken by the person",
                                "type": "array",
                                "items": {
                                  "$id": "htttp://realestate.yodata.me/schema/Language.yaml",
                                  "description": "a written or spoken Language",
                                  "title": "Language",
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "name",
                                    "additionalName"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "Language",
                                      "x-parser-schema-id": "<anonymous-schema-124>"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "the display name of the language",
                                      "x-parser-schema-id": "<anonymous-schema-125>"
                                    },
                                    "additionalName": {
                                      "type": "string",
                                      "description": "BCP 47 language code",
                                      "x-parser-schema-id": "<anonymous-schema-126>"
                                    }
                                  },
                                  "examples": [
                                    {
                                      "type": "Language",
                                      "name": "English",
                                      "additionalName": "en-us"
                                    },
                                    {
                                      "type": "Language",
                                      "name": "Spanish",
                                      "additionalName": "es"
                                    },
                                    {
                                      "type": "Language",
                                      "name": "French",
                                      "additionalName": "fr"
                                    },
                                    {
                                      "type": "Language",
                                      "name": "German",
                                      "additionalName": "de"
                                    },
                                    {
                                      "type": "Language",
                                      "name": "Italian",
                                      "additionalName": "it"
                                    },
                                    {
                                      "type": "Language",
                                      "name": "Japanese",
                                      "additionalName": "ja"
                                    },
                                    {
                                      "type": "Language",
                                      "name": "Korean",
                                      "additionalName": "ko"
                                    },
                                    {
                                      "type": "Language",
                                      "name": "Portuguese",
                                      "additionalName": "pt"
                                    },
                                    {
                                      "type": "Language",
                                      "name": "Russian",
                                      "additionalName": "ru"
                                    },
                                    {
                                      "type": "Language",
                                      "name": "Chinese",
                                      "additionalName": "zh"
                                    },
                                    {
                                      "type": "Language",
                                      "name": "Arabic",
                                      "additionalName": "ar"
                                    },
                                    {
                                      "type": "Language",
                                      "name": "Hindi",
                                      "additionalName": "hi"
                                    },
                                    {
                                      "type": "Language",
                                      "name": "Bengali",
                                      "additionalName": "bn"
                                    },
                                    {
                                      "type": "Language",
                                      "name": "Portuguese",
                                      "additionalName": "pt"
                                    }
                                  ],
                                  "x-parser-schema-id": "Language"
                                },
                                "x-parser-schema-id": "<anonymous-schema-123>"
                              },
                              "name": {
                                "description": "Full name of the person.",
                                "type": "string",
                                "x-faker": "name.findName",
                                "x-parser-schema-id": "<anonymous-schema-127>"
                              },
                              "telephone": {
                                "type": "string",
                                "description": "Primary phone number.",
                                "example": "+15558675309",
                                "x-parser-schema-id": "<anonymous-schema-128>"
                              },
                              "worksFor": {
                                "type": "string",
                                "description": "Organizations the person works for.",
                                "x-faker": "company.companyName",
                                "x-parser-schema-id": "<anonymous-schema-129>"
                              }
                            },
                            "x-parser-schema-id": "Person"
                          }
                        ],
                        "example": {
                          "type": "RealEstateAgent",
                          "name": "Randy RealEstateAgent",
                          "id": "https://{agentid}.example.com/profile/card#me"
                        },
                        "x-parser-schema-id": "<anonymous-schema-511>"
                      }
                    },
                    "x-parser-schema-id": "ListingOffer"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-501>"
              },
              "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-original-payload": {
                "type": "object",
                "properties": {
                  "data": {
                    "$id": "http://realestate.yodata.me/schemas/ListingOffer.yaml",
                    "type": "object",
                    "title": "Listing Offer",
                    "description": "an offer is made to buy a PropertyListing",
                    "name": "ListingOffer",
                    "required": [
                      "type",
                      "agent",
                      "object",
                      "recipient",
                      "offerPrice"
                    ],
                    "properties": {
                      "type": {
                        "const": "ListingOffer"
                      },
                      "agent": {
                        "type": "object",
                        "description": "a website user/visitor",
                        "x-range": [
                          "Contact",
                          "Person"
                        ],
                        "example": {
                          "type": "Contact",
                          "name": "Bruce Wayne",
                          "givenName": "Bruce",
                          "familyName": "Wayne",
                          "email": "batman@example.com",
                          "telephone": "1+888-867-5309",
                          "identifier": {
                            "hsfconsumerid": "xxxxxxxxxxxxx"
                          },
                          "sameAs": {
                            "amcecrmid": "1234567",
                            "salesForceId": "xxxxxxxxxxxxx"
                          }
                        }
                      },
                      "offerPrice": {
                        "description": "the offer price or range",
                        "type": "object",
                        "title": "PriceSpecification",
                        "x-range": "PriceSpecification",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "PriceSpecification",
                            "enum": [
                              "PriceSpecification"
                            ]
                          },
                          "minPrice": {
                            "type": "number",
                            "description": "the low price offered if price is a range.",
                            "example": 75000
                          },
                          "maxPrice": {
                            "type": "number",
                            "description": "the high price offered if price is a range.",
                            "example": 100000
                          },
                          "price": {
                            "type": "number",
                            "description": "the offer price.",
                            "example": 75000
                          },
                          "priceCurrency": {
                            "type": "string",
                            "description": "use ISO4217",
                            "example": "USD"
                          }
                        }
                      },
                      "propertyListing": {
                        "type": "object",
                        "description": "the listing on which the offer is made.",
                        "example": {
                          "type": "PropertyListing",
                          "originatingSystemName": "GOTHAM-MLS",
                          "originatingSystemKey": "12345",
                          "url": "https://{company-website-url}/{path-to-listing}",
                          "streetAddress": "1007 Mountain Gate Rd",
                          "addressRegion": "New Jersey",
                          "addressLocality": "Gotham City",
                          "postalCode": "10010",
                          "addressCountry": "USA",
                          "listingPrice": {
                            "type": "PriceSpecification",
                            "price": 7500000,
                            "priceCurrency": "USD"
                          }
                        }
                      },
                      "recipient": {
                        "description": "listing agent or offer recipient",
                        "oneOf": [
                          {
                            "$id": "http://realestate.yodata.me/schema/RealEstateAgent",
                            "title": "RealEstateAgent",
                            "description": "A real estate agent who represents buyers and sellers",
                            "type": "object",
                            "additionalProperties": true,
                            "properties": {
                              "type": {
                                "type": "string",
                                "const": "RealEstateAgent"
                              },
                              "additionalName": {
                                "title": "additionalName",
                                "description": "any other name(s) associated with the entity, i.e. nickname, middle name, maiden name, etc. For multiple names, use a comma without space as a separator.",
                                "type": "string",
                                "examples": [
                                  "Johnny,John",
                                  "Prince,The Artist Formerly Known as Prince,The Artist",
                                  "Babs,Barbara",
                                  "Katheryn Elizabeth Hudson,Katy Perry",
                                  "Destiny Hope Cyrus,Miley Cyrus"
                                ]
                              },
                              "address": {
                                "type": "object",
                                "x-range": "PostalAddress",
                                "description": "A physical address.",
                                "example": {
                                  "type": "PostalAddress",
                                  "name": "Home",
                                  "addressCountry": "USA",
                                  "addressCounty": "Gotham County",
                                  "addressLocality": "Gotham City",
                                  "addressRegion": "New Jersey",
                                  "addressSubdivision": "Gotham Heights",
                                  "postalCode": "10010",
                                  "postOfficeBoxNumber": "Box 1234",
                                  "streetAddress": "1007 Mountain Gate Rd"
                                }
                              },
                              "certification": {
                                "type": "object",
                                "title": "Certification",
                                "description": "A certification issued by an organization to an individual or business.",
                                "x-range": "Certification",
                                "properties": {
                                  "type": {
                                    "description": "Certification",
                                    "type": "string",
                                    "enum": [
                                      "Certification"
                                    ]
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "the name of the Certification",
                                    "example": "e-Agent Certified"
                                  },
                                  "issuedBy": {
                                    "type": "object",
                                    "x-range": "RealEstateOrganization",
                                    "description": "the issuing authority",
                                    "properties": {
                                      "type": {
                                        "enum": [
                                          "RealEstateOrganization"
                                        ],
                                        "type": "string",
                                        "description": "The item type (Linked-Data @type)"
                                      },
                                      "id": {
                                        "example": "https://example.com/profile/card#me",
                                        "type": "string",
                                        "format": "uri",
                                        "description": "Linked-Data URI (@id)"
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "name of the issuing organization",
                                        "example": "Gotham City Real Estate"
                                      }
                                    }
                                  },
                                  "issuedTo": {
                                    "x-range": "RealEstateAgent",
                                    "type": "object",
                                    "description": "the subject",
                                    "properties": {
                                      "type": {
                                        "enum": [
                                          "RealEstateAgent"
                                        ],
                                        "type": "string",
                                        "description": "The item type (Linked-Data @type)"
                                      },
                                      "id": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "Linked-Data URI (@id)"
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "the name of the item"
                                      }
                                    }
                                  }
                                }
                              },
                              "contactPoint": {
                                "$id": "htttp://realestate.yodata.me/schema/ContactPoint.json",
                                "title": "ContactPoint",
                                "description": "A point of contact for the entity. By convention in the real estate domain, ContactPoints\nare preferred over telephone, email, and faxNumber so the ContactPoint.name property can be used to label values\nfor example, Work Telephone, Home, as named contactPoint values.\n",
                                "type": "object",
                                "required": [
                                  "type",
                                  "name"
                                ],
                                "minProperties": 3,
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "const": "ContactPoint"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "a label for the contactPoint, i.e. 'Work', or 'Home'",
                                    "examples": [
                                      "Work",
                                      "Home",
                                      "Vacation",
                                      "Bob's Cell",
                                      "Alice's Work"
                                    ]
                                  },
                                  "telephone": {
                                    "type": "string",
                                    "x-faker": "phone.phoneNumber",
                                    "examples": [
                                      "555-555-5555",
                                      "555-555-5555 x123",
                                      "555-555-5555 ext. 123",
                                      "+1-555-555-5555"
                                    ]
                                  },
                                  "faxNumber": {
                                    "type": "string",
                                    "x-faker": "phone.phoneNumber",
                                    "examples": [
                                      "555-555-5555",
                                      "555-555-5555 x123",
                                      "555-555-5555 ext. 123",
                                      "+1-555-555-5555"
                                    ]
                                  },
                                  "email": {
                                    "description": "an email address for the item.",
                                    "type": "string",
                                    "format": "email",
                                    "x-faker": "internet.email",
                                    "examples": [
                                      "bob@example.com",
                                      "alice@example.com"
                                    ]
                                  },
                                  "url": {
                                    "description": "primary URL for the item.",
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://www.facebook.com/hallandoates"
                                  }
                                }
                              },
                              "email": {
                                "type": "string",
                                "format": "email",
                                "x-faker": "internet.email"
                              },
                              "familyName": {
                                "$id": "htttp://realestate.yodata.me/schema/familyName.yaml",
                                "type": "string",
                                "title": "Family Name",
                                "description": "Last Name of a person",
                                "x-faker": "name.lastName",
                                "maxLength": 50,
                                "externalDocs": {
                                  "description": "Family Name",
                                  "url": "https://schema.org/familyName"
                                },
                                "examples": [
                                  "Smith",
                                  "Jones",
                                  "Parker",
                                  "Monk",
                                  "Brown",
                                  "Miller",
                                  "Davis",
                                  "Wilson",
                                  "Fitzgerald",
                                  "Johnson",
                                  "Williams"
                                ]
                              },
                              "givenName": {
                                "type": "string",
                                "description": "First Name of a person",
                                "x-faker": "name.firstName",
                                "examples": [
                                  "John",
                                  "Jane",
                                  "Mary",
                                  "Joseph",
                                  "William",
                                  "David",
                                  "Richard",
                                  "Charles",
                                  "Thomas",
                                  "Christopher",
                                  "Daniel",
                                  "Matthew",
                                  "Anthony",
                                  "Donald",
                                  "Mark",
                                  "Paul",
                                  "Steven",
                                  "Andrew",
                                  "Kenneth",
                                  "George",
                                  "Joshua",
                                  "Kevin",
                                  "Brian",
                                  "Edward",
                                  "Ronald",
                                  "Timothy",
                                  "Jason",
                                  "Jeffrey",
                                  "Ryan",
                                  "Jacob"
                                ]
                              },
                              "id": {
                                "type": "string",
                                "format": "uri",
                                "description": "Linked-Data URI (@id)"
                              },
                              "identifier": {
                                "title": "identifier",
                                "type": "object",
                                "description": "identifier assigned to a contact by the vendor who originally created the contact",
                                "examples": [
                                  {
                                    "salesforceid": "0031U00002XW1QWQA1"
                                  },
                                  {
                                    "vendoraid": "123456"
                                  },
                                  {
                                    "originating_system_id": "123456"
                                  }
                                ]
                              },
                              "image": {
                                "title": "image",
                                "description": "an ImageObject or URI reference to an image on the web.",
                                "type": "array",
                                "x-range": [
                                  "ImageObject"
                                ],
                                "items": [
                                  {
                                    "type": "object",
                                    "allOf": [
                                      {
                                        "title": "MediaObject",
                                        "description": "an image, video or document availble for download",
                                        "x-subclass": [
                                          "ImageObject",
                                          "DigitalDocument"
                                        ],
                                        "allOf": [
                                          {
                                            "$id": "http://realestate.yodata.me/schema/Thing",
                                            "type": "object",
                                            "title": "Thing",
                                            "summary": "The root type of all Things.",
                                            "required": [
                                              "type"
                                            ],
                                            "propertyNames": {
                                              "pattern": "^[a-z@$][a-zA-Z0-9-_]+$"
                                            },
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "pattern": "^[A-Z][a-zA-Z0-9]+$",
                                                "description": "The item type (Linked-Data @type)"
                                              },
                                              "@id": {
                                                "type": "string",
                                                "format": "uri",
                                                "description": "the liked data uri for the Thing"
                                              }
                                            }
                                          },
                                          {
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "MediaObject",
                                                  "ImageObject",
                                                  "DigitalDocument"
                                                ]
                                              },
                                              "id": {
                                                "description": "the URL to access the item.",
                                                "example": "http://user.example.com/public/logo/fileName.zip",
                                                "type": "string",
                                                "format": "uri"
                                              },
                                              "name": {
                                                "type": "string",
                                                "description": "the file name of the object.",
                                                "example": "fileName.zip"
                                              },
                                              "encodingFormat": {
                                                "type": "string",
                                                "description": "MIME type",
                                                "example": "application/zip"
                                              },
                                              "about": {
                                                "type": "string",
                                                "format": "uri",
                                                "description": "URI to the subject of the image or logo",
                                                "example": "http://user.example.com/profile/card#me"
                                              },
                                              "url": {
                                                "type": "string",
                                                "format": "uri",
                                                "description": "URL of the image content",
                                                "example": "http://user.example.com/public/profile/image.jpg"
                                              }
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "title": "ImageObject",
                                        "x-range": "ImageObject",
                                        "properties": {
                                          "type": {
                                            "enum": [
                                              "ImageObject"
                                            ],
                                            "example": "ImageObject"
                                          },
                                          "id": {
                                            "example": "http://user.example.com/public/logo/image.jpg"
                                          },
                                          "name": {
                                            "example": "image.jpg"
                                          },
                                          "encodingFormat": {
                                            "example": "image/jpeg"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                ]
                              },
                              "jobTitle": {
                                "type": "array",
                                "items": {
                                  "title": "jobTitle",
                                  "description": "The job title of the person (for example, Financial Manager).",
                                  "type": "string",
                                  "x-faker": "name.jobTitle",
                                  "examples": [
                                    "CEO",
                                    "Sales Manager",
                                    "Escrow Officer",
                                    "Transaction Coordinator",
                                    "Director of Marketing",
                                    "Senior Loan Officer",
                                    "Loan Officer",
                                    "Sanitation Engineer",
                                    "Owner",
                                    "Cofounder",
                                    "Founder",
                                    "President",
                                    "Vice President of Sales",
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null,
                                    null
                                  ]
                                }
                              },
                              "memberOf": {
                                "title": "memberOf",
                                "description": "an Organization (or ProgramMembership) to which this Person or Organization belongs.",
                                "type": "array",
                                "x-range": [
                                  "OrganizationRole",
                                  "URI"
                                ],
                                "items": {
                                  "anyOf": [
                                    {
                                      "title": "OrganizationRole",
                                      "type": "object",
                                      "description": "describes a role played by a member and a group or organization.",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "description": "a role played by the member in the memberOf group",
                                          "enum": [
                                            "OrganizationRole"
                                          ]
                                        },
                                        "roleName": {
                                          "type": "string",
                                          "description": "the role name",
                                          "example": "Owner"
                                        },
                                        "memberOf": {
                                          "description": "the org or group where the role is performed",
                                          "type": "object",
                                          "example": {
                                            "type": "RealEstateOrganization",
                                            "id": "http://orgid.example.com/profile/card#me"
                                          }
                                        },
                                        "member": {
                                          "description": "member object or id",
                                          "type": "string",
                                          "format": "uri",
                                          "example": "https://memberid.example.com/profile/card#me"
                                        },
                                        "startDate": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "date the member began performing this role"
                                        },
                                        "endDate": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "date the member stopped performing the role"
                                        }
                                      }
                                    },
                                    {
                                      "type": "string",
                                      "format": "uri"
                                    }
                                  ]
                                }
                              },
                              "name": {
                                "type": "string",
                                "description": "the name of the item"
                              },
                              "parentOrganization": {
                                "$id": "http://realestate.yodata.me/schema/parentOrganization",
                                "title": "parentOrganization",
                                "description": "organizations of which this org is a part.",
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "format": "uri"
                                }
                              },
                              "permit": {
                                "title": "Permit",
                                "description": "A permit issued by an organization to an individual or business.",
                                "type": "object",
                                "x-hasSubclass": [
                                  "RealEstateLicense"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "description": "Permit type.",
                                    "enum": [
                                      "Permit"
                                    ]
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Common or display value of the Permit.",
                                    "example": "DRE Number"
                                  },
                                  "issuedBy": {
                                    "type": "object",
                                    "x-range": "Organization",
                                    "description": "The issuing authority",
                                    "example": {
                                      "type": "State",
                                      "name": "California"
                                    }
                                  },
                                  "issuedThrough": {
                                    "type": "object",
                                    "description": "the service through which the permit was granted",
                                    "example": {
                                      "type": "Service",
                                      "name": "Department of Real Estate"
                                    }
                                  },
                                  "validIn": {
                                    "type": "object",
                                    "x-range": "Place"
                                  },
                                  "validFrom": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "start date"
                                  },
                                  "validUntil": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "end date"
                                  }
                                }
                              },
                              "subOrganization": {
                                "$id": "http://realestate.yodata.me/schema/subOrganization",
                                "title": "subOrganization",
                                "description": "child organizations of the organization",
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "format": "uri"
                                }
                              },
                              "url": {
                                "title": "url",
                                "type": "string",
                                "format": "uri",
                                "description": "URL of the item."
                              }
                            }
                          },
                          {
                            "title": "Person",
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string"
                              },
                              "affiliation": {
                                "description": "An organization that this person is affiliated with",
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://example.com/profile/card#me"
                                }
                              },
                              "address": {
                                "type": "array",
                                "items": {
                                  "$id": "http://realestate.yodata.me/schemas/PostalAddress.yaml",
                                  "title": "PostalAddress",
                                  "type": "object",
                                  "description": "A physical address.",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "PostalAddress"
                                    },
                                    "streetAddress": {
                                      "type": "string",
                                      "description": "the street number and name.",
                                      "x-faker": "address.streetAddress",
                                      "examples": [
                                        "5046 Ottis Point",
                                        "166 Marion Burg",
                                        "93044 Haley Stream"
                                      ]
                                    },
                                    "postOfficeBoxNumber": {
                                      "type": "string",
                                      "description": "The post office box number for PO box addresses.",
                                      "x-faker": "address.secondaryAddress",
                                      "examples": [
                                        "Box 1234",
                                        "Apt. 161",
                                        "Apt. 623"
                                      ]
                                    },
                                    "addressRegion": {
                                      "type": "string",
                                      "description": "State or Province.",
                                      "x-faker": "address.state",
                                      "examples": [
                                        "New Jersey",
                                        "California",
                                        "MI",
                                        null
                                      ]
                                    },
                                    "addressLocality": {
                                      "type": "string",
                                      "description": "City, Township.",
                                      "x-faker": "address.city",
                                      "examples": [
                                        "Gotham City",
                                        "Kulasmouth",
                                        "Heidistad",
                                        "Altamonte Springs",
                                        "West Ahmed",
                                        "Blaiseview"
                                      ]
                                    },
                                    "postalCode": {
                                      "type": "string",
                                      "description": "Zip/Post Code",
                                      "x-faker": "address.zipCode",
                                      "examples": [
                                        "10010",
                                        "38859",
                                        "40387",
                                        "50239-7698",
                                        null
                                      ]
                                    },
                                    "addressCountry": {
                                      "type": "string",
                                      "description": "The country. For example, USA. You can also provide the two-letter ISO 3166-1 alpha-2 country code.",
                                      "examples": [
                                        "USA",
                                        "TH",
                                        "NZ",
                                        "EG",
                                        "SJ",
                                        "VN"
                                      ],
                                      "x-faker": "address.countryCode"
                                    },
                                    "addressCounty": {
                                      "type": "string",
                                      "description": "the county (us real estate extension)",
                                      "faker": "address.county",
                                      "examples": [
                                        "Gotham County",
                                        "Buckinghamshire",
                                        "Borders",
                                        null
                                      ]
                                    },
                                    "addressSubdivision": {
                                      "type": "string",
                                      "description": "the subdivision or neighborhood (us real estate extension)",
                                      "x-faker": "address.streetName",
                                      "examples": [
                                        "Gotham Heights",
                                        "South Kensington",
                                        "SOMA (South of Market)",
                                        "Nob Hill"
                                      ]
                                    }
                                  }
                                }
                              },
                              "birthDate": {
                                "description": "date of birth.",
                                "type": "string",
                                "format": "date"
                              },
                              "contactPoint": {
                                "description": "contact points for the person",
                                "type": "array",
                                "items": {
                                  "$id": "htttp://realestate.yodata.me/schema/ContactPoint.json",
                                  "title": "ContactPoint",
                                  "description": "A point of contact for the entity. By convention in the real estate domain, ContactPoints\nare preferred over telephone, email, and faxNumber so the ContactPoint.name property can be used to label values\nfor example, Work Telephone, Home, as named contactPoint values.\n",
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "name"
                                  ],
                                  "minProperties": 3,
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "ContactPoint"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "a label for the contactPoint, i.e. 'Work', or 'Home'",
                                      "examples": [
                                        "Work",
                                        "Home",
                                        "Vacation",
                                        "Bob's Cell",
                                        "Alice's Work"
                                      ]
                                    },
                                    "telephone": {
                                      "type": "string",
                                      "x-faker": "phone.phoneNumber",
                                      "examples": [
                                        "555-555-5555",
                                        "555-555-5555 x123",
                                        "555-555-5555 ext. 123",
                                        "+1-555-555-5555"
                                      ]
                                    },
                                    "faxNumber": {
                                      "type": "string",
                                      "x-faker": "phone.phoneNumber",
                                      "examples": [
                                        "555-555-5555",
                                        "555-555-5555 x123",
                                        "555-555-5555 ext. 123",
                                        "+1-555-555-5555"
                                      ]
                                    },
                                    "email": {
                                      "description": "an email address for the item.",
                                      "type": "string",
                                      "format": "email",
                                      "x-faker": "internet.email",
                                      "examples": [
                                        "bob@example.com",
                                        "alice@example.com"
                                      ]
                                    },
                                    "url": {
                                      "description": "primary URL for the item.",
                                      "type": "string",
                                      "format": "uri",
                                      "example": "https://www.facebook.com/hallandoates"
                                    }
                                  }
                                }
                              },
                              "email": {
                                "type": "string",
                                "format": "email",
                                "x-faker": "internet.email"
                              },
                              "additionalName": {
                                "title": "additionalName",
                                "description": "any other name(s) associated with the entity, i.e. nickname, middle name, maiden name, etc. For multiple names, use a comma without space as a separator.",
                                "type": "string",
                                "examples": [
                                  "Johnny,John",
                                  "Prince,The Artist Formerly Known as Prince,The Artist",
                                  "Babs,Barbara",
                                  "Katheryn Elizabeth Hudson,Katy Perry",
                                  "Destiny Hope Cyrus,Miley Cyrus"
                                ]
                              },
                              "familyName": {
                                "$id": "htttp://realestate.yodata.me/schema/familyName.yaml",
                                "type": "string",
                                "title": "Family Name",
                                "description": "Last Name of a person",
                                "x-faker": "name.lastName",
                                "maxLength": 50,
                                "externalDocs": {
                                  "description": "Family Name",
                                  "url": "https://schema.org/familyName"
                                },
                                "examples": [
                                  "Smith",
                                  "Jones",
                                  "Parker",
                                  "Monk",
                                  "Brown",
                                  "Miller",
                                  "Davis",
                                  "Wilson",
                                  "Fitzgerald",
                                  "Johnson",
                                  "Williams"
                                ]
                              },
                              "faxNumber": {
                                "type": "string",
                                "description": "Do people still use fax machines?",
                                "x-faker": "phone.phoneNumber"
                              },
                              "givenName": {
                                "type": "string",
                                "description": "First Name of a person",
                                "x-faker": "name.firstName",
                                "examples": [
                                  "John",
                                  "Jane",
                                  "Mary",
                                  "Joseph",
                                  "William",
                                  "David",
                                  "Richard",
                                  "Charles",
                                  "Thomas",
                                  "Christopher",
                                  "Daniel",
                                  "Matthew",
                                  "Anthony",
                                  "Donald",
                                  "Mark",
                                  "Paul",
                                  "Steven",
                                  "Andrew",
                                  "Kenneth",
                                  "George",
                                  "Joshua",
                                  "Kevin",
                                  "Brian",
                                  "Edward",
                                  "Ronald",
                                  "Timothy",
                                  "Jason",
                                  "Jeffrey",
                                  "Ryan",
                                  "Jacob"
                                ]
                              },
                              "honorificPrefix": {
                                "title": "honorificPrefix",
                                "description": "An honorific prefix preceding a Person's name such as Dr/Mrs/Mr.",
                                "type": "string",
                                "example": "Dr"
                              },
                              "honorificSuffix": {
                                "title": "honorificSuffix",
                                "description": "An honorific title following a person's name like M.D.",
                                "type": "string",
                                "example": "Esq"
                              },
                              "jobTitle": {
                                "title": "jobTitle",
                                "description": "job tiles associated with the item",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "example": [
                                  "Chief Data Officer",
                                  "Sanitation Engineer"
                                ]
                              },
                              "knowsLanguage": {
                                "description": "languages spoken by the person",
                                "type": "array",
                                "items": {
                                  "$id": "htttp://realestate.yodata.me/schema/Language.yaml",
                                  "description": "a written or spoken Language",
                                  "title": "Language",
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "name",
                                    "additionalName"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "Language"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "the display name of the language"
                                    },
                                    "additionalName": {
                                      "type": "string",
                                      "description": "BCP 47 language code"
                                    }
                                  },
                                  "examples": [
                                    {
                                      "type": "Language",
                                      "name": "English",
                                      "additionalName": "en-us"
                                    },
                                    {
                                      "type": "Language",
                                      "name": "Spanish",
                                      "additionalName": "es"
                                    },
                                    {
                                      "type": "Language",
                                      "name": "French",
                                      "additionalName": "fr"
                                    },
                                    {
                                      "type": "Language",
                                      "name": "German",
                                      "additionalName": "de"
                                    },
                                    {
                                      "type": "Language",
                                      "name": "Italian",
                                      "additionalName": "it"
                                    },
                                    {
                                      "type": "Language",
                                      "name": "Japanese",
                                      "additionalName": "ja"
                                    },
                                    {
                                      "type": "Language",
                                      "name": "Korean",
                                      "additionalName": "ko"
                                    },
                                    {
                                      "type": "Language",
                                      "name": "Portuguese",
                                      "additionalName": "pt"
                                    },
                                    {
                                      "type": "Language",
                                      "name": "Russian",
                                      "additionalName": "ru"
                                    },
                                    {
                                      "type": "Language",
                                      "name": "Chinese",
                                      "additionalName": "zh"
                                    },
                                    {
                                      "type": "Language",
                                      "name": "Arabic",
                                      "additionalName": "ar"
                                    },
                                    {
                                      "type": "Language",
                                      "name": "Hindi",
                                      "additionalName": "hi"
                                    },
                                    {
                                      "type": "Language",
                                      "name": "Bengali",
                                      "additionalName": "bn"
                                    },
                                    {
                                      "type": "Language",
                                      "name": "Portuguese",
                                      "additionalName": "pt"
                                    }
                                  ]
                                }
                              },
                              "name": {
                                "description": "Full name of the person.",
                                "type": "string",
                                "x-faker": "name.findName"
                              },
                              "telephone": {
                                "type": "string",
                                "description": "Primary phone number.",
                                "example": "+15558675309"
                              },
                              "worksFor": {
                                "type": "string",
                                "description": "Organizations the person works for.",
                                "x-faker": "company.companyName"
                              }
                            }
                          }
                        ],
                        "example": {
                          "type": "RealEstateAgent",
                          "name": "Randy RealEstateAgent",
                          "id": "https://{agentid}.example.com/profile/card#me"
                        }
                      }
                    }
                  }
                }
              },
              "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-message-parsed": true
            },
            {
              "messageId": "website#register",
              "name": "realestate/website#register",
              "summary": "website user has registered on the website.",
              "headers": {
                "type": "object",
                "properties": {
                  "topic": {
                    "const": "realestate/website#register",
                    "x-parser-schema-id": "<anonymous-schema-513>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-512>"
              },
              "payload": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "agent": {
                        "type": "object",
                        "description": "a website user/visitor",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "Person",
                              "Contact"
                            ],
                            "x-parser-schema-id": "<anonymous-schema-487>"
                          },
                          "name": {
                            "type": "string",
                            "x-parser-schema-id": "<anonymous-schema-488>"
                          },
                          "givenName": {
                            "type": "string",
                            "x-parser-schema-id": "<anonymous-schema-489>"
                          },
                          "familyName": {
                            "type": "string",
                            "x-parser-schema-id": "<anonymous-schema-490>"
                          },
                          "email": {
                            "type": "string",
                            "format": "email",
                            "x-parser-schema-id": "<anonymous-schema-491>"
                          },
                          "telephone": {
                            "type": "string",
                            "x-parser-schema-id": "<anonymous-schema-492>"
                          },
                          "identifier": {
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ],
                            "x-parser-schema-id": "<anonymous-schema-94>"
                          },
                          "sameAs": {
                            "title": "sameAs",
                            "type": "string",
                            "format": "uri",
                            "description": "vendor specific identifier for the user can be shared with other vendors to identify the user",
                            "examples": [
                              {
                                "amcecrmid": 1234567,
                                "salesForceId": "parsing"
                              },
                              {
                                "salesForceId": "ad4fa5f4as"
                              }
                            ],
                            "x-parser-schema-id": "<anonymous-schema-493>"
                          },
                          "contactPoint": {
                            "$id": "htttp://realestate.yodata.me/schema/ContactPoint.json",
                            "title": "ContactPoint",
                            "description": "A point of contact for the entity. By convention in the real estate domain, ContactPoints\nare preferred over telephone, email, and faxNumber so the ContactPoint.name property can be used to label values\nfor example, Work Telephone, Home, as named contactPoint values.\n",
                            "type": "object",
                            "required": [
                              "type",
                              "name"
                            ],
                            "minProperties": 3,
                            "properties": {
                              "type": {
                                "type": "string",
                                "const": "ContactPoint",
                                "x-parser-schema-id": "<anonymous-schema-381>"
                              },
                              "name": {
                                "type": "string",
                                "description": "a label for the contactPoint, i.e. 'Work', or 'Home'",
                                "examples": [
                                  "Work",
                                  "Home",
                                  "Vacation",
                                  "Bob's Cell",
                                  "Alice's Work"
                                ],
                                "x-parser-schema-id": "<anonymous-schema-382>"
                              },
                              "telephone": {
                                "type": "string",
                                "x-faker": "phone.phoneNumber",
                                "examples": [
                                  "555-555-5555",
                                  "555-555-5555 x123",
                                  "555-555-5555 ext. 123",
                                  "+1-555-555-5555"
                                ],
                                "x-parser-schema-id": "<anonymous-schema-383>"
                              },
                              "faxNumber": {
                                "type": "string",
                                "x-faker": "phone.phoneNumber",
                                "examples": [
                                  "555-555-5555",
                                  "555-555-5555 x123",
                                  "555-555-5555 ext. 123",
                                  "+1-555-555-5555"
                                ],
                                "x-parser-schema-id": "<anonymous-schema-384>"
                              },
                              "email": {
                                "description": "an email address for the item.",
                                "type": "string",
                                "format": "email",
                                "x-faker": "internet.email",
                                "examples": [
                                  "bob@example.com",
                                  "alice@example.com"
                                ],
                                "x-parser-schema-id": "<anonymous-schema-385>"
                              },
                              "url": {
                                "description": "primary URL for the item.",
                                "type": "string",
                                "format": "uri",
                                "example": "https://www.facebook.com/hallandoates",
                                "x-parser-schema-id": "<anonymous-schema-386>"
                              }
                            }
                          },
                          "additionalProperties": {
                            "type": "object",
                            "description": "additional properties for the website user",
                            "properties": {
                              "workingWithAgent": {
                                "type": "boolean",
                                "x-parser-schema-id": "<anonymous-schema-495>"
                              }
                            },
                            "x-parser-schema-id": "<anonymous-schema-494>"
                          }
                        },
                        "x-parser-schema-id": "<anonymous-schema-486>"
                      },
                      "instrument": {
                        "type": "object",
                        "description": "the site, app or service being on which the user action was observed.",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "x-parser-schema-id": "<anonymous-schema-517>"
                          },
                          "name": {
                            "type": "string",
                            "x-parser-schema-id": "<anonymous-schema-518>"
                          },
                          "url": {
                            "type": "string",
                            "format": "uri",
                            "x-parser-schema-id": "<anonymous-schema-519>"
                          }
                        },
                        "examples": [
                          {
                            "type": "Website",
                            "name": "Agent Website",
                            "url": "https://www.example.com"
                          },
                          {
                            "name": "Agent App"
                          }
                        ],
                        "x-parser-schema-id": "<anonymous-schema-516>"
                      }
                    },
                    "x-parser-schema-id": "<anonymous-schema-515>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-514>"
              },
              "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-original-payload": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "agent": {
                        "type": "object",
                        "description": "a website user/visitor",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "Person",
                              "Contact"
                            ]
                          },
                          "name": {
                            "type": "string"
                          },
                          "givenName": {
                            "type": "string"
                          },
                          "familyName": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string",
                            "format": "email"
                          },
                          "telephone": {
                            "type": "string"
                          },
                          "identifier": {
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ]
                          },
                          "sameAs": {
                            "title": "sameAs",
                            "type": "string",
                            "format": "uri",
                            "description": "vendor specific identifier for the user can be shared with other vendors to identify the user",
                            "examples": [
                              {
                                "amcecrmid": 1234567,
                                "salesForceId": "parsing"
                              },
                              {
                                "salesForceId": "ad4fa5f4as"
                              }
                            ]
                          },
                          "contactPoint": {
                            "$id": "htttp://realestate.yodata.me/schema/ContactPoint.json",
                            "title": "ContactPoint",
                            "description": "A point of contact for the entity. By convention in the real estate domain, ContactPoints\nare preferred over telephone, email, and faxNumber so the ContactPoint.name property can be used to label values\nfor example, Work Telephone, Home, as named contactPoint values.\n",
                            "type": "object",
                            "required": [
                              "type",
                              "name"
                            ],
                            "minProperties": 3,
                            "properties": {
                              "type": {
                                "type": "string",
                                "const": "ContactPoint"
                              },
                              "name": {
                                "type": "string",
                                "description": "a label for the contactPoint, i.e. 'Work', or 'Home'",
                                "examples": [
                                  "Work",
                                  "Home",
                                  "Vacation",
                                  "Bob's Cell",
                                  "Alice's Work"
                                ]
                              },
                              "telephone": {
                                "type": "string",
                                "x-faker": "phone.phoneNumber",
                                "examples": [
                                  "555-555-5555",
                                  "555-555-5555 x123",
                                  "555-555-5555 ext. 123",
                                  "+1-555-555-5555"
                                ]
                              },
                              "faxNumber": {
                                "type": "string",
                                "x-faker": "phone.phoneNumber",
                                "examples": [
                                  "555-555-5555",
                                  "555-555-5555 x123",
                                  "555-555-5555 ext. 123",
                                  "+1-555-555-5555"
                                ]
                              },
                              "email": {
                                "description": "an email address for the item.",
                                "type": "string",
                                "format": "email",
                                "x-faker": "internet.email",
                                "examples": [
                                  "bob@example.com",
                                  "alice@example.com"
                                ]
                              },
                              "url": {
                                "description": "primary URL for the item.",
                                "type": "string",
                                "format": "uri",
                                "example": "https://www.facebook.com/hallandoates"
                              }
                            }
                          },
                          "additionalProperties": {
                            "type": "object",
                            "description": "additional properties for the website user",
                            "properties": {
                              "workingWithAgent": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      },
                      "instrument": {
                        "type": "object",
                        "description": "the site, app or service being on which the user action was observed.",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "type": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "url": {
                            "type": "string",
                            "format": "uri"
                          }
                        },
                        "examples": [
                          {
                            "type": "Website",
                            "name": "Agent Website",
                            "url": "https://www.example.com"
                          },
                          {
                            "name": "Agent App"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-message-parsed": true
            },
            {
              "messageId": "website#requestappointment",
              "name": "realestate/website#requestappointment",
              "summary": "website user has requested an appointment",
              "headers": {
                "type": "object",
                "properties": {
                  "topic": {
                    "const": "realestate/website#requestappointment",
                    "x-parser-schema-id": "<anonymous-schema-521>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-520>"
              },
              "payload": {
                "type": "object",
                "properties": {
                  "data": {
                    "properties": {
                      "type": {
                        "const": "RequestAppointmentAction"
                      },
                      "agent": {
                        "type": "object",
                        "description": "a website user/visitor",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "Person",
                              "Contact"
                            ],
                            "x-parser-schema-id": "<anonymous-schema-487>"
                          },
                          "name": {
                            "type": "string",
                            "x-parser-schema-id": "<anonymous-schema-488>"
                          },
                          "givenName": {
                            "type": "string",
                            "x-parser-schema-id": "<anonymous-schema-489>"
                          },
                          "familyName": {
                            "type": "string",
                            "x-parser-schema-id": "<anonymous-schema-490>"
                          },
                          "email": {
                            "type": "string",
                            "format": "email",
                            "x-parser-schema-id": "<anonymous-schema-491>"
                          },
                          "telephone": {
                            "type": "string",
                            "x-parser-schema-id": "<anonymous-schema-492>"
                          },
                          "identifier": {
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ],
                            "x-parser-schema-id": "<anonymous-schema-94>"
                          },
                          "sameAs": {
                            "title": "sameAs",
                            "type": "string",
                            "format": "uri",
                            "description": "vendor specific identifier for the user can be shared with other vendors to identify the user",
                            "examples": [
                              {
                                "amcecrmid": 1234567,
                                "salesForceId": "parsing"
                              },
                              {
                                "salesForceId": "ad4fa5f4as"
                              }
                            ],
                            "x-parser-schema-id": "<anonymous-schema-493>"
                          },
                          "contactPoint": {
                            "$id": "htttp://realestate.yodata.me/schema/ContactPoint.json",
                            "title": "ContactPoint",
                            "description": "A point of contact for the entity. By convention in the real estate domain, ContactPoints\nare preferred over telephone, email, and faxNumber so the ContactPoint.name property can be used to label values\nfor example, Work Telephone, Home, as named contactPoint values.\n",
                            "type": "object",
                            "required": [
                              "type",
                              "name"
                            ],
                            "minProperties": 3,
                            "properties": {
                              "type": {
                                "type": "string",
                                "const": "ContactPoint",
                                "x-parser-schema-id": "<anonymous-schema-381>"
                              },
                              "name": {
                                "type": "string",
                                "description": "a label for the contactPoint, i.e. 'Work', or 'Home'",
                                "examples": [
                                  "Work",
                                  "Home",
                                  "Vacation",
                                  "Bob's Cell",
                                  "Alice's Work"
                                ],
                                "x-parser-schema-id": "<anonymous-schema-382>"
                              },
                              "telephone": {
                                "type": "string",
                                "x-faker": "phone.phoneNumber",
                                "examples": [
                                  "555-555-5555",
                                  "555-555-5555 x123",
                                  "555-555-5555 ext. 123",
                                  "+1-555-555-5555"
                                ],
                                "x-parser-schema-id": "<anonymous-schema-383>"
                              },
                              "faxNumber": {
                                "type": "string",
                                "x-faker": "phone.phoneNumber",
                                "examples": [
                                  "555-555-5555",
                                  "555-555-5555 x123",
                                  "555-555-5555 ext. 123",
                                  "+1-555-555-5555"
                                ],
                                "x-parser-schema-id": "<anonymous-schema-384>"
                              },
                              "email": {
                                "description": "an email address for the item.",
                                "type": "string",
                                "format": "email",
                                "x-faker": "internet.email",
                                "examples": [
                                  "bob@example.com",
                                  "alice@example.com"
                                ],
                                "x-parser-schema-id": "<anonymous-schema-385>"
                              },
                              "url": {
                                "description": "primary URL for the item.",
                                "type": "string",
                                "format": "uri",
                                "example": "https://www.facebook.com/hallandoates",
                                "x-parser-schema-id": "<anonymous-schema-386>"
                              }
                            }
                          },
                          "additionalProperties": {
                            "type": "object",
                            "description": "additional properties for the website user",
                            "properties": {
                              "workingWithAgent": {
                                "type": "boolean",
                                "x-parser-schema-id": "<anonymous-schema-495>"
                              }
                            },
                            "x-parser-schema-id": "<anonymous-schema-494>"
                          }
                        }
                      },
                      "object": {
                        "type": "object",
                        "description": "A specific question - e.g. from a user seeking answers online, or collected in a Frequently Asked Questions (FAQ) document.",
                        "title": "Question",
                        "properties": {
                          "type": {
                            "const": "Question",
                            "x-parser-schema-id": "<anonymous-schema-496>"
                          },
                          "text": {
                            "$id": "http://realestate.yodata.me/schema/text.yaml",
                            "title": "text",
                            "type": "string",
                            "examples": [
                              "Populus debet control notitia sua",
                              "Aspicio pinguem in his vestimentis?",
                              "Et id ipsum vitae.",
                              "Amici, Romani et cives, aures vestras mihi praebe",
                              "Heus, ego iustus occurrit tibi et hoc est insanus, sed hic numerus meus est, ut me vocas fortasse."
                            ]
                          }
                        }
                      },
                      "recipient": {
                        "title": "recipient",
                        "description": "the recipient of an object or action referred to in the message",
                        "type": "object",
                        "examples": [
                          {
                            "type": "RealEstateAgent",
                            "name": "Randy Real Estate",
                            "id": "https://8675309.example.com/profile/card#me"
                          },
                          {
                            "type": "Contact",
                            "name": "Gretchen Olson",
                            "telephone": "1+888-867-5309",
                            "email": "Gretchen_Olson@example.org",
                            "contactPoint": [
                              {
                                "type": "ContactPoint",
                                "name": "Home",
                                "contactType": "customer service",
                                "telephone": "(846) 239-2439 x529",
                                "email": "Justice.Parker2@example.com"
                              },
                              {
                                "type": "ContactPoint",
                                "name": "Work",
                                "telephone": "1+888-867-5309"
                              }
                            ],
                            "identifier": {
                              "hsfconsumerid": 1234568
                            }
                          },
                          {
                            "type": "Person",
                            "identifier": {
                              "hsfconsumerid": 1234568
                            }
                          }
                        ]
                      }
                    },
                    "x-parser-schema-id": "<anonymous-schema-523>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-522>"
              },
              "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-original-payload": {
                "type": "object",
                "properties": {
                  "data": {
                    "properties": {
                      "type": {
                        "const": "RequestAppointmentAction"
                      },
                      "agent": {
                        "type": "object",
                        "description": "a website user/visitor",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "Person",
                              "Contact"
                            ]
                          },
                          "name": {
                            "type": "string"
                          },
                          "givenName": {
                            "type": "string"
                          },
                          "familyName": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string",
                            "format": "email"
                          },
                          "telephone": {
                            "type": "string"
                          },
                          "identifier": {
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ]
                          },
                          "sameAs": {
                            "title": "sameAs",
                            "type": "string",
                            "format": "uri",
                            "description": "vendor specific identifier for the user can be shared with other vendors to identify the user",
                            "examples": [
                              {
                                "amcecrmid": 1234567,
                                "salesForceId": "parsing"
                              },
                              {
                                "salesForceId": "ad4fa5f4as"
                              }
                            ]
                          },
                          "contactPoint": {
                            "$id": "htttp://realestate.yodata.me/schema/ContactPoint.json",
                            "title": "ContactPoint",
                            "description": "A point of contact for the entity. By convention in the real estate domain, ContactPoints\nare preferred over telephone, email, and faxNumber so the ContactPoint.name property can be used to label values\nfor example, Work Telephone, Home, as named contactPoint values.\n",
                            "type": "object",
                            "required": [
                              "type",
                              "name"
                            ],
                            "minProperties": 3,
                            "properties": {
                              "type": {
                                "type": "string",
                                "const": "ContactPoint"
                              },
                              "name": {
                                "type": "string",
                                "description": "a label for the contactPoint, i.e. 'Work', or 'Home'",
                                "examples": [
                                  "Work",
                                  "Home",
                                  "Vacation",
                                  "Bob's Cell",
                                  "Alice's Work"
                                ]
                              },
                              "telephone": {
                                "type": "string",
                                "x-faker": "phone.phoneNumber",
                                "examples": [
                                  "555-555-5555",
                                  "555-555-5555 x123",
                                  "555-555-5555 ext. 123",
                                  "+1-555-555-5555"
                                ]
                              },
                              "faxNumber": {
                                "type": "string",
                                "x-faker": "phone.phoneNumber",
                                "examples": [
                                  "555-555-5555",
                                  "555-555-5555 x123",
                                  "555-555-5555 ext. 123",
                                  "+1-555-555-5555"
                                ]
                              },
                              "email": {
                                "description": "an email address for the item.",
                                "type": "string",
                                "format": "email",
                                "x-faker": "internet.email",
                                "examples": [
                                  "bob@example.com",
                                  "alice@example.com"
                                ]
                              },
                              "url": {
                                "description": "primary URL for the item.",
                                "type": "string",
                                "format": "uri",
                                "example": "https://www.facebook.com/hallandoates"
                              }
                            }
                          },
                          "additionalProperties": {
                            "type": "object",
                            "description": "additional properties for the website user",
                            "properties": {
                              "workingWithAgent": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      },
                      "object": {
                        "type": "object",
                        "description": "A specific question - e.g. from a user seeking answers online, or collected in a Frequently Asked Questions (FAQ) document.",
                        "title": "Question",
                        "properties": {
                          "type": {
                            "const": "Question"
                          },
                          "text": {
                            "$id": "http://realestate.yodata.me/schema/text.yaml",
                            "title": "text",
                            "type": "string",
                            "examples": [
                              "Populus debet control notitia sua",
                              "Aspicio pinguem in his vestimentis?",
                              "Et id ipsum vitae.",
                              "Amici, Romani et cives, aures vestras mihi praebe",
                              "Heus, ego iustus occurrit tibi et hoc est insanus, sed hic numerus meus est, ut me vocas fortasse."
                            ]
                          }
                        }
                      },
                      "recipient": {
                        "title": "recipient",
                        "description": "the recipient of an object or action referred to in the message",
                        "type": "object",
                        "examples": [
                          {
                            "type": "RealEstateAgent",
                            "name": "Randy Real Estate",
                            "id": "https://8675309.example.com/profile/card#me"
                          },
                          {
                            "type": "Contact",
                            "name": "Gretchen Olson",
                            "telephone": "1+888-867-5309",
                            "email": "Gretchen_Olson@example.org",
                            "contactPoint": [
                              {
                                "type": "ContactPoint",
                                "name": "Home",
                                "contactType": "customer service",
                                "telephone": "(846) 239-2439 x529",
                                "email": "Justice.Parker2@example.com"
                              },
                              {
                                "type": "ContactPoint",
                                "name": "Work",
                                "telephone": "1+888-867-5309"
                              }
                            ],
                            "identifier": {
                              "hsfconsumerid": 1234568
                            }
                          },
                          {
                            "type": "Person",
                            "identifier": {
                              "hsfconsumerid": 1234568
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-message-parsed": true
            },
            {
              "messageId": "website#requestshowing",
              "name": "realestate/website#requestshowing",
              "summary": "a website visitor has requested a property showing",
              "headers": {
                "type": "object",
                "properties": {
                  "topic": {
                    "const": "realestate/website#requestshowing",
                    "x-parser-schema-id": "<anonymous-schema-525>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-524>"
              },
              "payload": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "const": "RequestShowingAction",
                        "x-parser-schema-id": "<anonymous-schema-528>"
                      },
                      "agent": {
                        "type": "object",
                        "description": "a website user/visitor",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "Person",
                              "Contact"
                            ],
                            "x-parser-schema-id": "<anonymous-schema-487>"
                          },
                          "name": {
                            "type": "string",
                            "x-parser-schema-id": "<anonymous-schema-488>"
                          },
                          "givenName": {
                            "type": "string",
                            "x-parser-schema-id": "<anonymous-schema-489>"
                          },
                          "familyName": {
                            "type": "string",
                            "x-parser-schema-id": "<anonymous-schema-490>"
                          },
                          "email": {
                            "type": "string",
                            "format": "email",
                            "x-parser-schema-id": "<anonymous-schema-491>"
                          },
                          "telephone": {
                            "type": "string",
                            "x-parser-schema-id": "<anonymous-schema-492>"
                          },
                          "identifier": {
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ],
                            "x-parser-schema-id": "<anonymous-schema-94>"
                          },
                          "sameAs": {
                            "title": "sameAs",
                            "type": "string",
                            "format": "uri",
                            "description": "vendor specific identifier for the user can be shared with other vendors to identify the user",
                            "examples": [
                              {
                                "amcecrmid": 1234567,
                                "salesForceId": "parsing"
                              },
                              {
                                "salesForceId": "ad4fa5f4as"
                              }
                            ],
                            "x-parser-schema-id": "<anonymous-schema-493>"
                          },
                          "contactPoint": {
                            "$id": "htttp://realestate.yodata.me/schema/ContactPoint.json",
                            "title": "ContactPoint",
                            "description": "A point of contact for the entity. By convention in the real estate domain, ContactPoints\nare preferred over telephone, email, and faxNumber so the ContactPoint.name property can be used to label values\nfor example, Work Telephone, Home, as named contactPoint values.\n",
                            "type": "object",
                            "required": [
                              "type",
                              "name"
                            ],
                            "minProperties": 3,
                            "properties": {
                              "type": {
                                "type": "string",
                                "const": "ContactPoint",
                                "x-parser-schema-id": "<anonymous-schema-381>"
                              },
                              "name": {
                                "type": "string",
                                "description": "a label for the contactPoint, i.e. 'Work', or 'Home'",
                                "examples": [
                                  "Work",
                                  "Home",
                                  "Vacation",
                                  "Bob's Cell",
                                  "Alice's Work"
                                ],
                                "x-parser-schema-id": "<anonymous-schema-382>"
                              },
                              "telephone": {
                                "type": "string",
                                "x-faker": "phone.phoneNumber",
                                "examples": [
                                  "555-555-5555",
                                  "555-555-5555 x123",
                                  "555-555-5555 ext. 123",
                                  "+1-555-555-5555"
                                ],
                                "x-parser-schema-id": "<anonymous-schema-383>"
                              },
                              "faxNumber": {
                                "type": "string",
                                "x-faker": "phone.phoneNumber",
                                "examples": [
                                  "555-555-5555",
                                  "555-555-5555 x123",
                                  "555-555-5555 ext. 123",
                                  "+1-555-555-5555"
                                ],
                                "x-parser-schema-id": "<anonymous-schema-384>"
                              },
                              "email": {
                                "description": "an email address for the item.",
                                "type": "string",
                                "format": "email",
                                "x-faker": "internet.email",
                                "examples": [
                                  "bob@example.com",
                                  "alice@example.com"
                                ],
                                "x-parser-schema-id": "<anonymous-schema-385>"
                              },
                              "url": {
                                "description": "primary URL for the item.",
                                "type": "string",
                                "format": "uri",
                                "example": "https://www.facebook.com/hallandoates",
                                "x-parser-schema-id": "<anonymous-schema-386>"
                              }
                            }
                          },
                          "additionalProperties": {
                            "type": "object",
                            "description": "additional properties for the website user",
                            "properties": {
                              "workingWithAgent": {
                                "type": "boolean",
                                "x-parser-schema-id": "<anonymous-schema-495>"
                              }
                            },
                            "x-parser-schema-id": "<anonymous-schema-494>"
                          }
                        },
                        "x-parser-schema-id": "<anonymous-schema-486>"
                      },
                      "about": {
                        "type": "object",
                        "x-range": "PropertyListing",
                        "description": "the PropertyListing",
                        "example": {
                          "type": "PropertyListing",
                          "originatingSystemName": "GOTHAM-MLS",
                          "originatingSystemKey": "12345",
                          "url": "https://{company-website-url}/{path-to-listing}",
                          "streetAddress": "1007 Mountain Gate Rd",
                          "addressRegion": "New Jersey",
                          "addressLocality": "Gotham City",
                          "postalCode": "10010",
                          "addressCountry": "USA",
                          "listingPrice": {
                            "type": "PriceSpecification",
                            "price": 7500000,
                            "priceCurrency": "USD"
                          }
                        },
                        "x-parser-schema-id": "<anonymous-schema-529>"
                      },
                      "event": {
                        "type": "object",
                        "title": "Event",
                        "description": "An event happening at a certain time and location",
                        "x-range": "Event",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The item type (Linked-Data @type)",
                            "example": "Event",
                            "x-parser-schema-id": "<anonymous-schema-530>"
                          },
                          "name": {
                            "type": "string",
                            "description": "name of the event",
                            "example": "Property Showing 1007 Mountain Gate Rd",
                            "x-parser-schema-id": "<anonymous-schema-531>"
                          },
                          "description": {
                            "type": "string",
                            "description": "event message content",
                            "example": "an example meeting request for 4:00PM to 4:30PM.",
                            "x-parser-schema-id": "<anonymous-schema-532>"
                          },
                          "about": {
                            "type": "object",
                            "description": "a subject of the meeting or event",
                            "example": {
                              "type": "PropertyListing",
                              "originatingSystemName": "GOTHAM-MLS",
                              "originatingSystemKey": "12345",
                              "url": "https://{company-website-url}/{path-to-listing}",
                              "streetAddress": "1007 Mountain Gate Rd",
                              "addressRegion": "New Jersey",
                              "addressLocality": "Gotham City",
                              "postalCode": "10010",
                              "addressCountry": "USA",
                              "listingPrice": {
                                "type": "PriceSpecification",
                                "price": 7500000,
                                "priceCurrency": "USD"
                              }
                            },
                            "x-parser-schema-id": "<anonymous-schema-533>"
                          },
                          "startDate": {
                            "description": "the start date-time (ISO 8601 formated)",
                            "type": "string",
                            "format": "date-time",
                            "example": "2019-08-01T16:00Z",
                            "x-parser-schema-id": "<anonymous-schema-534>"
                          },
                          "endDate": {
                            "type": "string",
                            "description": "the end date-time (ISO 8601 formated)",
                            "format": "date-time",
                            "example": "2019-08-01T16:30Z",
                            "x-parser-schema-id": "<anonymous-schema-535>"
                          },
                          "organizer": {
                            "title": "organizer",
                            "description": "the event organizer",
                            "type": "object",
                            "example": {
                              "type": "RealEstateAgent",
                              "name": "Bruce Wayne",
                              "id": "https://batman.example.com/profile/card#me"
                            },
                            "x-parser-schema-id": "<anonymous-schema-536>"
                          }
                        },
                        "x-parser-schema-id": "Event"
                      },
                      "object": {
                        "type": "object",
                        "description": "A specific question - e.g. from a user seeking answers online, or collected in a Frequently Asked Questions (FAQ) document.",
                        "title": "Question",
                        "properties": {
                          "type": {
                            "const": "Question",
                            "x-parser-schema-id": "<anonymous-schema-496>"
                          },
                          "text": {
                            "$id": "http://realestate.yodata.me/schema/text.yaml",
                            "title": "text",
                            "type": "string",
                            "examples": [
                              "Populus debet control notitia sua",
                              "Aspicio pinguem in his vestimentis?",
                              "Et id ipsum vitae.",
                              "Amici, Romani et cives, aures vestras mihi praebe",
                              "Heus, ego iustus occurrit tibi et hoc est insanus, sed hic numerus meus est, ut me vocas fortasse."
                            ]
                          }
                        },
                        "x-parser-schema-id": "Question"
                      },
                      "recipient": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "RealEstateAgent",
                              "RealEstateTeam",
                              "RealEstateOrganization"
                            ],
                            "x-parser-schema-id": "<anonymous-schema-538>"
                          },
                          "name": {
                            "type": "string",
                            "x-parser-schema-id": "<anonymous-schema-539>"
                          },
                          "id": {
                            "type": "string",
                            "format": "uri",
                            "example": "https://agent.example.com/profile/card#me",
                            "x-parser-schema-id": "<anonymous-schema-540>"
                          },
                          "identifier": true
                        },
                        "examples": [
                          {
                            "type": "RealEstateAgent",
                            "name": "John Smith",
                            "id": "https://agentsmith.example.com/profile/card#me",
                            "identifier": {
                              "hsfid": "1234567890"
                            }
                          },
                          {
                            "type": "RealEstateTeam",
                            "name": "Smith & Smith",
                            "id": "https://smithandsmith.example.com/profile/card#me"
                          },
                          {
                            "type": "RealEstateOrganization",
                            "name": "Smith & Smith Real Estate",
                            "identifier": {
                              "hsfid": "sandsre"
                            }
                          },
                          {
                            "type": "RealEstateOrganization",
                            "name": "Smith & Smith Real Estate"
                          },
                          {
                            "type": "RealEstateOrganization",
                            "id": "https://smithandsmithrealestate.example.com/profile/card#me"
                          }
                        ],
                        "x-parser-schema-id": "<anonymous-schema-537>"
                      }
                    },
                    "x-parser-schema-id": "<anonymous-schema-527>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-526>"
              },
              "x-parser-original-schema-format": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-original-payload": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "const": "RequestShowingAction"
                      },
                      "agent": {
                        "type": "object",
                        "description": "a website user/visitor",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "Person",
                              "Contact"
                            ]
                          },
                          "name": {
                            "type": "string"
                          },
                          "givenName": {
                            "type": "string"
                          },
                          "familyName": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string",
                            "format": "email"
                          },
                          "telephone": {
                            "type": "string"
                          },
                          "identifier": {
                            "title": "identifier",
                            "type": "object",
                            "description": "identifier assigned to a contact by the vendor who originally created the contact",
                            "examples": [
                              {
                                "salesforceid": "0031U00002XW1QWQA1"
                              },
                              {
                                "vendoraid": "123456"
                              },
                              {
                                "originating_system_id": "123456"
                              }
                            ]
                          },
                          "sameAs": {
                            "title": "sameAs",
                            "type": "string",
                            "format": "uri",
                            "description": "vendor specific identifier for the user can be shared with other vendors to identify the user",
                            "examples": [
                              {
                                "amcecrmid": 1234567,
                                "salesForceId": "parsing"
                              },
                              {
                                "salesForceId": "ad4fa5f4as"
                              }
                            ]
                          },
                          "contactPoint": {
                            "$id": "htttp://realestate.yodata.me/schema/ContactPoint.json",
                            "title": "ContactPoint",
                            "description": "A point of contact for the entity. By convention in the real estate domain, ContactPoints\nare preferred over telephone, email, and faxNumber so the ContactPoint.name property can be used to label values\nfor example, Work Telephone, Home, as named contactPoint values.\n",
                            "type": "object",
                            "required": [
                              "type",
                              "name"
                            ],
                            "minProperties": 3,
                            "properties": {
                              "type": {
                                "type": "string",
                                "const": "ContactPoint"
                              },
                              "name": {
                                "type": "string",
                                "description": "a label for the contactPoint, i.e. 'Work', or 'Home'",
                                "examples": [
                                  "Work",
                                  "Home",
                                  "Vacation",
                                  "Bob's Cell",
                                  "Alice's Work"
                                ]
                              },
                              "telephone": {
                                "type": "string",
                                "x-faker": "phone.phoneNumber",
                                "examples": [
                                  "555-555-5555",
                                  "555-555-5555 x123",
                                  "555-555-5555 ext. 123",
                                  "+1-555-555-5555"
                                ]
                              },
                              "faxNumber": {
                                "type": "string",
                                "x-faker": "phone.phoneNumber",
                                "examples": [
                                  "555-555-5555",
                                  "555-555-5555 x123",
                                  "555-555-5555 ext. 123",
                                  "+1-555-555-5555"
                                ]
                              },
                              "email": {
                                "description": "an email address for the item.",
                                "type": "string",
                                "format": "email",
                                "x-faker": "internet.email",
                                "examples": [
                                  "bob@example.com",
                                  "alice@example.com"
                                ]
                              },
                              "url": {
                                "description": "primary URL for the item.",
                                "type": "string",
                                "format": "uri",
                                "example": "https://www.facebook.com/hallandoates"
                              }
                            }
                          },
                          "additionalProperties": {
                            "type": "object",
                            "description": "additional properties for the website user",
                            "properties": {
                              "workingWithAgent": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      },
                      "about": {
                        "type": "object",
                        "x-range": "PropertyListing",
                        "description": "the PropertyListing",
                        "example": {
                          "type": "PropertyListing",
                          "originatingSystemName": "GOTHAM-MLS",
                          "originatingSystemKey": "12345",
                          "url": "https://{company-website-url}/{path-to-listing}",
                          "streetAddress": "1007 Mountain Gate Rd",
                          "addressRegion": "New Jersey",
                          "addressLocality": "Gotham City",
                          "postalCode": "10010",
                          "addressCountry": "USA",
                          "listingPrice": {
                            "type": "PriceSpecification",
                            "price": 7500000,
                            "priceCurrency": "USD"
                          }
                        }
                      },
                      "event": {
                        "type": "object",
                        "title": "Event",
                        "description": "An event happening at a certain time and location",
                        "x-range": "Event",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The item type (Linked-Data @type)",
                            "example": "Event"
                          },
                          "name": {
                            "type": "string",
                            "description": "name of the event",
                            "example": "Property Showing 1007 Mountain Gate Rd"
                          },
                          "description": {
                            "type": "string",
                            "description": "event message content",
                            "example": "an example meeting request for 4:00PM to 4:30PM."
                          },
                          "about": {
                            "type": "object",
                            "description": "a subject of the meeting or event",
                            "example": {
                              "type": "PropertyListing",
                              "originatingSystemName": "GOTHAM-MLS",
                              "originatingSystemKey": "12345",
                              "url": "https://{company-website-url}/{path-to-listing}",
                              "streetAddress": "1007 Mountain Gate Rd",
                              "addressRegion": "New Jersey",
                              "addressLocality": "Gotham City",
                              "postalCode": "10010",
                              "addressCountry": "USA",
                              "listingPrice": {
                                "type": "PriceSpecification",
                                "price": 7500000,
                                "priceCurrency": "USD"
                              }
                            }
                          },
                          "startDate": {
                            "description": "the start date-time (ISO 8601 formated)",
                            "type": "string",
                            "format": "date-time",
                            "example": "2019-08-01T16:00Z"
                          },
                          "endDate": {
                            "type": "string",
                            "description": "the end date-time (ISO 8601 formated)",
                            "format": "date-time",
                            "example": "2019-08-01T16:30Z"
                          },
                          "organizer": {
                            "title": "organizer",
                            "description": "the event organizer",
                            "type": "object",
                            "example": {
                              "type": "RealEstateAgent",
                              "name": "Bruce Wayne",
                              "id": "https://batman.example.com/profile/card#me"
                            }
                          }
                        }
                      },
                      "object": {
                        "type": "object",
                        "description": "A specific question - e.g. from a user seeking answers online, or collected in a Frequently Asked Questions (FAQ) document.",
                        "title": "Question",
                        "properties": {
                          "type": {
                            "const": "Question"
                          },
                          "text": {
                            "$id": "http://realestate.yodata.me/schema/text.yaml",
                            "title": "text",
                            "type": "string",
                            "examples": [
                              "Populus debet control notitia sua",
                              "Aspicio pinguem in his vestimentis?",
                              "Et id ipsum vitae.",
                              "Amici, Romani et cives, aures vestras mihi praebe",
                              "Heus, ego iustus occurrit tibi et hoc est insanus, sed hic numerus meus est, ut me vocas fortasse."
                            ]
                          }
                        }
                      },
                      "recipient": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "RealEstateAgent",
                              "RealEstateTeam",
                              "RealEstateOrganization"
                            ]
                          },
                          "name": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string",
                            "format": "uri",
                            "example": "https://agent.example.com/profile/card#me"
                          },
                          "identifier": true
                        },
                        "examples": [
                          {
                            "type": "RealEstateAgent",
                            "name": "John Smith",
                            "id": "https://agentsmith.example.com/profile/card#me",
                            "identifier": {
                              "hsfid": "1234567890"
                            }
                          },
                          {
                            "type": "RealEstateTeam",
                            "name": "Smith & Smith",
                            "id": "https://smithandsmith.example.com/profile/card#me"
                          },
                          {
                            "type": "RealEstateOrganization",
                            "name": "Smith & Smith Real Estate",
                            "identifier": {
                              "hsfid": "sandsre"
                            }
                          },
                          {
                            "type": "RealEstateOrganization",
                            "name": "Smith & Smith Real Estate"
                          },
                          {
                            "type": "RealEstateOrganization",
                            "id": "https://smithandsmithrealestate.example.com/profile/card#me"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "schemaFormat": "application/vnd.aai.asyncapi;version=2.5.0",
              "x-parser-message-parsed": true
            }
          ]
        }
      }
    }
  },
  "x-parser-spec-parsed": true,
  "$id": "https://realestate.yodata.me/schema/asyncapi.json"
}
