$id: http://realestate.yodata.me/schema/RealEstateAgent.yaml
title: RealEstateAgent
description: A real estate agent who represents buyers and sellers
type: object
additionalProperties: true
properties:
  additionalName:
    title: additionalName
    description: >-
      any other name(s) associated with the entity, i.e. nickname, middle name,
      maiden name, etc. For multiple names, use a comma without space as a
      separator.
    type: string
    examples:
      - Johnny,John
      - Prince,The Artist Formerly Known as Prince,The Artist
      - Babs,Barbara
      - Katheryn Elizabeth Hudson,Katy Perry
      - Destiny Hope Cyrus,Miley Cyrus
    x-parser-schema-id: <anonymous-schema-117>
  address:
    type: object
    x-range: PostalAddress
    description: A physical address.
    example:
      type: PostalAddress
      name: Home
      addressCountry: USA
      addressCounty: Gotham County
      addressLocality: Gotham City
      addressRegion: New Jersey
      addressSubdivision: Gotham Heights
      postalCode: '10010'
      postOfficeBoxNumber: Box 1234
      streetAddress: 1007 Mountain Gate Rd
    x-parser-schema-id: <anonymous-schema-371>
  certification:
    type: object
    title: Certification
    description: A certification issued by an organization to an individual or business.
    x-range: Certification
    properties:
      type:
        description: Certification
        type: string
        enum:
          - Certification
        x-parser-schema-id: <anonymous-schema-373>
      name:
        type: string
        description: the name of the Certification
        example: e-Agent Certified
        x-parser-schema-id: <anonymous-schema-374>
      issuedBy:
        type: object
        x-range: RealEstateOrganization
        description: the issuing authority
        properties:
          type:
            enum:
              - RealEstateOrganization
            type: string
            description: The item type (Linked-Data @type)
            x-parser-schema-id: <anonymous-schema-376>
          id:
            example: https://example.com/profile/card#me
            type: string
            format: uri
            description: Linked-Data URI (@id)
            x-parser-schema-id: <anonymous-schema-377>
          name:
            type: string
            description: name of the issuing organization
            example: Gotham City Real Estate
            x-parser-schema-id: <anonymous-schema-378>
        x-parser-schema-id: <anonymous-schema-375>
      issuedTo:
        x-range: RealEstateAgent
        type: object
        description: the subject
        properties:
          type:
            enum:
              - RealEstateAgent
            type: string
            description: The item type (Linked-Data @type)
            x-parser-schema-id: <anonymous-schema-380>
          id:
            type: string
            format: uri
            description: Linked-Data URI (@id)
            x-parser-schema-id: <anonymous-schema-381>
          name:
            type: string
            description: the name of the item
            x-parser-schema-id: <anonymous-schema-93>
        x-parser-schema-id: <anonymous-schema-379>
    x-parser-schema-id: <anonymous-schema-372>
  contactPoint:
    $id: http://realestate.yodata.me/schema/ContactPoint.json
    title: ContactPoint
    description: >
      A point of contact for the entity. By convention in the real estate
      domain, ContactPoints

      are preferred over telephone, email, and faxNumber so the
      ContactPoint.name property can be used to label values

      for example, Work Telephone, Home, as named contactPoint values.
    type: object
    required:
      - type
      - name
    minProperties: 3
    properties:
      type:
        type: string
        const: ContactPoint
        x-parser-schema-id: <anonymous-schema-382>
      name:
        type: string
        description: a label for the contactPoint, i.e. 'Work', or 'Home'
        examples:
          - Work
          - Home
          - Vacation
          - Bob's Cell
          - Alice's Work
        x-parser-schema-id: <anonymous-schema-383>
      telephone:
        type: string
        x-faker: phone.phoneNumber
        examples:
          - 555-555-5555
          - 555-555-5555 x123
          - 555-555-5555 ext. 123
          - +1-555-555-5555
        x-parser-schema-id: <anonymous-schema-384>
      faxNumber:
        type: string
        x-faker: phone.phoneNumber
        examples:
          - 555-555-5555
          - 555-555-5555 x123
          - 555-555-5555 ext. 123
          - +1-555-555-5555
        x-parser-schema-id: <anonymous-schema-385>
      email:
        description: an email address for the item.
        type: string
        format: email
        x-faker: internet.email
        examples:
          - bob@example.com
          - alice@example.com
        x-parser-schema-id: <anonymous-schema-386>
      url:
        description: primary URL for the item.
        type: string
        format: uri
        example: https://www.facebook.com/hallandoates
        x-parser-schema-id: <anonymous-schema-387>
  email:
    type: string
    format: email
    x-faker: internet.email
    x-parser-schema-id: <anonymous-schema-94>
  familyName:
    $id: http://realestate.yodata.me/schema/familyName.yaml
    type: string
    title: Family Name
    description: Last Name of a person
    x-faker: name.lastName
    maxLength: 50
    externalDocs:
      description: Family Name
      url: https://schema.org/familyName
    examples:
      - Smith
      - Jones
      - Parker
      - Monk
      - Brown
      - Miller
      - Davis
      - Wilson
      - Fitzgerald
      - Johnson
      - Williams
  givenName:
    type: string
    description: First Name of a person
    x-faker: name.firstName
    examples:
      - John
      - Jane
      - Mary
      - Joseph
      - William
      - David
      - Richard
      - Charles
      - Thomas
      - Christopher
      - Daniel
      - Matthew
      - Anthony
      - Donald
      - Mark
      - Paul
      - Steven
      - Andrew
      - Kenneth
      - George
      - Joshua
      - Kevin
      - Brian
      - Edward
      - Ronald
      - Timothy
      - Jason
      - Jeffrey
      - Ryan
      - Jacob
    x-parser-schema-id: <anonymous-schema-119>
  id:
    type: string
    format: uri
    description: Linked-Data URI (@id)
    x-parser-schema-id: <anonymous-schema-381>
  identifier:
    title: identifier
    type: object
    description: >-
      identifier assigned to a contact by the vendor who originally created the
      contact
    examples:
      - salesforceid: 0031U00002XW1QWQA1
      - vendoraid: '123456'
      - originating_system_id: '123456'
    x-parser-schema-id: <anonymous-schema-95>
  image:
    title: image
    description: an ImageObject or URI reference to an image on the web.
    type: array
    x-range:
      - ImageObject
    items:
      - type: object
        allOf:
          - title: MediaObject
            description: an image, video or document availble for download
            x-subclass:
              - ImageObject
              - DigitalDocument
            allOf:
              - $id: http://realestate.yodata.me/schema/Thing
                type: object
                title: Thing
                summary: The root type of all Things.
                required:
                  - type
                propertyNames:
                  pattern: ^[a-z@$][a-zA-Z0-9-_]+$
                  x-parser-schema-id: <anonymous-schema-275>
                properties:
                  type:
                    type: string
                    pattern: ^[A-Z][a-zA-Z0-9]+$
                    description: The item type (Linked-Data @type)
                    x-parser-schema-id: <anonymous-schema-273>
                  '@id':
                    type: string
                    format: uri
                    description: the liked data uri for the Thing
                    x-parser-schema-id: <anonymous-schema-274>
                x-parser-schema-id: Thing
              - properties:
                  type:
                    type: string
                    enum:
                      - MediaObject
                      - ImageObject
                      - DigitalDocument
                  id:
                    description: the URL to access the item.
                    example: http://user.example.com/public/logo/fileName.zip
                    type: string
                    format: uri
                  name:
                    type: string
                    description: the file name of the object.
                    example: fileName.zip
                  encodingFormat:
                    type: string
                    description: MIME type
                    example: application/zip
                  about:
                    type: string
                    format: uri
                    description: URI to the subject of the image or logo
                    example: http://user.example.com/profile/card#me
                  url:
                    type: string
                    format: uri
                    description: URL of the image content
                    example: http://user.example.com/public/profile/image.jpg
                x-parser-schema-id: <anonymous-schema-276>
            x-parser-schema-id: MediaObject
          - title: ImageObject
            x-range: ImageObject
            properties:
              type:
                enum:
                  - ImageObject
                example: ImageObject
              id:
                example: http://user.example.com/public/logo/image.jpg
              name:
                example: image.jpg
              encodingFormat:
                example: image/jpeg
            x-parser-schema-id: <anonymous-schema-277>
        x-parser-schema-id: <anonymous-schema-272>
    x-parser-schema-id: <anonymous-schema-271>
  jobTitle:
    type: array
    items:
      title: jobTitle
      description: The job title of the person (for example, Financial Manager).
      type: string
      x-faker: name.jobTitle
      examples:
        - CEO
        - Sales Manager
        - Escrow Officer
        - Transaction Coordinator
        - Director of Marketing
        - Senior Loan Officer
        - Loan Officer
        - Sanitation Engineer
        - Owner
        - Cofounder
        - Founder
        - President
        - Vice President of Sales
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
        - null
      x-parser-schema-id: <anonymous-schema-389>
    x-parser-schema-id: <anonymous-schema-388>
  memberOf:
    title: memberOf
    description: >-
      an Organization (or ProgramMembership) to which this Person or
      Organization belongs.
    type: array
    x-range:
      - OrganizationRole
      - URI
    items:
      anyOf:
        - title: OrganizationRole
          type: object
          description: describes a role played by a member and a group or organization.
          properties:
            type:
              type: string
              description: a role played by the member in the memberOf group
              enum:
                - OrganizationRole
              x-parser-schema-id: <anonymous-schema-392>
            roleName:
              type: string
              description: the role name
              example: Owner
              x-parser-schema-id: <anonymous-schema-393>
            memberOf:
              description: the org or group where the role is performed
              type: object
              example:
                type: RealEstateOrganization
                id: http://orgid.example.com/profile/card#me
              x-parser-schema-id: <anonymous-schema-394>
            member:
              description: member object or id
              type: string
              format: uri
              example: https://memberid.example.com/profile/card#me
              x-parser-schema-id: <anonymous-schema-395>
            startDate:
              type: string
              format: date-time
              description: date the member began performing this role
              x-parser-schema-id: <anonymous-schema-396>
            endDate:
              type: string
              format: date-time
              description: date the member stopped performing the role
              x-parser-schema-id: <anonymous-schema-397>
          x-parser-schema-id: OrganizationRole
        - type: string
          format: uri
          x-parser-schema-id: <anonymous-schema-398>
      x-parser-schema-id: <anonymous-schema-391>
    x-parser-schema-id: <anonymous-schema-390>
  name:
    type: string
    description: the name of the item
    x-parser-schema-id: <anonymous-schema-93>
  parentOrganization:
    $id: http://realestate.yodata.me/schema/parentOrganization
    title: parentOrganization
    description: organizations of which this org is a part.
    type: array
    items:
      type: string
      format: uri
      x-parser-schema-id: <anonymous-schema-399>
  permit:
    title: Permit
    description: A permit issued by an organization to an individual or business.
    type: object
    x-hasSubclass:
      - RealEstateLicense
    properties:
      type:
        type: string
        description: Permit type.
        enum:
          - Permit
        x-parser-schema-id: <anonymous-schema-401>
      name:
        type: string
        description: Common or display value of the Permit.
        example: DRE Number
        x-parser-schema-id: <anonymous-schema-402>
      issuedBy:
        type: object
        x-range: Organization
        description: The issuing authority
        example:
          type: State
          name: California
        x-parser-schema-id: <anonymous-schema-403>
      issuedThrough:
        type: object
        description: the service through which the permit was granted
        example:
          type: Service
          name: Department of Real Estate
        x-parser-schema-id: <anonymous-schema-404>
      validIn:
        type: object
        x-range: Place
        x-parser-schema-id: <anonymous-schema-405>
      validFrom:
        type: string
        format: date-time
        description: start date
        x-parser-schema-id: <anonymous-schema-406>
      validUntil:
        type: string
        format: date-time
        description: end date
        x-parser-schema-id: <anonymous-schema-407>
    x-parser-schema-id: <anonymous-schema-400>
  subOrganization:
    $id: http://realestate.yodata.me/schema/subOrganization
    title: subOrganization
    description: child organizations of the organization
    type: array
    items:
      type: string
      format: uri
      x-parser-schema-id: <anonymous-schema-408>
  type:
    type: string
    const: RealEstateAgent
    x-parser-schema-id: <anonymous-schema-370>
  url:
    title: url
    type: string
    format: uri
    description: URL of the item.
    x-parser-schema-id: <anonymous-schema-409>
x-parser-schema-id: RealEstateAgent

