title: Person
type: object
required:
  - type
  - name
properties:
  additionalName:
    title: additionalName
    description: >-
      any other name(s) associated with the entity, i.e. nickname, middle name,
      maiden name, etc. For multiple names, use a comma without space as a
      separator.
    type: string
    examples:
      - Johnny,John
      - Prince,The Artist Formerly Known as Prince,The Artist
      - Babs,Barbara
      - Katheryn Elizabeth Hudson,Katy Perry
      - Destiny Hope Cyrus,Miley Cyrus
  address:
    type: array
    items:
      $id: http://realestate.yodata.me/schemas/PostalAddress.yaml
      title: PostalAddress
      type: object
      description: A physical address.
      properties:
        type:
          type: string
          const: PostalAddress
          x-parser-schema-id: <anonymous-schema-94>
        streetAddress:
          $id: streetAddress.yaml
          title: streetAddress
          type: string
          description: the street address
          example: 1007 Mountain Gate Rd
          maxLength: 75
          x-faker: address.streetAddress
          x-parser-schema-id: streetAddress
        postOfficeBoxNumber:
          $id: http://realestate.yodata.me/schema/postOfficeBoxNumber
          title: postOfficeBoxNumber
          type: string
          description: The post office box number for PO box addresses.
          x-faker: address.secondaryAddress
          example: Box 1234
        addressRegion:
          $id: addressRegion
          title: addressRegion
          type: string
          description: abbreviated state or province
          max-length: 2
          examples:
            - NJ
            - CA
            - MI
            - null
          x-faker: address.stateAbbr
          x-parser-schema-id: addressRegion
        addressLocality:
          $id: addressLocality
          type: string
          description: City, Township.
          maxLength: 50
          x-faker: address.city
          examples:
            - Gotham City
            - Kulasmouth
            - Heidistad
            - Altamonte Springs
            - West Ahmed
            - Blaiseview
            - null
          x-parser-schema-id: addressLocality
        postalCode:
          $id: http://realestate.yodata.me/schema/postalCode
          title: postalCode
          type: string
          description: Zip/Post Code
          maxLength: 12
          examples:
            - '10010'
            - 50239-7698
            - null
          x-parser-schema-id: postalCode
        addressCountry:
          $id: http://realestate.yodata.me/schema/addressCountry
          title: addressCountry
          description: two-letter ISO 3166-1 alpha-2 country code
          type: string
          enum:
            - CA
            - DE
            - GR
            - IN
            - IT
            - MX
            - PE
            - PT
            - ES
            - AE
            - GB
            - US
          x-parser-schema-id: addressCountry
        addressCounty:
          $id: http://realestate.yodata.me/schema/addressCounty
          title: addressCounty
          description: County
          type: string
          x-faker: address.county
          x-parser-schema-id: addressCounty
        addressSubdivision:
          $id: http://realestate.yodata.me/schema/addressSubdivision
          title: addressSubdivision
          description: the subdivision or neighborhood (us real estate extension)
          type: string
          x-faker: address.streetName
          examples:
            - Gotham Heights
            - South Kensington
            - SOMA (South of Market)
            - Nob Hill
      x-parser-schema-id: PostalAddress
  affiliation:
    description: An organization that this person is affiliated with
    type: array
    items:
      type: string
      format: uri
      example: https://example.com/profile/card#me
      x-parser-schema-id: <anonymous-schema-92>
  birthDate:
    description: date of birth.
    type: string
    format: date
  contactPoint:
    description: contact points for the person
    type: array
    items:
      $id: http://realestate.yodata.me/schema/ContactPoint.json
      title: ContactPoint
      description: >
        A point of contact for the entity. By convention in the real estate
        domain, ContactPoints

        are preferred over telephone, email, and faxNumber so the
        ContactPoint.name property can be used to label values

        for example, Work Telephone, Home, as named contactPoint values.
      type: object
      required:
        - type
        - name
      minProperties: 3
      properties:
        type:
          type: string
          const: ContactPoint
        name:
          type: string
          description: a label for the contactPoint, i.e. 'Work', or 'Home'
          examples:
            - Work
            - Home
            - Vacation
            - Bob's Cell
            - Alice's Work
        telephone:
          type: string
          x-faker: phone.phoneNumber
          examples:
            - 555-555-5555
            - 555-555-5555 x123
            - 555-555-5555 ext. 123
            - +1-555-555-5555
        faxNumber:
          type: string
          x-faker: phone.phoneNumber
          examples:
            - 555-555-5555
            - 555-555-5555 x123
            - 555-555-5555 ext. 123
            - +1-555-555-5555
        email:
          description: an email address for the item.
          type: string
          format: email
          x-faker: internet.email
          examples:
            - bob@example.com
            - alice@example.com
        url:
          description: primary URL for the item.
          type: string
          format: uri
          example: https://www.facebook.com/hallandoates
      x-parser-schema-id: ContactPoint
  email:
    title: email
    description: a valid email address
    type: string
    format: email
    x-faker: internet.email
  familyName:
    $id: http://realestate.yodata.me/schema/familyName.yaml
    type: string
    title: Family Name
    description: Last Name of a person
    x-faker: name.lastName
    maxLength: 50
    externalDocs:
      description: Family Name
      url: https://schema.org/familyName
    examples:
      - Smith
      - Jones
      - Parker
      - Monk
      - Brown
      - Miller
      - Davis
      - Wilson
      - Fitzgerald
      - Johnson
      - Williams
  faxNumber:
    type: string
    description: Do people still use fax machines?
    x-faker: phone.phoneNumber
  givenName:
    type: string
    description: First Name of a person
    x-faker: name.firstName
    examples:
      - John
      - Jane
      - Mary
      - Joseph
      - William
      - David
      - Richard
      - Charles
      - Thomas
      - Christopher
      - Daniel
      - Matthew
      - Anthony
      - Donald
      - Mark
      - Paul
      - Steven
      - Andrew
      - Kenneth
      - George
      - Joshua
      - Kevin
      - Brian
      - Edward
      - Ronald
      - Timothy
      - Jason
      - Jeffrey
      - Ryan
      - Jacob
  honorificPrefix:
    title: honorificPrefix
    description: An honorific prefix preceding a Person's name such as Dr/Mrs/Mr.
    type: string
    example: Dr
  honorificSuffix:
    title: honorificSuffix
    description: An honorific title following a person's name like M.D.
    type: string
    example: Esq
  jobTitle:
    title: jobTitle
    description: job tiles associated with the item
    type: array
    items:
      type: string
      x-parser-schema-id: <anonymous-schema-109>
    example:
      - Chief Data Officer
      - Sanitation Engineer
  knowsLanguage:
    description: languages spoken by the person
    type: array
    items:
      $id: http://realestate.yodata.me/schema/Language.yaml
      description: a written or spoken Language
      title: Language
      type: object
      required:
        - type
        - name
        - additionalName
      properties:
        type:
          type: string
          const: Language
        name:
          type: string
          description: the display name of the language
        additionalName:
          type: string
          description: BCP 47 language code
      examples:
        - type: Language
          name: English
          additionalName: en-us
        - type: Language
          name: Spanish
          additionalName: es
        - type: Language
          name: French
          additionalName: fr
        - type: Language
          name: German
          additionalName: de
        - type: Language
          name: Italian
          additionalName: it
        - type: Language
          name: Japanese
          additionalName: ja
        - type: Language
          name: Korean
          additionalName: ko
        - type: Language
          name: Portuguese
          additionalName: pt
        - type: Language
          name: Russian
          additionalName: ru
        - type: Language
          name: Chinese
          additionalName: zh
        - type: Language
          name: Arabic
          additionalName: ar
        - type: Language
          name: Hindi
          additionalName: hi
        - type: Language
          name: Bengali
          additionalName: bn
        - type: Language
          name: Portuguese
          additionalName: pt
      x-parser-schema-id: Language
  name:
    description: Full name of the person.
    type: string
    x-faker: name.findName
  telephone:
    $id: telephone
    title: telephone
    type: string
    description: Primary phone number.
    example: '+15558675309'
  type:
    type: string
  worksFor:
    type: string
    description: Organizations the person works for.
    x-faker: company.companyName
x-parser-schema-id: Person
$id: http://realestate.yodata.me/schema/Person.yaml

