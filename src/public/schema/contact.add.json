{
  "$id": "http://realestate.yodata.me/schema/contact.add.json",
  "messageId": "contact#add",
  "title": "contact#add",
  "summary": "a contact (data.object) is added by a user (data.agent), optionally to a specific targetCollection",
  "contentType": "application/json",
  "externalDocs": null,
  "headers": {
    "type": "object",
    "properties": {
      "time": {
        "type": "string",
        "format": "date-time",
        "description": "date & time the event was produced",
        "x-faker": "date.past",
        "x-parser-schema-id": "<anonymous-schema-7>"
      },
      "agent": {
        "type": "string",
        "format": "uri",
        "summary": "the event provider who sent the event via a subscription authorized to your service.",
        "description": "if you are a multi-tenant app, then the agent is the user associated with the event data.\nany future events related to this message will be sent to the same agent/recipient\n",
        "examples": [
          "https://teamsupermario.example.com/profile/card#me",
          "https://bigbrandrealestate.example.com/profile/card#me"
        ],
        "x-parser-schema-id": "<anonymous-schema-8>"
      },
      "instrument": {
        "type": "string",
        "format": "uri",
        "description": "the app or service that produced the event on behalf of the agent/user",
        "examples": [
          "http://supercrm.example.com/profile/card#me",
          "http://reliance.example.com/profile/card#me",
          "http://moxiworks.example.com/profile/card#me",
          "http://listing-manager.example.com/profile/card#me",
          "http://ace.example.com/profile/card#me",
          "http://roqlogic.example.com/profile/card#me"
        ],
        "x-parser-schema-id": "<anonymous-schema-9>"
      },
      "source": {
        "type": "string",
        "format": "uri",
        "description": "a copy of the event was sent to the source(s).",
        "examples": [
          "https://bigbrandrealestate.example.com/profile/card#me"
        ],
        "x-parser-schema-id": "<anonymous-schema-10>"
      },
      "originalRecipient": {
        "type": "string",
        "format": "uri",
        "summary": "the original recipient of the event",
        "description": "the originalRecipient helps you determine the subscription that delivered the event to you.\nif the originalRecipient is the same as the agent, then the you are subscribed to the agent.\nif the originalRecipient is different from the agent, then you are subscribed to the event source\n",
        "examples": [
          "http://bigbrandrealestate.example.com/profile/card#me",
          "http://teamsupermario.example.com/profile/card#me",
          "http://bob.example.com/profile/card#me",
          "http://jane.example.com/profile/card#me",
          "http://joe.example.com/profile/card#me",
          "http://jill.example.com/profile/card#me",
          "http://jim.example.com/profile/card#me",
          "http://jennifer.example.com/profile/card#me"
        ],
        "x-parser-schema-id": "<anonymous-schema-11>"
      },
      "id": {
        "type": "string",
        "format": "uri",
        "summary": "the event id - the cannonical identifier for the event",
        "description": "the Event ID (aka \"Publish ID\") is the immutable canonical identifier for the event.\nit is a URI that is unique to the event and will not change.\nall subscribers will receive the same id for the same event.\n",
        "examples": [
          "http://supercrm.example.com/publish/12345",
          "http://reliance.example.com/publish/23456",
          "http://moxiworks.example.com/publish/34567",
          "http://listing-manager.example.com/publish/45678",
          "http://ace.example.com/publish/56789",
          "http://roqlogic.example.com/publish/67890"
        ],
        "x-parser-schema-id": "<anonymous-schema-12>"
      },
      "@id": {
        "type": "string",
        "format": "uri",
        "summary": "the @id is the url in your inbox where you can retrieve the event",
        "examples": [
          "http://reliance.example.com/inbox/23456",
          "http://moxiworks.example.com/inbox/34567",
          "http://listing-manager.example.com/inbox/45678",
          "http://ace.example.com/inbox/56789",
          "http://roqlogic.example.com/inbox/67890"
        ],
        "x-parser-schema-id": "<anonymous-schema-13>"
      }
    },
    "x-parser-schema-id": "<anonymous-schema-6>"
  },
  "payload": {
    "type": "object",
    "required": [
      "topic",
      "data"
    ],
    "properties": {
      "data": {
        "type": "object",
        "required": [
          "object"
        ],
        "properties": {
          "type": {
            "const": "AddAction",
            "x-parser-schema-id": "<anonymous-schema-86>"
          },
          "agent": {
            "type": "object",
            "properties": {
              "type": {
                "const": "Person",
                "x-parser-schema-id": "<anonymous-schema-88>"
              },
              "name": {
                "$id": "http://realestate.yodata.me/schema/name.yaml",
                "title": "name",
                "type": "string",
                "x-parser-schema-id": "name"
              },
              "email": {
                "title": "email",
                "description": "a valid email address",
                "type": "string",
                "format": "email",
                "x-faker": "internet.email",
                "x-parser-schema-id": "<anonymous-schema-89>"
              },
              "identifier": {
                "title": "identifier",
                "type": "object",
                "summary": "identifier assigned to a contact by the vendor who originally created the contact",
                "maxProperties": 1,
                "minProperties": 1,
                "examples": [
                  {
                    "bhhsconsumerid": "12345"
                  },
                  {
                    "salesforceid": "56789"
                  }
                ],
                "x-parser-schema-id": "identifier"
              }
            },
            "required": [
              "type"
            ],
            "minProperties": 2,
            "x-parser-schema-id": "<anonymous-schema-87>"
          },
          "object": {
            "allOf": [
              {
                "title": "Person",
                "type": "object",
                "required": [
                  "type",
                  "name"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "x-parser-schema-id": "<anonymous-schema-90>"
                  },
                  "affiliation": {
                    "description": "An organization that this person is affiliated with",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uri",
                      "example": "https://example.com/profile/card#me",
                      "x-parser-schema-id": "<anonymous-schema-92>"
                    },
                    "x-parser-schema-id": "<anonymous-schema-91>"
                  },
                  "address": {
                    "type": "array",
                    "items": {
                      "$id": "http://realestate.yodata.me/schemas/PostalAddress.yaml",
                      "title": "PostalAddress",
                      "type": "object",
                      "description": "A physical address.",
                      "properties": {
                        "type": {
                          "type": "string",
                          "const": "PostalAddress",
                          "x-parser-schema-id": "<anonymous-schema-94>"
                        },
                        "streetAddress": {
                          "$id": "streetAddress.yaml",
                          "title": "streetAddress",
                          "type": "string",
                          "description": "the street address",
                          "example": "1007 Mountain Gate Rd",
                          "maxLength": 75,
                          "x-faker": "address.streetAddress",
                          "x-parser-schema-id": "streetAddress"
                        },
                        "postOfficeBoxNumber": {
                          "$id": "http://realestate.yodata.me/schema/postOfficeBoxNumber",
                          "title": "postOfficeBoxNumber",
                          "type": "string",
                          "description": "The post office box number for PO box addresses.",
                          "x-faker": "address.secondaryAddress",
                          "example": "Box 1234"
                        },
                        "addressRegion": {
                          "$id": "addressRegion",
                          "title": "addressRegion",
                          "type": "string",
                          "description": "abbreviated state or province",
                          "max-length": 2,
                          "examples": [
                            "NJ",
                            "CA",
                            "MI",
                            null
                          ],
                          "x-faker": "address.stateAbbr",
                          "x-parser-schema-id": "addressRegion"
                        },
                        "addressLocality": {
                          "$id": "addressLocality",
                          "type": "string",
                          "description": "City, Township.",
                          "maxLength": 50,
                          "x-faker": "address.city",
                          "examples": [
                            "Gotham City",
                            "Kulasmouth",
                            "Heidistad",
                            "Altamonte Springs",
                            "West Ahmed",
                            "Blaiseview",
                            null
                          ],
                          "x-parser-schema-id": "addressLocality"
                        },
                        "postalCode": {
                          "$id": "http://realestate.yodata.me/schema/postalCode",
                          "title": "postalCode",
                          "type": "string",
                          "description": "Zip/Post Code",
                          "maxLength": 12,
                          "examples": [
                            "10010",
                            "50239-7698",
                            null
                          ],
                          "x-parser-schema-id": "postalCode"
                        },
                        "addressCountry": {
                          "$id": "http://realestate.yodata.me/schema/addressCountry",
                          "title": "addressCountry",
                          "description": "two-letter ISO 3166-1 alpha-2 country code",
                          "type": "string",
                          "enum": [
                            "CA",
                            "DE",
                            "GR",
                            "IN",
                            "IT",
                            "MX",
                            "PE",
                            "PT",
                            "ES",
                            "AE",
                            "GB",
                            "US"
                          ],
                          "x-parser-schema-id": "addressCountry"
                        },
                        "addressCounty": {
                          "$id": "http://realestate.yodata.me/schema/addressCounty",
                          "title": "addressCounty",
                          "description": "County",
                          "type": "string",
                          "x-faker": "address.county",
                          "x-parser-schema-id": "addressCounty"
                        },
                        "addressSubdivision": {
                          "$id": "http://realestate.yodata.me/schema/addressSubdivision",
                          "title": "addressSubdivision",
                          "description": "the subdivision or neighborhood (us real estate extension)",
                          "type": "string",
                          "x-faker": "address.streetName",
                          "examples": [
                            "Gotham Heights",
                            "South Kensington",
                            "SOMA (South of Market)",
                            "Nob Hill"
                          ]
                        }
                      },
                      "x-parser-schema-id": "PostalAddress"
                    },
                    "x-parser-schema-id": "<anonymous-schema-93>"
                  },
                  "birthDate": {
                    "description": "date of birth.",
                    "type": "string",
                    "format": "date",
                    "x-parser-schema-id": "<anonymous-schema-95>"
                  },
                  "contactPoint": {
                    "description": "contact points for the person",
                    "type": "array",
                    "items": {
                      "$id": "http://realestate.yodata.me/schema/ContactPoint.json",
                      "title": "ContactPoint",
                      "description": "A point of contact for the entity. By convention in the real estate domain, ContactPoints\nare preferred over telephone, email, and faxNumber so the ContactPoint.name property can be used to label values\nfor example, Work Telephone, Home, as named contactPoint values.\n",
                      "type": "object",
                      "required": [
                        "type",
                        "name"
                      ],
                      "minProperties": 3,
                      "properties": {
                        "type": {
                          "type": "string",
                          "const": "ContactPoint",
                          "x-parser-schema-id": "<anonymous-schema-97>"
                        },
                        "name": {
                          "type": "string",
                          "description": "a label for the contactPoint, i.e. 'Work', or 'Home'",
                          "examples": [
                            "Work",
                            "Home",
                            "Vacation",
                            "Bob's Cell",
                            "Alice's Work"
                          ],
                          "x-parser-schema-id": "<anonymous-schema-98>"
                        },
                        "telephone": {
                          "type": "string",
                          "x-faker": "phone.phoneNumber",
                          "examples": [
                            "555-555-5555",
                            "555-555-5555 x123",
                            "555-555-5555 ext. 123",
                            "+1-555-555-5555"
                          ],
                          "x-parser-schema-id": "<anonymous-schema-99>"
                        },
                        "faxNumber": {
                          "type": "string",
                          "x-faker": "phone.phoneNumber",
                          "examples": [
                            "555-555-5555",
                            "555-555-5555 x123",
                            "555-555-5555 ext. 123",
                            "+1-555-555-5555"
                          ],
                          "x-parser-schema-id": "<anonymous-schema-100>"
                        },
                        "email": {
                          "description": "an email address for the item.",
                          "type": "string",
                          "format": "email",
                          "x-faker": "internet.email",
                          "examples": [
                            "bob@example.com",
                            "alice@example.com"
                          ],
                          "x-parser-schema-id": "<anonymous-schema-101>"
                        },
                        "url": {
                          "description": "primary URL for the item.",
                          "type": "string",
                          "format": "uri",
                          "example": "https://www.facebook.com/hallandoates",
                          "x-parser-schema-id": "<anonymous-schema-102>"
                        }
                      },
                      "x-parser-schema-id": "ContactPoint"
                    },
                    "x-parser-schema-id": "<anonymous-schema-96>"
                  },
                  "email": {
                    "title": "email",
                    "description": "a valid email address",
                    "type": "string",
                    "format": "email",
                    "x-faker": "internet.email",
                    "x-parser-schema-id": "<anonymous-schema-89>"
                  },
                  "additionalName": {
                    "title": "additionalName",
                    "description": "any other name(s) associated with the entity, i.e. nickname, middle name, maiden name, etc. For multiple names, use a comma without space as a separator.",
                    "type": "string",
                    "examples": [
                      "Johnny,John",
                      "Prince,The Artist Formerly Known as Prince,The Artist",
                      "Babs,Barbara",
                      "Katheryn Elizabeth Hudson,Katy Perry",
                      "Destiny Hope Cyrus,Miley Cyrus"
                    ],
                    "x-parser-schema-id": "<anonymous-schema-103>"
                  },
                  "familyName": {
                    "$id": "http://realestate.yodata.me/schema/familyName.yaml",
                    "type": "string",
                    "title": "Family Name",
                    "description": "Last Name of a person",
                    "x-faker": "name.lastName",
                    "maxLength": 50,
                    "externalDocs": {
                      "description": "Family Name",
                      "url": "https://schema.org/familyName"
                    },
                    "examples": [
                      "Smith",
                      "Jones",
                      "Parker",
                      "Monk",
                      "Brown",
                      "Miller",
                      "Davis",
                      "Wilson",
                      "Fitzgerald",
                      "Johnson",
                      "Williams"
                    ]
                  },
                  "faxNumber": {
                    "type": "string",
                    "description": "Do people still use fax machines?",
                    "x-faker": "phone.phoneNumber",
                    "x-parser-schema-id": "<anonymous-schema-104>"
                  },
                  "givenName": {
                    "type": "string",
                    "description": "First Name of a person",
                    "x-faker": "name.firstName",
                    "examples": [
                      "John",
                      "Jane",
                      "Mary",
                      "Joseph",
                      "William",
                      "David",
                      "Richard",
                      "Charles",
                      "Thomas",
                      "Christopher",
                      "Daniel",
                      "Matthew",
                      "Anthony",
                      "Donald",
                      "Mark",
                      "Paul",
                      "Steven",
                      "Andrew",
                      "Kenneth",
                      "George",
                      "Joshua",
                      "Kevin",
                      "Brian",
                      "Edward",
                      "Ronald",
                      "Timothy",
                      "Jason",
                      "Jeffrey",
                      "Ryan",
                      "Jacob"
                    ],
                    "x-parser-schema-id": "<anonymous-schema-105>"
                  },
                  "honorificPrefix": {
                    "title": "honorificPrefix",
                    "description": "An honorific prefix preceding a Person's name such as Dr/Mrs/Mr.",
                    "type": "string",
                    "example": "Dr",
                    "x-parser-schema-id": "<anonymous-schema-106>"
                  },
                  "honorificSuffix": {
                    "title": "honorificSuffix",
                    "description": "An honorific title following a person's name like M.D.",
                    "type": "string",
                    "example": "Esq",
                    "x-parser-schema-id": "<anonymous-schema-107>"
                  },
                  "jobTitle": {
                    "title": "jobTitle",
                    "description": "job tiles associated with the item",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "x-parser-schema-id": "<anonymous-schema-109>"
                    },
                    "example": [
                      "Chief Data Officer",
                      "Sanitation Engineer"
                    ],
                    "x-parser-schema-id": "<anonymous-schema-108>"
                  },
                  "knowsLanguage": {
                    "description": "languages spoken by the person",
                    "type": "array",
                    "items": {
                      "$id": "http://realestate.yodata.me/schema/Language.yaml",
                      "description": "a written or spoken Language",
                      "title": "Language",
                      "type": "object",
                      "required": [
                        "type",
                        "name",
                        "additionalName"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "const": "Language",
                          "x-parser-schema-id": "<anonymous-schema-111>"
                        },
                        "name": {
                          "type": "string",
                          "description": "the display name of the language",
                          "x-parser-schema-id": "<anonymous-schema-112>"
                        },
                        "additionalName": {
                          "type": "string",
                          "description": "BCP 47 language code",
                          "x-parser-schema-id": "<anonymous-schema-113>"
                        }
                      },
                      "examples": [
                        {
                          "type": "Language",
                          "name": "English",
                          "additionalName": "en-us"
                        },
                        {
                          "type": "Language",
                          "name": "Spanish",
                          "additionalName": "es"
                        },
                        {
                          "type": "Language",
                          "name": "French",
                          "additionalName": "fr"
                        },
                        {
                          "type": "Language",
                          "name": "German",
                          "additionalName": "de"
                        },
                        {
                          "type": "Language",
                          "name": "Italian",
                          "additionalName": "it"
                        },
                        {
                          "type": "Language",
                          "name": "Japanese",
                          "additionalName": "ja"
                        },
                        {
                          "type": "Language",
                          "name": "Korean",
                          "additionalName": "ko"
                        },
                        {
                          "type": "Language",
                          "name": "Portuguese",
                          "additionalName": "pt"
                        },
                        {
                          "type": "Language",
                          "name": "Russian",
                          "additionalName": "ru"
                        },
                        {
                          "type": "Language",
                          "name": "Chinese",
                          "additionalName": "zh"
                        },
                        {
                          "type": "Language",
                          "name": "Arabic",
                          "additionalName": "ar"
                        },
                        {
                          "type": "Language",
                          "name": "Hindi",
                          "additionalName": "hi"
                        },
                        {
                          "type": "Language",
                          "name": "Bengali",
                          "additionalName": "bn"
                        },
                        {
                          "type": "Language",
                          "name": "Portuguese",
                          "additionalName": "pt"
                        }
                      ],
                      "x-parser-schema-id": "Language"
                    },
                    "x-parser-schema-id": "<anonymous-schema-110>"
                  },
                  "name": {
                    "description": "Full name of the person.",
                    "type": "string",
                    "x-faker": "name.findName",
                    "x-parser-schema-id": "<anonymous-schema-114>"
                  },
                  "telephone": {
                    "$id": "telephone",
                    "title": "telephone",
                    "type": "string",
                    "description": "Primary phone number.",
                    "example": "+15558675309"
                  },
                  "worksFor": {
                    "type": "string",
                    "description": "Organizations the person works for.",
                    "x-faker": "company.companyName",
                    "x-parser-schema-id": "<anonymous-schema-115>"
                  }
                },
                "x-parser-schema-id": "Person"
              },
              {
                "title": "Contact",
                "description": "a CRM contact.",
                "properties": {
                  "type": {
                    "type": "string",
                    "const": "Contact"
                  },
                  "identifier": {
                    "title": "identifier",
                    "type": "object",
                    "summary": "identifier assigned to a contact by the vendor who originally created the contact",
                    "maxProperties": 1,
                    "minProperties": 1,
                    "examples": [
                      {
                        "bhhsconsumerid": "12345"
                      },
                      {
                        "salesforceid": "56789"
                      }
                    ],
                    "x-parser-schema-id": "identifier"
                  },
                  "additionalProperty": {
                    "title": "additionalProperty",
                    "type": "object",
                    "description": "additionalProperty are",
                    "example": {
                      "supercrmuserid": 1234,
                      "doNotSell": true
                    },
                    "x-parser-schema-id": "additionalProperty"
                  },
                  "comment": {
                    "title": "comment",
                    "type": "array",
                    "description": "comments by, for or about the item",
                    "x-range": "Comment",
                    "items": {
                      "type": "object"
                    },
                    "example": [
                      {
                        "type": "Comment",
                        "text": "this is my comment.",
                        "author": {
                          "type": "Contact",
                          "name": "Bruce Wayne"
                        },
                        "about": {
                          "type": "PropertyListing",
                          "id": "https://example.com/listingid"
                        },
                        "dateCreated": "2019-07-15T05:24:05Z",
                        "dateModified": "2019-07-15T05:24:05Z"
                      }
                    ]
                  },
                  "jobTitle": {
                    "title": "jobTitle",
                    "description": "The job title of the person (for example, Financial Manager).",
                    "type": "string",
                    "x-faker": "name.jobTitle",
                    "examples": [
                      "CEO",
                      "Sales Manager",
                      "Escrow Officer",
                      "Transaction Coordinator",
                      "Director of Marketing",
                      "Senior Loan Officer",
                      "Loan Officer",
                      "Sanitation Engineer",
                      "Owner",
                      "Cofounder",
                      "Founder",
                      "President",
                      "Vice President of Sales",
                      null,
                      null,
                      null,
                      null,
                      null,
                      null,
                      null,
                      null,
                      null,
                      null
                    ],
                    "x-parser-schema-id": "<anonymous-schema-421>"
                  },
                  "contactGroup": {
                    "type": "array",
                    "items": {
                      "$id": "http://realestate.yodata.me/schema/ContactGroup.json",
                      "title": "ContactGroup",
                      "description": "groups the contact is a member of.",
                      "type": "object",
                      "required": [
                        "type",
                        "name"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "ContactGroup",
                            "Collection"
                          ]
                        },
                        "identifier": {
                          "title": "identifier",
                          "type": "object",
                          "summary": "identifier assigned to a contact by the vendor who originally created the contact",
                          "maxProperties": 1,
                          "minProperties": 1,
                          "examples": [
                            {
                              "bhhsconsumerid": "12345"
                            },
                            {
                              "salesforceid": "56789"
                            }
                          ],
                          "x-parser-schema-id": "identifier"
                        },
                        "name": {
                          "type": "string",
                          "examples": [
                            "Past Clients",
                            "Prospects",
                            "Leads",
                            "Referrals",
                            "Friends",
                            "Family",
                            "Neighbors",
                            "Business Associates",
                            "Personal"
                          ]
                        }
                      }
                    }
                  },
                  "keywords": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "leadOwner": {
                    "type": "object",
                    "description": "lead owner",
                    "x-range": [
                      "RealEstateAgent",
                      "RealEstateOrganization",
                      "RealEstateTeam"
                    ],
                    "example": {
                      "type": "RealEstateOrganization",
                      "name": "Gotham City Real Estate",
                      "id": "https://example.com/profile.card#me"
                    }
                  },
                  "leadSource": {
                    "type": "object",
                    "description": "origin of the lead",
                    "x-range": [
                      "MobileApplication",
                      "RealEstateOffice",
                      "RealEstateWebsite",
                      "Thing"
                    ],
                    "example": {
                      "id": "https://www.zillow.com/homedetails/1044-Siler-Pl-Berkeley-CA-94705/24820985_zpid/",
                      "type": "RealEstateWebsite",
                      "name": "Zillow",
                      "url": "https://zillow.com"
                    }
                  },
                  "originatingSystem": {
                    "type": "object",
                    "x-range": [
                      "Thing"
                    ],
                    "description": "the original system where this item was created.  Can be of type Thing or any sub-type.",
                    "examples": [
                      {
                        "type": "SoftwareApplication",
                        "name": "RDesk",
                        "description": "User Created.",
                        "url": "http://www.rdeskwebsite.com/"
                      }
                    ]
                  },
                  "dateCreated": {
                    "$id": "http://realestate.yodata.me/schema/dateCreated.yaml",
                    "type": "string",
                    "format": "date-time",
                    "title": "Date Created",
                    "description": "The date on which the item was created."
                  },
                  "dateModified": {
                    "description": "The date on which the item was most recently modified or when the item's entry was modified within a DataFeed.",
                    "type": "string",
                    "format": "date-time",
                    "x-parser-schema-id": "<anonymous-schema-122>"
                  }
                },
                "x-parser-schema-id": "<anonymous-schema-116>"
              }
            ],
            "x-parser-schema-id": "Contact"
          }
        },
        "x-parser-schema-id": "<anonymous-schema-85>"
      },
      "topic": {
        "const": "realestate/contact#add",
        "x-parser-schema-id": "<anonymous-schema-84>"
      }
    },
    "x-parser-schema-id": "<anonymous-schema-83>"
  }
}
