{
  "asyncapi": {
    "asyncapi": "1.2.0",
    "info": {
      "title": "Let's Integrate Real Estate",
      "version": "0.0.2",
      "description": "Reflex is intended to normalize the process of integrating applications and services\nin the real estate domain in a user-centric, vendor agnostic and developer friendly\nway.\n\nThe API is very simple, the only interactions are publish a message (HTTP POST) and get messages either pushed to your \napplication or with HTTP GET.\n\nThe project is 100% open source and contributors are welcomed with open arms.\n\nTo get started you'll need to get yourself a POD that will provide your application's private message bus.\n\nIf you don't already have a pod, contact us and we'll get you setup.\n",
      "contact": {
        "name": "Dave Duran",
        "email": "dave@yodata.io"
      },
      "license": {
        "name": "MIT",
        "url": "https://opensource.org/licenses/MIT"
      },
      "x-info": {
        "route": "/"
      },
      "x-topics": {
        "name": "Topics",
        "hideProps": false,
        "hideExample": false,
        "intro": "## Permission model\n\nThe Events API leverages existing object-driven OAuth scope system to\ncontrol access to events. For example, if your app has access to profiles\nthrough the `profiles:read` scope, you can choose to subscribe to any or\nnone of the profile-related events like `profile_added` and\n`profile_updated`.\n\nYou will only receive events from users who've authorized your app.\n"
      },
      "x-messages": {
        "name": "Events",
        "hideProps": false,
        "hideExample": false
      },
      "x-schemas": {
        "name": "Objects"
      },
      "descriptionAsHTML": "<p>Reflex is intended to normalize the process of integrating applications and services\nin the real estate domain in a user-centric, vendor agnostic and developer friendly\nway.</p>\n<p>The API is very simple, the only interactions are publish a message (HTTP POST) and get messages either pushed to your\napplication or with HTTP GET.</p>\n<p>The project is 100% open source and contributors are welcomed with open arms.</p>\n<p>To get started you'll need to get yourself a POD that will provide your application's private message bus.</p>\n<p>If you don't already have a pod, contact us and we'll get you setup.</p>\n"
    },
    "topics": {
      "contact": {
        "x-title": null,
        "x-summary": "Contact events",
        "subscribe": {
          "oneOf": [
            {
              "x-title": "add",
              "x-scope": "realestate/contact#",
              "summary": "a contact was added/created.",
              "payload": {
                "type": "object",
                "required": [
                  "topic",
                  "source",
                  "data"
                ],
                "properties": {
                  "topic": {
                    "description": "{domain}/{topic}#{event}",
                    "type": "string",
                    "enum": [
                      "realestate/contact#add"
                    ],
                    "descriptionAsHTML": "<p>{domain}/{topic}#{event}</p>\n"
                  },
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "type": {
                        "description": "the action type",
                        "type": "string",
                        "enum": [
                          "AddAction"
                        ],
                        "descriptionAsHTML": "<p>the action type</p>\n"
                      },
                      "agent": {
                        "description": "the direct performer of the action",
                        "descriptionAsHTML": "<p>the direct performer of the action</p>\n"
                      },
                      "object": {
                        "description": "The object upon which the action is carried out",
                        "type": "object",
                        "x-kind": "Contact",
                        "x-range": "Contact",
                        "descriptionAsHTML": "<p>The object upon which the action is carried out</p>\n"
                      },
                      "instrument": {
                        "description": "thing used by the agent to perform the action, i.e. an application or website that generated the message.",
                        "example": "https://{app}.example.com/profile/card#me",
                        "descriptionAsHTML": "<p>thing used by the agent to perform the action, i.e. an application or website that generated the message.</p>\n"
                      }
                    },
                    "externalDocs": {
                      "description": "schema.org/Action",
                      "url": "https://schema.org/Action"
                    }
                  },
                  "source": {
                    "description": "the event origin, typically a user",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{user}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>the event origin, typically a user</p>\n"
                  },
                  "instrument": {
                    "description": "event producer, typically an app or service",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{supercrm}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>event producer, typically an app or service</p>\n"
                  },
                  "time": {
                    "description": "when the event was published",
                    "type": "string",
                    "format": "date-time",
                    "descriptionAsHTML": "<p>when the event was published</p>\n"
                  },
                  "contenttype": {
                    "description": "mimetype of the data property.  default=application/json",
                    "type": "string",
                    "example": "application/json",
                    "descriptionAsHTML": "<p>mimetype of the data property.  default=application/json</p>\n"
                  },
                  "@context": {
                    "description": "message context used for transforming message content",
                    "type": "string",
                    "format": "uri",
                    "example": "http://realestate.yodata.me/context/v1.json",
                    "descriptionAsHTML": "<p>message context used for transforming message content</p>\n"
                  }
                }
              },
              "summaryAsHTML": "<p>a contact was added/created.</p>\n",
              "descriptionAsHTML": "",
              "generatedPayloadExample": "{\n  \"topic\": \"realestate/contact#add\",\n  \"data\": {\n    \"type\": \"AddAction\",\n    \"agent\": null,\n    \"object\": {},\n    \"instrument\": \"https://{app}.example.com/profile/card#me\"\n  },\n  \"source\": \"http://{user}.example.com/profile/card#me\",\n  \"instrument\": \"http://{supercrm}.example.com/profile/card#me\",\n  \"time\": \"2019-05-21T01:05:11Z\",\n  \"contenttype\": \"application/json\",\n  \"@context\": \"http://realestate.yodata.me/context/v1.json\"\n}"
            },
            {
              "x-title": "update",
              "x-scope": "realestate/contact#",
              "summary": "a crm contact was updated",
              "payload": {
                "type": "object",
                "required": [
                  "topic",
                  "source",
                  "data"
                ],
                "properties": {
                  "topic": {
                    "description": "{domain}/{topic}#{event}",
                    "type": "string",
                    "enum": [
                      "realestate/contact#update"
                    ],
                    "descriptionAsHTML": "<p>{domain}/{topic}#{event}</p>\n"
                  },
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "type": {
                        "description": "UpdateAction",
                        "type": "string",
                        "enum": [
                          "UpdateAction"
                        ],
                        "descriptionAsHTML": "<p>UpdateAction</p>\n"
                      },
                      "agent": {
                        "description": "the direct performer of the action",
                        "descriptionAsHTML": "<p>the direct performer of the action</p>\n"
                      },
                      "object": {
                        "description": "The object upon which the action is carried out",
                        "type": "object",
                        "example": {
                          "type": "Contact",
                          "name": "the updated contact"
                        },
                        "descriptionAsHTML": "<p>The object upon which the action is carried out</p>\n"
                      },
                      "instrument": {
                        "description": "thing used by the agent to perform the action, i.e. an application or website that generated the message.",
                        "example": "https://{app}.example.com/profile/card#me",
                        "descriptionAsHTML": "<p>thing used by the agent to perform the action, i.e. an application or website that generated the message.</p>\n"
                      },
                      "actionStatus": {
                        "type": "string",
                        "description": "disposition of the Action when the event was created",
                        "enum": [
                          "CompletedActionStatus",
                          "FailedActionStatus",
                          "ActiveActionStatus"
                        ],
                        "descriptionAsHTML": "<p>disposition of the Action when the event was created</p>\n"
                      },
                      "targetCollection": {
                        "type": "object",
                        "description": "target collection",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "Collection"
                          },
                          "name": {
                            "type": "string",
                            "example": "targetcollection"
                          }
                        },
                        "descriptionAsHTML": "<p>target collection</p>\n"
                      }
                    },
                    "externalDocs": {
                      "description": "schema.org/Action",
                      "url": "https://schema.org/Action"
                    }
                  },
                  "source": {
                    "description": "the event origin, typically a user",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{user}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>the event origin, typically a user</p>\n"
                  },
                  "instrument": {
                    "description": "event producer, typically an app or service",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{supercrm}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>event producer, typically an app or service</p>\n"
                  },
                  "time": {
                    "description": "when the event was published",
                    "type": "string",
                    "format": "date-time",
                    "descriptionAsHTML": "<p>when the event was published</p>\n"
                  },
                  "contenttype": {
                    "description": "mimetype of the data property.  default=application/json",
                    "type": "string",
                    "example": "application/json",
                    "descriptionAsHTML": "<p>mimetype of the data property.  default=application/json</p>\n"
                  },
                  "@context": {
                    "description": "message context used for transforming message content",
                    "type": "string",
                    "format": "uri",
                    "example": "http://realestate.yodata.me/context/v1.json",
                    "descriptionAsHTML": "<p>message context used for transforming message content</p>\n"
                  }
                }
              },
              "summaryAsHTML": "<p>a crm contact was updated</p>\n",
              "descriptionAsHTML": "",
              "generatedPayloadExample": "{\n  \"topic\": \"realestate/contact#update\",\n  \"data\": {\n    \"type\": \"UpdateAction\",\n    \"agent\": null,\n    \"object\": {\n      \"type\": \"Contact\",\n      \"name\": \"the updated contact\"\n    },\n    \"instrument\": \"https://{app}.example.com/profile/card#me\",\n    \"actionStatus\": \"CompletedActionStatus\",\n    \"targetCollection\": {\n      \"type\": \"Collection\",\n      \"name\": \"targetcollection\"\n    }\n  },\n  \"source\": \"http://{user}.example.com/profile/card#me\",\n  \"instrument\": \"http://{supercrm}.example.com/profile/card#me\",\n  \"time\": \"2019-05-21T01:05:11Z\",\n  \"contenttype\": \"application/json\",\n  \"@context\": \"http://realestate.yodata.me/context/v1.json\"\n}"
            }
          ],
          "summaryAsHTML": "",
          "descriptionAsHTML": ""
        }
      },
      "lead": {
        "x-summary": "Lead events",
        "subscribe": {
          "oneOf": [
            {
              "x-title": "accept",
              "x-scope": "realestate/lead#",
              "summary": "a lead (object) was accepted by the agent",
              "payload": {
                "type": "object",
                "required": [
                  "topic",
                  "source",
                  "data"
                ],
                "properties": {
                  "topic": {
                    "description": "realestate/lead#accept",
                    "type": "string",
                    "enum": [
                      "realestate/lead#accept"
                    ],
                    "descriptionAsHTML": "<p>realestate/lead#accept</p>\n"
                  },
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "type": {
                        "description": "the action type",
                        "type": "string",
                        "enum": [
                          "AcceptAction"
                        ],
                        "descriptionAsHTML": "<p>the action type</p>\n"
                      },
                      "agent": {
                        "description": "the direct performer of the action",
                        "example": "https://{user}.example.com/profile/card#me",
                        "descriptionAsHTML": "<p>the direct performer of the action</p>\n"
                      },
                      "object": {
                        "description": "a lead offered or assigned by the agent to one or more recipients",
                        "type": "object",
                        "example": {
                          "type": "Lead",
                          "name": "Lianna Stark"
                        },
                        "title": "Lead",
                        "x-kind": "Lead",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "Lead"
                            ],
                            "description": "Lead",
                            "descriptionAsHTML": "<p>Lead</p>\n"
                          },
                          "object": {
                            "type": "object",
                            "description": "a Contact (Person/Organization)",
                            "example": {
                              "type": "Person",
                              "name": "Larry Lead",
                              "email": "larry@example.com"
                            },
                            "descriptionAsHTML": "<p>a Contact (Person/Organization)</p>\n"
                          },
                          "recipient": {
                            "description": "the lead recipient",
                            "example": "http://{user}.example.com/profile/card#me",
                            "descriptionAsHTML": "<p>the lead recipient</p>\n"
                          },
                          "sender": {
                            "description": "the lead provider",
                            "type": "string",
                            "format": "uri",
                            "example": "http://{provider}.example.com/profile/card#me",
                            "descriptionAsHTML": "<p>the lead provider</p>\n"
                          },
                          "dateSent": {
                            "description": "the date the lead was sent",
                            "type": "string",
                            "format": "date-time",
                            "descriptionAsHTML": "<p>the date the lead was sent</p>\n"
                          },
                          "activity": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type"
                              ],
                              "properties": {
                                "type": {
                                  "description": "the action type",
                                  "type": "string"
                                },
                                "agent": {
                                  "description": "the direct performer of the action"
                                },
                                "object": {
                                  "description": "The object upon which the action is carried out",
                                  "type": "object"
                                },
                                "instrument": {
                                  "description": "thing used by the agent to perform the action, i.e. an application or website that generated the message.",
                                  "example": "https://{app}.example.com/profile/card#me"
                                },
                                "actionStatus": {
                                  "type": "string",
                                  "description": "disposition of the Action when the event was created",
                                  "enum": [
                                    "CompletedActionStatus",
                                    "FailedActionStatus",
                                    "ActiveActionStatus"
                                  ]
                                }
                              },
                              "externalDocs": {
                                "description": "schema.org/Action",
                                "url": "https://schema.org/Action"
                              }
                            }
                          }
                        },
                        "descriptionAsHTML": "<p>a lead offered or assigned by the agent to one or more recipients</p>\n"
                      },
                      "instrument": {
                        "description": "thing used by the agent to perform the action, i.e. an application or website that generated the message.",
                        "example": "https://{app}.example.com/profile/card#me",
                        "descriptionAsHTML": "<p>thing used by the agent to perform the action, i.e. an application or website that generated the message.</p>\n"
                      },
                      "actionStatus": {
                        "type": "string",
                        "description": "disposition of the Action when the event was created",
                        "enum": [
                          "CompletedActionStatus",
                          "FailedActionStatus",
                          "ActiveActionStatus"
                        ],
                        "descriptionAsHTML": "<p>disposition of the Action when the event was created</p>\n"
                      }
                    },
                    "externalDocs": {
                      "description": "schema.org/Action",
                      "url": "https://schema.org/Action"
                    },
                    "description": "The act of committing to/adopting an object.",
                    "descriptionAsHTML": "<p>The act of committing to/adopting an object.</p>\n"
                  },
                  "source": {
                    "description": "the event origin, typically a user",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{user}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>the event origin, typically a user</p>\n"
                  },
                  "instrument": {
                    "description": "event producer, typically an app or service",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{supercrm}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>event producer, typically an app or service</p>\n"
                  },
                  "time": {
                    "description": "when the event was published",
                    "type": "string",
                    "format": "date-time",
                    "descriptionAsHTML": "<p>when the event was published</p>\n"
                  },
                  "contenttype": {
                    "description": "mimetype of the data property.  default=application/json",
                    "type": "string",
                    "example": "application/json",
                    "descriptionAsHTML": "<p>mimetype of the data property.  default=application/json</p>\n"
                  },
                  "@context": {
                    "description": "message context used for transforming message content",
                    "type": "string",
                    "format": "uri",
                    "example": "http://realestate.yodata.me/context/v1.json",
                    "descriptionAsHTML": "<p>message context used for transforming message content</p>\n"
                  }
                }
              },
              "summaryAsHTML": "<p>a lead (object) was accepted by the agent</p>\n",
              "descriptionAsHTML": "",
              "generatedPayloadExample": "{\n  \"topic\": \"realestate/lead#accept\",\n  \"data\": {\n    \"type\": \"AcceptAction\",\n    \"agent\": \"https://{user}.example.com/profile/card#me\",\n    \"object\": {\n      \"type\": \"Lead\",\n      \"name\": \"Lianna Stark\"\n    },\n    \"instrument\": \"https://{app}.example.com/profile/card#me\",\n    \"actionStatus\": \"CompletedActionStatus\"\n  },\n  \"source\": \"http://{user}.example.com/profile/card#me\",\n  \"instrument\": \"http://{supercrm}.example.com/profile/card#me\",\n  \"time\": \"2019-05-21T01:05:11Z\",\n  \"contenttype\": \"application/json\",\n  \"@context\": \"http://realestate.yodata.me/context/v1.json\"\n}"
            },
            {
              "x-title": "add",
              "x-scope": "realestate/lead#",
              "summary": "a crm lead was created",
              "payload": {
                "type": "object",
                "required": [
                  "topic",
                  "source",
                  "data"
                ],
                "properties": {
                  "topic": {
                    "description": "{domain}/{topic}#{event}",
                    "type": "string",
                    "enum": [
                      "realestate/lead#add"
                    ],
                    "descriptionAsHTML": "<p>{domain}/{topic}#{event}</p>\n"
                  },
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "type": {
                        "description": "AddAction",
                        "type": "string",
                        "enum": [
                          "AddAction"
                        ],
                        "example": "AddAction",
                        "descriptionAsHTML": "<p>AddAction</p>\n"
                      },
                      "agent": {
                        "description": "the direct performer of the action",
                        "example": "http://{user}.example.com/profile/card#me",
                        "descriptionAsHTML": "<p>the direct performer of the action</p>\n"
                      },
                      "object": {
                        "description": "the added item",
                        "type": "object",
                        "example": {
                          "type": "Contact",
                          "name": "Adam Addme"
                        },
                        "descriptionAsHTML": "<p>the added item</p>\n"
                      },
                      "instrument": {
                        "description": "thing used by the agent to perform the action, i.e. an application or website that generated the message.",
                        "example": "http://{app}.example.com/profile/card#me",
                        "descriptionAsHTML": "<p>thing used by the agent to perform the action, i.e. an application or website that generated the message.</p>\n"
                      },
                      "actionStatus": {
                        "type": "string",
                        "description": "disposition of the Action when the event was created",
                        "enum": [
                          "CompletedActionStatus",
                          "FailedActionStatus",
                          "ActiveActionStatus"
                        ],
                        "descriptionAsHTML": "<p>disposition of the Action when the event was created</p>\n"
                      },
                      "targetCollection": {
                        "description": "the collection receiving the added object",
                        "example": {
                          "type": "Collection",
                          "id": "https://{user}.example.com/data/contact/"
                        },
                        "descriptionAsHTML": "<p>the collection receiving the added object</p>\n"
                      }
                    },
                    "externalDocs": {
                      "description": "schema.org/Action",
                      "url": "https://schema.org/Action"
                    }
                  },
                  "source": {
                    "description": "the event origin, typically a user",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{user}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>the event origin, typically a user</p>\n"
                  },
                  "instrument": {
                    "description": "event producer, typically an app or service",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{supercrm}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>event producer, typically an app or service</p>\n"
                  },
                  "time": {
                    "description": "when the event was published",
                    "type": "string",
                    "format": "date-time",
                    "descriptionAsHTML": "<p>when the event was published</p>\n"
                  },
                  "contenttype": {
                    "description": "mimetype of the data property.  default=application/json",
                    "type": "string",
                    "example": "application/json",
                    "descriptionAsHTML": "<p>mimetype of the data property.  default=application/json</p>\n"
                  },
                  "@context": {
                    "description": "message context used for transforming message content",
                    "type": "string",
                    "format": "uri",
                    "example": "http://realestate.yodata.me/context/v1.json",
                    "descriptionAsHTML": "<p>message context used for transforming message content</p>\n"
                  }
                }
              },
              "summaryAsHTML": "<p>a crm lead was created</p>\n",
              "descriptionAsHTML": "",
              "generatedPayloadExample": "{\n  \"topic\": \"realestate/lead#add\",\n  \"data\": {\n    \"type\": \"AddAction\",\n    \"agent\": \"http://{user}.example.com/profile/card#me\",\n    \"object\": {\n      \"type\": \"Contact\",\n      \"name\": \"Adam Addme\"\n    },\n    \"instrument\": \"http://{app}.example.com/profile/card#me\",\n    \"actionStatus\": \"CompletedActionStatus\",\n    \"targetCollection\": {\n      \"type\": \"Collection\",\n      \"id\": \"https://{user}.example.com/data/contact/\"\n    }\n  },\n  \"source\": \"http://{user}.example.com/profile/card#me\",\n  \"instrument\": \"http://{supercrm}.example.com/profile/card#me\",\n  \"time\": \"2019-05-21T01:05:11Z\",\n  \"contenttype\": \"application/json\",\n  \"@context\": \"http://realestate.yodata.me/context/v1.json\"\n}"
            },
            {
              "x-title": "asssign",
              "x-scope": "realestate/lead#",
              "summary": "a lead was assigned",
              "payload": {
                "type": "object",
                "required": [
                  "topic",
                  "source",
                  "data"
                ],
                "properties": {
                  "topic": {
                    "description": "{domain}/{topic}#{event}",
                    "type": "string",
                    "enum": [
                      "realestate/lead#assign"
                    ],
                    "descriptionAsHTML": "<p>{domain}/{topic}#{event}</p>\n"
                  },
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "type": {
                        "description": "the action type",
                        "type": "string",
                        "enum": [
                          "AssignAction"
                        ],
                        "example": "AssignAction",
                        "descriptionAsHTML": "<p>the action type</p>\n"
                      },
                      "agent": {
                        "description": "the direct performer of the action",
                        "descriptionAsHTML": "<p>the direct performer of the action</p>\n"
                      },
                      "object": {
                        "description": "The object upon which the action is carried out",
                        "type": "object",
                        "required": [
                          "type"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "Person",
                            "enum": [
                              "Person"
                            ],
                            "descriptionAsHTML": "<p>Person</p>\n"
                          },
                          "id": {
                            "type": "string",
                            "format": "uri",
                            "description": "Linked-Data uri",
                            "descriptionAsHTML": "<p>Linked-Data uri</p>\n"
                          },
                          "name": {
                            "type": "string",
                            "description": "Full name of the person.",
                            "descriptionAsHTML": "<p>Full name of the person.</p>\n"
                          },
                          "url": {
                            "type": "string",
                            "format": "uri",
                            "description": "a public href that is clearly and uniquely associated with the item.",
                            "descriptionAsHTML": "<p>a public href that is clearly and uniquely associated with the item.</p>\n"
                          },
                          "givenName": {
                            "type": "string",
                            "description": "First Name",
                            "example": "Bruce",
                            "descriptionAsHTML": "<p>First Name</p>\n"
                          },
                          "familyName": {
                            "type": "string",
                            "description": "Last Name",
                            "example": "Wayne",
                            "descriptionAsHTML": "<p>Last Name</p>\n"
                          },
                          "jobTitle": {
                            "type": "string",
                            "description": "The Job Title of the person.",
                            "example": "Jefe",
                            "descriptionAsHTML": "<p>The Job Title of the person.</p>\n"
                          },
                          "email": {
                            "type": "string",
                            "description": "Primary email address.",
                            "example": "user@example.com",
                            "descriptionAsHTML": "<p>Primary email address.</p>\n"
                          },
                          "faxNumber": {
                            "description": "Primary fax number.",
                            "type": "string",
                            "example": "(498) 625-6456",
                            "descriptionAsHTML": "<p>Primary fax number.</p>\n"
                          },
                          "telephone": {
                            "description": "Primary phone number.",
                            "type": "string",
                            "example": "1-339-041-0306 x2866",
                            "descriptionAsHTML": "<p>Primary phone number.</p>\n"
                          },
                          "contactPoint": {
                            "x-range": "ContactPoint",
                            "description": "Named and grouped contacts points.",
                            "type": "array",
                            "items": {
                              "title": "ContactPoint",
                              "description": "A contact point—for example, a Customer Complaints department.",
                              "type": "object",
                              "properties": {
                                "type": {
                                  "description": "ContactPoint",
                                  "type": "string",
                                  "enum": [
                                    "ContactPoint"
                                  ]
                                },
                                "name": {
                                  "type": "string",
                                  "description": "a label for the contactPoint, i.e. 'Work', or 'Home'",
                                  "example": "Work"
                                },
                                "telephone": {
                                  "description": "a telephone number",
                                  "type": "string",
                                  "example": "1-364-127-9618 x20418"
                                },
                                "faxNumber": {
                                  "description": "a fax number",
                                  "type": "string",
                                  "example": "834.320.1602"
                                },
                                "email": {
                                  "description": "an email address for the item.",
                                  "type": "string",
                                  "format": "email",
                                  "example": "user@example.com"
                                },
                                "url": {
                                  "description": "primary URL for the item.",
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://www.facebook.com/hallandoates"
                                }
                              }
                            },
                            "descriptionAsHTML": "<p>Named and grouped contacts points.</p>\n"
                          },
                          "address": {
                            "x-range": "PostalAddress",
                            "description": "mailing addresses.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "A physical address.",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "PostalAddress"
                                  ]
                                },
                                "streetAddress": {
                                  "type": "string",
                                  "example": "1007 Mountain Gate Rd"
                                },
                                "postOfficeBoxNumber": {
                                  "type": "string",
                                  "example": "Box 1234"
                                },
                                "addressRegion": {
                                  "type": "string",
                                  "description": "State or Province.",
                                  "example": "New Jersey"
                                },
                                "addressLocality": {
                                  "type": "string",
                                  "description": "City, Township.",
                                  "example": "Gotham City"
                                },
                                "postalCode": {
                                  "type": "string",
                                  "description": "Zip/Post Code",
                                  "example": "10010"
                                },
                                "addressCountry": {
                                  "type": "string",
                                  "description": "country",
                                  "example": "usa"
                                }
                              }
                            },
                            "descriptionAsHTML": "<p>mailing addresses.</p>\n"
                          },
                          "birthDate": {
                            "type": "string",
                            "format": "date",
                            "description": "date of birth.",
                            "descriptionAsHTML": "<p>date of birth.</p>\n"
                          }
                        },
                        "descriptionAsHTML": "<p>The object upon which the action is carried out</p>\n"
                      },
                      "instrument": {
                        "description": "thing used by the agent to perform the action, i.e. an application or website that generated the message.",
                        "example": "https://{app}.example.com/profile/card#me",
                        "descriptionAsHTML": "<p>thing used by the agent to perform the action, i.e. an application or website that generated the message.</p>\n"
                      },
                      "actionStatus": {
                        "type": "string",
                        "description": "disposition of the Action when the event was created",
                        "enum": [
                          "CompletedActionStatus",
                          "FailedActionStatus",
                          "ActiveActionStatus"
                        ],
                        "descriptionAsHTML": "<p>disposition of the Action when the event was created</p>\n"
                      },
                      "targetCollection": {
                        "type": "object",
                        "description": "target collection",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "Collection"
                          },
                          "name": {
                            "type": "string",
                            "example": "targetcollection"
                          }
                        },
                        "descriptionAsHTML": "<p>target collection</p>\n"
                      }
                    },
                    "externalDocs": {
                      "description": "schema.org/Action",
                      "url": "https://schema.org/Action"
                    }
                  },
                  "source": {
                    "description": "the event origin, typically a user",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{user}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>the event origin, typically a user</p>\n"
                  },
                  "instrument": {
                    "description": "event producer, typically an app or service",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{supercrm}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>event producer, typically an app or service</p>\n"
                  },
                  "time": {
                    "description": "when the event was published",
                    "type": "string",
                    "format": "date-time",
                    "descriptionAsHTML": "<p>when the event was published</p>\n"
                  },
                  "contenttype": {
                    "description": "mimetype of the data property.  default=application/json",
                    "type": "string",
                    "example": "application/json",
                    "descriptionAsHTML": "<p>mimetype of the data property.  default=application/json</p>\n"
                  },
                  "@context": {
                    "description": "message context used for transforming message content",
                    "type": "string",
                    "format": "uri",
                    "example": "http://realestate.yodata.me/context/v1.json",
                    "descriptionAsHTML": "<p>message context used for transforming message content</p>\n"
                  }
                }
              },
              "summaryAsHTML": "<p>a lead was assigned</p>\n",
              "descriptionAsHTML": "",
              "generatedPayloadExample": "{\n  \"topic\": \"realestate/lead#assign\",\n  \"data\": {\n    \"type\": \"AssignAction\",\n    \"agent\": null,\n    \"object\": {\n      \"type\": \"Person\",\n      \"id\": \"http://example.com\",\n      \"name\": \"string\",\n      \"url\": \"http://example.com\",\n      \"givenName\": \"Bruce\",\n      \"familyName\": \"Wayne\",\n      \"jobTitle\": \"Jefe\",\n      \"email\": \"user@example.com\",\n      \"faxNumber\": \"(498) 625-6456\",\n      \"telephone\": \"1-339-041-0306 x2866\",\n      \"contactPoint\": [\n        {\n          \"type\": \"ContactPoint\",\n          \"name\": \"Work\",\n          \"telephone\": \"1-364-127-9618 x20418\",\n          \"faxNumber\": \"834.320.1602\",\n          \"email\": \"user@example.com\",\n          \"url\": \"https://www.facebook.com/hallandoates\"\n        }\n      ],\n      \"address\": [\n        {\n          \"type\": \"PostalAddress\",\n          \"streetAddress\": \"1007 Mountain Gate Rd\",\n          \"postOfficeBoxNumber\": \"Box 1234\",\n          \"addressRegion\": \"New Jersey\",\n          \"addressLocality\": \"Gotham City\",\n          \"postalCode\": \"10010\",\n          \"addressCountry\": \"usa\"\n        }\n      ],\n      \"birthDate\": \"2019-05-21\"\n    },\n    \"instrument\": \"https://{app}.example.com/profile/card#me\",\n    \"actionStatus\": \"CompletedActionStatus\",\n    \"targetCollection\": {\n      \"type\": \"Collection\",\n      \"name\": \"targetcollection\"\n    }\n  },\n  \"source\": \"http://{user}.example.com/profile/card#me\",\n  \"instrument\": \"http://{supercrm}.example.com/profile/card#me\",\n  \"time\": \"2019-05-21T01:05:11Z\",\n  \"contenttype\": \"application/json\",\n  \"@context\": \"http://realestate.yodata.me/context/v1.json\"\n}"
            },
            {
              "x-title": "update",
              "x-scope": "realestate/lead#",
              "summary": "a crm lead was updated",
              "payload": {
                "type": "object",
                "required": [
                  "topic",
                  "source",
                  "data"
                ],
                "properties": {
                  "topic": {
                    "description": "{domain}/{topic}#{event}",
                    "type": "string",
                    "enum": [
                      "realestate/lead#update"
                    ],
                    "descriptionAsHTML": "<p>{domain}/{topic}#{event}</p>\n"
                  },
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "type": {
                        "description": "the action type",
                        "type": "string",
                        "enum": [
                          "UpdateAction"
                        ],
                        "example": "UpdateAction",
                        "descriptionAsHTML": "<p>the action type</p>\n"
                      },
                      "agent": {
                        "description": "the direct performer of the action",
                        "descriptionAsHTML": "<p>the direct performer of the action</p>\n"
                      },
                      "object": {
                        "description": "a lead offered or assigned by the agent to one or more recipients",
                        "type": "object",
                        "example": {
                          "type": "Lead"
                        },
                        "title": "Lead",
                        "x-kind": "Lead",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "Lead"
                            ],
                            "description": "Lead",
                            "descriptionAsHTML": "<p>Lead</p>\n"
                          },
                          "object": {
                            "type": "object",
                            "description": "a Contact (Person/Organization)",
                            "example": {
                              "type": "Person",
                              "name": "Larry Lead",
                              "email": "larry@example.com"
                            },
                            "descriptionAsHTML": "<p>a Contact (Person/Organization)</p>\n"
                          },
                          "recipient": {
                            "description": "the lead recipient",
                            "example": "http://{user}.example.com/profile/card#me",
                            "descriptionAsHTML": "<p>the lead recipient</p>\n"
                          },
                          "sender": {
                            "description": "the lead provider",
                            "type": "string",
                            "format": "uri",
                            "example": "http://{provider}.example.com/profile/card#me",
                            "descriptionAsHTML": "<p>the lead provider</p>\n"
                          },
                          "dateSent": {
                            "description": "the date the lead was sent",
                            "type": "string",
                            "format": "date-time",
                            "descriptionAsHTML": "<p>the date the lead was sent</p>\n"
                          },
                          "activity": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type"
                              ],
                              "properties": {
                                "type": {
                                  "description": "the action type",
                                  "type": "string"
                                },
                                "agent": {
                                  "description": "the direct performer of the action"
                                },
                                "object": {
                                  "description": "The object upon which the action is carried out",
                                  "type": "object"
                                },
                                "instrument": {
                                  "description": "thing used by the agent to perform the action, i.e. an application or website that generated the message.",
                                  "example": "https://{app}.example.com/profile/card#me"
                                },
                                "actionStatus": {
                                  "type": "string",
                                  "description": "disposition of the Action when the event was created",
                                  "enum": [
                                    "CompletedActionStatus",
                                    "FailedActionStatus",
                                    "ActiveActionStatus"
                                  ]
                                }
                              },
                              "externalDocs": {
                                "description": "schema.org/Action",
                                "url": "https://schema.org/Action"
                              }
                            }
                          }
                        },
                        "descriptionAsHTML": "<p>a lead offered or assigned by the agent to one or more recipients</p>\n"
                      },
                      "instrument": {
                        "description": "thing used by the agent to perform the action, i.e. an application or website that generated the message.",
                        "example": "https://{app}.example.com/profile/card#me",
                        "descriptionAsHTML": "<p>thing used by the agent to perform the action, i.e. an application or website that generated the message.</p>\n"
                      }
                    },
                    "externalDocs": {
                      "description": "schema.org/Action",
                      "url": "https://schema.org/Action"
                    }
                  },
                  "source": {
                    "description": "the event origin, typically a user",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{user}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>the event origin, typically a user</p>\n"
                  },
                  "instrument": {
                    "description": "event producer, typically an app or service",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{supercrm}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>event producer, typically an app or service</p>\n"
                  },
                  "time": {
                    "description": "when the event was published",
                    "type": "string",
                    "format": "date-time",
                    "descriptionAsHTML": "<p>when the event was published</p>\n"
                  },
                  "contenttype": {
                    "description": "mimetype of the data property.  default=application/json",
                    "type": "string",
                    "example": "application/json",
                    "descriptionAsHTML": "<p>mimetype of the data property.  default=application/json</p>\n"
                  },
                  "@context": {
                    "description": "message context used for transforming message content",
                    "type": "string",
                    "format": "uri",
                    "example": "http://realestate.yodata.me/context/v1.json",
                    "descriptionAsHTML": "<p>message context used for transforming message content</p>\n"
                  }
                }
              },
              "summaryAsHTML": "<p>a crm lead was updated</p>\n",
              "descriptionAsHTML": "",
              "generatedPayloadExample": "{\n  \"topic\": \"realestate/lead#update\",\n  \"data\": {\n    \"type\": \"UpdateAction\",\n    \"agent\": null,\n    \"object\": {\n      \"type\": \"Lead\"\n    },\n    \"instrument\": \"https://{app}.example.com/profile/card#me\"\n  },\n  \"source\": \"http://{user}.example.com/profile/card#me\",\n  \"instrument\": \"http://{supercrm}.example.com/profile/card#me\",\n  \"time\": \"2019-05-21T01:05:11Z\",\n  \"contenttype\": \"application/json\",\n  \"@context\": \"http://realestate.yodata.me/context/v1.json\"\n}"
            },
            {
              "x-title": "reject",
              "x-scope": "realestate/lead#",
              "summary": "a crm lead was accepted",
              "payload": {
                "type": "object",
                "required": [
                  "topic",
                  "source",
                  "data"
                ],
                "properties": {
                  "topic": {
                    "description": "{domain}/{topic}#{event}",
                    "type": "string",
                    "enum": [
                      "realestate/lead#reject"
                    ],
                    "descriptionAsHTML": "<p>{domain}/{topic}#{event}</p>\n"
                  },
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "type": {
                        "description": "the action type",
                        "type": "string",
                        "enum": [
                          "RejectAction"
                        ],
                        "descriptionAsHTML": "<p>the action type</p>\n"
                      },
                      "agent": {
                        "description": "the direct performer of the action",
                        "descriptionAsHTML": "<p>the direct performer of the action</p>\n"
                      },
                      "object": {
                        "description": "a lead offered or assigned by the agent to one or more recipients",
                        "type": "object",
                        "title": "Lead",
                        "x-kind": "Lead",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "Lead"
                            ],
                            "description": "Lead",
                            "descriptionAsHTML": "<p>Lead</p>\n"
                          },
                          "object": {
                            "type": "object",
                            "description": "a Contact (Person/Organization)",
                            "example": {
                              "type": "Person",
                              "name": "Larry Lead",
                              "email": "larry@example.com"
                            },
                            "descriptionAsHTML": "<p>a Contact (Person/Organization)</p>\n"
                          },
                          "recipient": {
                            "description": "the lead recipient",
                            "example": "http://{user}.example.com/profile/card#me",
                            "descriptionAsHTML": "<p>the lead recipient</p>\n"
                          },
                          "sender": {
                            "description": "the lead provider",
                            "type": "string",
                            "format": "uri",
                            "example": "http://{provider}.example.com/profile/card#me",
                            "descriptionAsHTML": "<p>the lead provider</p>\n"
                          },
                          "dateSent": {
                            "description": "the date the lead was sent",
                            "type": "string",
                            "format": "date-time",
                            "descriptionAsHTML": "<p>the date the lead was sent</p>\n"
                          },
                          "activity": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type"
                              ],
                              "properties": {
                                "type": {
                                  "description": "the action type",
                                  "type": "string"
                                },
                                "agent": {
                                  "description": "the direct performer of the action"
                                },
                                "object": {
                                  "description": "The object upon which the action is carried out",
                                  "type": "object"
                                },
                                "instrument": {
                                  "description": "thing used by the agent to perform the action, i.e. an application or website that generated the message.",
                                  "example": "https://{app}.example.com/profile/card#me"
                                },
                                "actionStatus": {
                                  "type": "string",
                                  "description": "disposition of the Action when the event was created",
                                  "enum": [
                                    "CompletedActionStatus",
                                    "FailedActionStatus",
                                    "ActiveActionStatus"
                                  ]
                                }
                              },
                              "externalDocs": {
                                "description": "schema.org/Action",
                                "url": "https://schema.org/Action"
                              }
                            }
                          }
                        },
                        "descriptionAsHTML": "<p>a lead offered or assigned by the agent to one or more recipients</p>\n"
                      },
                      "instrument": {
                        "description": "thing used by the agent to perform the action, i.e. an application or website that generated the message.",
                        "example": "https://{app}.example.com/profile/card#me",
                        "descriptionAsHTML": "<p>thing used by the agent to perform the action, i.e. an application or website that generated the message.</p>\n"
                      },
                      "actionStatus": {
                        "type": "string",
                        "description": "disposition of the Action when the event was created",
                        "enum": [
                          "CompletedActionStatus",
                          "FailedActionStatus",
                          "ActiveActionStatus"
                        ],
                        "descriptionAsHTML": "<p>disposition of the Action when the event was created</p>\n"
                      }
                    },
                    "externalDocs": {
                      "description": "schema.org/Action",
                      "url": "https://schema.org/Action"
                    }
                  },
                  "source": {
                    "description": "the event origin, typically a user",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{user}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>the event origin, typically a user</p>\n"
                  },
                  "instrument": {
                    "description": "event producer, typically an app or service",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{supercrm}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>event producer, typically an app or service</p>\n"
                  },
                  "time": {
                    "description": "when the event was published",
                    "type": "string",
                    "format": "date-time",
                    "descriptionAsHTML": "<p>when the event was published</p>\n"
                  },
                  "contenttype": {
                    "description": "mimetype of the data property.  default=application/json",
                    "type": "string",
                    "example": "application/json",
                    "descriptionAsHTML": "<p>mimetype of the data property.  default=application/json</p>\n"
                  },
                  "@context": {
                    "description": "message context used for transforming message content",
                    "type": "string",
                    "format": "uri",
                    "example": "http://realestate.yodata.me/context/v1.json",
                    "descriptionAsHTML": "<p>message context used for transforming message content</p>\n"
                  }
                }
              },
              "summaryAsHTML": "<p>a crm lead was accepted</p>\n",
              "descriptionAsHTML": "",
              "generatedPayloadExample": "{\n  \"topic\": \"realestate/lead#reject\",\n  \"data\": {\n    \"type\": \"RejectAction\",\n    \"agent\": null,\n    \"object\": {\n      \"type\": \"Lead\",\n      \"object\": {\n        \"type\": \"Person\",\n        \"name\": \"Larry Lead\",\n        \"email\": \"larry@example.com\"\n      },\n      \"recipient\": \"http://{user}.example.com/profile/card#me\",\n      \"sender\": \"http://{provider}.example.com/profile/card#me\",\n      \"dateSent\": \"2019-05-21T01:05:11Z\",\n      \"activity\": [\n        {\n          \"type\": \"string\",\n          \"agent\": null,\n          \"object\": {},\n          \"instrument\": \"https://{app}.example.com/profile/card#me\",\n          \"actionStatus\": \"CompletedActionStatus\"\n        }\n      ]\n    },\n    \"instrument\": \"https://{app}.example.com/profile/card#me\",\n    \"actionStatus\": \"CompletedActionStatus\"\n  },\n  \"source\": \"http://{user}.example.com/profile/card#me\",\n  \"instrument\": \"http://{supercrm}.example.com/profile/card#me\",\n  \"time\": \"2019-05-21T01:05:11Z\",\n  \"contenttype\": \"application/json\",\n  \"@context\": \"http://realestate.yodata.me/context/v1.json\"\n}"
            }
          ],
          "summaryAsHTML": "",
          "descriptionAsHTML": ""
        }
      },
      "marketing": {
        "x-summary": "Marketing events",
        "subscribe": {
          "oneOf": [
            {
              "x-title": "marketingprogram#create",
              "x-scope": "realestate",
              "summary": "a marketing program has been created",
              "payload": {
                "type": "object",
                "required": [
                  "topic",
                  "source",
                  "data"
                ],
                "properties": {
                  "topic": {
                    "description": "{domain}/{topic}#{event}",
                    "type": "string",
                    "enum": [
                      "realestate/marketingprogram#create"
                    ],
                    "descriptionAsHTML": "<p>{domain}/{topic}#{event}</p>\n"
                  },
                  "data": {
                    "description": "the object was created by the agent",
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "type": {
                        "description": "CreateAction",
                        "type": "string",
                        "enum": [
                          "CreateAction"
                        ],
                        "descriptionAsHTML": "<p>CreateAction</p>\n"
                      },
                      "agent": {
                        "description": "the direct performer of the action",
                        "descriptionAsHTML": "<p>the direct performer of the action</p>\n"
                      },
                      "object": {
                        "description": "The object upon which the action is carried out",
                        "type": "object",
                        "descriptionAsHTML": "<p>The object upon which the action is carried out</p>\n"
                      },
                      "instrument": {
                        "description": "thing used by the agent to perform the action, i.e. an application or website that generated the message.",
                        "example": "https://{app}.example.com/profile/card#me",
                        "descriptionAsHTML": "<p>thing used by the agent to perform the action, i.e. an application or website that generated the message.</p>\n"
                      },
                      "actionStatus": {
                        "type": "string",
                        "description": "disposition of the Action when the event was created",
                        "enum": [
                          "CompletedActionStatus",
                          "FailedActionStatus",
                          "ActiveActionStatus"
                        ],
                        "descriptionAsHTML": "<p>disposition of the Action when the event was created</p>\n"
                      }
                    },
                    "externalDocs": {
                      "description": "schema.org/Action",
                      "url": "https://schema.org/Action"
                    },
                    "descriptionAsHTML": "<p>the object was created by the agent</p>\n"
                  },
                  "source": {
                    "description": "the event origin, typically a user",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{user}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>the event origin, typically a user</p>\n"
                  },
                  "instrument": {
                    "description": "event producer, typically an app or service",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{supercrm}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>event producer, typically an app or service</p>\n"
                  },
                  "time": {
                    "description": "when the event was published",
                    "type": "string",
                    "format": "date-time",
                    "descriptionAsHTML": "<p>when the event was published</p>\n"
                  },
                  "contenttype": {
                    "description": "mimetype of the data property.  default=application/json",
                    "type": "string",
                    "example": "application/json",
                    "descriptionAsHTML": "<p>mimetype of the data property.  default=application/json</p>\n"
                  },
                  "@context": {
                    "description": "message context used for transforming message content",
                    "type": "string",
                    "format": "uri",
                    "example": "http://realestate.yodata.me/context/v1.json",
                    "descriptionAsHTML": "<p>message context used for transforming message content</p>\n"
                  }
                }
              },
              "summaryAsHTML": "<p>a marketing program has been created</p>\n",
              "descriptionAsHTML": "",
              "generatedPayloadExample": "{\n  \"topic\": \"realestate/marketingprogram#create\",\n  \"data\": {\n    \"type\": \"CreateAction\",\n    \"agent\": null,\n    \"object\": {},\n    \"instrument\": \"https://{app}.example.com/profile/card#me\",\n    \"actionStatus\": \"CompletedActionStatus\"\n  },\n  \"source\": \"http://{user}.example.com/profile/card#me\",\n  \"instrument\": \"http://{supercrm}.example.com/profile/card#me\",\n  \"time\": \"2019-05-21T01:05:11Z\",\n  \"contenttype\": \"application/json\",\n  \"@context\": \"http://realestate.yodata.me/context/v1.json\"\n}"
            },
            {
              "x-title": "marketingprogram#memberadd",
              "x-scope": "realestate",
              "summary": "a program member was added by the agent (Work In Progress)",
              "payload": {
                "type": "object",
                "required": [
                  "topic",
                  "source",
                  "data"
                ],
                "properties": {
                  "topic": {
                    "description": "{domain}/{topic}#{event}",
                    "type": "string",
                    "enum": [
                      "realestate/marketingprogram#memberadd"
                    ],
                    "descriptionAsHTML": "<p>{domain}/{topic}#{event}</p>\n"
                  },
                  "data": {
                    "description": "the message payload",
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "AddAction"
                        ]
                      },
                      "object": {
                        "x-title": "ProgramMembership",
                        "description": "describes membership relation between a member (Person) and a MarketingProgram",
                        "type": "object",
                        "allOf": [
                          {
                            "type": "object",
                            "description": "Provides additional information in member/memberOf relationships.",
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "a role played by the member in the memberOf group",
                                "enum": [
                                  "OrganizationRole"
                                ],
                                "example": "OrganizationRole"
                              },
                              "roleName": {
                                "type": "string",
                                "example": "Owner"
                              },
                              "member": {
                                "description": "member object or id",
                                "x-range": [
                                  "Person",
                                  "Organization"
                                ],
                                "example": {
                                  "type": "Person",
                                  "email": "bob@example.com"
                                }
                              },
                              "memberOf": {
                                "description": "reference to the MarketingProgram"
                              },
                              "startDate": {
                                "type": "string",
                                "format": "date-time",
                                "description": "the date the member started the program"
                              },
                              "endDate": {
                                "type": "string",
                                "format": "date-time",
                                "description": "the date the program membership ended"
                              }
                            }
                          },
                          {
                            "example": {
                              "type": "ProgramMembership",
                              "roleName": "Owner",
                              "member": {
                                "type": "Person",
                                "email": "bob@example.com"
                              }
                            }
                          }
                        ],
                        "descriptionAsHTML": "<p>describes membership relation between a member (Person) and a MarketingProgram</p>\n"
                      }
                    },
                    "descriptionAsHTML": "<p>the message payload</p>\n"
                  },
                  "source": {
                    "description": "the event origin, typically a user",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{user}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>the event origin, typically a user</p>\n"
                  },
                  "instrument": {
                    "description": "event producer, typically an app or service",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{supercrm}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>event producer, typically an app or service</p>\n"
                  },
                  "time": {
                    "description": "when the event was published",
                    "type": "string",
                    "format": "date-time",
                    "descriptionAsHTML": "<p>when the event was published</p>\n"
                  },
                  "contenttype": {
                    "description": "mimetype of the data property.  default=application/json",
                    "type": "string",
                    "example": "application/json",
                    "descriptionAsHTML": "<p>mimetype of the data property.  default=application/json</p>\n"
                  },
                  "@context": {
                    "description": "message context used for transforming message content",
                    "type": "string",
                    "format": "uri",
                    "example": "http://realestate.yodata.me/context/v1.json",
                    "descriptionAsHTML": "<p>message context used for transforming message content</p>\n"
                  }
                }
              },
              "summaryAsHTML": "<p>a program member was added by the agent (Work In Progress)</p>\n",
              "descriptionAsHTML": "",
              "generatedPayloadExample": "{\n  \"topic\": \"realestate/marketingprogram#memberadd\",\n  \"data\": {\n    \"type\": \"AddAction\",\n    \"object\": {\n      \"type\": \"ProgramMembership\",\n      \"roleName\": \"Owner\",\n      \"member\": {\n        \"type\": \"Person\",\n        \"email\": \"bob@example.com\"\n      },\n      \"memberOf\": null,\n      \"startDate\": \"2019-05-21T01:05:11Z\",\n      \"endDate\": \"2019-05-21T01:05:11Z\"\n    }\n  },\n  \"source\": \"http://{user}.example.com/profile/card#me\",\n  \"instrument\": \"http://{supercrm}.example.com/profile/card#me\",\n  \"time\": \"2019-05-21T01:05:11Z\",\n  \"contenttype\": \"application/json\",\n  \"@context\": \"http://realestate.yodata.me/context/v1.json\"\n}"
            },
            {
              "x-title": "marketingprogram#memberremove",
              "x-scope": "realestate",
              "summary": "a member was removed by the agent",
              "payload": {
                "type": "object",
                "required": [
                  "topic",
                  "source",
                  "data"
                ],
                "properties": {
                  "topic": {
                    "description": "{domain}/{topic}#{event}",
                    "type": "string",
                    "enum": [
                      "realestate/marketingprogram#memberremove"
                    ],
                    "descriptionAsHTML": "<p>{domain}/{topic}#{event}</p>\n"
                  },
                  "data": {
                    "description": "the message payload",
                    "type": "object",
                    "properties": {
                      "type": {
                        "example": "RemoveAction"
                      },
                      "object": {
                        "x-title": "ProgramMembership",
                        "description": "describes membership relation between a member (Person) and a MarketingProgram",
                        "type": "object",
                        "allOf": [
                          {
                            "type": "object",
                            "description": "Provides additional information in member/memberOf relationships.",
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "a role played by the member in the memberOf group",
                                "enum": [
                                  "OrganizationRole"
                                ],
                                "example": "OrganizationRole"
                              },
                              "roleName": {
                                "type": "string",
                                "example": "Owner"
                              },
                              "member": {
                                "description": "member object or id",
                                "x-range": [
                                  "Person",
                                  "Organization"
                                ],
                                "example": {
                                  "type": "Person",
                                  "email": "bob@example.com"
                                }
                              },
                              "memberOf": {
                                "description": "reference to the MarketingProgram"
                              },
                              "startDate": {
                                "type": "string",
                                "format": "date-time",
                                "description": "the date the member started the program"
                              },
                              "endDate": {
                                "type": "string",
                                "format": "date-time",
                                "description": "the date the program membership ended"
                              }
                            }
                          },
                          {
                            "example": {
                              "type": "ProgramMembership",
                              "roleName": "Owner",
                              "member": {
                                "type": "Person",
                                "email": "bob@example.com"
                              }
                            }
                          }
                        ],
                        "descriptionAsHTML": "<p>describes membership relation between a member (Person) and a MarketingProgram</p>\n"
                      },
                      "targetCollection": {
                        "example": {
                          "type": "MarketingProgram",
                          "name": "My Marketing Program"
                        }
                      }
                    },
                    "descriptionAsHTML": "<p>the message payload</p>\n"
                  },
                  "source": {
                    "description": "the event origin, typically a user",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{user}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>the event origin, typically a user</p>\n"
                  },
                  "instrument": {
                    "description": "event producer, typically an app or service",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{supercrm}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>event producer, typically an app or service</p>\n"
                  },
                  "time": {
                    "description": "when the event was published",
                    "type": "string",
                    "format": "date-time",
                    "descriptionAsHTML": "<p>when the event was published</p>\n"
                  },
                  "contenttype": {
                    "description": "mimetype of the data property.  default=application/json",
                    "type": "string",
                    "example": "application/json",
                    "descriptionAsHTML": "<p>mimetype of the data property.  default=application/json</p>\n"
                  },
                  "@context": {
                    "description": "message context used for transforming message content",
                    "type": "string",
                    "format": "uri",
                    "example": "http://realestate.yodata.me/context/v1.json",
                    "descriptionAsHTML": "<p>message context used for transforming message content</p>\n"
                  }
                }
              },
              "summaryAsHTML": "<p>a member was removed by the agent</p>\n",
              "descriptionAsHTML": "",
              "generatedPayloadExample": "{\n  \"topic\": \"realestate/marketingprogram#memberremove\",\n  \"data\": {\n    \"type\": \"RemoveAction\",\n    \"object\": {\n      \"type\": \"ProgramMembership\",\n      \"roleName\": \"Owner\",\n      \"member\": {\n        \"type\": \"Person\",\n        \"email\": \"bob@example.com\"\n      },\n      \"memberOf\": null,\n      \"startDate\": \"2019-05-21T01:05:11Z\",\n      \"endDate\": \"2019-05-21T01:05:11Z\"\n    },\n    \"targetCollection\": {\n      \"type\": \"MarketingProgram\",\n      \"name\": \"My Marketing Program\"\n    }\n  },\n  \"source\": \"http://{user}.example.com/profile/card#me\",\n  \"instrument\": \"http://{supercrm}.example.com/profile/card#me\",\n  \"time\": \"2019-05-21T01:05:11Z\",\n  \"contenttype\": \"application/json\",\n  \"@context\": \"http://realestate.yodata.me/context/v1.json\"\n}"
            }
          ],
          "summaryAsHTML": "",
          "descriptionAsHTML": ""
        }
      },
      "profile": {
        "x-summary": "Affiliate, Office, and Agent profile events",
        "subscribe": {
          "oneOf": [
            {
              "x-title": "profile#add",
              "x-scope": "realestate",
              "summary": "a user profile was updated",
              "payload": {
                "type": "object",
                "required": [
                  "topic",
                  "source",
                  "data"
                ],
                "properties": {
                  "topic": {
                    "description": "realestate/profile#add",
                    "type": "string",
                    "enum": [
                      "realestate/profile#add"
                    ],
                    "descriptionAsHTML": "<p>realestate/profile#add</p>\n"
                  },
                  "data": {
                    "description": "the message payload",
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "AddAction"
                        ],
                        "description": "AddAction",
                        "descriptionAsHTML": "<p>AddAction</p>\n"
                      },
                      "object": {
                        "type": "object",
                        "description": "content of the profile which was added",
                        "x-range": [
                          "RealEstateOrganization",
                          "RealEstateOffice",
                          "RealEstateAgent",
                          "Person"
                        ],
                        "example": {
                          "type": "RealEstateAgent",
                          "name": "Arya Stark"
                        },
                        "descriptionAsHTML": "<p>content of the profile which was added</p>\n"
                      }
                    },
                    "descriptionAsHTML": "<p>the message payload</p>\n"
                  },
                  "source": {
                    "description": "the event origin, typically a user",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{user}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>the event origin, typically a user</p>\n"
                  },
                  "instrument": {
                    "description": "event producer, typically an app or service",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{supercrm}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>event producer, typically an app or service</p>\n"
                  },
                  "time": {
                    "description": "when the event was published",
                    "type": "string",
                    "format": "date-time",
                    "descriptionAsHTML": "<p>when the event was published</p>\n"
                  },
                  "contenttype": {
                    "description": "mimetype of the data property.  default=application/json",
                    "type": "string",
                    "example": "application/json",
                    "descriptionAsHTML": "<p>mimetype of the data property.  default=application/json</p>\n"
                  },
                  "@context": {
                    "description": "message context used for transforming message content",
                    "type": "string",
                    "format": "uri",
                    "example": "http://realestate.yodata.me/context/v1.json",
                    "descriptionAsHTML": "<p>message context used for transforming message content</p>\n"
                  }
                }
              },
              "summaryAsHTML": "<p>a user profile was updated</p>\n",
              "descriptionAsHTML": "",
              "generatedPayloadExample": "{\n  \"topic\": \"realestate/profile#add\",\n  \"data\": {\n    \"type\": \"AddAction\",\n    \"object\": {\n      \"type\": \"RealEstateAgent\",\n      \"name\": \"Arya Stark\"\n    }\n  },\n  \"source\": \"http://{user}.example.com/profile/card#me\",\n  \"instrument\": \"http://{supercrm}.example.com/profile/card#me\",\n  \"time\": \"2019-05-21T01:05:11Z\",\n  \"contenttype\": \"application/json\",\n  \"@context\": \"http://realestate.yodata.me/context/v1.json\"\n}"
            },
            {
              "x-title": "profile#update",
              "x-scope": "realestate",
              "summary": "profile was updated.",
              "payload": {
                "type": "object",
                "required": [
                  "topic",
                  "source",
                  "data"
                ],
                "properties": {
                  "topic": {
                    "description": "{domain}/{topic}#{event}",
                    "type": "string",
                    "descriptionAsHTML": "<p>{domain}/{topic}#{event}</p>\n"
                  },
                  "data": {
                    "description": "the message payload",
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "UpdateAction"
                        ],
                        "description": "UpdateAction",
                        "descriptionAsHTML": "<p>UpdateAction</p>\n"
                      },
                      "object": {
                        "type": "object",
                        "description": "content of the profile which was added",
                        "x-range": [
                          "RealEstateOrganization",
                          "RealEstateOffice",
                          "RealEstateAgent",
                          "Person"
                        ],
                        "example": {
                          "type": "RealEstateAgent",
                          "name": "Arya Stark"
                        },
                        "descriptionAsHTML": "<p>content of the profile which was added</p>\n"
                      }
                    },
                    "descriptionAsHTML": "<p>the message payload</p>\n"
                  },
                  "source": {
                    "description": "the event origin, typically a user",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{user}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>the event origin, typically a user</p>\n"
                  },
                  "instrument": {
                    "description": "event producer, typically an app or service",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{supercrm}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>event producer, typically an app or service</p>\n"
                  },
                  "time": {
                    "description": "when the event was published",
                    "type": "string",
                    "format": "date-time",
                    "descriptionAsHTML": "<p>when the event was published</p>\n"
                  },
                  "contenttype": {
                    "description": "mimetype of the data property.  default=application/json",
                    "type": "string",
                    "example": "application/json",
                    "descriptionAsHTML": "<p>mimetype of the data property.  default=application/json</p>\n"
                  },
                  "@context": {
                    "description": "message context used for transforming message content",
                    "type": "string",
                    "format": "uri",
                    "example": "http://realestate.yodata.me/context/v1.json",
                    "descriptionAsHTML": "<p>message context used for transforming message content</p>\n"
                  }
                }
              },
              "summaryAsHTML": "<p>profile was updated.</p>\n",
              "descriptionAsHTML": "",
              "generatedPayloadExample": "{\n  \"topic\": \"string\",\n  \"data\": {\n    \"type\": \"UpdateAction\",\n    \"object\": {\n      \"type\": \"RealEstateAgent\",\n      \"name\": \"Arya Stark\"\n    }\n  },\n  \"source\": \"http://{user}.example.com/profile/card#me\",\n  \"instrument\": \"http://{supercrm}.example.com/profile/card#me\",\n  \"time\": \"2019-05-21T01:05:11Z\",\n  \"contenttype\": \"application/json\",\n  \"@context\": \"http://realestate.yodata.me/context/v1.json\"\n}"
            }
          ],
          "summaryAsHTML": "",
          "descriptionAsHTML": ""
        }
      },
      "website": {
        "x-summary": "Website events",
        "subscribe": {
          "oneOf": [
            {
              "x-title": "appointmentrequest",
              "x-scope": "realestate/website#",
              "summary": "a website vistor has requested an appointment",
              "payload": {
                "type": "object",
                "required": [
                  "topic",
                  "source",
                  "data"
                ],
                "properties": {
                  "topic": {
                    "description": "realestate/website#appointmentrequest",
                    "type": "string",
                    "enum": [
                      "realestate/website#appointmentrequest"
                    ],
                    "descriptionAsHTML": "<p>realestate/website#appointmentrequest</p>\n"
                  },
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "type": {
                        "description": "the action type",
                        "type": "string",
                        "enum": [
                          "AppointmentRequest"
                        ],
                        "descriptionAsHTML": "<p>the action type</p>\n"
                      },
                      "agent": {
                        "description": "a website user/visitor",
                        "type": "object",
                        "x-range": "Person",
                        "example": {
                          "type": "Person",
                          "name": "Bob",
                          "email": "bob@example.com",
                          "telephone": "1+000-867-5309",
                          "identifier": {
                            "vendornameuserid": "abc123"
                          }
                        },
                        "descriptionAsHTML": "<p>a website user/visitor</p>\n"
                      },
                      "object": {
                        "description": "The object upon which the action is carried out",
                        "type": "object",
                        "allOf": [
                          {
                            "type": "object",
                            "required": [
                              "type"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "Linked-Data (@type)"
                              },
                              "id": {
                                "type": "string",
                                "format": "uri",
                                "description": "Linked-Data uri"
                              },
                              "name": {
                                "type": "string",
                                "description": "the name of the item."
                              },
                              "url": {
                                "type": "string",
                                "format": "uri",
                                "description": "a public href that is clearly and uniquely associated with the item."
                              }
                            }
                          },
                          {
                            "type": "object",
                            "description": "A comment on an item.",
                            "properties": {
                              "type": {
                                "description": "Comment",
                                "type": "string",
                                "enum": [
                                  "Comment"
                                ]
                              },
                              "author": {
                                "type": "object",
                                "x-kind": "Person",
                                "example": {
                                  "type": "Person",
                                  "name": "Paul Person"
                                }
                              },
                              "text": {
                                "description": "the comment content",
                                "type": "string",
                                "example": "Commodi ratione vel qui ullam ea ut."
                              },
                              "about": {
                                "title": "about",
                                "type": "object",
                                "description": "the subject of the item",
                                "example": {
                                  "type": "RealEstateListing",
                                  "id": "https://example.com/listingid"
                                }
                              }
                            },
                            "example": {
                              "type": "Comment",
                              "text": "Winter is coming",
                              "author": {
                                "type": "Person",
                                "email": "user@example.com"
                              },
                              "about": {
                                "type": "RealEstateListing",
                                "id": "http://example.com/listing/1"
                              }
                            }
                          }
                        ],
                        "descriptionAsHTML": "<p>The object upon which the action is carried out</p>\n"
                      },
                      "instrument": {
                        "description": "thing used by the agent to perform the action, i.e. an application or website that generated the message.",
                        "example": "https://{app}.example.com/profile/card#me",
                        "descriptionAsHTML": "<p>thing used by the agent to perform the action, i.e. an application or website that generated the message.</p>\n"
                      },
                      "recipient": {
                        "description": "the request recipient",
                        "x-range": [
                          "Person",
                          "Organization"
                        ],
                        "example": "http://{agent}.example.com/profile/card#me",
                        "descriptionAsHTML": "<p>the request recipient</p>\n"
                      }
                    },
                    "externalDocs": {
                      "description": "schema.org/Action",
                      "url": "https://schema.org/Action"
                    }
                  },
                  "source": {
                    "description": "the event origin, typically a user",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{user}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>the event origin, typically a user</p>\n"
                  },
                  "instrument": {
                    "description": "event producer, typically an app or service",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{supercrm}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>event producer, typically an app or service</p>\n"
                  },
                  "time": {
                    "description": "when the event was published",
                    "type": "string",
                    "format": "date-time",
                    "descriptionAsHTML": "<p>when the event was published</p>\n"
                  },
                  "contenttype": {
                    "description": "mimetype of the data property.  default=application/json",
                    "type": "string",
                    "example": "application/json",
                    "descriptionAsHTML": "<p>mimetype of the data property.  default=application/json</p>\n"
                  },
                  "@context": {
                    "description": "message context used for transforming message content",
                    "type": "string",
                    "format": "uri",
                    "example": "http://realestate.yodata.me/context/v1.json",
                    "descriptionAsHTML": "<p>message context used for transforming message content</p>\n"
                  }
                }
              },
              "summaryAsHTML": "<p>a website vistor has requested an appointment</p>\n",
              "descriptionAsHTML": "",
              "generatedPayloadExample": "{\n  \"topic\": \"realestate/website#appointmentrequest\",\n  \"data\": {\n    \"type\": \"AppointmentRequest\",\n    \"agent\": {\n      \"type\": \"Person\",\n      \"name\": \"Bob\",\n      \"email\": \"bob@example.com\",\n      \"telephone\": \"1+000-867-5309\",\n      \"identifier\": {\n        \"vendornameuserid\": \"abc123\"\n      }\n    },\n    \"object\": {\n      \"type\": \"Comment\",\n      \"id\": \"http://example.com\",\n      \"name\": \"string\",\n      \"url\": \"http://example.com\",\n      \"text\": \"Winter is coming\",\n      \"author\": {\n        \"type\": \"Person\",\n        \"email\": \"user@example.com\"\n      },\n      \"about\": {\n        \"type\": \"RealEstateListing\",\n        \"id\": \"http://example.com/listing/1\"\n      }\n    },\n    \"instrument\": \"https://{app}.example.com/profile/card#me\",\n    \"recipient\": \"http://{agent}.example.com/profile/card#me\"\n  },\n  \"source\": \"http://{user}.example.com/profile/card#me\",\n  \"instrument\": \"http://{supercrm}.example.com/profile/card#me\",\n  \"time\": \"2019-05-21T01:05:11Z\",\n  \"contenttype\": \"application/json\",\n  \"@context\": \"http://realestate.yodata.me/context/v1.json\"\n}"
            },
            {
              "x-title": "propertyoffer",
              "x-scope": "realestate/website#",
              "summary": "website user makes an offer on a property listing",
              "payload": {
                "type": "object",
                "required": [
                  "topic",
                  "source",
                  "data"
                ],
                "properties": {
                  "topic": {
                    "description": "realestate/website#propertyoffer",
                    "type": "string",
                    "enum": [
                      "realestate/website#propertyoffer"
                    ],
                    "descriptionAsHTML": "<p>realestate/website#propertyoffer</p>\n"
                  },
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "type": {
                        "description": "OfferAction",
                        "type": "string",
                        "enum": [
                          "OfferAction"
                        ],
                        "descriptionAsHTML": "<p>OfferAction</p>\n"
                      },
                      "agent": {
                        "description": "a website user/visitor",
                        "type": "object",
                        "x-range": "Person",
                        "example": {
                          "type": "Person",
                          "name": "Bob",
                          "email": "bob@example.com",
                          "telephone": "1+000-867-5309",
                          "identifier": {
                            "vendornameuserid": "abc123"
                          }
                        },
                        "descriptionAsHTML": "<p>a website user/visitor</p>\n"
                      },
                      "object": {
                        "description": "reference to the item on which the offer is being made",
                        "type": "object",
                        "example": {
                          "type": "RealEstateListing",
                          "id": "http://example.com/12345"
                        },
                        "descriptionAsHTML": "<p>reference to the item on which the offer is being made</p>\n"
                      },
                      "instrument": {
                        "description": "thing used by the agent to perform the action, i.e. an application or website that generated the message.",
                        "example": "https://{app}.example.com/profile/card#me",
                        "descriptionAsHTML": "<p>thing used by the agent to perform the action, i.e. an application or website that generated the message.</p>\n"
                      },
                      "id": {
                        "type": "string",
                        "format": "uri",
                        "description": "Linked-Data uri",
                        "descriptionAsHTML": "<p>Linked-Data uri</p>\n"
                      },
                      "name": {
                        "type": "string",
                        "description": "the name of the item.",
                        "descriptionAsHTML": "<p>the name of the item.</p>\n"
                      },
                      "url": {
                        "type": "string",
                        "format": "uri",
                        "description": "a public href that is clearly and uniquely associated with the item.",
                        "descriptionAsHTML": "<p>a public href that is clearly and uniquely associated with the item.</p>\n"
                      },
                      "recipient": {
                        "type": "object",
                        "x-range": [
                          "Person",
                          "Organization"
                        ],
                        "description": "the offer recipient",
                        "example": {
                          "id": "http://user.example.com/profile/card#me"
                        },
                        "descriptionAsHTML": "<p>the offer recipient</p>\n"
                      },
                      "offerPrice": {
                        "title": "PriceSpecification",
                        "type": "object",
                        "x-range": "PriceSpecification",
                        "description": "a price offered for transfer of ownership of an item",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "PriceSpecification",
                            "enum": [
                              "PriceSpecification"
                            ],
                            "descriptionAsHTML": "<p>PriceSpecification</p>\n"
                          },
                          "minPrice": {
                            "type": "number",
                            "description": "the lowest value if the price is a range",
                            "descriptionAsHTML": "<p>the lowest value if the price is a range</p>\n"
                          },
                          "maxPrice": {
                            "type": "number",
                            "description": "the high price offered if the price is a range",
                            "descriptionAsHTML": "<p>the high price offered if the price is a range</p>\n"
                          },
                          "price": {
                            "type": "number",
                            "description": "the price",
                            "descriptionAsHTML": "<p>the price</p>\n"
                          },
                          "priceCurrency": {
                            "type": "string",
                            "description": "use ISO4217",
                            "example": "USD",
                            "descriptionAsHTML": "<p>use ISO4217</p>\n"
                          }
                        },
                        "descriptionAsHTML": "<p>a price offered for transfer of ownership of an item</p>\n"
                      }
                    },
                    "externalDocs": {
                      "description": "schema.org/Action",
                      "url": "https://schema.org/Action"
                    },
                    "description": "an agent makes an offer to buy the object",
                    "descriptionAsHTML": "<p>an agent makes an offer to buy the object</p>\n"
                  },
                  "source": {
                    "description": "the event origin, typically a user",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{user}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>the event origin, typically a user</p>\n"
                  },
                  "instrument": {
                    "description": "event producer, typically an app or service",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{supercrm}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>event producer, typically an app or service</p>\n"
                  },
                  "time": {
                    "description": "when the event was published",
                    "type": "string",
                    "format": "date-time",
                    "descriptionAsHTML": "<p>when the event was published</p>\n"
                  },
                  "contenttype": {
                    "description": "mimetype of the data property.  default=application/json",
                    "type": "string",
                    "example": "application/json",
                    "descriptionAsHTML": "<p>mimetype of the data property.  default=application/json</p>\n"
                  },
                  "@context": {
                    "description": "message context used for transforming message content",
                    "type": "string",
                    "format": "uri",
                    "example": "http://realestate.yodata.me/context/v1.json",
                    "descriptionAsHTML": "<p>message context used for transforming message content</p>\n"
                  }
                }
              },
              "summaryAsHTML": "<p>website user makes an offer on a property listing</p>\n",
              "descriptionAsHTML": "",
              "generatedPayloadExample": "{\n  \"topic\": \"realestate/website#propertyoffer\",\n  \"data\": {\n    \"type\": \"OfferAction\",\n    \"agent\": {\n      \"type\": \"Person\",\n      \"name\": \"Bob\",\n      \"email\": \"bob@example.com\",\n      \"telephone\": \"1+000-867-5309\",\n      \"identifier\": {\n        \"vendornameuserid\": \"abc123\"\n      }\n    },\n    \"object\": {\n      \"type\": \"RealEstateListing\",\n      \"id\": \"http://example.com/12345\"\n    },\n    \"instrument\": \"https://{app}.example.com/profile/card#me\",\n    \"id\": \"http://example.com\",\n    \"name\": \"string\",\n    \"url\": \"http://example.com\",\n    \"recipient\": {\n      \"id\": \"http://user.example.com/profile/card#me\"\n    },\n    \"offerPrice\": {\n      \"type\": \"PriceSpecification\",\n      \"minPrice\": 0,\n      \"maxPrice\": 0,\n      \"price\": 0,\n      \"priceCurrency\": \"USD\"\n    }\n  },\n  \"source\": \"http://{user}.example.com/profile/card#me\",\n  \"instrument\": \"http://{supercrm}.example.com/profile/card#me\",\n  \"time\": \"2019-05-21T01:05:11Z\",\n  \"contenttype\": \"application/json\",\n  \"@context\": \"http://realestate.yodata.me/context/v1.json\"\n}"
            },
            {
              "x-title": "propertysearch",
              "x-scope": "realestate/website#",
              "summary": "website visitor (agent) has searched for properties on",
              "payload": {
                "type": "object",
                "required": [
                  "topic",
                  "source",
                  "data"
                ],
                "properties": {
                  "topic": {
                    "description": "realestate/website#propertysearch",
                    "type": "string",
                    "enum": [
                      "realestate/website#propertysearch"
                    ],
                    "descriptionAsHTML": "<p>realestate/website#propertysearch</p>\n"
                  },
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "type": {
                        "description": "the action type",
                        "type": "string",
                        "enum": [
                          "SearchAction"
                        ],
                        "descriptionAsHTML": "<p>the action type</p>\n"
                      },
                      "agent": {
                        "description": "a website user/visitor",
                        "type": "object",
                        "x-range": "Person",
                        "example": {
                          "type": "Person",
                          "name": "Bob",
                          "email": "bob@example.com",
                          "telephone": "1+000-867-5309",
                          "identifier": {
                            "vendornameuserid": "abc123"
                          }
                        },
                        "descriptionAsHTML": "<p>a website user/visitor</p>\n"
                      },
                      "object": {
                        "description": "The object upon which the action is carried out",
                        "type": "object",
                        "title": "PropertySearchArguments",
                        "x-range": "PropertySearchArguments",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "PropertySearchArguments"
                            ]
                          },
                          "price": {
                            "type": "object",
                            "description": "A point value or interval.",
                            "properties": {
                              "value": {
                                "type": "number"
                              },
                              "minValue": {
                                "type": "number"
                              },
                              "maxValue": {
                                "type": "number"
                              },
                              "unitCode": {
                                "type": "string"
                              },
                              "unitText": {
                                "type": "string"
                              }
                            },
                            "descriptionAsHTML": "<p>A point value or interval.</p>\n"
                          },
                          "bedrooms": {
                            "type": "object",
                            "description": "A point value or interval.",
                            "properties": {
                              "value": {
                                "type": "number"
                              },
                              "minValue": {
                                "type": "number"
                              },
                              "maxValue": {
                                "type": "number"
                              },
                              "unitCode": {
                                "type": "string"
                              },
                              "unitText": {
                                "type": "string"
                              }
                            },
                            "descriptionAsHTML": "<p>A point value or interval.</p>\n"
                          },
                          "bathrooms": {
                            "type": "object",
                            "description": "A point value or interval.",
                            "properties": {
                              "value": {
                                "type": "number"
                              },
                              "minValue": {
                                "type": "number"
                              },
                              "maxValue": {
                                "type": "number"
                              },
                              "unitCode": {
                                "type": "string"
                              },
                              "unitText": {
                                "type": "string"
                              }
                            },
                            "descriptionAsHTML": "<p>A point value or interval.</p>\n"
                          },
                          "location": {
                            "x-range": [
                              "Place",
                              "PostalAddress",
                              "Text"
                            ],
                            "description": "The location of for example where the event is happening, an organization is located, or where an action takes place.",
                            "type": "object",
                            "descriptionAsHTML": "<p>The location of for example where the event is happening, an organization is located, or where an action takes place.</p>\n"
                          }
                        },
                        "descriptionAsHTML": "<p>The object upon which the action is carried out</p>\n"
                      },
                      "instrument": {
                        "description": "thing used by the agent to perform the action, i.e. an application or website that generated the message.",
                        "example": "https://{app}.example.com/profile/card#me",
                        "type": "object",
                        "properties": {
                          "query": {
                            "type": "string",
                            "description": "text search input",
                            "descriptionAsHTML": "<p>text search input</p>\n"
                          }
                        },
                        "descriptionAsHTML": "<p>thing used by the agent to perform the action, i.e. an application or website that generated the message.</p>\n"
                      }
                    },
                    "externalDocs": {
                      "description": "schema.org/Action",
                      "url": "https://schema.org/Action"
                    }
                  },
                  "source": {
                    "description": "the event origin, typically a user",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{user}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>the event origin, typically a user</p>\n"
                  },
                  "instrument": {
                    "description": "event producer, typically an app or service",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{supercrm}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>event producer, typically an app or service</p>\n"
                  },
                  "time": {
                    "description": "when the event was published",
                    "type": "string",
                    "format": "date-time",
                    "descriptionAsHTML": "<p>when the event was published</p>\n"
                  },
                  "contenttype": {
                    "description": "mimetype of the data property.  default=application/json",
                    "type": "string",
                    "example": "application/json",
                    "descriptionAsHTML": "<p>mimetype of the data property.  default=application/json</p>\n"
                  },
                  "@context": {
                    "description": "message context used for transforming message content",
                    "type": "string",
                    "format": "uri",
                    "example": "http://realestate.yodata.me/context/v1.json",
                    "descriptionAsHTML": "<p>message context used for transforming message content</p>\n"
                  }
                }
              },
              "summaryAsHTML": "<p>website visitor (agent) has searched for properties on</p>\n",
              "descriptionAsHTML": "",
              "generatedPayloadExample": "{\n  \"topic\": \"realestate/website#propertysearch\",\n  \"data\": {\n    \"type\": \"SearchAction\",\n    \"agent\": {\n      \"type\": \"Person\",\n      \"name\": \"Bob\",\n      \"email\": \"bob@example.com\",\n      \"telephone\": \"1+000-867-5309\",\n      \"identifier\": {\n        \"vendornameuserid\": \"abc123\"\n      }\n    },\n    \"object\": {\n      \"type\": \"PropertySearchArguments\",\n      \"price\": {\n        \"value\": 0,\n        \"minValue\": 0,\n        \"maxValue\": 0,\n        \"unitCode\": \"string\",\n        \"unitText\": \"string\"\n      },\n      \"bedrooms\": {\n        \"value\": 0,\n        \"minValue\": 0,\n        \"maxValue\": 0,\n        \"unitCode\": \"string\",\n        \"unitText\": \"string\"\n      },\n      \"bathrooms\": {\n        \"value\": 0,\n        \"minValue\": 0,\n        \"maxValue\": 0,\n        \"unitCode\": \"string\",\n        \"unitText\": \"string\"\n      },\n      \"location\": {}\n    },\n    \"instrument\": \"https://{app}.example.com/profile/card#me\"\n  },\n  \"source\": \"http://{user}.example.com/profile/card#me\",\n  \"instrument\": \"http://{supercrm}.example.com/profile/card#me\",\n  \"time\": \"2019-05-21T01:05:11Z\",\n  \"contenttype\": \"application/json\",\n  \"@context\": \"http://realestate.yodata.me/context/v1.json\"\n}"
            },
            {
              "x-title": "propertyshare",
              "x-scope": "realestate/website#",
              "summary": "agent shared object with recipient",
              "payload": {
                "type": "object",
                "required": [
                  "topic",
                  "source",
                  "data"
                ],
                "properties": {
                  "topic": {
                    "description": "realestate/website#propertyshare",
                    "type": "string",
                    "enum": [
                      "realestate/website#propertyshare"
                    ],
                    "descriptionAsHTML": "<p>realestate/website#propertyshare</p>\n"
                  },
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "type": {
                        "description": "the action type",
                        "type": "string",
                        "enum": [
                          "ShareAction"
                        ],
                        "descriptionAsHTML": "<p>the action type</p>\n"
                      },
                      "agent": {
                        "description": "a website user/visitor",
                        "type": "object",
                        "x-range": "Person",
                        "example": {
                          "type": "Person",
                          "name": "Bob",
                          "email": "bob@example.com",
                          "telephone": "1+000-867-5309",
                          "identifier": {
                            "vendornameuserid": "abc123"
                          }
                        },
                        "descriptionAsHTML": "<p>a website user/visitor</p>\n"
                      },
                      "object": {
                        "description": "The object upon which the action is carried out",
                        "type": "object",
                        "descriptionAsHTML": "<p>The object upon which the action is carried out</p>\n"
                      },
                      "instrument": {
                        "description": "thing used by the agent to perform the action, i.e. an application or website that generated the message.",
                        "example": "https://{app}.example.com/profile/card#me",
                        "descriptionAsHTML": "<p>thing used by the agent to perform the action, i.e. an application or website that generated the message.</p>\n"
                      }
                    },
                    "externalDocs": {
                      "description": "schema.org/Action",
                      "url": "https://schema.org/Action"
                    }
                  },
                  "source": {
                    "description": "the event origin, typically a user",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{user}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>the event origin, typically a user</p>\n"
                  },
                  "instrument": {
                    "description": "event producer, typically an app or service",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{supercrm}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>event producer, typically an app or service</p>\n"
                  },
                  "time": {
                    "description": "when the event was published",
                    "type": "string",
                    "format": "date-time",
                    "descriptionAsHTML": "<p>when the event was published</p>\n"
                  },
                  "contenttype": {
                    "description": "mimetype of the data property.  default=application/json",
                    "type": "string",
                    "example": "application/json",
                    "descriptionAsHTML": "<p>mimetype of the data property.  default=application/json</p>\n"
                  },
                  "@context": {
                    "description": "message context used for transforming message content",
                    "type": "string",
                    "format": "uri",
                    "example": "http://realestate.yodata.me/context/v1.json",
                    "descriptionAsHTML": "<p>message context used for transforming message content</p>\n"
                  }
                }
              },
              "summaryAsHTML": "<p>agent shared object with recipient</p>\n",
              "descriptionAsHTML": "",
              "generatedPayloadExample": "{\n  \"topic\": \"realestate/website#propertyshare\",\n  \"data\": {\n    \"type\": \"ShareAction\",\n    \"agent\": {\n      \"type\": \"Person\",\n      \"name\": \"Bob\",\n      \"email\": \"bob@example.com\",\n      \"telephone\": \"1+000-867-5309\",\n      \"identifier\": {\n        \"vendornameuserid\": \"abc123\"\n      }\n    },\n    \"object\": {},\n    \"instrument\": \"https://{app}.example.com/profile/card#me\"\n  },\n  \"source\": \"http://{user}.example.com/profile/card#me\",\n  \"instrument\": \"http://{supercrm}.example.com/profile/card#me\",\n  \"time\": \"2019-05-21T01:05:11Z\",\n  \"contenttype\": \"application/json\",\n  \"@context\": \"http://realestate.yodata.me/context/v1.json\"\n}"
            },
            {
              "x-title": "propertyview",
              "x-scope": "realestate/website#",
              "summary": "website user (agent) viewed an (object) on website (instrument)",
              "payload": {
                "type": "object",
                "required": [
                  "topic",
                  "source",
                  "data"
                ],
                "properties": {
                  "topic": {
                    "description": "realestate/website#propertyview",
                    "type": "string",
                    "enum": [
                      "realestate/website#propertyview"
                    ],
                    "descriptionAsHTML": "<p>realestate/website#propertyview</p>\n"
                  },
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "type": {
                        "description": "the action type",
                        "type": "string",
                        "enum": [
                          "ViewAction"
                        ],
                        "descriptionAsHTML": "<p>the action type</p>\n"
                      },
                      "agent": {
                        "description": "a website user/visitor",
                        "type": "object",
                        "x-range": "Person",
                        "example": {
                          "type": "Person",
                          "name": "Bob",
                          "email": "bob@example.com",
                          "telephone": "1+000-867-5309",
                          "identifier": {
                            "vendornameuserid": "abc123"
                          }
                        },
                        "descriptionAsHTML": "<p>a website user/visitor</p>\n"
                      },
                      "object": {
                        "description": "The object upon which the action is carried out",
                        "type": "object",
                        "descriptionAsHTML": "<p>The object upon which the action is carried out</p>\n"
                      },
                      "instrument": {
                        "description": "thing used by the agent to perform the action, i.e. an application or website that generated the message.",
                        "example": "https://{app}.example.com/profile/card#me",
                        "descriptionAsHTML": "<p>thing used by the agent to perform the action, i.e. an application or website that generated the message.</p>\n"
                      }
                    },
                    "externalDocs": {
                      "description": "schema.org/Action",
                      "url": "https://schema.org/Action"
                    }
                  },
                  "source": {
                    "description": "the event origin, typically a user",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{user}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>the event origin, typically a user</p>\n"
                  },
                  "instrument": {
                    "description": "event producer, typically an app or service",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{supercrm}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>event producer, typically an app or service</p>\n"
                  },
                  "time": {
                    "description": "when the event was published",
                    "type": "string",
                    "format": "date-time",
                    "descriptionAsHTML": "<p>when the event was published</p>\n"
                  },
                  "contenttype": {
                    "description": "mimetype of the data property.  default=application/json",
                    "type": "string",
                    "example": "application/json",
                    "descriptionAsHTML": "<p>mimetype of the data property.  default=application/json</p>\n"
                  },
                  "@context": {
                    "description": "message context used for transforming message content",
                    "type": "string",
                    "format": "uri",
                    "example": "http://realestate.yodata.me/context/v1.json",
                    "descriptionAsHTML": "<p>message context used for transforming message content</p>\n"
                  }
                }
              },
              "summaryAsHTML": "<p>website user (agent) viewed an (object) on website (instrument)</p>\n",
              "descriptionAsHTML": "",
              "generatedPayloadExample": "{\n  \"topic\": \"realestate/website#propertyview\",\n  \"data\": {\n    \"type\": \"ViewAction\",\n    \"agent\": {\n      \"type\": \"Person\",\n      \"name\": \"Bob\",\n      \"email\": \"bob@example.com\",\n      \"telephone\": \"1+000-867-5309\",\n      \"identifier\": {\n        \"vendornameuserid\": \"abc123\"\n      }\n    },\n    \"object\": {},\n    \"instrument\": \"https://{app}.example.com/profile/card#me\"\n  },\n  \"source\": \"http://{user}.example.com/profile/card#me\",\n  \"instrument\": \"http://{supercrm}.example.com/profile/card#me\",\n  \"time\": \"2019-05-21T01:05:11Z\",\n  \"contenttype\": \"application/json\",\n  \"@context\": \"http://realestate.yodata.me/context/v1.json\"\n}"
            },
            {
              "x-title": "question",
              "x-scope": "realestate/website#",
              "summary": "a website visitor has asked a question",
              "payload": {
                "type": "object",
                "required": [
                  "topic",
                  "source",
                  "data"
                ],
                "properties": {
                  "topic": {
                    "description": "{domain}/{topic}#{event}",
                    "type": "string",
                    "enum": [
                      "realestate/website#question"
                    ],
                    "descriptionAsHTML": "<p>{domain}/{topic}#{event}</p>\n"
                  },
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "type": {
                        "description": "the action type",
                        "type": "string",
                        "enum": [
                          "Action"
                        ],
                        "descriptionAsHTML": "<p>the action type</p>\n"
                      },
                      "agent": {
                        "description": "a website user/visitor",
                        "type": "object",
                        "x-range": "Person",
                        "example": {
                          "type": "Person",
                          "name": "Bob",
                          "email": "bob@example.com",
                          "telephone": "1+000-867-5309",
                          "identifier": {
                            "vendornameuserid": "abc123"
                          }
                        },
                        "descriptionAsHTML": "<p>a website user/visitor</p>\n"
                      },
                      "object": {
                        "description": "The object upon which the action is carried out",
                        "type": "object",
                        "descriptionAsHTML": "<p>The object upon which the action is carried out</p>\n"
                      },
                      "instrument": {
                        "description": "thing used by the agent to perform the action, i.e. an application or website that generated the message.",
                        "example": "https://{app}.example.com/profile/card#me",
                        "descriptionAsHTML": "<p>thing used by the agent to perform the action, i.e. an application or website that generated the message.</p>\n"
                      }
                    },
                    "externalDocs": {
                      "description": "schema.org/Action",
                      "url": "https://schema.org/Action"
                    }
                  },
                  "source": {
                    "description": "the event origin, typically a user",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{user}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>the event origin, typically a user</p>\n"
                  },
                  "instrument": {
                    "description": "event producer, typically an app or service",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{supercrm}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>event producer, typically an app or service</p>\n"
                  },
                  "time": {
                    "description": "when the event was published",
                    "type": "string",
                    "format": "date-time",
                    "descriptionAsHTML": "<p>when the event was published</p>\n"
                  },
                  "contenttype": {
                    "description": "mimetype of the data property.  default=application/json",
                    "type": "string",
                    "example": "application/json",
                    "descriptionAsHTML": "<p>mimetype of the data property.  default=application/json</p>\n"
                  },
                  "@context": {
                    "description": "message context used for transforming message content",
                    "type": "string",
                    "format": "uri",
                    "example": "http://realestate.yodata.me/context/v1.json",
                    "descriptionAsHTML": "<p>message context used for transforming message content</p>\n"
                  }
                }
              },
              "summaryAsHTML": "<p>a website visitor has asked a question</p>\n",
              "descriptionAsHTML": "",
              "generatedPayloadExample": "{\n  \"topic\": \"realestate/website#question\",\n  \"data\": {\n    \"type\": \"Action\",\n    \"agent\": {\n      \"type\": \"Person\",\n      \"name\": \"Bob\",\n      \"email\": \"bob@example.com\",\n      \"telephone\": \"1+000-867-5309\",\n      \"identifier\": {\n        \"vendornameuserid\": \"abc123\"\n      }\n    },\n    \"object\": {},\n    \"instrument\": \"https://{app}.example.com/profile/card#me\"\n  },\n  \"source\": \"http://{user}.example.com/profile/card#me\",\n  \"instrument\": \"http://{supercrm}.example.com/profile/card#me\",\n  \"time\": \"2019-05-21T01:05:11Z\",\n  \"contenttype\": \"application/json\",\n  \"@context\": \"http://realestate.yodata.me/context/v1.json\"\n}"
            },
            {
              "x-title": "register",
              "x-scope": "realestate/website#",
              "summary": "a website visitor has registered",
              "payload": {
                "type": "object",
                "required": [
                  "topic",
                  "source",
                  "data"
                ],
                "properties": {
                  "topic": {
                    "description": "{domain}/{topic}#{event}",
                    "type": "string",
                    "enum": [
                      "realestate/website#register"
                    ],
                    "descriptionAsHTML": "<p>{domain}/{topic}#{event}</p>\n"
                  },
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "type": {
                        "description": "the action type",
                        "type": "string",
                        "enum": [
                          "Action"
                        ],
                        "descriptionAsHTML": "<p>the action type</p>\n"
                      },
                      "agent": {
                        "description": "a website user/visitor",
                        "type": "object",
                        "x-range": "Person",
                        "example": {
                          "type": "Person",
                          "name": "Bob",
                          "email": "bob@example.com",
                          "telephone": "1+000-867-5309",
                          "identifier": {
                            "vendornameuserid": "abc123"
                          }
                        },
                        "descriptionAsHTML": "<p>a website user/visitor</p>\n"
                      },
                      "object": {
                        "description": "The object upon which the action is carried out",
                        "type": "object",
                        "descriptionAsHTML": "<p>The object upon which the action is carried out</p>\n"
                      },
                      "instrument": {
                        "description": "thing used by the agent to perform the action, i.e. an application or website that generated the message.",
                        "example": "https://{app}.example.com/profile/card#me",
                        "descriptionAsHTML": "<p>thing used by the agent to perform the action, i.e. an application or website that generated the message.</p>\n"
                      }
                    },
                    "externalDocs": {
                      "description": "schema.org/Action",
                      "url": "https://schema.org/Action"
                    }
                  },
                  "source": {
                    "description": "the event origin, typically a user",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{user}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>the event origin, typically a user</p>\n"
                  },
                  "instrument": {
                    "description": "event producer, typically an app or service",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{supercrm}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>event producer, typically an app or service</p>\n"
                  },
                  "time": {
                    "description": "when the event was published",
                    "type": "string",
                    "format": "date-time",
                    "descriptionAsHTML": "<p>when the event was published</p>\n"
                  },
                  "contenttype": {
                    "description": "mimetype of the data property.  default=application/json",
                    "type": "string",
                    "example": "application/json",
                    "descriptionAsHTML": "<p>mimetype of the data property.  default=application/json</p>\n"
                  },
                  "@context": {
                    "description": "message context used for transforming message content",
                    "type": "string",
                    "format": "uri",
                    "example": "http://realestate.yodata.me/context/v1.json",
                    "descriptionAsHTML": "<p>message context used for transforming message content</p>\n"
                  }
                }
              },
              "summaryAsHTML": "<p>a website visitor has registered</p>\n",
              "descriptionAsHTML": "",
              "generatedPayloadExample": "{\n  \"topic\": \"realestate/website#register\",\n  \"data\": {\n    \"type\": \"Action\",\n    \"agent\": {\n      \"type\": \"Person\",\n      \"name\": \"Bob\",\n      \"email\": \"bob@example.com\",\n      \"telephone\": \"1+000-867-5309\",\n      \"identifier\": {\n        \"vendornameuserid\": \"abc123\"\n      }\n    },\n    \"object\": {},\n    \"instrument\": \"https://{app}.example.com/profile/card#me\"\n  },\n  \"source\": \"http://{user}.example.com/profile/card#me\",\n  \"instrument\": \"http://{supercrm}.example.com/profile/card#me\",\n  \"time\": \"2019-05-21T01:05:11Z\",\n  \"contenttype\": \"application/json\",\n  \"@context\": \"http://realestate.yodata.me/context/v1.json\"\n}"
            },
            {
              "x-title": "showingrequest",
              "x-scope": "realestate/website#",
              "summary": "a website visitor has requested a property showing",
              "payload": {
                "type": "object",
                "required": [
                  "topic",
                  "source",
                  "data"
                ],
                "properties": {
                  "topic": {
                    "description": "{domain}/{topic}#{event}",
                    "type": "string",
                    "enum": [
                      "realestate/website#showingrequest"
                    ],
                    "descriptionAsHTML": "<p>{domain}/{topic}#{event}</p>\n"
                  },
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "type": {
                        "description": "the action type",
                        "type": "string",
                        "enum": [
                          "Action"
                        ],
                        "descriptionAsHTML": "<p>the action type</p>\n"
                      },
                      "agent": {
                        "description": "a website user/visitor",
                        "type": "object",
                        "x-range": "Person",
                        "example": {
                          "type": "Person",
                          "name": "Bob",
                          "email": "bob@example.com",
                          "telephone": "1+000-867-5309",
                          "identifier": {
                            "vendornameuserid": "abc123"
                          }
                        },
                        "descriptionAsHTML": "<p>a website user/visitor</p>\n"
                      },
                      "object": {
                        "description": "The object upon which the action is carried out",
                        "type": "object",
                        "descriptionAsHTML": "<p>The object upon which the action is carried out</p>\n"
                      },
                      "instrument": {
                        "description": "thing used by the agent to perform the action, i.e. an application or website that generated the message.",
                        "example": "https://{app}.example.com/profile/card#me",
                        "descriptionAsHTML": "<p>thing used by the agent to perform the action, i.e. an application or website that generated the message.</p>\n"
                      }
                    },
                    "externalDocs": {
                      "description": "schema.org/Action",
                      "url": "https://schema.org/Action"
                    }
                  },
                  "source": {
                    "description": "the event origin, typically a user",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{user}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>the event origin, typically a user</p>\n"
                  },
                  "instrument": {
                    "description": "event producer, typically an app or service",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{supercrm}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>event producer, typically an app or service</p>\n"
                  },
                  "time": {
                    "description": "when the event was published",
                    "type": "string",
                    "format": "date-time",
                    "descriptionAsHTML": "<p>when the event was published</p>\n"
                  },
                  "contenttype": {
                    "description": "mimetype of the data property.  default=application/json",
                    "type": "string",
                    "example": "application/json",
                    "descriptionAsHTML": "<p>mimetype of the data property.  default=application/json</p>\n"
                  },
                  "@context": {
                    "description": "message context used for transforming message content",
                    "type": "string",
                    "format": "uri",
                    "example": "http://realestate.yodata.me/context/v1.json",
                    "descriptionAsHTML": "<p>message context used for transforming message content</p>\n"
                  }
                }
              },
              "summaryAsHTML": "<p>a website visitor has requested a property showing</p>\n",
              "descriptionAsHTML": "",
              "generatedPayloadExample": "{\n  \"topic\": \"realestate/website#showingrequest\",\n  \"data\": {\n    \"type\": \"Action\",\n    \"agent\": {\n      \"type\": \"Person\",\n      \"name\": \"Bob\",\n      \"email\": \"bob@example.com\",\n      \"telephone\": \"1+000-867-5309\",\n      \"identifier\": {\n        \"vendornameuserid\": \"abc123\"\n      }\n    },\n    \"object\": {},\n    \"instrument\": \"https://{app}.example.com/profile/card#me\"\n  },\n  \"source\": \"http://{user}.example.com/profile/card#me\",\n  \"instrument\": \"http://{supercrm}.example.com/profile/card#me\",\n  \"time\": \"2019-05-21T01:05:11Z\",\n  \"contenttype\": \"application/json\",\n  \"@context\": \"http://realestate.yodata.me/context/v1.json\"\n}"
            }
          ],
          "summaryAsHTML": "",
          "descriptionAsHTML": ""
        }
      }
    },
    "components": {
      "schemas": {
        "AppointmentRequest": {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "description": "the action type",
              "type": "string",
              "enum": [
                "AppointmentRequest"
              ],
              "descriptionAsHTML": "<p>the action type</p>\n"
            },
            "agent": {
              "description": "the direct performer of the action",
              "descriptionAsHTML": "<p>the direct performer of the action</p>\n"
            },
            "object": {
              "description": "A comment on an item.",
              "type": "object",
              "required": [
                "type"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "description": "Comment",
                  "enum": [
                    "Comment"
                  ],
                  "descriptionAsHTML": "<p>Comment</p>\n"
                },
                "id": {
                  "type": "string",
                  "format": "uri",
                  "description": "Linked-Data uri",
                  "descriptionAsHTML": "<p>Linked-Data uri</p>\n"
                },
                "name": {
                  "type": "string",
                  "description": "the name of the item.",
                  "descriptionAsHTML": "<p>the name of the item.</p>\n"
                },
                "url": {
                  "type": "string",
                  "format": "uri",
                  "description": "a public href that is clearly and uniquely associated with the item.",
                  "descriptionAsHTML": "<p>a public href that is clearly and uniquely associated with the item.</p>\n"
                },
                "author": {
                  "type": "object",
                  "x-kind": "Person",
                  "example": {
                    "type": "Person",
                    "name": "Paul Person"
                  }
                },
                "text": {
                  "description": "the comment content",
                  "type": "string",
                  "example": "Commodi ratione vel qui ullam ea ut.",
                  "descriptionAsHTML": "<p>the comment content</p>\n"
                },
                "about": {
                  "title": "about",
                  "type": "object",
                  "description": "the subject of the item",
                  "example": {
                    "type": "RealEstateListing",
                    "id": "https://example.com/listingid"
                  },
                  "descriptionAsHTML": "<p>the subject of the item</p>\n"
                }
              },
              "example": {
                "type": "Comment",
                "text": "Winter is coming",
                "author": {
                  "type": "Person",
                  "email": "user@example.com"
                },
                "about": {
                  "type": "RealEstateListing",
                  "id": "http://example.com/listing/1"
                }
              },
              "descriptionAsHTML": "<p>A comment on an item.</p>\n"
            },
            "instrument": {
              "description": "thing used by the agent to perform the action, i.e. an application or website that generated the message.",
              "example": "https://{app}.example.com/profile/card#me",
              "descriptionAsHTML": "<p>thing used by the agent to perform the action, i.e. an application or website that generated the message.</p>\n"
            },
            "actionStatus": {
              "type": "string",
              "description": "disposition of the Action when the event was created",
              "enum": [
                "CompletedActionStatus",
                "FailedActionStatus",
                "ActiveActionStatus"
              ],
              "descriptionAsHTML": "<p>disposition of the Action when the event was created</p>\n"
            }
          },
          "externalDocs": {
            "description": "schema.org/Action",
            "url": "https://schema.org/Action"
          },
          "generatedExample": "{\n  \"type\": \"AppointmentRequest\",\n  \"agent\": null,\n  \"object\": {\n    \"type\": \"Comment\",\n    \"text\": \"Winter is coming\",\n    \"author\": {\n      \"type\": \"Person\",\n      \"email\": \"user@example.com\"\n    },\n    \"about\": {\n      \"type\": \"RealEstateListing\",\n      \"id\": \"http://example.com/listing/1\"\n    }\n  },\n  \"instrument\": \"https://{app}.example.com/profile/card#me\",\n  \"actionStatus\": \"CompletedActionStatus\"\n}"
        },
        "Contact": {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "description": "Contact",
              "enum": [
                "Contact"
              ],
              "example": "Contact",
              "descriptionAsHTML": "<p>Contact</p>\n"
            },
            "id": {
              "type": "string",
              "format": "uri",
              "description": "Linked-Data uri",
              "descriptionAsHTML": "<p>Linked-Data uri</p>\n"
            },
            "name": {
              "type": "string",
              "description": "Full name of the person.",
              "descriptionAsHTML": "<p>Full name of the person.</p>\n"
            },
            "url": {
              "type": "string",
              "format": "uri",
              "description": "a public href that is clearly and uniquely associated with the item.",
              "descriptionAsHTML": "<p>a public href that is clearly and uniquely associated with the item.</p>\n"
            },
            "givenName": {
              "type": "string",
              "description": "First Name",
              "example": "Bruce",
              "descriptionAsHTML": "<p>First Name</p>\n"
            },
            "familyName": {
              "type": "string",
              "description": "Last Name",
              "example": "Wayne",
              "descriptionAsHTML": "<p>Last Name</p>\n"
            },
            "jobTitle": {
              "type": "string",
              "description": "The Job Title of the person.",
              "example": "Jefe",
              "descriptionAsHTML": "<p>The Job Title of the person.</p>\n"
            },
            "email": {
              "type": "string",
              "description": "Primary email address.",
              "example": "user@example.com",
              "descriptionAsHTML": "<p>Primary email address.</p>\n"
            },
            "faxNumber": {
              "description": "Primary fax number.",
              "type": "string",
              "example": "(498) 625-6456",
              "descriptionAsHTML": "<p>Primary fax number.</p>\n"
            },
            "telephone": {
              "description": "Primary phone number.",
              "type": "string",
              "example": "1-339-041-0306 x2866",
              "descriptionAsHTML": "<p>Primary phone number.</p>\n"
            },
            "contactPoint": {
              "x-range": "ContactPoint",
              "description": "Named and grouped contacts points.",
              "type": "array",
              "items": {
                "title": "ContactPoint",
                "description": "A contact point—for example, a Customer Complaints department.",
                "type": "object",
                "properties": {
                  "type": {
                    "description": "ContactPoint",
                    "type": "string",
                    "enum": [
                      "ContactPoint"
                    ]
                  },
                  "name": {
                    "type": "string",
                    "description": "a label for the contactPoint, i.e. 'Work', or 'Home'",
                    "example": "Work"
                  },
                  "telephone": {
                    "description": "a telephone number",
                    "type": "string",
                    "example": "1-364-127-9618 x20418"
                  },
                  "faxNumber": {
                    "description": "a fax number",
                    "type": "string",
                    "example": "834.320.1602"
                  },
                  "email": {
                    "description": "an email address for the item.",
                    "type": "string",
                    "format": "email",
                    "example": "user@example.com"
                  },
                  "url": {
                    "description": "primary URL for the item.",
                    "type": "string",
                    "format": "uri",
                    "example": "https://www.facebook.com/hallandoates"
                  }
                }
              },
              "descriptionAsHTML": "<p>Named and grouped contacts points.</p>\n"
            },
            "address": {
              "x-range": "PostalAddress",
              "description": "mailing addresses.",
              "type": "array",
              "items": {
                "type": "object",
                "description": "A physical address.",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "PostalAddress"
                    ]
                  },
                  "streetAddress": {
                    "type": "string",
                    "example": "1007 Mountain Gate Rd"
                  },
                  "postOfficeBoxNumber": {
                    "type": "string",
                    "example": "Box 1234"
                  },
                  "addressRegion": {
                    "type": "string",
                    "description": "State or Province.",
                    "example": "New Jersey"
                  },
                  "addressLocality": {
                    "type": "string",
                    "description": "City, Township.",
                    "example": "Gotham City"
                  },
                  "postalCode": {
                    "type": "string",
                    "description": "Zip/Post Code",
                    "example": "10010"
                  },
                  "addressCountry": {
                    "type": "string",
                    "description": "country",
                    "example": "usa"
                  }
                }
              },
              "descriptionAsHTML": "<p>mailing addresses.</p>\n"
            },
            "birthDate": {
              "type": "string",
              "format": "date",
              "description": "date of birth.",
              "descriptionAsHTML": "<p>date of birth.</p>\n"
            },
            "leadSource": {
              "description": "the Lead Provider",
              "type": "object",
              "example": {
                "type": "RealEstateOrganization",
                "id": "https://{affiliate}.example.com/profile/card#me"
              },
              "descriptionAsHTML": "<p>the Lead Provider</p>\n"
            }
          },
          "description": "a contact",
          "generatedExample": "{\n  \"type\": \"Contact\",\n  \"id\": \"http://example.com\",\n  \"name\": \"string\",\n  \"url\": \"http://example.com\",\n  \"givenName\": \"Bruce\",\n  \"familyName\": \"Wayne\",\n  \"jobTitle\": \"Jefe\",\n  \"email\": \"user@example.com\",\n  \"faxNumber\": \"(498) 625-6456\",\n  \"telephone\": \"1-339-041-0306 x2866\",\n  \"contactPoint\": [\n    {\n      \"type\": \"ContactPoint\",\n      \"name\": \"Work\",\n      \"telephone\": \"1-364-127-9618 x20418\",\n      \"faxNumber\": \"834.320.1602\",\n      \"email\": \"user@example.com\",\n      \"url\": \"https://www.facebook.com/hallandoates\"\n    }\n  ],\n  \"address\": [\n    {\n      \"type\": \"PostalAddress\",\n      \"streetAddress\": \"1007 Mountain Gate Rd\",\n      \"postOfficeBoxNumber\": \"Box 1234\",\n      \"addressRegion\": \"New Jersey\",\n      \"addressLocality\": \"Gotham City\",\n      \"postalCode\": \"10010\",\n      \"addressCountry\": \"usa\"\n    }\n  ],\n  \"birthDate\": \"2019-05-21\",\n  \"leadSource\": {\n    \"type\": \"RealEstateOrganization\",\n    \"id\": \"https://{affiliate}.example.com/profile/card#me\"\n  }\n}"
        },
        "Language": {
          "type": "object",
          "description": "Natural languages such as Spanish, Tamil, Hindi, English, etc. Formal language code tags expressed in BCP 47 can be used via the alternateName property",
          "properties": {
            "type": {
              "type": "string",
              "description": "Lanuguage",
              "enum": [
                "Language"
              ],
              "descriptionAsHTML": "<p>Lanuguage</p>\n"
            },
            "name": {
              "description": "the name of the language",
              "type": "string",
              "example": "English",
              "descriptionAsHTML": "<p>the name of the language</p>\n"
            },
            "additionalName": {
              "type": "string",
              "example": "en"
            }
          },
          "generatedExample": "{\n  \"type\": \"Language\",\n  \"name\": \"English\",\n  \"additionalName\": \"en\"\n}"
        },
        "Lead": {
          "title": "Lead",
          "x-kind": "Lead",
          "description": "a lead offered or assigned by the agent to one or more recipients",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "Lead"
              ],
              "description": "Lead",
              "descriptionAsHTML": "<p>Lead</p>\n"
            },
            "object": {
              "type": "object",
              "description": "a Contact (Person/Organization)",
              "example": {
                "type": "Person",
                "name": "Larry Lead",
                "email": "larry@example.com"
              },
              "descriptionAsHTML": "<p>a Contact (Person/Organization)</p>\n"
            },
            "recipient": {
              "description": "the lead recipient",
              "example": "http://{user}.example.com/profile/card#me",
              "descriptionAsHTML": "<p>the lead recipient</p>\n"
            },
            "sender": {
              "description": "the lead provider",
              "type": "string",
              "format": "uri",
              "example": "http://{provider}.example.com/profile/card#me",
              "descriptionAsHTML": "<p>the lead provider</p>\n"
            },
            "dateSent": {
              "description": "the date the lead was sent",
              "type": "string",
              "format": "date-time",
              "descriptionAsHTML": "<p>the date the lead was sent</p>\n"
            },
            "activity": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type"
                ],
                "properties": {
                  "type": {
                    "description": "the action type",
                    "type": "string"
                  },
                  "agent": {
                    "description": "the direct performer of the action"
                  },
                  "object": {
                    "description": "The object upon which the action is carried out",
                    "type": "object"
                  },
                  "instrument": {
                    "description": "thing used by the agent to perform the action, i.e. an application or website that generated the message.",
                    "example": "https://{app}.example.com/profile/card#me"
                  },
                  "actionStatus": {
                    "type": "string",
                    "description": "disposition of the Action when the event was created",
                    "enum": [
                      "CompletedActionStatus",
                      "FailedActionStatus",
                      "ActiveActionStatus"
                    ]
                  }
                },
                "externalDocs": {
                  "description": "schema.org/Action",
                  "url": "https://schema.org/Action"
                }
              }
            }
          },
          "generatedExample": "{\n  \"type\": \"Lead\",\n  \"object\": {\n    \"type\": \"Person\",\n    \"name\": \"Larry Lead\",\n    \"email\": \"larry@example.com\"\n  },\n  \"recipient\": \"http://{user}.example.com/profile/card#me\",\n  \"sender\": \"http://{provider}.example.com/profile/card#me\",\n  \"dateSent\": \"2019-05-21T01:05:11Z\",\n  \"activity\": [\n    {\n      \"type\": \"string\",\n      \"agent\": null,\n      \"object\": {},\n      \"instrument\": \"https://{app}.example.com/profile/card#me\",\n      \"actionStatus\": \"CompletedActionStatus\"\n    }\n  ]\n}"
        },
        "MarketingProgram": {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "description": "MarketingProgram",
              "enum": [
                "MarketingProgram"
              ],
              "example": "MarketingProgram",
              "descriptionAsHTML": "<p>MarketingProgram</p>\n"
            },
            "id": {
              "type": "string",
              "format": "uri",
              "description": "Linked-Data uri",
              "descriptionAsHTML": "<p>Linked-Data uri</p>\n"
            },
            "name": {
              "type": "string",
              "description": "name of the work.",
              "example": "Market Report 1008 Mountain Gate Road",
              "descriptionAsHTML": "<p>name of the work.</p>\n"
            },
            "url": {
              "type": "string",
              "format": "uri",
              "description": "a public href that is clearly and uniquely associated with the item.",
              "descriptionAsHTML": "<p>a public href that is clearly and uniquely associated with the item.</p>\n"
            },
            "description": {
              "type": "string",
              "description": "description of the item",
              "example": "Dolor accusamus rerum nemo non omnis. Nam labore pariatur eius omnis sit.",
              "descriptionAsHTML": "<p>description of the item</p>\n"
            },
            "creator": {
              "description": "creator / author of the work",
              "type": "string",
              "format": "uri",
              "example": "http://user.example.com/profile/card",
              "descriptionAsHTML": "<p>creator / author of the work</p>\n"
            },
            "dateCreated": {
              "description": "The date on which the CreativeWork was created or the item was added to a DataFeed.",
              "type": "string",
              "format": "date-time",
              "descriptionAsHTML": "<p>The date on which the CreativeWork was created or the item was added to a DataFeed.</p>\n"
            },
            "dateModified": {
              "description": "The date on which the CreativeWork was most recently modified or when the item's entry was modified within a DataFeed.",
              "type": "string",
              "format": "date-time",
              "descriptionAsHTML": "<p>The date on which the CreativeWork was most recently modified or when the item's entry was modified within a DataFeed.</p>\n"
            },
            "member": {
              "type": "array",
              "x-range": "ProgramMembership",
              "items": {
                "x-title": "ProgramMembership",
                "description": "describes membership relation between a member (Person) and a MarketingProgram",
                "type": "object",
                "allOf": [
                  {
                    "type": "object",
                    "description": "Provides additional information in member/memberOf relationships.",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "a role played by the member in the memberOf group",
                        "enum": [
                          "OrganizationRole"
                        ],
                        "example": "OrganizationRole"
                      },
                      "roleName": {
                        "type": "string",
                        "example": "Owner"
                      },
                      "member": {
                        "description": "member object or id",
                        "x-range": [
                          "Person",
                          "Organization"
                        ],
                        "example": {
                          "type": "Person",
                          "email": "bob@example.com"
                        }
                      },
                      "memberOf": {
                        "description": "reference to the MarketingProgram"
                      },
                      "startDate": {
                        "type": "string",
                        "format": "date-time",
                        "description": "the date the member started the program"
                      },
                      "endDate": {
                        "type": "string",
                        "format": "date-time",
                        "description": "the date the program membership ended"
                      }
                    }
                  },
                  {
                    "example": {
                      "type": "ProgramMembership",
                      "roleName": "Owner",
                      "member": {
                        "type": "Person",
                        "email": "bob@example.com"
                      }
                    }
                  }
                ]
              }
            }
          },
          "example": {
            "type": "MarketingProgram",
            "name": "My Marketing Program"
          },
          "formattedExample": "{\n  \"type\": \"MarketingProgram\",\n  \"name\": \"My Marketing Program\"\n}"
        },
        "MediaObject": {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "description": "Linked-Data (@type)",
              "enum": [
                "MediaObject",
                "ImageObject",
                "DigitalDocument"
              ],
              "descriptionAsHTML": "<p>Linked-Data (@type)</p>\n"
            },
            "id": {
              "type": "string",
              "format": "uri",
              "description": "the URL to access the item.",
              "example": "http://user.example.com/public/logo/fileName.zip",
              "descriptionAsHTML": "<p>the URL to access the item.</p>\n"
            },
            "name": {
              "type": "string",
              "description": "the file name of the object.",
              "example": "fileName.zip",
              "descriptionAsHTML": "<p>the file name of the object.</p>\n"
            },
            "url": {
              "type": "string",
              "format": "uri",
              "description": "URL of the image content",
              "example": "http://user.example.com/public/profile/image.jpg",
              "descriptionAsHTML": "<p>URL of the image content</p>\n"
            },
            "encodingFormat": {
              "type": "string",
              "description": "MIME type",
              "example": "application/zip",
              "descriptionAsHTML": "<p>MIME type</p>\n"
            },
            "content": {
              "type": "string",
              "description": "base64 encoded content",
              "descriptionAsHTML": "<p>base64 encoded content</p>\n"
            },
            "about": {
              "type": "string",
              "format": "uri",
              "description": "URI to the subject of the image or logo",
              "example": "http://user.example.com/profile/card#me",
              "descriptionAsHTML": "<p>URI to the subject of the image or logo</p>\n"
            }
          },
          "generatedExample": "{\n  \"type\": \"MediaObject\",\n  \"id\": \"http://user.example.com/public/logo/fileName.zip\",\n  \"name\": \"fileName.zip\",\n  \"url\": \"http://user.example.com/public/profile/image.jpg\",\n  \"encodingFormat\": \"application/zip\",\n  \"content\": \"string\",\n  \"about\": \"http://user.example.com/profile/card#me\"\n}"
        },
        "MLSMembership": {
          "type": "object",
          "description": "Provides additional information in member/memberOf relationships.",
          "properties": {
            "type": {
              "type": "string",
              "description": "an MLS member relationship",
              "enum": [
                "MLSMembership"
              ],
              "example": "MLSMembership",
              "descriptionAsHTML": "<p>an MLS member relationship</p>\n"
            },
            "roleName": {
              "type": "string",
              "example": "MLSMember"
            },
            "member": {
              "description": "member object or id",
              "x-range": [
                "Person",
                "Organization"
              ],
              "example": {
                "type": "Person",
                "email": "bob@example.com"
              },
              "descriptionAsHTML": "<p>member object or id</p>\n"
            },
            "memberOf": {
              "description": "reference to the MarketingProgram",
              "type": "object",
              "x-range": "MultipleListingService",
              "example": {
                "type": "MultipleListingService",
                "name": "GreatScottMLS"
              },
              "descriptionAsHTML": "<p>reference to the MarketingProgram</p>\n"
            },
            "startDate": {
              "type": "string",
              "format": "date-time",
              "description": "the date the member started the program",
              "descriptionAsHTML": "<p>the date the member started the program</p>\n"
            },
            "endDate": {
              "type": "string",
              "format": "date-time",
              "description": "the date the program membership ended",
              "descriptionAsHTML": "<p>the date the program membership ended</p>\n"
            },
            "memberId": {
              "type": "string",
              "description": "the user's MLSID",
              "example": "memberid123",
              "descriptionAsHTML": "<p>the user's MLSID</p>\n"
            }
          },
          "generatedExample": "{\n  \"type\": \"MLSMembership\",\n  \"roleName\": \"MLSMember\",\n  \"member\": {\n    \"type\": \"Person\",\n    \"email\": \"bob@example.com\"\n  },\n  \"memberOf\": {\n    \"type\": \"MultipleListingService\",\n    \"name\": \"GreatScottMLS\"\n  },\n  \"startDate\": \"2019-05-21T01:05:11Z\",\n  \"endDate\": \"2019-05-21T01:05:11Z\",\n  \"memberId\": \"memberid123\"\n}"
        },
        "MultipleListingService": {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "description": "MultipleListingService",
              "enum": [
                "MultipleListingService"
              ],
              "descriptionAsHTML": "<p>MultipleListingService</p>\n"
            },
            "id": {
              "type": "string",
              "format": "uri",
              "description": "Linked-Data uri",
              "descriptionAsHTML": "<p>Linked-Data uri</p>\n"
            },
            "name": {
              "type": "string",
              "description": "Name or DBA.",
              "descriptionAsHTML": "<p>Name or DBA.</p>\n"
            },
            "url": {
              "type": "string",
              "format": "uri",
              "description": "primary website/url for the entity.",
              "descriptionAsHTML": "<p>primary website/url for the entity.</p>\n"
            },
            "telephone": {
              "type": "string",
              "description": "Primary phone number.",
              "example": "079.706.7065 x6341",
              "descriptionAsHTML": "<p>Primary phone number.</p>\n"
            },
            "faxNumber": {
              "type": "string",
              "description": "Primary fax number.",
              "example": "(873) 271-4802",
              "descriptionAsHTML": "<p>Primary fax number.</p>\n"
            },
            "email": {
              "type": "string",
              "format": "email",
              "description": "Primary email address.",
              "example": "user@example.com",
              "descriptionAsHTML": "<p>Primary email address.</p>\n"
            },
            "availableLanguage": {
              "description": "A language someone may use with or at the item, service or place. Please use one of the language codes from the IETF BCP 47 standard.",
              "type": "array",
              "x-range": "Language",
              "items": {
                "type": "object",
                "description": "Natural languages such as Spanish, Tamil, Hindi, English, etc. Formal language code tags expressed in BCP 47 can be used via the alternateName property",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "Lanuguage",
                    "enum": [
                      "Language"
                    ]
                  },
                  "name": {
                    "description": "the name of the language",
                    "type": "string",
                    "example": "English"
                  },
                  "additionalName": {
                    "type": "string",
                    "example": "en"
                  }
                }
              },
              "descriptionAsHTML": "<p>A language someone may use with or at the item, service or place. Please use one of the language codes from the IETF BCP 47 standard.</p>\n"
            },
            "branchCode": {
              "description": "A short textual code (also called \"store code\") that uniquely identifies a place of business. The code is typically assigned by the parentOrganization and used in structured URLs.",
              "type": "string",
              "example": "CA301-001",
              "descriptionAsHTML": "<p>A short textual code (also called &quot;store code&quot;) that uniquely identifies a place of business. The code is typically assigned by the parentOrganization and used in structured URLs.</p>\n"
            },
            "contactPoint": {
              "type": "array",
              "description": "Additional contact points. Can be organized by role, location, etc...",
              "items": {
                "type": "object",
                "title": "ContactPoint",
                "description": "A contact point—for example, a Customer Complaints department.",
                "properties": {
                  "type": {
                    "description": "ContactPoint",
                    "type": "string",
                    "enum": [
                      "ContactPoint"
                    ]
                  },
                  "name": {
                    "type": "string",
                    "description": "a label for the contactPoint, i.e. 'Work', or 'Home'",
                    "example": "Work"
                  },
                  "telephone": {
                    "description": "a telephone number",
                    "type": "string",
                    "example": "1-364-127-9618 x20418"
                  },
                  "faxNumber": {
                    "description": "a fax number",
                    "type": "string",
                    "example": "834.320.1602"
                  },
                  "email": {
                    "description": "an email address for the item.",
                    "type": "string",
                    "format": "email",
                    "example": "user@example.com"
                  },
                  "url": {
                    "description": "primary URL for the item.",
                    "type": "string",
                    "format": "uri",
                    "example": "https://www.facebook.com/hallandoates"
                  }
                }
              },
              "descriptionAsHTML": "<p>Additional contact points. Can be organized by role, location, etc...</p>\n"
            },
            "logo": {
              "description": "a logo associated with the organization.",
              "type": "array",
              "x-range": [
                "ImageObject",
                "DigitalDocument"
              ],
              "items": {
                "type": "object",
                "allOf": [
                  {
                    "title": "DigitalDocument",
                    "type": "object",
                    "x-kind": "DigitalDocument",
                    "allOf": [
                      {
                        "type": "object",
                        "required": [
                          "type"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "Linked-Data (@type)"
                          },
                          "id": {
                            "type": "string",
                            "format": "uri",
                            "description": "Linked-Data uri"
                          },
                          "name": {
                            "type": "string",
                            "description": "the name of the item."
                          },
                          "url": {
                            "type": "string",
                            "format": "uri",
                            "description": "a public href that is clearly and uniquely associated with the item."
                          }
                        }
                      },
                      {
                        "description": "an electronic file.",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "DigitalDocument"
                            ]
                          },
                          "id": {
                            "example": "http://user.example.com/public/logo/fileName.zip"
                          },
                          "name": {
                            "type": "string",
                            "description": "the FileName",
                            "example": "fileName.zip"
                          },
                          "encodingFormat": {
                            "type": "string",
                            "description": "the MIME type",
                            "example": "application/zip"
                          },
                          "identifier": {
                            "type": "object",
                            "description": "namespaced identifier"
                          },
                          "about": {
                            "type": "string",
                            "format": "uri",
                            "description": "URI to the subject of the image or logo",
                            "example": "http://user.example.com/profile/card#me"
                          }
                        }
                      }
                    ]
                  },
                  {
                    "type": "object",
                    "description": "an associated logo"
                  }
                ]
              },
              "descriptionAsHTML": "<p>a logo associated with the organization.</p>\n"
            },
            "image": {
              "description": "an ImageObject or URI reference to an image of the entity on the web.",
              "x-range": [
                "ImageObject",
                "URI"
              ],
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "type": "object",
                    "title": "ImageObject",
                    "x-subclassOf": [
                      "MediaObject",
                      "CreativeWork",
                      "Thing"
                    ],
                    "allOf": [
                      {
                        "title": "MediaObject",
                        "description": "an image, video or document availble for download",
                        "x-subclass": [
                          "ImageObject",
                          "DigitalDocument"
                        ],
                        "allOf": [
                          {
                            "type": "object",
                            "required": [
                              "type"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "Linked-Data (@type)"
                              },
                              "id": {
                                "type": "string",
                                "format": "uri",
                                "description": "Linked-Data uri"
                              },
                              "name": {
                                "type": "string",
                                "description": "the name of the item."
                              },
                              "url": {
                                "type": "string",
                                "format": "uri",
                                "description": "a public href that is clearly and uniquely associated with the item."
                              }
                            }
                          },
                          {
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "MediaObject",
                                  "ImageObject",
                                  "DigitalDocument"
                                ]
                              },
                              "id": {
                                "description": "the URL to access the item.",
                                "example": "http://user.example.com/public/logo/fileName.zip"
                              },
                              "name": {
                                "type": "string",
                                "description": "the file name of the object.",
                                "example": "fileName.zip"
                              },
                              "encodingFormat": {
                                "type": "string",
                                "description": "MIME type",
                                "example": "application/zip"
                              },
                              "content": {
                                "type": "string",
                                "description": "base64 encoded content"
                              },
                              "about": {
                                "type": "string",
                                "format": "uri",
                                "description": "URI to the subject of the image or logo",
                                "example": "http://user.example.com/profile/card#me"
                              },
                              "url": {
                                "type": "string",
                                "format": "uri",
                                "description": "URL of the image content",
                                "example": "http://user.example.com/public/profile/image.jpg"
                              }
                            }
                          }
                        ]
                      },
                      {
                        "properties": {
                          "type": {
                            "example": "ImageObject"
                          },
                          "id": {
                            "example": "http://user.example.com/public/logo/image.jpg"
                          },
                          "name": {
                            "example": "image.jpg"
                          },
                          "encodingFormat": {
                            "example": "image/jpeg"
                          }
                        }
                      }
                    ]
                  },
                  {
                    "type": "string",
                    "format": "uri"
                  }
                ]
              },
              "descriptionAsHTML": "<p>an ImageObject or URI reference to an image of the entity on the web.</p>\n"
            },
            "parentOrganization": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uri"
              }
            }
          },
          "x-kind": "Organization",
          "x-hasSubclass": [
            "RealEstateOrganization",
            "RealEstateOffice",
            "RealEstateAgent"
          ],
          "x-subClassOf": [
            "https://schema.org/Organization"
          ],
          "description": "an MLS",
          "example": {
            "type": "MultipleListingService",
            "name": "GreatScott MLS"
          },
          "formattedExample": "{\n  \"type\": \"MultipleListingService\",\n  \"name\": \"GreatScott MLS\"\n}"
        },
        "Offer": {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "description": "OfferAction",
              "enum": [
                "OfferAction"
              ],
              "descriptionAsHTML": "<p>OfferAction</p>\n"
            },
            "id": {
              "type": "string",
              "format": "uri",
              "description": "Linked-Data uri",
              "descriptionAsHTML": "<p>Linked-Data uri</p>\n"
            },
            "name": {
              "type": "string",
              "description": "the name of the item.",
              "descriptionAsHTML": "<p>the name of the item.</p>\n"
            },
            "url": {
              "type": "string",
              "format": "uri",
              "description": "a public href that is clearly and uniquely associated with the item.",
              "descriptionAsHTML": "<p>a public href that is clearly and uniquely associated with the item.</p>\n"
            },
            "object": {
              "description": "reference to the item on which the offer is being made",
              "example": {
                "type": "RealEstateListing",
                "id": "http://example.com/12345"
              },
              "descriptionAsHTML": "<p>reference to the item on which the offer is being made</p>\n"
            },
            "recipient": {
              "type": "object",
              "x-range": [
                "Person",
                "Organization"
              ],
              "description": "the offer recipient",
              "example": {
                "id": "http://user.example.com/profile/card#me"
              },
              "descriptionAsHTML": "<p>the offer recipient</p>\n"
            },
            "offerPrice": {
              "title": "PriceSpecification",
              "type": "object",
              "x-range": "PriceSpecification",
              "description": "a price offered for transfer of ownership of an item",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "PriceSpecification",
                  "enum": [
                    "PriceSpecification"
                  ],
                  "descriptionAsHTML": "<p>PriceSpecification</p>\n"
                },
                "minPrice": {
                  "type": "number",
                  "description": "the lowest value if the price is a range",
                  "descriptionAsHTML": "<p>the lowest value if the price is a range</p>\n"
                },
                "maxPrice": {
                  "type": "number",
                  "description": "the high price offered if the price is a range",
                  "descriptionAsHTML": "<p>the high price offered if the price is a range</p>\n"
                },
                "price": {
                  "type": "number",
                  "description": "the price",
                  "descriptionAsHTML": "<p>the price</p>\n"
                },
                "priceCurrency": {
                  "type": "string",
                  "description": "use ISO4217",
                  "example": "USD",
                  "descriptionAsHTML": "<p>use ISO4217</p>\n"
                }
              },
              "descriptionAsHTML": "<p>a price offered for transfer of ownership of an item</p>\n"
            }
          },
          "description": "an agent makes an offer to buy the object",
          "generatedExample": "{\n  \"type\": \"OfferAction\",\n  \"id\": \"http://example.com\",\n  \"name\": \"string\",\n  \"url\": \"http://example.com\",\n  \"object\": {\n    \"type\": \"RealEstateListing\",\n    \"id\": \"http://example.com/12345\"\n  },\n  \"recipient\": {\n    \"id\": \"http://user.example.com/profile/card#me\"\n  },\n  \"offerPrice\": {\n    \"type\": \"PriceSpecification\",\n    \"minPrice\": 0,\n    \"maxPrice\": 0,\n    \"price\": 0,\n    \"priceCurrency\": \"USD\"\n  }\n}"
        },
        "Organization": {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "description": "Linked-Data (@type)",
              "enum": [
                "Organization"
              ],
              "descriptionAsHTML": "<p>Linked-Data (@type)</p>\n"
            },
            "id": {
              "type": "string",
              "format": "uri",
              "description": "Linked-Data uri",
              "descriptionAsHTML": "<p>Linked-Data uri</p>\n"
            },
            "name": {
              "type": "string",
              "description": "Name or DBA.",
              "descriptionAsHTML": "<p>Name or DBA.</p>\n"
            },
            "url": {
              "type": "string",
              "format": "uri",
              "description": "primary website/url for the entity.",
              "descriptionAsHTML": "<p>primary website/url for the entity.</p>\n"
            },
            "telephone": {
              "type": "string",
              "description": "Primary phone number.",
              "example": "079.706.7065 x6341",
              "descriptionAsHTML": "<p>Primary phone number.</p>\n"
            },
            "faxNumber": {
              "type": "string",
              "description": "Primary fax number.",
              "example": "(873) 271-4802",
              "descriptionAsHTML": "<p>Primary fax number.</p>\n"
            },
            "email": {
              "type": "string",
              "format": "email",
              "description": "Primary email address.",
              "example": "user@example.com",
              "descriptionAsHTML": "<p>Primary email address.</p>\n"
            },
            "availableLanguage": {
              "description": "A language someone may use with or at the item, service or place. Please use one of the language codes from the IETF BCP 47 standard.",
              "type": "array",
              "x-range": "Language",
              "items": {
                "type": "object",
                "description": "Natural languages such as Spanish, Tamil, Hindi, English, etc. Formal language code tags expressed in BCP 47 can be used via the alternateName property",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "Lanuguage",
                    "enum": [
                      "Language"
                    ]
                  },
                  "name": {
                    "description": "the name of the language",
                    "type": "string",
                    "example": "English"
                  },
                  "additionalName": {
                    "type": "string",
                    "example": "en"
                  }
                }
              },
              "descriptionAsHTML": "<p>A language someone may use with or at the item, service or place. Please use one of the language codes from the IETF BCP 47 standard.</p>\n"
            },
            "branchCode": {
              "description": "A short textual code (also called \"store code\") that uniquely identifies a place of business. The code is typically assigned by the parentOrganization and used in structured URLs.",
              "type": "string",
              "example": "CA301-001",
              "descriptionAsHTML": "<p>A short textual code (also called &quot;store code&quot;) that uniquely identifies a place of business. The code is typically assigned by the parentOrganization and used in structured URLs.</p>\n"
            },
            "contactPoint": {
              "type": "array",
              "description": "Additional contact points. Can be organized by role, location, etc...",
              "items": {
                "type": "object",
                "title": "ContactPoint",
                "description": "A contact point—for example, a Customer Complaints department.",
                "properties": {
                  "type": {
                    "description": "ContactPoint",
                    "type": "string",
                    "enum": [
                      "ContactPoint"
                    ]
                  },
                  "name": {
                    "type": "string",
                    "description": "a label for the contactPoint, i.e. 'Work', or 'Home'",
                    "example": "Work"
                  },
                  "telephone": {
                    "description": "a telephone number",
                    "type": "string",
                    "example": "1-364-127-9618 x20418"
                  },
                  "faxNumber": {
                    "description": "a fax number",
                    "type": "string",
                    "example": "834.320.1602"
                  },
                  "email": {
                    "description": "an email address for the item.",
                    "type": "string",
                    "format": "email",
                    "example": "user@example.com"
                  },
                  "url": {
                    "description": "primary URL for the item.",
                    "type": "string",
                    "format": "uri",
                    "example": "https://www.facebook.com/hallandoates"
                  }
                }
              },
              "descriptionAsHTML": "<p>Additional contact points. Can be organized by role, location, etc...</p>\n"
            },
            "logo": {
              "description": "a logo associated with the organization.",
              "type": "array",
              "x-range": [
                "ImageObject",
                "DigitalDocument"
              ],
              "items": {
                "type": "object",
                "allOf": [
                  {
                    "title": "DigitalDocument",
                    "type": "object",
                    "x-kind": "DigitalDocument",
                    "allOf": [
                      {
                        "type": "object",
                        "required": [
                          "type"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "Linked-Data (@type)"
                          },
                          "id": {
                            "type": "string",
                            "format": "uri",
                            "description": "Linked-Data uri"
                          },
                          "name": {
                            "type": "string",
                            "description": "the name of the item."
                          },
                          "url": {
                            "type": "string",
                            "format": "uri",
                            "description": "a public href that is clearly and uniquely associated with the item."
                          }
                        }
                      },
                      {
                        "description": "an electronic file.",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "DigitalDocument"
                            ]
                          },
                          "id": {
                            "example": "http://user.example.com/public/logo/fileName.zip"
                          },
                          "name": {
                            "type": "string",
                            "description": "the FileName",
                            "example": "fileName.zip"
                          },
                          "encodingFormat": {
                            "type": "string",
                            "description": "the MIME type",
                            "example": "application/zip"
                          },
                          "identifier": {
                            "type": "object",
                            "description": "namespaced identifier"
                          },
                          "about": {
                            "type": "string",
                            "format": "uri",
                            "description": "URI to the subject of the image or logo",
                            "example": "http://user.example.com/profile/card#me"
                          }
                        }
                      }
                    ]
                  },
                  {
                    "type": "object",
                    "description": "an associated logo"
                  }
                ]
              },
              "descriptionAsHTML": "<p>a logo associated with the organization.</p>\n"
            },
            "image": {
              "description": "an ImageObject or URI reference to an image of the entity on the web.",
              "x-range": [
                "ImageObject",
                "URI"
              ],
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "type": "object",
                    "title": "ImageObject",
                    "x-subclassOf": [
                      "MediaObject",
                      "CreativeWork",
                      "Thing"
                    ],
                    "allOf": [
                      {
                        "title": "MediaObject",
                        "description": "an image, video or document availble for download",
                        "x-subclass": [
                          "ImageObject",
                          "DigitalDocument"
                        ],
                        "allOf": [
                          {
                            "type": "object",
                            "required": [
                              "type"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "Linked-Data (@type)"
                              },
                              "id": {
                                "type": "string",
                                "format": "uri",
                                "description": "Linked-Data uri"
                              },
                              "name": {
                                "type": "string",
                                "description": "the name of the item."
                              },
                              "url": {
                                "type": "string",
                                "format": "uri",
                                "description": "a public href that is clearly and uniquely associated with the item."
                              }
                            }
                          },
                          {
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "MediaObject",
                                  "ImageObject",
                                  "DigitalDocument"
                                ]
                              },
                              "id": {
                                "description": "the URL to access the item.",
                                "example": "http://user.example.com/public/logo/fileName.zip"
                              },
                              "name": {
                                "type": "string",
                                "description": "the file name of the object.",
                                "example": "fileName.zip"
                              },
                              "encodingFormat": {
                                "type": "string",
                                "description": "MIME type",
                                "example": "application/zip"
                              },
                              "content": {
                                "type": "string",
                                "description": "base64 encoded content"
                              },
                              "about": {
                                "type": "string",
                                "format": "uri",
                                "description": "URI to the subject of the image or logo",
                                "example": "http://user.example.com/profile/card#me"
                              },
                              "url": {
                                "type": "string",
                                "format": "uri",
                                "description": "URL of the image content",
                                "example": "http://user.example.com/public/profile/image.jpg"
                              }
                            }
                          }
                        ]
                      },
                      {
                        "properties": {
                          "type": {
                            "example": "ImageObject"
                          },
                          "id": {
                            "example": "http://user.example.com/public/logo/image.jpg"
                          },
                          "name": {
                            "example": "image.jpg"
                          },
                          "encodingFormat": {
                            "example": "image/jpeg"
                          }
                        }
                      }
                    ]
                  },
                  {
                    "type": "string",
                    "format": "uri"
                  }
                ]
              },
              "descriptionAsHTML": "<p>an ImageObject or URI reference to an image of the entity on the web.</p>\n"
            },
            "parentOrganization": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uri"
              }
            }
          },
          "x-kind": "Organization",
          "x-hasSubclass": [
            "RealEstateOrganization",
            "RealEstateOffice",
            "RealEstateAgent"
          ],
          "x-subClassOf": [
            "https://schema.org/Organization"
          ],
          "generatedExample": "{\n  \"type\": \"Organization\",\n  \"id\": \"http://example.com\",\n  \"name\": \"string\",\n  \"url\": \"http://example.com\",\n  \"telephone\": \"079.706.7065 x6341\",\n  \"faxNumber\": \"(873) 271-4802\",\n  \"email\": \"user@example.com\",\n  \"availableLanguage\": [\n    {\n      \"type\": \"Language\",\n      \"name\": \"English\",\n      \"additionalName\": \"en\"\n    }\n  ],\n  \"branchCode\": \"CA301-001\",\n  \"contactPoint\": [\n    {\n      \"type\": \"ContactPoint\",\n      \"name\": \"Work\",\n      \"telephone\": \"1-364-127-9618 x20418\",\n      \"faxNumber\": \"834.320.1602\",\n      \"email\": \"user@example.com\",\n      \"url\": \"https://www.facebook.com/hallandoates\"\n    }\n  ],\n  \"logo\": [\n    {\n      \"type\": \"DigitalDocument\",\n      \"id\": \"http://user.example.com/public/logo/fileName.zip\",\n      \"name\": \"fileName.zip\",\n      \"url\": \"http://example.com\",\n      \"encodingFormat\": \"application/zip\",\n      \"identifier\": {},\n      \"about\": \"http://user.example.com/profile/card#me\"\n    }\n  ],\n  \"image\": [\n    {\n      \"type\": \"ImageObject\",\n      \"id\": \"http://user.example.com/public/logo/image.jpg\",\n      \"name\": \"image.jpg\",\n      \"url\": \"http://user.example.com/public/profile/image.jpg\",\n      \"encodingFormat\": \"image/jpeg\",\n      \"content\": \"string\",\n      \"about\": \"http://user.example.com/profile/card#me\"\n    }\n  ],\n  \"parentOrganization\": [\n    \"http://example.com\"\n  ]\n}"
        },
        "OrganizationRole": {
          "type": "object",
          "description": "Provides additional information in member/memberOf relationships.",
          "properties": {
            "type": {
              "type": "string",
              "description": "a role played by the member in the memberOf group",
              "enum": [
                "OrganizationRole"
              ],
              "example": "OrganizationRole",
              "descriptionAsHTML": "<p>a role played by the member in the memberOf group</p>\n"
            },
            "roleName": {
              "type": "string",
              "example": "Owner"
            },
            "member": {
              "description": "member object or id",
              "x-range": [
                "Person",
                "Organization"
              ],
              "example": {
                "type": "Person",
                "email": "bob@example.com"
              },
              "descriptionAsHTML": "<p>member object or id</p>\n"
            },
            "memberOf": {
              "description": "reference to the MarketingProgram",
              "descriptionAsHTML": "<p>reference to the MarketingProgram</p>\n"
            },
            "startDate": {
              "type": "string",
              "format": "date-time",
              "description": "the date the member started the program",
              "descriptionAsHTML": "<p>the date the member started the program</p>\n"
            },
            "endDate": {
              "type": "string",
              "format": "date-time",
              "description": "the date the program membership ended",
              "descriptionAsHTML": "<p>the date the program membership ended</p>\n"
            }
          },
          "generatedExample": "{\n  \"type\": \"OrganizationRole\",\n  \"roleName\": \"Owner\",\n  \"member\": {\n    \"type\": \"Person\",\n    \"email\": \"bob@example.com\"\n  },\n  \"memberOf\": null,\n  \"startDate\": \"2019-05-21T01:05:11Z\",\n  \"endDate\": \"2019-05-21T01:05:11Z\"\n}"
        },
        "Permit": {
          "title": "Permit",
          "description": "A permit issued by an organization to an individual or business.",
          "properties": {
            "type": {
              "type": "string",
              "description": "Permit type.",
              "descriptionAsHTML": "<p>Permit type.</p>\n"
            },
            "name": {
              "type": "string",
              "description": "Common or display value of the Permit.",
              "descriptionAsHTML": "<p>Common or display value of the Permit.</p>\n"
            },
            "issuedBy": {
              "x-range": "Organization",
              "type": "object",
              "description": "The issuing authority",
              "example": {
                "type": "GovernmentOrganization",
                "name": "California"
              },
              "descriptionAsHTML": "<p>The issuing authority</p>\n"
            },
            "issuedThrough": {
              "x-range": "Service",
              "example": {
                "type": "Service",
                "name": "Department of Real Estate"
              },
              "title": "Service",
              "description": "A service provided by an organization.",
              "x-kind": "Service",
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "Service"
                  ]
                },
                "name": {
                  "type": "string",
                  "description": "name of the service.",
                  "descriptionAsHTML": "<p>name of the service.</p>\n"
                },
                "areaServed": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "type"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Linked-Data (@type)"
                        },
                        "id": {
                          "type": "string",
                          "format": "uri",
                          "description": "Linked-Data uri"
                        },
                        "name": {
                          "type": "string",
                          "description": "the name of the item."
                        },
                        "url": {
                          "type": "string",
                          "format": "uri",
                          "description": "a public href that is clearly and uniquely associated with the item."
                        }
                      }
                    },
                    {
                      "properties": {
                        "address": {
                          "type": "object",
                          "x-range": "PostalAddress",
                          "description": "PostalAddress"
                        },
                        "aggregateRating": {
                          "type": "object",
                          "description": "AggregateRating -- The overall rating, based on a collection of reviews or ratings, of the item."
                        },
                        "branchCode": {
                          "type": "string",
                          "description": "A short textual code (also called \"store code\") that uniquely identifies a place of business. The code is typically assigned by the parentOrganization and used in structured URLs."
                        },
                        "containedInPlace": {
                          "type": "array",
                          "x-kind": "Place",
                          "items": {
                            "type": "string",
                            "format": "uri"
                          },
                          "description": "Place"
                        },
                        "containsPlace": {
                          "type": "array",
                          "x-kind": "Place",
                          "items": {
                            "type": "string",
                            "format": "uri"
                          },
                          "description": "Place"
                        },
                        "geo": {
                          "description": "The geo coordinates of the place.",
                          "oneOf": [
                            {
                              "type": "object",
                              "description": "GeoCoordinates"
                            },
                            {
                              "type": "object",
                              "description": "GeoShape"
                            }
                          ]
                        },
                        "hasMap": {
                          "description": "A URL to a map of the place. Supersedes map, maps.",
                          "oneOf": [
                            {
                              "type": "string",
                              "format": "uri"
                            },
                            {
                              "type": "object",
                              "x-kind": "Map",
                              "description": "Map"
                            }
                          ]
                        },
                        "openingHoursSpecification": {
                          "type": "object",
                          "description": "OpeningHoursSpecification"
                        },
                        "photo": {
                          "description": "A photograph of this place. Supersedes photos.",
                          "type": "array",
                          "x-range": [
                            "ImageObject"
                          ],
                          "items": {
                            "anyOf": [
                              {
                                "type": "string",
                                "format": "uri"
                              },
                              {
                                "type": "object"
                              }
                            ]
                          }
                        },
                        "review": {
                          "description": "A review of the item. Supersedes reviews.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "Review"
                          }
                        },
                        "specialOpeningHoursSpecification": {
                          "description": "The special opening hours of a certain place. Use this to explicitly override general opening hours brought in scope by openingHoursSpecification or openingHours.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "OpeningHoursSpecification"
                          }
                        }
                      }
                    }
                  ]
                }
              },
              "descriptionAsHTML": "<p>A service provided by an organization.</p>\n"
            },
            "validIn": {
              "type": "object",
              "required": [
                "type"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "description": "Linked-Data (@type)",
                  "descriptionAsHTML": "<p>Linked-Data (@type)</p>\n"
                },
                "id": {
                  "type": "string",
                  "format": "uri",
                  "description": "Linked-Data uri",
                  "descriptionAsHTML": "<p>Linked-Data uri</p>\n"
                },
                "name": {
                  "type": "string",
                  "description": "the name of the item.",
                  "descriptionAsHTML": "<p>the name of the item.</p>\n"
                },
                "url": {
                  "type": "string",
                  "format": "uri",
                  "description": "a public href that is clearly and uniquely associated with the item.",
                  "descriptionAsHTML": "<p>a public href that is clearly and uniquely associated with the item.</p>\n"
                },
                "address": {
                  "type": "object",
                  "x-range": "PostalAddress",
                  "description": "PostalAddress",
                  "descriptionAsHTML": "<p>PostalAddress</p>\n"
                },
                "aggregateRating": {
                  "type": "object",
                  "description": "AggregateRating -- The overall rating, based on a collection of reviews or ratings, of the item.",
                  "descriptionAsHTML": "<p>AggregateRating -- The overall rating, based on a collection of reviews or ratings, of the item.</p>\n"
                },
                "branchCode": {
                  "type": "string",
                  "description": "A short textual code (also called \"store code\") that uniquely identifies a place of business. The code is typically assigned by the parentOrganization and used in structured URLs.",
                  "descriptionAsHTML": "<p>A short textual code (also called &quot;store code&quot;) that uniquely identifies a place of business. The code is typically assigned by the parentOrganization and used in structured URLs.</p>\n"
                },
                "containedInPlace": {
                  "type": "array",
                  "x-kind": "Place",
                  "items": {
                    "type": "string",
                    "format": "uri"
                  },
                  "description": "Place",
                  "descriptionAsHTML": "<p>Place</p>\n"
                },
                "containsPlace": {
                  "type": "array",
                  "x-kind": "Place",
                  "items": {
                    "type": "string",
                    "format": "uri"
                  },
                  "description": "Place",
                  "descriptionAsHTML": "<p>Place</p>\n"
                },
                "geo": {
                  "description": "The geo coordinates of the place.",
                  "oneOf": [
                    {
                      "type": "object",
                      "description": "GeoCoordinates"
                    },
                    {
                      "type": "object",
                      "description": "GeoShape"
                    }
                  ],
                  "descriptionAsHTML": "<p>The geo coordinates of the place.</p>\n"
                },
                "hasMap": {
                  "description": "A URL to a map of the place. Supersedes map, maps.",
                  "oneOf": [
                    {
                      "type": "string",
                      "format": "uri"
                    },
                    {
                      "type": "object",
                      "x-kind": "Map",
                      "description": "Map"
                    }
                  ],
                  "descriptionAsHTML": "<p>A URL to a map of the place. Supersedes map, maps.</p>\n"
                },
                "openingHoursSpecification": {
                  "type": "object",
                  "description": "OpeningHoursSpecification",
                  "descriptionAsHTML": "<p>OpeningHoursSpecification</p>\n"
                },
                "photo": {
                  "description": "A photograph of this place. Supersedes photos.",
                  "type": "array",
                  "x-range": [
                    "ImageObject"
                  ],
                  "items": {
                    "anyOf": [
                      {
                        "type": "string",
                        "format": "uri"
                      },
                      {
                        "type": "object"
                      }
                    ]
                  },
                  "descriptionAsHTML": "<p>A photograph of this place. Supersedes photos.</p>\n"
                },
                "review": {
                  "description": "A review of the item. Supersedes reviews.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Review"
                  },
                  "descriptionAsHTML": "<p>A review of the item. Supersedes reviews.</p>\n"
                },
                "specialOpeningHoursSpecification": {
                  "description": "The special opening hours of a certain place. Use this to explicitly override general opening hours brought in scope by openingHoursSpecification or openingHours.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "OpeningHoursSpecification"
                  },
                  "descriptionAsHTML": "<p>The special opening hours of a certain place. Use this to explicitly override general opening hours brought in scope by openingHoursSpecification or openingHours.</p>\n"
                }
              }
            },
            "validFrom": {
              "type": "string",
              "format": "date-time",
              "description": "start date",
              "descriptionAsHTML": "<p>start date</p>\n"
            },
            "validUntil": {
              "type": "string",
              "format": "date-time",
              "description": "end date",
              "descriptionAsHTML": "<p>end date</p>\n"
            }
          },
          "generatedExample": "{\n  \"type\": \"string\",\n  \"name\": \"string\",\n  \"issuedBy\": {\n    \"type\": \"GovernmentOrganization\",\n    \"name\": \"California\"\n  },\n  \"issuedThrough\": {\n    \"type\": \"Service\",\n    \"name\": \"Department of Real Estate\"\n  },\n  \"validIn\": {\n    \"type\": \"string\",\n    \"id\": \"http://example.com\",\n    \"name\": \"string\",\n    \"url\": \"http://example.com\",\n    \"address\": {},\n    \"aggregateRating\": {},\n    \"branchCode\": \"string\",\n    \"containedInPlace\": [\n      \"http://example.com\"\n    ],\n    \"containsPlace\": [\n      \"http://example.com\"\n    ],\n    \"geo\": {},\n    \"hasMap\": \"http://example.com\",\n    \"openingHoursSpecification\": {},\n    \"photo\": [\n      \"http://example.com\"\n    ],\n    \"review\": [\n      {}\n    ],\n    \"specialOpeningHoursSpecification\": [\n      {}\n    ]\n  },\n  \"validFrom\": \"2019-05-21T01:05:11Z\",\n  \"validUntil\": \"2019-05-21T01:05:11Z\"\n}"
        },
        "Person": {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "description": "Person",
              "enum": [
                "Person"
              ],
              "descriptionAsHTML": "<p>Person</p>\n"
            },
            "id": {
              "type": "string",
              "format": "uri",
              "description": "Linked-Data uri",
              "descriptionAsHTML": "<p>Linked-Data uri</p>\n"
            },
            "name": {
              "type": "string",
              "description": "Full name of the person.",
              "descriptionAsHTML": "<p>Full name of the person.</p>\n"
            },
            "url": {
              "type": "string",
              "format": "uri",
              "description": "a public href that is clearly and uniquely associated with the item.",
              "descriptionAsHTML": "<p>a public href that is clearly and uniquely associated with the item.</p>\n"
            },
            "givenName": {
              "type": "string",
              "description": "First Name",
              "example": "Bruce",
              "descriptionAsHTML": "<p>First Name</p>\n"
            },
            "familyName": {
              "type": "string",
              "description": "Last Name",
              "example": "Wayne",
              "descriptionAsHTML": "<p>Last Name</p>\n"
            },
            "jobTitle": {
              "type": "string",
              "description": "The Job Title of the person.",
              "example": "Jefe",
              "descriptionAsHTML": "<p>The Job Title of the person.</p>\n"
            },
            "email": {
              "type": "string",
              "description": "Primary email address.",
              "example": "user@example.com",
              "descriptionAsHTML": "<p>Primary email address.</p>\n"
            },
            "faxNumber": {
              "description": "Primary fax number.",
              "type": "string",
              "example": "(498) 625-6456",
              "descriptionAsHTML": "<p>Primary fax number.</p>\n"
            },
            "telephone": {
              "description": "Primary phone number.",
              "type": "string",
              "example": "1-339-041-0306 x2866",
              "descriptionAsHTML": "<p>Primary phone number.</p>\n"
            },
            "contactPoint": {
              "x-range": "ContactPoint",
              "description": "Named and grouped contacts points.",
              "type": "array",
              "items": {
                "title": "ContactPoint",
                "description": "A contact point—for example, a Customer Complaints department.",
                "type": "object",
                "properties": {
                  "type": {
                    "description": "ContactPoint",
                    "type": "string",
                    "enum": [
                      "ContactPoint"
                    ]
                  },
                  "name": {
                    "type": "string",
                    "description": "a label for the contactPoint, i.e. 'Work', or 'Home'",
                    "example": "Work"
                  },
                  "telephone": {
                    "description": "a telephone number",
                    "type": "string",
                    "example": "1-364-127-9618 x20418"
                  },
                  "faxNumber": {
                    "description": "a fax number",
                    "type": "string",
                    "example": "834.320.1602"
                  },
                  "email": {
                    "description": "an email address for the item.",
                    "type": "string",
                    "format": "email",
                    "example": "user@example.com"
                  },
                  "url": {
                    "description": "primary URL for the item.",
                    "type": "string",
                    "format": "uri",
                    "example": "https://www.facebook.com/hallandoates"
                  }
                }
              },
              "descriptionAsHTML": "<p>Named and grouped contacts points.</p>\n"
            },
            "address": {
              "x-range": "PostalAddress",
              "description": "mailing addresses.",
              "type": "array",
              "items": {
                "type": "object",
                "description": "A physical address.",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "PostalAddress"
                    ]
                  },
                  "streetAddress": {
                    "type": "string",
                    "example": "1007 Mountain Gate Rd"
                  },
                  "postOfficeBoxNumber": {
                    "type": "string",
                    "example": "Box 1234"
                  },
                  "addressRegion": {
                    "type": "string",
                    "description": "State or Province.",
                    "example": "New Jersey"
                  },
                  "addressLocality": {
                    "type": "string",
                    "description": "City, Township.",
                    "example": "Gotham City"
                  },
                  "postalCode": {
                    "type": "string",
                    "description": "Zip/Post Code",
                    "example": "10010"
                  },
                  "addressCountry": {
                    "type": "string",
                    "description": "country",
                    "example": "usa"
                  }
                }
              },
              "descriptionAsHTML": "<p>mailing addresses.</p>\n"
            },
            "birthDate": {
              "type": "string",
              "format": "date",
              "description": "date of birth.",
              "descriptionAsHTML": "<p>date of birth.</p>\n"
            }
          },
          "generatedExample": "{\n  \"type\": \"Person\",\n  \"id\": \"http://example.com\",\n  \"name\": \"string\",\n  \"url\": \"http://example.com\",\n  \"givenName\": \"Bruce\",\n  \"familyName\": \"Wayne\",\n  \"jobTitle\": \"Jefe\",\n  \"email\": \"user@example.com\",\n  \"faxNumber\": \"(498) 625-6456\",\n  \"telephone\": \"1-339-041-0306 x2866\",\n  \"contactPoint\": [\n    {\n      \"type\": \"ContactPoint\",\n      \"name\": \"Work\",\n      \"telephone\": \"1-364-127-9618 x20418\",\n      \"faxNumber\": \"834.320.1602\",\n      \"email\": \"user@example.com\",\n      \"url\": \"https://www.facebook.com/hallandoates\"\n    }\n  ],\n  \"address\": [\n    {\n      \"type\": \"PostalAddress\",\n      \"streetAddress\": \"1007 Mountain Gate Rd\",\n      \"postOfficeBoxNumber\": \"Box 1234\",\n      \"addressRegion\": \"New Jersey\",\n      \"addressLocality\": \"Gotham City\",\n      \"postalCode\": \"10010\",\n      \"addressCountry\": \"usa\"\n    }\n  ],\n  \"birthDate\": \"2019-05-21\"\n}"
        },
        "Place": {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "description": "Linked-Data (@type)",
              "descriptionAsHTML": "<p>Linked-Data (@type)</p>\n"
            },
            "id": {
              "type": "string",
              "format": "uri",
              "description": "Linked-Data uri",
              "descriptionAsHTML": "<p>Linked-Data uri</p>\n"
            },
            "name": {
              "type": "string",
              "description": "the name of the item.",
              "descriptionAsHTML": "<p>the name of the item.</p>\n"
            },
            "url": {
              "type": "string",
              "format": "uri",
              "description": "a public href that is clearly and uniquely associated with the item.",
              "descriptionAsHTML": "<p>a public href that is clearly and uniquely associated with the item.</p>\n"
            },
            "address": {
              "type": "object",
              "x-range": "PostalAddress",
              "description": "PostalAddress",
              "descriptionAsHTML": "<p>PostalAddress</p>\n"
            },
            "aggregateRating": {
              "type": "object",
              "description": "AggregateRating -- The overall rating, based on a collection of reviews or ratings, of the item.",
              "descriptionAsHTML": "<p>AggregateRating -- The overall rating, based on a collection of reviews or ratings, of the item.</p>\n"
            },
            "branchCode": {
              "type": "string",
              "description": "A short textual code (also called \"store code\") that uniquely identifies a place of business. The code is typically assigned by the parentOrganization and used in structured URLs.",
              "descriptionAsHTML": "<p>A short textual code (also called &quot;store code&quot;) that uniquely identifies a place of business. The code is typically assigned by the parentOrganization and used in structured URLs.</p>\n"
            },
            "containedInPlace": {
              "type": "array",
              "x-kind": "Place",
              "items": {
                "type": "string",
                "format": "uri"
              },
              "description": "Place",
              "descriptionAsHTML": "<p>Place</p>\n"
            },
            "containsPlace": {
              "type": "array",
              "x-kind": "Place",
              "items": {
                "type": "string",
                "format": "uri"
              },
              "description": "Place",
              "descriptionAsHTML": "<p>Place</p>\n"
            },
            "geo": {
              "description": "The geo coordinates of the place.",
              "oneOf": [
                {
                  "type": "object",
                  "description": "GeoCoordinates"
                },
                {
                  "type": "object",
                  "description": "GeoShape"
                }
              ],
              "descriptionAsHTML": "<p>The geo coordinates of the place.</p>\n"
            },
            "hasMap": {
              "description": "A URL to a map of the place. Supersedes map, maps.",
              "oneOf": [
                {
                  "type": "string",
                  "format": "uri"
                },
                {
                  "type": "object",
                  "x-kind": "Map",
                  "description": "Map"
                }
              ],
              "descriptionAsHTML": "<p>A URL to a map of the place. Supersedes map, maps.</p>\n"
            },
            "openingHoursSpecification": {
              "type": "object",
              "description": "OpeningHoursSpecification",
              "descriptionAsHTML": "<p>OpeningHoursSpecification</p>\n"
            },
            "photo": {
              "description": "A photograph of this place. Supersedes photos.",
              "type": "array",
              "x-range": [
                "ImageObject"
              ],
              "items": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "uri"
                  },
                  {
                    "type": "object"
                  }
                ]
              },
              "descriptionAsHTML": "<p>A photograph of this place. Supersedes photos.</p>\n"
            },
            "review": {
              "description": "A review of the item. Supersedes reviews.",
              "type": "array",
              "items": {
                "type": "object",
                "description": "Review"
              },
              "descriptionAsHTML": "<p>A review of the item. Supersedes reviews.</p>\n"
            },
            "specialOpeningHoursSpecification": {
              "description": "The special opening hours of a certain place. Use this to explicitly override general opening hours brought in scope by openingHoursSpecification or openingHours.",
              "type": "array",
              "items": {
                "type": "object",
                "description": "OpeningHoursSpecification"
              },
              "descriptionAsHTML": "<p>The special opening hours of a certain place. Use this to explicitly override general opening hours brought in scope by openingHoursSpecification or openingHours.</p>\n"
            }
          },
          "generatedExample": "{\n  \"type\": \"string\",\n  \"id\": \"http://example.com\",\n  \"name\": \"string\",\n  \"url\": \"http://example.com\",\n  \"address\": {},\n  \"aggregateRating\": {},\n  \"branchCode\": \"string\",\n  \"containedInPlace\": [\n    \"http://example.com\"\n  ],\n  \"containsPlace\": [\n    \"http://example.com\"\n  ],\n  \"geo\": {},\n  \"hasMap\": \"http://example.com\",\n  \"openingHoursSpecification\": {},\n  \"photo\": [\n    \"http://example.com\"\n  ],\n  \"review\": [\n    {}\n  ],\n  \"specialOpeningHoursSpecification\": [\n    {}\n  ]\n}"
        },
        "PostalAddress": {
          "type": "object",
          "description": "A physical address.",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "PostalAddress"
              ]
            },
            "streetAddress": {
              "type": "string",
              "example": "1007 Mountain Gate Rd"
            },
            "postOfficeBoxNumber": {
              "type": "string",
              "example": "Box 1234"
            },
            "addressRegion": {
              "type": "string",
              "description": "State or Province.",
              "example": "New Jersey",
              "descriptionAsHTML": "<p>State or Province.</p>\n"
            },
            "addressLocality": {
              "type": "string",
              "description": "City, Township.",
              "example": "Gotham City",
              "descriptionAsHTML": "<p>City, Township.</p>\n"
            },
            "postalCode": {
              "type": "string",
              "description": "Zip/Post Code",
              "example": "10010",
              "descriptionAsHTML": "<p>Zip/Post Code</p>\n"
            },
            "addressCountry": {
              "type": "string",
              "description": "country",
              "example": "usa",
              "descriptionAsHTML": "<p>country</p>\n"
            }
          },
          "generatedExample": "{\n  \"type\": \"PostalAddress\",\n  \"streetAddress\": \"1007 Mountain Gate Rd\",\n  \"postOfficeBoxNumber\": \"Box 1234\",\n  \"addressRegion\": \"New Jersey\",\n  \"addressLocality\": \"Gotham City\",\n  \"postalCode\": \"10010\",\n  \"addressCountry\": \"usa\"\n}"
        },
        "Profile": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uri",
              "description": "document uri",
              "example": "https://user.example.com/profile/card",
              "descriptionAsHTML": "<p>document uri</p>\n"
            },
            "type": {
              "type": "string",
              "enum": [
                "ProfileDocument"
              ]
            },
            "#me": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uri",
                  "example": "https://user.example.com/profile/card#me"
                },
                "type": {
                  "type": "string",
                  "example": "SoftwareApplication"
                },
                "inbox": {
                  "description": "discoverable uri to your LDN inbox",
                  "type": "string",
                  "example": "/inbox/",
                  "descriptionAsHTML": "<p>discoverable uri to your LDN inbox</p>\n"
                },
                "outbox": {
                  "description": "discoverable uri to your LDN outbox",
                  "type": "string",
                  "example": "/outbox/",
                  "descriptionAsHTML": "<p>discoverable uri to your LDN outbox</p>\n"
                },
                "storage": {
                  "description": "uri to your linked-data storage root",
                  "type": "string",
                  "example": "/",
                  "descriptionAsHTML": "<p>uri to your linked-data storage root</p>\n"
                },
                "preferencesFile": {
                  "description": "discoverable uri for shared application preferences",
                  "type": "string",
                  "example": "/settings/prefs",
                  "descriptionAsHTML": "<p>discoverable uri for shared application preferences</p>\n"
                },
                "account": {
                  "description": "discoverable solid:account root",
                  "type": "string",
                  "example": "/",
                  "descriptionAsHTML": "<p>discoverable solid:account root</p>\n"
                },
                "privateTypeIndex": {
                  "description": "type index for your private use",
                  "type": "string",
                  "example": "/settings/privateTypeIndex",
                  "descriptionAsHTML": "<p>type index for your private use</p>\n"
                },
                "publicTypeIndex": {
                  "description": "shared, discoverable type index",
                  "type": "string",
                  "example": "/settings/publicTypeIndex",
                  "descriptionAsHTML": "<p>shared, discoverable type index</p>\n"
                }
              }
            }
          },
          "generatedExample": "{\n  \"id\": \"https://user.example.com/profile/card\",\n  \"type\": \"ProfileDocument\",\n  \"#me\": {\n    \"id\": \"https://user.example.com/profile/card#me\",\n    \"type\": \"SoftwareApplication\",\n    \"inbox\": \"/inbox/\",\n    \"outbox\": \"/outbox/\",\n    \"storage\": \"/\",\n    \"preferencesFile\": \"/settings/prefs\",\n    \"account\": \"/\",\n    \"privateTypeIndex\": \"/settings/privateTypeIndex\",\n    \"publicTypeIndex\": \"/settings/publicTypeIndex\"\n  }\n}"
        },
        "ProgramMembership": {
          "type": "object",
          "description": "Provides additional information in member/memberOf relationships.",
          "properties": {
            "type": {
              "type": "string",
              "description": "a role played by the member in the memberOf group",
              "enum": [
                "OrganizationRole"
              ],
              "example": "OrganizationRole",
              "descriptionAsHTML": "<p>a role played by the member in the memberOf group</p>\n"
            },
            "roleName": {
              "type": "string",
              "example": "Owner"
            },
            "member": {
              "description": "member object or id",
              "x-range": [
                "Person",
                "Organization"
              ],
              "example": {
                "type": "Person",
                "email": "bob@example.com"
              },
              "descriptionAsHTML": "<p>member object or id</p>\n"
            },
            "memberOf": {
              "description": "reference to the MarketingProgram",
              "descriptionAsHTML": "<p>reference to the MarketingProgram</p>\n"
            },
            "startDate": {
              "type": "string",
              "format": "date-time",
              "description": "the date the member started the program",
              "descriptionAsHTML": "<p>the date the member started the program</p>\n"
            },
            "endDate": {
              "type": "string",
              "format": "date-time",
              "description": "the date the program membership ended",
              "descriptionAsHTML": "<p>the date the program membership ended</p>\n"
            }
          },
          "example": {
            "type": "ProgramMembership",
            "roleName": "Owner",
            "member": {
              "type": "Person",
              "email": "bob@example.com"
            }
          },
          "formattedExample": "{\n  \"type\": \"ProgramMembership\",\n  \"roleName\": \"Owner\",\n  \"member\": {\n    \"type\": \"Person\",\n    \"email\": \"bob@example.com\"\n  }\n}"
        },
        "PropertyValue": {
          "description": "a key/value pair, used for maintaining state outside of the current context",
          "type": "object",
          "required": [
            "type",
            "propertyID",
            "value"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "PropertyValue"
              ]
            },
            "propertyID": {
              "type": "string",
              "example": "UserID"
            },
            "value": {
              "type": "string",
              "example": "<userid-string>"
            }
          },
          "generatedExample": "{\n  \"type\": \"PropertyValue\",\n  \"propertyID\": \"UserID\",\n  \"value\": \"<userid-string>\"\n}"
        },
        "PropertyListing": {
          "title": "PropertyListing",
          "x-range": "PropertyListing",
          "description": "a real estate property listed for sale",
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "PropertyListing"
              ]
            },
            "address": {
              "type": "object",
              "description": "A physical address.",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "PostalAddress"
                  ]
                },
                "streetAddress": {
                  "type": "string",
                  "example": "1007 Mountain Gate Rd"
                },
                "postOfficeBoxNumber": {
                  "type": "string",
                  "example": "Box 1234"
                },
                "addressRegion": {
                  "type": "string",
                  "description": "State or Province.",
                  "example": "New Jersey",
                  "descriptionAsHTML": "<p>State or Province.</p>\n"
                },
                "addressLocality": {
                  "type": "string",
                  "description": "City, Township.",
                  "example": "Gotham City",
                  "descriptionAsHTML": "<p>City, Township.</p>\n"
                },
                "postalCode": {
                  "type": "string",
                  "description": "Zip/Post Code",
                  "example": "10010",
                  "descriptionAsHTML": "<p>Zip/Post Code</p>\n"
                },
                "addressCountry": {
                  "type": "string",
                  "description": "country",
                  "example": "usa",
                  "descriptionAsHTML": "<p>country</p>\n"
                }
              },
              "descriptionAsHTML": "<p>A physical address.</p>\n"
            },
            "dateListed": {
              "type": "string",
              "format": "date-time"
            },
            "dateSold": {
              "type": "string",
              "format": "date-time"
            },
            "dateClosed": {
              "type": "string",
              "format": "date-time"
            },
            "listingPrice": {
              "title": "PriceSpecification",
              "type": "object",
              "x-range": "PriceSpecification",
              "description": "a price offered for transfer of ownership of an item",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "PriceSpecification",
                  "enum": [
                    "PriceSpecification"
                  ],
                  "descriptionAsHTML": "<p>PriceSpecification</p>\n"
                },
                "minPrice": {
                  "type": "number",
                  "description": "the lowest value if the price is a range",
                  "descriptionAsHTML": "<p>the lowest value if the price is a range</p>\n"
                },
                "maxPrice": {
                  "type": "number",
                  "description": "the high price offered if the price is a range",
                  "descriptionAsHTML": "<p>the high price offered if the price is a range</p>\n"
                },
                "price": {
                  "type": "number",
                  "description": "the price",
                  "descriptionAsHTML": "<p>the price</p>\n"
                },
                "priceCurrency": {
                  "type": "string",
                  "description": "use ISO4217",
                  "example": "USD",
                  "descriptionAsHTML": "<p>use ISO4217</p>\n"
                }
              },
              "descriptionAsHTML": "<p>a price offered for transfer of ownership of an item</p>\n"
            },
            "listingStatus": {
              "type": "string",
              "enum": [
                "Active",
                "Pending",
                "Sold",
                "Cancelled",
                "Prelisted",
                "OffMarket",
                "Private"
              ]
            },
            "listingAgent": {
              "type": "object",
              "required": [
                "type"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "description": "RealEstateAgent",
                  "enum": [
                    "RealEstateAgent",
                    "RealEstateOffice",
                    "RealEstateAgent"
                  ],
                  "example": "RealEstateAgent",
                  "descriptionAsHTML": "<p>RealEstateAgent</p>\n"
                },
                "id": {
                  "type": "string",
                  "format": "uri",
                  "description": "Linked-Data uri",
                  "descriptionAsHTML": "<p>Linked-Data uri</p>\n"
                },
                "name": {
                  "type": "string",
                  "description": "Name or DBA.",
                  "example": "Batman & Robin",
                  "descriptionAsHTML": "<p>Name or DBA.</p>\n"
                },
                "url": {
                  "type": "string",
                  "format": "uri",
                  "description": "primary website/url for the entity.",
                  "descriptionAsHTML": "<p>primary website/url for the entity.</p>\n"
                },
                "telephone": {
                  "type": "string",
                  "description": "Primary phone number.",
                  "example": "079.706.7065 x6341",
                  "descriptionAsHTML": "<p>Primary phone number.</p>\n"
                },
                "faxNumber": {
                  "type": "string",
                  "description": "Primary fax number.",
                  "example": "(873) 271-4802",
                  "descriptionAsHTML": "<p>Primary fax number.</p>\n"
                },
                "email": {
                  "type": "string",
                  "format": "email",
                  "description": "Primary email address.",
                  "example": "user@example.com",
                  "descriptionAsHTML": "<p>Primary email address.</p>\n"
                },
                "availableLanguage": {
                  "description": "A language someone may use with or at the item, service or place. Please use one of the language codes from the IETF BCP 47 standard.",
                  "type": "array",
                  "x-range": "Language",
                  "items": {
                    "type": "object",
                    "description": "Natural languages such as Spanish, Tamil, Hindi, English, etc. Formal language code tags expressed in BCP 47 can be used via the alternateName property",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Lanuguage",
                        "enum": [
                          "Language"
                        ]
                      },
                      "name": {
                        "description": "the name of the language",
                        "type": "string",
                        "example": "English"
                      },
                      "additionalName": {
                        "type": "string",
                        "example": "en"
                      }
                    }
                  },
                  "descriptionAsHTML": "<p>A language someone may use with or at the item, service or place. Please use one of the language codes from the IETF BCP 47 standard.</p>\n"
                },
                "branchCode": {
                  "description": "A short textual code (also called \"store code\") that uniquely identifies a place of business. The code is typically assigned by the parentOrganization and used in structured URLs.",
                  "type": "string",
                  "example": "CA301-001",
                  "descriptionAsHTML": "<p>A short textual code (also called &quot;store code&quot;) that uniquely identifies a place of business. The code is typically assigned by the parentOrganization and used in structured URLs.</p>\n"
                },
                "contactPoint": {
                  "type": "array",
                  "description": "Additional contact points. Can be organized by role, location, etc...",
                  "items": {
                    "type": "object",
                    "title": "ContactPoint",
                    "description": "A contact point—for example, a Customer Complaints department.",
                    "properties": {
                      "type": {
                        "description": "ContactPoint",
                        "type": "string",
                        "enum": [
                          "ContactPoint"
                        ]
                      },
                      "name": {
                        "type": "string",
                        "description": "a label for the contactPoint, i.e. 'Work', or 'Home'",
                        "example": "Work"
                      },
                      "telephone": {
                        "description": "a telephone number",
                        "type": "string",
                        "example": "1-364-127-9618 x20418"
                      },
                      "faxNumber": {
                        "description": "a fax number",
                        "type": "string",
                        "example": "834.320.1602"
                      },
                      "email": {
                        "description": "an email address for the item.",
                        "type": "string",
                        "format": "email",
                        "example": "user@example.com"
                      },
                      "url": {
                        "description": "primary URL for the item.",
                        "type": "string",
                        "format": "uri",
                        "example": "https://www.facebook.com/hallandoates"
                      }
                    }
                  },
                  "descriptionAsHTML": "<p>Additional contact points. Can be organized by role, location, etc...</p>\n"
                },
                "logo": {
                  "description": "a logo associated with the organization.",
                  "type": "array",
                  "x-range": [
                    "ImageObject",
                    "DigitalDocument"
                  ],
                  "items": {
                    "type": "object",
                    "allOf": [
                      {
                        "title": "DigitalDocument",
                        "type": "object",
                        "x-kind": "DigitalDocument",
                        "allOf": [
                          {
                            "type": "object",
                            "required": [
                              "type"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "Linked-Data (@type)"
                              },
                              "id": {
                                "type": "string",
                                "format": "uri",
                                "description": "Linked-Data uri"
                              },
                              "name": {
                                "type": "string",
                                "description": "the name of the item."
                              },
                              "url": {
                                "type": "string",
                                "format": "uri",
                                "description": "a public href that is clearly and uniquely associated with the item."
                              }
                            }
                          },
                          {
                            "description": "an electronic file.",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "DigitalDocument"
                                ]
                              },
                              "id": {
                                "example": "http://user.example.com/public/logo/fileName.zip"
                              },
                              "name": {
                                "type": "string",
                                "description": "the FileName",
                                "example": "fileName.zip"
                              },
                              "encodingFormat": {
                                "type": "string",
                                "description": "the MIME type",
                                "example": "application/zip"
                              },
                              "identifier": {
                                "type": "object",
                                "description": "namespaced identifier"
                              },
                              "about": {
                                "type": "string",
                                "format": "uri",
                                "description": "URI to the subject of the image or logo",
                                "example": "http://user.example.com/profile/card#me"
                              }
                            }
                          }
                        ]
                      },
                      {
                        "type": "object",
                        "description": "an associated logo"
                      }
                    ]
                  },
                  "descriptionAsHTML": "<p>a logo associated with the organization.</p>\n"
                },
                "image": {
                  "description": "an ImageObject or URI reference to an image of the entity on the web.",
                  "x-range": [
                    "ImageObject",
                    "URI"
                  ],
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "type": "object",
                        "title": "ImageObject",
                        "x-subclassOf": [
                          "MediaObject",
                          "CreativeWork",
                          "Thing"
                        ],
                        "allOf": [
                          {
                            "title": "MediaObject",
                            "description": "an image, video or document availble for download",
                            "x-subclass": [
                              "ImageObject",
                              "DigitalDocument"
                            ],
                            "allOf": [
                              {
                                "type": "object",
                                "required": [
                                  "type"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "description": "Linked-Data (@type)"
                                  },
                                  "id": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "Linked-Data uri"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "the name of the item."
                                  },
                                  "url": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "a public href that is clearly and uniquely associated with the item."
                                  }
                                }
                              },
                              {
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "MediaObject",
                                      "ImageObject",
                                      "DigitalDocument"
                                    ]
                                  },
                                  "id": {
                                    "description": "the URL to access the item.",
                                    "example": "http://user.example.com/public/logo/fileName.zip"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "the file name of the object.",
                                    "example": "fileName.zip"
                                  },
                                  "encodingFormat": {
                                    "type": "string",
                                    "description": "MIME type",
                                    "example": "application/zip"
                                  },
                                  "content": {
                                    "type": "string",
                                    "description": "base64 encoded content"
                                  },
                                  "about": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "URI to the subject of the image or logo",
                                    "example": "http://user.example.com/profile/card#me"
                                  },
                                  "url": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "URL of the image content",
                                    "example": "http://user.example.com/public/profile/image.jpg"
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "properties": {
                              "type": {
                                "example": "ImageObject"
                              },
                              "id": {
                                "example": "http://user.example.com/public/logo/image.jpg"
                              },
                              "name": {
                                "example": "image.jpg"
                              },
                              "encodingFormat": {
                                "example": "image/jpeg"
                              }
                            }
                          }
                        ]
                      },
                      {
                        "type": "string",
                        "format": "uri"
                      }
                    ]
                  },
                  "descriptionAsHTML": "<p>an ImageObject or URI reference to an image of the entity on the web.</p>\n"
                },
                "parentOrganization": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uri"
                  },
                  "x-range": [
                    "RealEstateOffice",
                    "RealEstateAgent"
                  ],
                  "description": "URI reference to the agent's office. For teams, this can be a reference to the team leader/primary profile.",
                  "example": [
                    "http://office-real-estate.example.com/",
                    "http://batmanandrobinteam.example.com/"
                  ],
                  "descriptionAsHTML": "<p>URI reference to the agent's office. For teams, this can be a reference to the team leader/primary profile.</p>\n"
                },
                "address": {
                  "description": "primary address",
                  "x-range": "PostalAddress",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "PostalAddress"
                      ]
                    },
                    "streetAddress": {
                      "type": "string",
                      "example": "1007 Mountain Gate Rd"
                    },
                    "postOfficeBoxNumber": {
                      "type": "string",
                      "example": "Box 1234"
                    },
                    "addressRegion": {
                      "type": "string",
                      "description": "State or Province.",
                      "example": "New Jersey",
                      "descriptionAsHTML": "<p>State or Province.</p>\n"
                    },
                    "addressLocality": {
                      "type": "string",
                      "description": "City, Township.",
                      "example": "Gotham City",
                      "descriptionAsHTML": "<p>City, Township.</p>\n"
                    },
                    "postalCode": {
                      "type": "string",
                      "description": "Zip/Post Code",
                      "example": "10010",
                      "descriptionAsHTML": "<p>Zip/Post Code</p>\n"
                    },
                    "addressCountry": {
                      "type": "string",
                      "description": "country",
                      "example": "usa",
                      "descriptionAsHTML": "<p>country</p>\n"
                    }
                  },
                  "descriptionAsHTML": "<p>primary address</p>\n"
                },
                "subOrganization": {
                  "description": "for teams: URI reference to a team member",
                  "x-range": "RealEstateAgent",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://org.example.com/profile/card#me"
                  },
                  "descriptionAsHTML": "<p>for teams: URI reference to a team member</p>\n"
                },
                "member": {
                  "description": "describes members and roles for this organization.",
                  "type": "array",
                  "x-range": [
                    "OrganizationRole",
                    "URI"
                  ],
                  "items": {
                    "anyOf": [
                      {
                        "type": "object",
                        "description": "Provides additional information in member/memberOf relationships.",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "a role played by the member in the memberOf group",
                            "enum": [
                              "OrganizationRole"
                            ],
                            "example": "OrganizationRole"
                          },
                          "roleName": {
                            "type": "string",
                            "example": "Owner"
                          },
                          "member": {
                            "description": "member object or id",
                            "x-range": [
                              "Person",
                              "Organization"
                            ],
                            "example": {
                              "type": "Person",
                              "email": "bob@example.com"
                            }
                          },
                          "memberOf": {
                            "description": "reference to the MarketingProgram"
                          },
                          "startDate": {
                            "type": "string",
                            "format": "date-time",
                            "description": "the date the member started the program"
                          },
                          "endDate": {
                            "type": "string",
                            "format": "date-time",
                            "description": "the date the program membership ended"
                          }
                        }
                      },
                      {
                        "type": "string",
                        "format": "uri"
                      }
                    ]
                  },
                  "descriptionAsHTML": "<p>describes members and roles for this organization.</p>\n"
                },
                "memberOf": {
                  "x-range": [
                    "OrganizationRole",
                    "MLSMembership"
                  ],
                  "description": "An Organization (or ProgramMembership) to which this Person or Organization belongs.",
                  "type": "array",
                  "items": {
                    "x-title": "MLSMembership",
                    "description": "a membership relationship",
                    "type": "object",
                    "allOf": [
                      {
                        "type": "object",
                        "description": "Provides additional information in member/memberOf relationships.",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "a role played by the member in the memberOf group",
                            "enum": [
                              "OrganizationRole"
                            ],
                            "example": "OrganizationRole"
                          },
                          "roleName": {
                            "type": "string",
                            "example": "Owner"
                          },
                          "member": {
                            "description": "member object or id",
                            "x-range": [
                              "Person",
                              "Organization"
                            ],
                            "example": {
                              "type": "Person",
                              "email": "bob@example.com"
                            }
                          },
                          "memberOf": {
                            "description": "reference to the MarketingProgram"
                          },
                          "startDate": {
                            "type": "string",
                            "format": "date-time",
                            "description": "the date the member started the program"
                          },
                          "endDate": {
                            "type": "string",
                            "format": "date-time",
                            "description": "the date the program membership ended"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "an MLS member relationship",
                            "enum": [
                              "MLSMembership"
                            ],
                            "example": "MLSMembership"
                          },
                          "roleName": {
                            "type": "string",
                            "example": "MLSMember"
                          },
                          "memberOf": {
                            "type": "object",
                            "x-range": "MultipleListingService",
                            "example": {
                              "type": "MultipleListingService",
                              "name": "GreatScottMLS"
                            }
                          },
                          "memberId": {
                            "type": "string",
                            "description": "the user's MLSID",
                            "example": "memberid123"
                          }
                        }
                      }
                    ]
                  },
                  "descriptionAsHTML": "<p>An Organization (or ProgramMembership) to which this Person or Organization belongs.</p>\n"
                },
                "permit": {
                  "description": "permits issued to the person or organization",
                  "type": "array",
                  "x-range": [
                    "RealEstateLicense"
                  ],
                  "items": {
                    "type": "object",
                    "description": "Real estate licenses, authorizations issued by state governments, give agents and brokers the legal ability to represent a home seller or buyer in the process of buying or selling real estate.",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "RealEstateLicense"
                        ],
                        "description": "RealEstateLicense"
                      },
                      "name": {
                        "type": "string",
                        "description": "display value, i.e. 'CA-DRE# 02068375'",
                        "example": "CA-DRE# 02068375"
                      },
                      "issuedBy": {
                        "type": "object",
                        "description": "the issuing organization or service",
                        "x-range": "Organization",
                        "example": {
                          "type": "Organization",
                          "name": "California"
                        }
                      },
                      "issuedThrough": {
                        "x-range": "Service",
                        "description": "The service through with the permit was granted.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "Service"
                          },
                          "name": {
                            "type": "string",
                            "example": "California Department of Real Estate"
                          }
                        }
                      },
                      "validIn": {
                        "x-range": [
                          "Place",
                          "AdministrativeArea"
                        ],
                        "description": "The geographic area where the permit is valid.",
                        "type": "object",
                        "example": {
                          "type": "AdministrativeArea",
                          "name": "New York"
                        }
                      },
                      "validFrom": {
                        "type": "string",
                        "format": "date-time",
                        "description": "start date"
                      },
                      "validUntil": {
                        "type": "string",
                        "format": "date-time",
                        "description": "end date"
                      }
                    }
                  },
                  "descriptionAsHTML": "<p>permits issued to the person or organization</p>\n"
                }
              },
              "x-kind": "Organization",
              "x-hasSubclass": [
                "RealEstateOrganization",
                "RealEstateOffice",
                "RealEstateAgent"
              ],
              "x-subClassOf": [
                "https://schema.org/Organization"
              ],
              "description": "A real estate agent or team.",
              "example": {
                "type": "RealEstateAgent",
                "id": "https://user.example.com/profile/card#me"
              },
              "descriptionAsHTML": "<p>A real estate agent or team.</p>\n"
            },
            "listingOffice": {
              "type": "object",
              "required": [
                "type"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "description": "RealEstateOffice",
                  "enum": [
                    "RealEstateOffice",
                    "RealEstateOffice",
                    "RealEstateAgent"
                  ],
                  "example": "RealEstateOrganization",
                  "descriptionAsHTML": "<p>RealEstateOffice</p>\n"
                },
                "id": {
                  "type": "string",
                  "format": "uri",
                  "description": "Linked-Data uri",
                  "descriptionAsHTML": "<p>Linked-Data uri</p>\n"
                },
                "name": {
                  "type": "string",
                  "description": "Name or DBA.",
                  "descriptionAsHTML": "<p>Name or DBA.</p>\n"
                },
                "url": {
                  "type": "string",
                  "format": "uri",
                  "description": "primary website/url for the entity.",
                  "descriptionAsHTML": "<p>primary website/url for the entity.</p>\n"
                },
                "telephone": {
                  "type": "string",
                  "description": "Primary phone number.",
                  "example": "079.706.7065 x6341",
                  "descriptionAsHTML": "<p>Primary phone number.</p>\n"
                },
                "faxNumber": {
                  "type": "string",
                  "description": "Primary fax number.",
                  "example": "(873) 271-4802",
                  "descriptionAsHTML": "<p>Primary fax number.</p>\n"
                },
                "email": {
                  "type": "string",
                  "format": "email",
                  "description": "Primary email address.",
                  "example": "user@example.com",
                  "descriptionAsHTML": "<p>Primary email address.</p>\n"
                },
                "availableLanguage": {
                  "description": "A language someone may use with or at the item, service or place. Please use one of the language codes from the IETF BCP 47 standard.",
                  "type": "array",
                  "x-range": "Language",
                  "items": {
                    "type": "object",
                    "description": "Natural languages such as Spanish, Tamil, Hindi, English, etc. Formal language code tags expressed in BCP 47 can be used via the alternateName property",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Lanuguage",
                        "enum": [
                          "Language"
                        ]
                      },
                      "name": {
                        "description": "the name of the language",
                        "type": "string",
                        "example": "English"
                      },
                      "additionalName": {
                        "type": "string",
                        "example": "en"
                      }
                    }
                  },
                  "descriptionAsHTML": "<p>A language someone may use with or at the item, service or place. Please use one of the language codes from the IETF BCP 47 standard.</p>\n"
                },
                "branchCode": {
                  "description": "A short textual code (also called \"store code\") that uniquely identifies a place of business. The code is typically assigned by the parentOrganization and used in structured URLs.",
                  "type": "string",
                  "example": "CA301-001",
                  "descriptionAsHTML": "<p>A short textual code (also called &quot;store code&quot;) that uniquely identifies a place of business. The code is typically assigned by the parentOrganization and used in structured URLs.</p>\n"
                },
                "contactPoint": {
                  "type": "array",
                  "description": "department or role specific contact points, i.e. relocation.",
                  "items": {
                    "type": "object",
                    "title": "ContactPoint",
                    "description": "A contact point—for example, a Customer Complaints department.",
                    "properties": {
                      "type": {
                        "description": "ContactPoint",
                        "type": "string",
                        "enum": [
                          "ContactPoint"
                        ]
                      },
                      "name": {
                        "type": "string",
                        "description": "a label for the contactPoint, i.e. 'Work', or 'Home'",
                        "example": "Work"
                      },
                      "telephone": {
                        "description": "a telephone number",
                        "type": "string",
                        "example": "1-364-127-9618 x20418"
                      },
                      "faxNumber": {
                        "description": "a fax number",
                        "type": "string",
                        "example": "834.320.1602"
                      },
                      "email": {
                        "description": "an email address for the item.",
                        "type": "string",
                        "format": "email",
                        "example": "user@example.com"
                      },
                      "url": {
                        "description": "primary URL for the item.",
                        "type": "string",
                        "format": "uri",
                        "example": "https://www.facebook.com/hallandoates"
                      }
                    }
                  },
                  "example": [
                    {
                      "type": "ContactPoint",
                      "name": "Relocation",
                      "telephone": "1-245-880-8222",
                      "faxNumber": "958-530-3473",
                      "email": "relocation@example.com"
                    }
                  ],
                  "descriptionAsHTML": "<p>department or role specific contact points, i.e. relocation.</p>\n"
                },
                "logo": {
                  "description": "a logo associated with the organization.",
                  "type": "array",
                  "x-range": [
                    "ImageObject",
                    "DigitalDocument"
                  ],
                  "items": {
                    "type": "object",
                    "allOf": [
                      {
                        "title": "DigitalDocument",
                        "type": "object",
                        "x-kind": "DigitalDocument",
                        "allOf": [
                          {
                            "type": "object",
                            "required": [
                              "type"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "Linked-Data (@type)"
                              },
                              "id": {
                                "type": "string",
                                "format": "uri",
                                "description": "Linked-Data uri"
                              },
                              "name": {
                                "type": "string",
                                "description": "the name of the item."
                              },
                              "url": {
                                "type": "string",
                                "format": "uri",
                                "description": "a public href that is clearly and uniquely associated with the item."
                              }
                            }
                          },
                          {
                            "description": "an electronic file.",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "DigitalDocument"
                                ]
                              },
                              "id": {
                                "example": "http://user.example.com/public/logo/fileName.zip"
                              },
                              "name": {
                                "type": "string",
                                "description": "the FileName",
                                "example": "fileName.zip"
                              },
                              "encodingFormat": {
                                "type": "string",
                                "description": "the MIME type",
                                "example": "application/zip"
                              },
                              "identifier": {
                                "type": "object",
                                "description": "namespaced identifier"
                              },
                              "about": {
                                "type": "string",
                                "format": "uri",
                                "description": "URI to the subject of the image or logo",
                                "example": "http://user.example.com/profile/card#me"
                              }
                            }
                          }
                        ]
                      },
                      {
                        "type": "object",
                        "description": "an associated logo"
                      }
                    ]
                  },
                  "descriptionAsHTML": "<p>a logo associated with the organization.</p>\n"
                },
                "image": {
                  "description": "an ImageObject or URI reference to an image of the entity on the web.",
                  "x-range": [
                    "ImageObject",
                    "URI"
                  ],
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "type": "object",
                        "title": "ImageObject",
                        "x-subclassOf": [
                          "MediaObject",
                          "CreativeWork",
                          "Thing"
                        ],
                        "allOf": [
                          {
                            "title": "MediaObject",
                            "description": "an image, video or document availble for download",
                            "x-subclass": [
                              "ImageObject",
                              "DigitalDocument"
                            ],
                            "allOf": [
                              {
                                "type": "object",
                                "required": [
                                  "type"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "description": "Linked-Data (@type)"
                                  },
                                  "id": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "Linked-Data uri"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "the name of the item."
                                  },
                                  "url": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "a public href that is clearly and uniquely associated with the item."
                                  }
                                }
                              },
                              {
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "MediaObject",
                                      "ImageObject",
                                      "DigitalDocument"
                                    ]
                                  },
                                  "id": {
                                    "description": "the URL to access the item.",
                                    "example": "http://user.example.com/public/logo/fileName.zip"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "the file name of the object.",
                                    "example": "fileName.zip"
                                  },
                                  "encodingFormat": {
                                    "type": "string",
                                    "description": "MIME type",
                                    "example": "application/zip"
                                  },
                                  "content": {
                                    "type": "string",
                                    "description": "base64 encoded content"
                                  },
                                  "about": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "URI to the subject of the image or logo",
                                    "example": "http://user.example.com/profile/card#me"
                                  },
                                  "url": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "URL of the image content",
                                    "example": "http://user.example.com/public/profile/image.jpg"
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "properties": {
                              "type": {
                                "example": "ImageObject"
                              },
                              "id": {
                                "example": "http://user.example.com/public/logo/image.jpg"
                              },
                              "name": {
                                "example": "image.jpg"
                              },
                              "encodingFormat": {
                                "example": "image/jpeg"
                              }
                            }
                          }
                        ]
                      },
                      {
                        "type": "string",
                        "format": "uri"
                      }
                    ]
                  },
                  "descriptionAsHTML": "<p>an ImageObject or URI reference to an image of the entity on the web.</p>\n"
                },
                "parentOrganization": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uri"
                  },
                  "x-range": "RealEstateOrganization",
                  "description": "Office broker or franchisor.",
                  "descriptionAsHTML": "<p>Office broker or franchisor.</p>\n"
                },
                "address": {
                  "description": "primary address",
                  "x-range": "PostalAddress",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "PostalAddress"
                      ]
                    },
                    "streetAddress": {
                      "type": "string",
                      "example": "1007 Mountain Gate Rd"
                    },
                    "postOfficeBoxNumber": {
                      "type": "string",
                      "example": "Box 1234"
                    },
                    "addressRegion": {
                      "type": "string",
                      "description": "State or Province.",
                      "example": "New Jersey",
                      "descriptionAsHTML": "<p>State or Province.</p>\n"
                    },
                    "addressLocality": {
                      "type": "string",
                      "description": "City, Township.",
                      "example": "Gotham City",
                      "descriptionAsHTML": "<p>City, Township.</p>\n"
                    },
                    "postalCode": {
                      "type": "string",
                      "description": "Zip/Post Code",
                      "example": "10010",
                      "descriptionAsHTML": "<p>Zip/Post Code</p>\n"
                    },
                    "addressCountry": {
                      "type": "string",
                      "description": "country",
                      "example": "usa",
                      "descriptionAsHTML": "<p>country</p>\n"
                    }
                  },
                  "descriptionAsHTML": "<p>primary address</p>\n"
                },
                "subOrganization": {
                  "description": "Agents and teams associated with the office.",
                  "x-range": "RealEstateAgent",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://org.example.com/profile/card#me"
                  },
                  "descriptionAsHTML": "<p>Agents and teams associated with the office.</p>\n"
                },
                "member": {
                  "description": "describes members and roles for this organization.",
                  "type": "array",
                  "x-range": [
                    "OrganizationRole",
                    "URI"
                  ],
                  "items": {
                    "anyOf": [
                      {
                        "type": "object",
                        "description": "Provides additional information in member/memberOf relationships.",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "a role played by the member in the memberOf group",
                            "enum": [
                              "OrganizationRole"
                            ],
                            "example": "OrganizationRole"
                          },
                          "roleName": {
                            "type": "string",
                            "example": "Owner"
                          },
                          "member": {
                            "description": "member object or id",
                            "x-range": [
                              "Person",
                              "Organization"
                            ],
                            "example": {
                              "type": "Person",
                              "email": "bob@example.com"
                            }
                          },
                          "memberOf": {
                            "description": "reference to the MarketingProgram"
                          },
                          "startDate": {
                            "type": "string",
                            "format": "date-time",
                            "description": "the date the member started the program"
                          },
                          "endDate": {
                            "type": "string",
                            "format": "date-time",
                            "description": "the date the program membership ended"
                          }
                        }
                      },
                      {
                        "type": "string",
                        "format": "uri"
                      }
                    ]
                  },
                  "descriptionAsHTML": "<p>describes members and roles for this organization.</p>\n"
                },
                "memberOf": {
                  "x-range": [
                    "OrganizationRole",
                    "MLSMembership"
                  ],
                  "description": "An Organization (or ProgramMembership) to which this Person or Organization belongs.",
                  "type": "array",
                  "items": {
                    "x-title": "MLSMembership",
                    "description": "a membership relationship",
                    "type": "object",
                    "allOf": [
                      {
                        "type": "object",
                        "description": "Provides additional information in member/memberOf relationships.",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "a role played by the member in the memberOf group",
                            "enum": [
                              "OrganizationRole"
                            ],
                            "example": "OrganizationRole"
                          },
                          "roleName": {
                            "type": "string",
                            "example": "Owner"
                          },
                          "member": {
                            "description": "member object or id",
                            "x-range": [
                              "Person",
                              "Organization"
                            ],
                            "example": {
                              "type": "Person",
                              "email": "bob@example.com"
                            }
                          },
                          "memberOf": {
                            "description": "reference to the MarketingProgram"
                          },
                          "startDate": {
                            "type": "string",
                            "format": "date-time",
                            "description": "the date the member started the program"
                          },
                          "endDate": {
                            "type": "string",
                            "format": "date-time",
                            "description": "the date the program membership ended"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "an MLS member relationship",
                            "enum": [
                              "MLSMembership"
                            ],
                            "example": "MLSMembership"
                          },
                          "roleName": {
                            "type": "string",
                            "example": "MLSMember"
                          },
                          "memberOf": {
                            "type": "object",
                            "x-range": "MultipleListingService",
                            "example": {
                              "type": "MultipleListingService",
                              "name": "GreatScottMLS"
                            }
                          },
                          "memberId": {
                            "type": "string",
                            "description": "the user's MLSID",
                            "example": "memberid123"
                          }
                        }
                      }
                    ]
                  },
                  "descriptionAsHTML": "<p>An Organization (or ProgramMembership) to which this Person or Organization belongs.</p>\n"
                },
                "permit": {
                  "description": "permits issued to the person or organization",
                  "type": "array",
                  "x-range": [
                    "RealEstateLicense"
                  ],
                  "items": {
                    "type": "object",
                    "description": "Real estate licenses, authorizations issued by state governments, give agents and brokers the legal ability to represent a home seller or buyer in the process of buying or selling real estate.",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "RealEstateLicense"
                        ],
                        "description": "RealEstateLicense"
                      },
                      "name": {
                        "type": "string",
                        "description": "display value, i.e. 'CA-DRE# 02068375'",
                        "example": "CA-DRE# 02068375"
                      },
                      "issuedBy": {
                        "type": "object",
                        "description": "the issuing organization or service",
                        "x-range": "Organization",
                        "example": {
                          "type": "Organization",
                          "name": "California"
                        }
                      },
                      "issuedThrough": {
                        "x-range": "Service",
                        "description": "The service through with the permit was granted.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "Service"
                          },
                          "name": {
                            "type": "string",
                            "example": "California Department of Real Estate"
                          }
                        }
                      },
                      "validIn": {
                        "x-range": [
                          "Place",
                          "AdministrativeArea"
                        ],
                        "description": "The geographic area where the permit is valid.",
                        "type": "object",
                        "example": {
                          "type": "AdministrativeArea",
                          "name": "New York"
                        }
                      },
                      "validFrom": {
                        "type": "string",
                        "format": "date-time",
                        "description": "start date"
                      },
                      "validUntil": {
                        "type": "string",
                        "format": "date-time",
                        "description": "end date"
                      }
                    }
                  },
                  "descriptionAsHTML": "<p>permits issued to the person or organization</p>\n"
                }
              },
              "x-kind": "Organization",
              "x-hasSubclass": [
                "RealEstateOrganization",
                "RealEstateOffice",
                "RealEstateAgent"
              ],
              "x-subClassOf": [
                "https://schema.org/Organization"
              ],
              "description": "A real estate franchisor, broker or business.",
              "descriptionAsHTML": "<p>A real estate franchisor, broker or business.</p>\n"
            },
            "image": {
              "x-range": [
                "ImageObject",
                "URI"
              ],
              "description": "an ImageObject or URI reference to an image on the web.",
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "type": "object",
                    "title": "ImageObject",
                    "x-subclassOf": [
                      "MediaObject",
                      "CreativeWork",
                      "Thing"
                    ],
                    "allOf": [
                      {
                        "title": "MediaObject",
                        "description": "an image, video or document availble for download",
                        "x-subclass": [
                          "ImageObject",
                          "DigitalDocument"
                        ],
                        "allOf": [
                          {
                            "type": "object",
                            "required": [
                              "type"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "Linked-Data (@type)"
                              },
                              "id": {
                                "type": "string",
                                "format": "uri",
                                "description": "Linked-Data uri"
                              },
                              "name": {
                                "type": "string",
                                "description": "the name of the item."
                              },
                              "url": {
                                "type": "string",
                                "format": "uri",
                                "description": "a public href that is clearly and uniquely associated with the item."
                              }
                            }
                          },
                          {
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "MediaObject",
                                  "ImageObject",
                                  "DigitalDocument"
                                ]
                              },
                              "id": {
                                "description": "the URL to access the item.",
                                "example": "http://user.example.com/public/logo/fileName.zip"
                              },
                              "name": {
                                "type": "string",
                                "description": "the file name of the object.",
                                "example": "fileName.zip"
                              },
                              "encodingFormat": {
                                "type": "string",
                                "description": "MIME type",
                                "example": "application/zip"
                              },
                              "content": {
                                "type": "string",
                                "description": "base64 encoded content"
                              },
                              "about": {
                                "type": "string",
                                "format": "uri",
                                "description": "URI to the subject of the image or logo",
                                "example": "http://user.example.com/profile/card#me"
                              },
                              "url": {
                                "type": "string",
                                "format": "uri",
                                "description": "URL of the image content",
                                "example": "http://user.example.com/public/profile/image.jpg"
                              }
                            }
                          }
                        ]
                      },
                      {
                        "properties": {
                          "type": {
                            "example": "ImageObject"
                          },
                          "id": {
                            "example": "http://user.example.com/public/logo/image.jpg"
                          },
                          "name": {
                            "example": "image.jpg"
                          },
                          "encodingFormat": {
                            "example": "image/jpeg"
                          }
                        }
                      }
                    ]
                  },
                  {
                    "type": "string",
                    "format": "uri"
                  }
                ]
              },
              "descriptionAsHTML": "<p>an ImageObject or URI reference to an image on the web.</p>\n"
            },
            "url": {
              "title": "url",
              "type": "string",
              "format": "uri",
              "description": "URL of the item.",
              "descriptionAsHTML": "<p>URL of the item.</p>\n"
            }
          },
          "generatedExample": "{\n  \"type\": \"PropertyListing\",\n  \"address\": {\n    \"type\": \"PostalAddress\",\n    \"streetAddress\": \"1007 Mountain Gate Rd\",\n    \"postOfficeBoxNumber\": \"Box 1234\",\n    \"addressRegion\": \"New Jersey\",\n    \"addressLocality\": \"Gotham City\",\n    \"postalCode\": \"10010\",\n    \"addressCountry\": \"usa\"\n  },\n  \"dateListed\": \"2019-05-21T01:05:11Z\",\n  \"dateSold\": \"2019-05-21T01:05:11Z\",\n  \"dateClosed\": \"2019-05-21T01:05:11Z\",\n  \"listingPrice\": {\n    \"type\": \"PriceSpecification\",\n    \"minPrice\": 0,\n    \"maxPrice\": 0,\n    \"price\": 0,\n    \"priceCurrency\": \"USD\"\n  },\n  \"listingStatus\": \"Active\",\n  \"listingAgent\": {\n    \"type\": \"RealEstateAgent\",\n    \"id\": \"https://user.example.com/profile/card#me\"\n  },\n  \"listingOffice\": {\n    \"type\": \"RealEstateOrganization\",\n    \"id\": \"http://example.com\",\n    \"name\": \"string\",\n    \"url\": \"http://example.com\",\n    \"telephone\": \"079.706.7065 x6341\",\n    \"faxNumber\": \"(873) 271-4802\",\n    \"email\": \"user@example.com\",\n    \"availableLanguage\": [\n      {\n        \"type\": \"Language\",\n        \"name\": \"English\",\n        \"additionalName\": \"en\"\n      }\n    ],\n    \"branchCode\": \"CA301-001\",\n    \"contactPoint\": [\n      {\n        \"type\": \"ContactPoint\",\n        \"name\": \"Relocation\",\n        \"telephone\": \"1-245-880-8222\",\n        \"faxNumber\": \"958-530-3473\",\n        \"email\": \"relocation@example.com\"\n      }\n    ],\n    \"logo\": [\n      {\n        \"type\": \"DigitalDocument\",\n        \"id\": \"http://user.example.com/public/logo/fileName.zip\",\n        \"name\": \"fileName.zip\",\n        \"url\": \"http://example.com\",\n        \"encodingFormat\": \"application/zip\",\n        \"identifier\": {},\n        \"about\": \"http://user.example.com/profile/card#me\"\n      }\n    ],\n    \"image\": [\n      {\n        \"type\": \"ImageObject\",\n        \"id\": \"http://user.example.com/public/logo/image.jpg\",\n        \"name\": \"image.jpg\",\n        \"url\": \"http://user.example.com/public/profile/image.jpg\",\n        \"encodingFormat\": \"image/jpeg\",\n        \"content\": \"string\",\n        \"about\": \"http://user.example.com/profile/card#me\"\n      }\n    ],\n    \"parentOrganization\": [\n      \"http://example.com\"\n    ],\n    \"address\": {\n      \"type\": \"PostalAddress\",\n      \"streetAddress\": \"1007 Mountain Gate Rd\",\n      \"postOfficeBoxNumber\": \"Box 1234\",\n      \"addressRegion\": \"New Jersey\",\n      \"addressLocality\": \"Gotham City\",\n      \"postalCode\": \"10010\",\n      \"addressCountry\": \"usa\"\n    },\n    \"subOrganization\": [\n      \"http://org.example.com/profile/card#me\"\n    ],\n    \"member\": [\n      {\n        \"type\": \"OrganizationRole\",\n        \"roleName\": \"Owner\",\n        \"member\": {\n          \"type\": \"Person\",\n          \"email\": \"bob@example.com\"\n        },\n        \"memberOf\": null,\n        \"startDate\": \"2019-05-21T01:05:11Z\",\n        \"endDate\": \"2019-05-21T01:05:11Z\"\n      }\n    ],\n    \"memberOf\": [\n      {\n        \"type\": \"MLSMembership\",\n        \"roleName\": \"MLSMember\",\n        \"member\": {\n          \"type\": \"Person\",\n          \"email\": \"bob@example.com\"\n        },\n        \"memberOf\": {\n          \"type\": \"MultipleListingService\",\n          \"name\": \"GreatScottMLS\"\n        },\n        \"startDate\": \"2019-05-21T01:05:11Z\",\n        \"endDate\": \"2019-05-21T01:05:11Z\",\n        \"memberId\": \"memberid123\"\n      }\n    ],\n    \"permit\": [\n      {\n        \"type\": \"RealEstateLicense\",\n        \"name\": \"CA-DRE# 02068375\",\n        \"issuedBy\": {\n          \"type\": \"Organization\",\n          \"name\": \"California\"\n        },\n        \"issuedThrough\": {\n          \"type\": \"Service\",\n          \"name\": \"California Department of Real Estate\"\n        },\n        \"validIn\": {\n          \"type\": \"AdministrativeArea\",\n          \"name\": \"New York\"\n        },\n        \"validFrom\": \"2019-05-21T01:05:11Z\",\n        \"validUntil\": \"2019-05-21T01:05:11Z\"\n      }\n    ]\n  },\n  \"image\": [\n    {\n      \"type\": \"ImageObject\",\n      \"id\": \"http://user.example.com/public/logo/image.jpg\",\n      \"name\": \"image.jpg\",\n      \"url\": \"http://user.example.com/public/profile/image.jpg\",\n      \"encodingFormat\": \"image/jpeg\",\n      \"content\": \"string\",\n      \"about\": \"http://user.example.com/profile/card#me\"\n    }\n  ],\n  \"url\": \"http://example.com\"\n}"
        },
        "PropertySearch": {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "description": "Linked-Data (@type)",
              "enum": [
                "SearchAction"
              ],
              "descriptionAsHTML": "<p>Linked-Data (@type)</p>\n"
            },
            "id": {
              "type": "string",
              "format": "uri",
              "description": "Linked-Data uri",
              "descriptionAsHTML": "<p>Linked-Data uri</p>\n"
            },
            "name": {
              "type": "string",
              "description": "the name of the item.",
              "descriptionAsHTML": "<p>the name of the item.</p>\n"
            },
            "url": {
              "type": "string",
              "format": "uri",
              "description": "a public href that is clearly and uniquely associated with the item.",
              "descriptionAsHTML": "<p>a public href that is clearly and uniquely associated with the item.</p>\n"
            },
            "object": {
              "title": "PropertySearchArguments",
              "x-range": "PropertySearchArguments",
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "PropertySearchArguments"
                  ]
                },
                "price": {
                  "type": "object",
                  "description": "A point value or interval.",
                  "properties": {
                    "value": {
                      "type": "number"
                    },
                    "minValue": {
                      "type": "number"
                    },
                    "maxValue": {
                      "type": "number"
                    },
                    "unitCode": {
                      "type": "string"
                    },
                    "unitText": {
                      "type": "string"
                    }
                  },
                  "descriptionAsHTML": "<p>A point value or interval.</p>\n"
                },
                "bedrooms": {
                  "type": "object",
                  "description": "A point value or interval.",
                  "properties": {
                    "value": {
                      "type": "number"
                    },
                    "minValue": {
                      "type": "number"
                    },
                    "maxValue": {
                      "type": "number"
                    },
                    "unitCode": {
                      "type": "string"
                    },
                    "unitText": {
                      "type": "string"
                    }
                  },
                  "descriptionAsHTML": "<p>A point value or interval.</p>\n"
                },
                "bathrooms": {
                  "type": "object",
                  "description": "A point value or interval.",
                  "properties": {
                    "value": {
                      "type": "number"
                    },
                    "minValue": {
                      "type": "number"
                    },
                    "maxValue": {
                      "type": "number"
                    },
                    "unitCode": {
                      "type": "string"
                    },
                    "unitText": {
                      "type": "string"
                    }
                  },
                  "descriptionAsHTML": "<p>A point value or interval.</p>\n"
                },
                "location": {
                  "x-range": [
                    "Place",
                    "PostalAddress",
                    "Text"
                  ],
                  "description": "The location of for example where the event is happening, an organization is located, or where an action takes place.",
                  "type": "object",
                  "descriptionAsHTML": "<p>The location of for example where the event is happening, an organization is located, or where an action takes place.</p>\n"
                }
              }
            },
            "agent": {
              "type": "object",
              "x-range": "Person",
              "example": {
                "type": "Person",
                "email": "bob@example.com"
              }
            }
          },
          "generatedExample": "{\n  \"type\": \"SearchAction\",\n  \"id\": \"http://example.com\",\n  \"name\": \"string\",\n  \"url\": \"http://example.com\",\n  \"object\": {\n    \"type\": \"PropertySearchArguments\",\n    \"price\": {\n      \"value\": 0,\n      \"minValue\": 0,\n      \"maxValue\": 0,\n      \"unitCode\": \"string\",\n      \"unitText\": \"string\"\n    },\n    \"bedrooms\": {\n      \"value\": 0,\n      \"minValue\": 0,\n      \"maxValue\": 0,\n      \"unitCode\": \"string\",\n      \"unitText\": \"string\"\n    },\n    \"bathrooms\": {\n      \"value\": 0,\n      \"minValue\": 0,\n      \"maxValue\": 0,\n      \"unitCode\": \"string\",\n      \"unitText\": \"string\"\n    },\n    \"location\": {}\n  },\n  \"agent\": {\n    \"type\": \"Person\",\n    \"email\": \"bob@example.com\"\n  }\n}"
        },
        "PropertySearchArguments": {
          "title": "PropertySearchArguments",
          "x-range": "PropertySearchArguments",
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "PropertySearchArguments"
              ]
            },
            "price": {
              "type": "object",
              "description": "A point value or interval.",
              "properties": {
                "value": {
                  "type": "number"
                },
                "minValue": {
                  "type": "number"
                },
                "maxValue": {
                  "type": "number"
                },
                "unitCode": {
                  "type": "string"
                },
                "unitText": {
                  "type": "string"
                }
              },
              "descriptionAsHTML": "<p>A point value or interval.</p>\n"
            },
            "bedrooms": {
              "type": "object",
              "description": "A point value or interval.",
              "properties": {
                "value": {
                  "type": "number"
                },
                "minValue": {
                  "type": "number"
                },
                "maxValue": {
                  "type": "number"
                },
                "unitCode": {
                  "type": "string"
                },
                "unitText": {
                  "type": "string"
                }
              },
              "descriptionAsHTML": "<p>A point value or interval.</p>\n"
            },
            "bathrooms": {
              "type": "object",
              "description": "A point value or interval.",
              "properties": {
                "value": {
                  "type": "number"
                },
                "minValue": {
                  "type": "number"
                },
                "maxValue": {
                  "type": "number"
                },
                "unitCode": {
                  "type": "string"
                },
                "unitText": {
                  "type": "string"
                }
              },
              "descriptionAsHTML": "<p>A point value or interval.</p>\n"
            },
            "location": {
              "x-range": [
                "Place",
                "PostalAddress",
                "Text"
              ],
              "description": "The location of for example where the event is happening, an organization is located, or where an action takes place.",
              "type": "object",
              "descriptionAsHTML": "<p>The location of for example where the event is happening, an organization is located, or where an action takes place.</p>\n"
            }
          },
          "generatedExample": "{\n  \"type\": \"PropertySearchArguments\",\n  \"price\": {\n    \"value\": 0,\n    \"minValue\": 0,\n    \"maxValue\": 0,\n    \"unitCode\": \"string\",\n    \"unitText\": \"string\"\n  },\n  \"bedrooms\": {\n    \"value\": 0,\n    \"minValue\": 0,\n    \"maxValue\": 0,\n    \"unitCode\": \"string\",\n    \"unitText\": \"string\"\n  },\n  \"bathrooms\": {\n    \"value\": 0,\n    \"minValue\": 0,\n    \"maxValue\": 0,\n    \"unitCode\": \"string\",\n    \"unitText\": \"string\"\n  },\n  \"location\": {}\n}"
        },
        "RealEstateAgent": {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "description": "RealEstateAgent",
              "enum": [
                "RealEstateAgent",
                "RealEstateOffice",
                "RealEstateAgent"
              ],
              "example": "RealEstateAgent",
              "descriptionAsHTML": "<p>RealEstateAgent</p>\n"
            },
            "id": {
              "type": "string",
              "format": "uri",
              "description": "Linked-Data uri",
              "descriptionAsHTML": "<p>Linked-Data uri</p>\n"
            },
            "name": {
              "type": "string",
              "description": "Name or DBA.",
              "example": "Batman & Robin",
              "descriptionAsHTML": "<p>Name or DBA.</p>\n"
            },
            "url": {
              "type": "string",
              "format": "uri",
              "description": "primary website/url for the entity.",
              "descriptionAsHTML": "<p>primary website/url for the entity.</p>\n"
            },
            "telephone": {
              "type": "string",
              "description": "Primary phone number.",
              "example": "079.706.7065 x6341",
              "descriptionAsHTML": "<p>Primary phone number.</p>\n"
            },
            "faxNumber": {
              "type": "string",
              "description": "Primary fax number.",
              "example": "(873) 271-4802",
              "descriptionAsHTML": "<p>Primary fax number.</p>\n"
            },
            "email": {
              "type": "string",
              "format": "email",
              "description": "Primary email address.",
              "example": "user@example.com",
              "descriptionAsHTML": "<p>Primary email address.</p>\n"
            },
            "availableLanguage": {
              "description": "A language someone may use with or at the item, service or place. Please use one of the language codes from the IETF BCP 47 standard.",
              "type": "array",
              "x-range": "Language",
              "items": {
                "type": "object",
                "description": "Natural languages such as Spanish, Tamil, Hindi, English, etc. Formal language code tags expressed in BCP 47 can be used via the alternateName property",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "Lanuguage",
                    "enum": [
                      "Language"
                    ]
                  },
                  "name": {
                    "description": "the name of the language",
                    "type": "string",
                    "example": "English"
                  },
                  "additionalName": {
                    "type": "string",
                    "example": "en"
                  }
                }
              },
              "descriptionAsHTML": "<p>A language someone may use with or at the item, service or place. Please use one of the language codes from the IETF BCP 47 standard.</p>\n"
            },
            "branchCode": {
              "description": "A short textual code (also called \"store code\") that uniquely identifies a place of business. The code is typically assigned by the parentOrganization and used in structured URLs.",
              "type": "string",
              "example": "CA301-001",
              "descriptionAsHTML": "<p>A short textual code (also called &quot;store code&quot;) that uniquely identifies a place of business. The code is typically assigned by the parentOrganization and used in structured URLs.</p>\n"
            },
            "contactPoint": {
              "type": "array",
              "description": "Additional contact points. Can be organized by role, location, etc...",
              "items": {
                "type": "object",
                "title": "ContactPoint",
                "description": "A contact point—for example, a Customer Complaints department.",
                "properties": {
                  "type": {
                    "description": "ContactPoint",
                    "type": "string",
                    "enum": [
                      "ContactPoint"
                    ]
                  },
                  "name": {
                    "type": "string",
                    "description": "a label for the contactPoint, i.e. 'Work', or 'Home'",
                    "example": "Work"
                  },
                  "telephone": {
                    "description": "a telephone number",
                    "type": "string",
                    "example": "1-364-127-9618 x20418"
                  },
                  "faxNumber": {
                    "description": "a fax number",
                    "type": "string",
                    "example": "834.320.1602"
                  },
                  "email": {
                    "description": "an email address for the item.",
                    "type": "string",
                    "format": "email",
                    "example": "user@example.com"
                  },
                  "url": {
                    "description": "primary URL for the item.",
                    "type": "string",
                    "format": "uri",
                    "example": "https://www.facebook.com/hallandoates"
                  }
                }
              },
              "descriptionAsHTML": "<p>Additional contact points. Can be organized by role, location, etc...</p>\n"
            },
            "logo": {
              "description": "a logo associated with the organization.",
              "type": "array",
              "x-range": [
                "ImageObject",
                "DigitalDocument"
              ],
              "items": {
                "type": "object",
                "allOf": [
                  {
                    "title": "DigitalDocument",
                    "type": "object",
                    "x-kind": "DigitalDocument",
                    "allOf": [
                      {
                        "type": "object",
                        "required": [
                          "type"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "Linked-Data (@type)"
                          },
                          "id": {
                            "type": "string",
                            "format": "uri",
                            "description": "Linked-Data uri"
                          },
                          "name": {
                            "type": "string",
                            "description": "the name of the item."
                          },
                          "url": {
                            "type": "string",
                            "format": "uri",
                            "description": "a public href that is clearly and uniquely associated with the item."
                          }
                        }
                      },
                      {
                        "description": "an electronic file.",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "DigitalDocument"
                            ]
                          },
                          "id": {
                            "example": "http://user.example.com/public/logo/fileName.zip"
                          },
                          "name": {
                            "type": "string",
                            "description": "the FileName",
                            "example": "fileName.zip"
                          },
                          "encodingFormat": {
                            "type": "string",
                            "description": "the MIME type",
                            "example": "application/zip"
                          },
                          "identifier": {
                            "type": "object",
                            "description": "namespaced identifier"
                          },
                          "about": {
                            "type": "string",
                            "format": "uri",
                            "description": "URI to the subject of the image or logo",
                            "example": "http://user.example.com/profile/card#me"
                          }
                        }
                      }
                    ]
                  },
                  {
                    "type": "object",
                    "description": "an associated logo"
                  }
                ]
              },
              "descriptionAsHTML": "<p>a logo associated with the organization.</p>\n"
            },
            "image": {
              "description": "an ImageObject or URI reference to an image of the entity on the web.",
              "x-range": [
                "ImageObject",
                "URI"
              ],
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "type": "object",
                    "title": "ImageObject",
                    "x-subclassOf": [
                      "MediaObject",
                      "CreativeWork",
                      "Thing"
                    ],
                    "allOf": [
                      {
                        "title": "MediaObject",
                        "description": "an image, video or document availble for download",
                        "x-subclass": [
                          "ImageObject",
                          "DigitalDocument"
                        ],
                        "allOf": [
                          {
                            "type": "object",
                            "required": [
                              "type"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "Linked-Data (@type)"
                              },
                              "id": {
                                "type": "string",
                                "format": "uri",
                                "description": "Linked-Data uri"
                              },
                              "name": {
                                "type": "string",
                                "description": "the name of the item."
                              },
                              "url": {
                                "type": "string",
                                "format": "uri",
                                "description": "a public href that is clearly and uniquely associated with the item."
                              }
                            }
                          },
                          {
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "MediaObject",
                                  "ImageObject",
                                  "DigitalDocument"
                                ]
                              },
                              "id": {
                                "description": "the URL to access the item.",
                                "example": "http://user.example.com/public/logo/fileName.zip"
                              },
                              "name": {
                                "type": "string",
                                "description": "the file name of the object.",
                                "example": "fileName.zip"
                              },
                              "encodingFormat": {
                                "type": "string",
                                "description": "MIME type",
                                "example": "application/zip"
                              },
                              "content": {
                                "type": "string",
                                "description": "base64 encoded content"
                              },
                              "about": {
                                "type": "string",
                                "format": "uri",
                                "description": "URI to the subject of the image or logo",
                                "example": "http://user.example.com/profile/card#me"
                              },
                              "url": {
                                "type": "string",
                                "format": "uri",
                                "description": "URL of the image content",
                                "example": "http://user.example.com/public/profile/image.jpg"
                              }
                            }
                          }
                        ]
                      },
                      {
                        "properties": {
                          "type": {
                            "example": "ImageObject"
                          },
                          "id": {
                            "example": "http://user.example.com/public/logo/image.jpg"
                          },
                          "name": {
                            "example": "image.jpg"
                          },
                          "encodingFormat": {
                            "example": "image/jpeg"
                          }
                        }
                      }
                    ]
                  },
                  {
                    "type": "string",
                    "format": "uri"
                  }
                ]
              },
              "descriptionAsHTML": "<p>an ImageObject or URI reference to an image of the entity on the web.</p>\n"
            },
            "parentOrganization": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uri"
              },
              "x-range": [
                "RealEstateOffice",
                "RealEstateAgent"
              ],
              "description": "URI reference to the agent's office. For teams, this can be a reference to the team leader/primary profile.",
              "example": [
                "http://office-real-estate.example.com/",
                "http://batmanandrobinteam.example.com/"
              ],
              "descriptionAsHTML": "<p>URI reference to the agent's office. For teams, this can be a reference to the team leader/primary profile.</p>\n"
            },
            "address": {
              "description": "primary address",
              "x-range": "PostalAddress",
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "PostalAddress"
                  ]
                },
                "streetAddress": {
                  "type": "string",
                  "example": "1007 Mountain Gate Rd"
                },
                "postOfficeBoxNumber": {
                  "type": "string",
                  "example": "Box 1234"
                },
                "addressRegion": {
                  "type": "string",
                  "description": "State or Province.",
                  "example": "New Jersey",
                  "descriptionAsHTML": "<p>State or Province.</p>\n"
                },
                "addressLocality": {
                  "type": "string",
                  "description": "City, Township.",
                  "example": "Gotham City",
                  "descriptionAsHTML": "<p>City, Township.</p>\n"
                },
                "postalCode": {
                  "type": "string",
                  "description": "Zip/Post Code",
                  "example": "10010",
                  "descriptionAsHTML": "<p>Zip/Post Code</p>\n"
                },
                "addressCountry": {
                  "type": "string",
                  "description": "country",
                  "example": "usa",
                  "descriptionAsHTML": "<p>country</p>\n"
                }
              },
              "descriptionAsHTML": "<p>primary address</p>\n"
            },
            "subOrganization": {
              "description": "for teams: URI reference to a team member",
              "x-range": "RealEstateAgent",
              "type": "array",
              "items": {
                "type": "string",
                "format": "uri",
                "example": "http://org.example.com/profile/card#me"
              },
              "descriptionAsHTML": "<p>for teams: URI reference to a team member</p>\n"
            },
            "member": {
              "description": "describes members and roles for this organization.",
              "type": "array",
              "x-range": [
                "OrganizationRole",
                "URI"
              ],
              "items": {
                "anyOf": [
                  {
                    "type": "object",
                    "description": "Provides additional information in member/memberOf relationships.",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "a role played by the member in the memberOf group",
                        "enum": [
                          "OrganizationRole"
                        ],
                        "example": "OrganizationRole"
                      },
                      "roleName": {
                        "type": "string",
                        "example": "Owner"
                      },
                      "member": {
                        "description": "member object or id",
                        "x-range": [
                          "Person",
                          "Organization"
                        ],
                        "example": {
                          "type": "Person",
                          "email": "bob@example.com"
                        }
                      },
                      "memberOf": {
                        "description": "reference to the MarketingProgram"
                      },
                      "startDate": {
                        "type": "string",
                        "format": "date-time",
                        "description": "the date the member started the program"
                      },
                      "endDate": {
                        "type": "string",
                        "format": "date-time",
                        "description": "the date the program membership ended"
                      }
                    }
                  },
                  {
                    "type": "string",
                    "format": "uri"
                  }
                ]
              },
              "descriptionAsHTML": "<p>describes members and roles for this organization.</p>\n"
            },
            "memberOf": {
              "x-range": [
                "OrganizationRole",
                "MLSMembership"
              ],
              "description": "An Organization (or ProgramMembership) to which this Person or Organization belongs.",
              "type": "array",
              "items": {
                "x-title": "MLSMembership",
                "description": "a membership relationship",
                "type": "object",
                "allOf": [
                  {
                    "type": "object",
                    "description": "Provides additional information in member/memberOf relationships.",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "a role played by the member in the memberOf group",
                        "enum": [
                          "OrganizationRole"
                        ],
                        "example": "OrganizationRole"
                      },
                      "roleName": {
                        "type": "string",
                        "example": "Owner"
                      },
                      "member": {
                        "description": "member object or id",
                        "x-range": [
                          "Person",
                          "Organization"
                        ],
                        "example": {
                          "type": "Person",
                          "email": "bob@example.com"
                        }
                      },
                      "memberOf": {
                        "description": "reference to the MarketingProgram"
                      },
                      "startDate": {
                        "type": "string",
                        "format": "date-time",
                        "description": "the date the member started the program"
                      },
                      "endDate": {
                        "type": "string",
                        "format": "date-time",
                        "description": "the date the program membership ended"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "an MLS member relationship",
                        "enum": [
                          "MLSMembership"
                        ],
                        "example": "MLSMembership"
                      },
                      "roleName": {
                        "type": "string",
                        "example": "MLSMember"
                      },
                      "memberOf": {
                        "type": "object",
                        "x-range": "MultipleListingService",
                        "example": {
                          "type": "MultipleListingService",
                          "name": "GreatScottMLS"
                        }
                      },
                      "memberId": {
                        "type": "string",
                        "description": "the user's MLSID",
                        "example": "memberid123"
                      }
                    }
                  }
                ]
              },
              "descriptionAsHTML": "<p>An Organization (or ProgramMembership) to which this Person or Organization belongs.</p>\n"
            },
            "permit": {
              "description": "permits issued to the person or organization",
              "type": "array",
              "x-range": [
                "RealEstateLicense"
              ],
              "items": {
                "type": "object",
                "description": "Real estate licenses, authorizations issued by state governments, give agents and brokers the legal ability to represent a home seller or buyer in the process of buying or selling real estate.",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "RealEstateLicense"
                    ],
                    "description": "RealEstateLicense"
                  },
                  "name": {
                    "type": "string",
                    "description": "display value, i.e. 'CA-DRE# 02068375'",
                    "example": "CA-DRE# 02068375"
                  },
                  "issuedBy": {
                    "type": "object",
                    "description": "the issuing organization or service",
                    "x-range": "Organization",
                    "example": {
                      "type": "Organization",
                      "name": "California"
                    }
                  },
                  "issuedThrough": {
                    "x-range": "Service",
                    "description": "The service through with the permit was granted.",
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "example": "Service"
                      },
                      "name": {
                        "type": "string",
                        "example": "California Department of Real Estate"
                      }
                    }
                  },
                  "validIn": {
                    "x-range": [
                      "Place",
                      "AdministrativeArea"
                    ],
                    "description": "The geographic area where the permit is valid.",
                    "type": "object",
                    "example": {
                      "type": "AdministrativeArea",
                      "name": "New York"
                    }
                  },
                  "validFrom": {
                    "type": "string",
                    "format": "date-time",
                    "description": "start date"
                  },
                  "validUntil": {
                    "type": "string",
                    "format": "date-time",
                    "description": "end date"
                  }
                }
              },
              "descriptionAsHTML": "<p>permits issued to the person or organization</p>\n"
            }
          },
          "x-kind": "Organization",
          "x-hasSubclass": [
            "RealEstateOrganization",
            "RealEstateOffice",
            "RealEstateAgent"
          ],
          "x-subClassOf": [
            "https://schema.org/Organization"
          ],
          "description": "A real estate agent or team.",
          "generatedExample": "{\n  \"type\": \"RealEstateAgent\",\n  \"id\": \"http://example.com\",\n  \"name\": \"Batman & Robin\",\n  \"url\": \"http://example.com\",\n  \"telephone\": \"079.706.7065 x6341\",\n  \"faxNumber\": \"(873) 271-4802\",\n  \"email\": \"user@example.com\",\n  \"availableLanguage\": [\n    {\n      \"type\": \"Language\",\n      \"name\": \"English\",\n      \"additionalName\": \"en\"\n    }\n  ],\n  \"branchCode\": \"CA301-001\",\n  \"contactPoint\": [\n    {\n      \"type\": \"ContactPoint\",\n      \"name\": \"Work\",\n      \"telephone\": \"1-364-127-9618 x20418\",\n      \"faxNumber\": \"834.320.1602\",\n      \"email\": \"user@example.com\",\n      \"url\": \"https://www.facebook.com/hallandoates\"\n    }\n  ],\n  \"logo\": [\n    {\n      \"type\": \"DigitalDocument\",\n      \"id\": \"http://user.example.com/public/logo/fileName.zip\",\n      \"name\": \"fileName.zip\",\n      \"url\": \"http://example.com\",\n      \"encodingFormat\": \"application/zip\",\n      \"identifier\": {},\n      \"about\": \"http://user.example.com/profile/card#me\"\n    }\n  ],\n  \"image\": [\n    {\n      \"type\": \"ImageObject\",\n      \"id\": \"http://user.example.com/public/logo/image.jpg\",\n      \"name\": \"image.jpg\",\n      \"url\": \"http://user.example.com/public/profile/image.jpg\",\n      \"encodingFormat\": \"image/jpeg\",\n      \"content\": \"string\",\n      \"about\": \"http://user.example.com/profile/card#me\"\n    }\n  ],\n  \"parentOrganization\": [\n    \"http://office-real-estate.example.com/\",\n    \"http://batmanandrobinteam.example.com/\"\n  ],\n  \"address\": {\n    \"type\": \"PostalAddress\",\n    \"streetAddress\": \"1007 Mountain Gate Rd\",\n    \"postOfficeBoxNumber\": \"Box 1234\",\n    \"addressRegion\": \"New Jersey\",\n    \"addressLocality\": \"Gotham City\",\n    \"postalCode\": \"10010\",\n    \"addressCountry\": \"usa\"\n  },\n  \"subOrganization\": [\n    \"http://org.example.com/profile/card#me\"\n  ],\n  \"member\": [\n    {\n      \"type\": \"OrganizationRole\",\n      \"roleName\": \"Owner\",\n      \"member\": {\n        \"type\": \"Person\",\n        \"email\": \"bob@example.com\"\n      },\n      \"memberOf\": null,\n      \"startDate\": \"2019-05-21T01:05:11Z\",\n      \"endDate\": \"2019-05-21T01:05:11Z\"\n    }\n  ],\n  \"memberOf\": [\n    {\n      \"type\": \"MLSMembership\",\n      \"roleName\": \"MLSMember\",\n      \"member\": {\n        \"type\": \"Person\",\n        \"email\": \"bob@example.com\"\n      },\n      \"memberOf\": {\n        \"type\": \"MultipleListingService\",\n        \"name\": \"GreatScottMLS\"\n      },\n      \"startDate\": \"2019-05-21T01:05:11Z\",\n      \"endDate\": \"2019-05-21T01:05:11Z\",\n      \"memberId\": \"memberid123\"\n    }\n  ],\n  \"permit\": [\n    {\n      \"type\": \"RealEstateLicense\",\n      \"name\": \"CA-DRE# 02068375\",\n      \"issuedBy\": {\n        \"type\": \"Organization\",\n        \"name\": \"California\"\n      },\n      \"issuedThrough\": {\n        \"type\": \"Service\",\n        \"name\": \"California Department of Real Estate\"\n      },\n      \"validIn\": {\n        \"type\": \"AdministrativeArea\",\n        \"name\": \"New York\"\n      },\n      \"validFrom\": \"2019-05-21T01:05:11Z\",\n      \"validUntil\": \"2019-05-21T01:05:11Z\"\n    }\n  ]\n}"
        },
        "RealEstateOffice": {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "description": "RealEstateOffice",
              "enum": [
                "RealEstateOffice",
                "RealEstateOffice",
                "RealEstateAgent"
              ],
              "example": "RealEstateOrganization",
              "descriptionAsHTML": "<p>RealEstateOffice</p>\n"
            },
            "id": {
              "type": "string",
              "format": "uri",
              "description": "Linked-Data uri",
              "descriptionAsHTML": "<p>Linked-Data uri</p>\n"
            },
            "name": {
              "type": "string",
              "description": "Name or DBA.",
              "descriptionAsHTML": "<p>Name or DBA.</p>\n"
            },
            "url": {
              "type": "string",
              "format": "uri",
              "description": "primary website/url for the entity.",
              "descriptionAsHTML": "<p>primary website/url for the entity.</p>\n"
            },
            "telephone": {
              "type": "string",
              "description": "Primary phone number.",
              "example": "079.706.7065 x6341",
              "descriptionAsHTML": "<p>Primary phone number.</p>\n"
            },
            "faxNumber": {
              "type": "string",
              "description": "Primary fax number.",
              "example": "(873) 271-4802",
              "descriptionAsHTML": "<p>Primary fax number.</p>\n"
            },
            "email": {
              "type": "string",
              "format": "email",
              "description": "Primary email address.",
              "example": "user@example.com",
              "descriptionAsHTML": "<p>Primary email address.</p>\n"
            },
            "availableLanguage": {
              "description": "A language someone may use with or at the item, service or place. Please use one of the language codes from the IETF BCP 47 standard.",
              "type": "array",
              "x-range": "Language",
              "items": {
                "type": "object",
                "description": "Natural languages such as Spanish, Tamil, Hindi, English, etc. Formal language code tags expressed in BCP 47 can be used via the alternateName property",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "Lanuguage",
                    "enum": [
                      "Language"
                    ]
                  },
                  "name": {
                    "description": "the name of the language",
                    "type": "string",
                    "example": "English"
                  },
                  "additionalName": {
                    "type": "string",
                    "example": "en"
                  }
                }
              },
              "descriptionAsHTML": "<p>A language someone may use with or at the item, service or place. Please use one of the language codes from the IETF BCP 47 standard.</p>\n"
            },
            "branchCode": {
              "description": "A short textual code (also called \"store code\") that uniquely identifies a place of business. The code is typically assigned by the parentOrganization and used in structured URLs.",
              "type": "string",
              "example": "CA301-001",
              "descriptionAsHTML": "<p>A short textual code (also called &quot;store code&quot;) that uniquely identifies a place of business. The code is typically assigned by the parentOrganization and used in structured URLs.</p>\n"
            },
            "contactPoint": {
              "type": "array",
              "description": "department or role specific contact points, i.e. relocation.",
              "items": {
                "type": "object",
                "title": "ContactPoint",
                "description": "A contact point—for example, a Customer Complaints department.",
                "properties": {
                  "type": {
                    "description": "ContactPoint",
                    "type": "string",
                    "enum": [
                      "ContactPoint"
                    ]
                  },
                  "name": {
                    "type": "string",
                    "description": "a label for the contactPoint, i.e. 'Work', or 'Home'",
                    "example": "Work"
                  },
                  "telephone": {
                    "description": "a telephone number",
                    "type": "string",
                    "example": "1-364-127-9618 x20418"
                  },
                  "faxNumber": {
                    "description": "a fax number",
                    "type": "string",
                    "example": "834.320.1602"
                  },
                  "email": {
                    "description": "an email address for the item.",
                    "type": "string",
                    "format": "email",
                    "example": "user@example.com"
                  },
                  "url": {
                    "description": "primary URL for the item.",
                    "type": "string",
                    "format": "uri",
                    "example": "https://www.facebook.com/hallandoates"
                  }
                }
              },
              "example": [
                {
                  "type": "ContactPoint",
                  "name": "Relocation",
                  "telephone": "1-245-880-8222",
                  "faxNumber": "958-530-3473",
                  "email": "relocation@example.com"
                }
              ],
              "descriptionAsHTML": "<p>department or role specific contact points, i.e. relocation.</p>\n"
            },
            "logo": {
              "description": "a logo associated with the organization.",
              "type": "array",
              "x-range": [
                "ImageObject",
                "DigitalDocument"
              ],
              "items": {
                "type": "object",
                "allOf": [
                  {
                    "title": "DigitalDocument",
                    "type": "object",
                    "x-kind": "DigitalDocument",
                    "allOf": [
                      {
                        "type": "object",
                        "required": [
                          "type"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "Linked-Data (@type)"
                          },
                          "id": {
                            "type": "string",
                            "format": "uri",
                            "description": "Linked-Data uri"
                          },
                          "name": {
                            "type": "string",
                            "description": "the name of the item."
                          },
                          "url": {
                            "type": "string",
                            "format": "uri",
                            "description": "a public href that is clearly and uniquely associated with the item."
                          }
                        }
                      },
                      {
                        "description": "an electronic file.",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "DigitalDocument"
                            ]
                          },
                          "id": {
                            "example": "http://user.example.com/public/logo/fileName.zip"
                          },
                          "name": {
                            "type": "string",
                            "description": "the FileName",
                            "example": "fileName.zip"
                          },
                          "encodingFormat": {
                            "type": "string",
                            "description": "the MIME type",
                            "example": "application/zip"
                          },
                          "identifier": {
                            "type": "object",
                            "description": "namespaced identifier"
                          },
                          "about": {
                            "type": "string",
                            "format": "uri",
                            "description": "URI to the subject of the image or logo",
                            "example": "http://user.example.com/profile/card#me"
                          }
                        }
                      }
                    ]
                  },
                  {
                    "type": "object",
                    "description": "an associated logo"
                  }
                ]
              },
              "descriptionAsHTML": "<p>a logo associated with the organization.</p>\n"
            },
            "image": {
              "description": "an ImageObject or URI reference to an image of the entity on the web.",
              "x-range": [
                "ImageObject",
                "URI"
              ],
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "type": "object",
                    "title": "ImageObject",
                    "x-subclassOf": [
                      "MediaObject",
                      "CreativeWork",
                      "Thing"
                    ],
                    "allOf": [
                      {
                        "title": "MediaObject",
                        "description": "an image, video or document availble for download",
                        "x-subclass": [
                          "ImageObject",
                          "DigitalDocument"
                        ],
                        "allOf": [
                          {
                            "type": "object",
                            "required": [
                              "type"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "Linked-Data (@type)"
                              },
                              "id": {
                                "type": "string",
                                "format": "uri",
                                "description": "Linked-Data uri"
                              },
                              "name": {
                                "type": "string",
                                "description": "the name of the item."
                              },
                              "url": {
                                "type": "string",
                                "format": "uri",
                                "description": "a public href that is clearly and uniquely associated with the item."
                              }
                            }
                          },
                          {
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "MediaObject",
                                  "ImageObject",
                                  "DigitalDocument"
                                ]
                              },
                              "id": {
                                "description": "the URL to access the item.",
                                "example": "http://user.example.com/public/logo/fileName.zip"
                              },
                              "name": {
                                "type": "string",
                                "description": "the file name of the object.",
                                "example": "fileName.zip"
                              },
                              "encodingFormat": {
                                "type": "string",
                                "description": "MIME type",
                                "example": "application/zip"
                              },
                              "content": {
                                "type": "string",
                                "description": "base64 encoded content"
                              },
                              "about": {
                                "type": "string",
                                "format": "uri",
                                "description": "URI to the subject of the image or logo",
                                "example": "http://user.example.com/profile/card#me"
                              },
                              "url": {
                                "type": "string",
                                "format": "uri",
                                "description": "URL of the image content",
                                "example": "http://user.example.com/public/profile/image.jpg"
                              }
                            }
                          }
                        ]
                      },
                      {
                        "properties": {
                          "type": {
                            "example": "ImageObject"
                          },
                          "id": {
                            "example": "http://user.example.com/public/logo/image.jpg"
                          },
                          "name": {
                            "example": "image.jpg"
                          },
                          "encodingFormat": {
                            "example": "image/jpeg"
                          }
                        }
                      }
                    ]
                  },
                  {
                    "type": "string",
                    "format": "uri"
                  }
                ]
              },
              "descriptionAsHTML": "<p>an ImageObject or URI reference to an image of the entity on the web.</p>\n"
            },
            "parentOrganization": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uri"
              },
              "x-range": "RealEstateOrganization",
              "description": "Office broker or franchisor.",
              "descriptionAsHTML": "<p>Office broker or franchisor.</p>\n"
            },
            "address": {
              "description": "primary address",
              "x-range": "PostalAddress",
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "PostalAddress"
                  ]
                },
                "streetAddress": {
                  "type": "string",
                  "example": "1007 Mountain Gate Rd"
                },
                "postOfficeBoxNumber": {
                  "type": "string",
                  "example": "Box 1234"
                },
                "addressRegion": {
                  "type": "string",
                  "description": "State or Province.",
                  "example": "New Jersey",
                  "descriptionAsHTML": "<p>State or Province.</p>\n"
                },
                "addressLocality": {
                  "type": "string",
                  "description": "City, Township.",
                  "example": "Gotham City",
                  "descriptionAsHTML": "<p>City, Township.</p>\n"
                },
                "postalCode": {
                  "type": "string",
                  "description": "Zip/Post Code",
                  "example": "10010",
                  "descriptionAsHTML": "<p>Zip/Post Code</p>\n"
                },
                "addressCountry": {
                  "type": "string",
                  "description": "country",
                  "example": "usa",
                  "descriptionAsHTML": "<p>country</p>\n"
                }
              },
              "descriptionAsHTML": "<p>primary address</p>\n"
            },
            "subOrganization": {
              "description": "Agents and teams associated with the office.",
              "x-range": "RealEstateAgent",
              "type": "array",
              "items": {
                "type": "string",
                "format": "uri",
                "example": "http://org.example.com/profile/card#me"
              },
              "descriptionAsHTML": "<p>Agents and teams associated with the office.</p>\n"
            },
            "member": {
              "description": "describes members and roles for this organization.",
              "type": "array",
              "x-range": [
                "OrganizationRole",
                "URI"
              ],
              "items": {
                "anyOf": [
                  {
                    "type": "object",
                    "description": "Provides additional information in member/memberOf relationships.",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "a role played by the member in the memberOf group",
                        "enum": [
                          "OrganizationRole"
                        ],
                        "example": "OrganizationRole"
                      },
                      "roleName": {
                        "type": "string",
                        "example": "Owner"
                      },
                      "member": {
                        "description": "member object or id",
                        "x-range": [
                          "Person",
                          "Organization"
                        ],
                        "example": {
                          "type": "Person",
                          "email": "bob@example.com"
                        }
                      },
                      "memberOf": {
                        "description": "reference to the MarketingProgram"
                      },
                      "startDate": {
                        "type": "string",
                        "format": "date-time",
                        "description": "the date the member started the program"
                      },
                      "endDate": {
                        "type": "string",
                        "format": "date-time",
                        "description": "the date the program membership ended"
                      }
                    }
                  },
                  {
                    "type": "string",
                    "format": "uri"
                  }
                ]
              },
              "descriptionAsHTML": "<p>describes members and roles for this organization.</p>\n"
            },
            "memberOf": {
              "x-range": [
                "OrganizationRole",
                "MLSMembership"
              ],
              "description": "An Organization (or ProgramMembership) to which this Person or Organization belongs.",
              "type": "array",
              "items": {
                "x-title": "MLSMembership",
                "description": "a membership relationship",
                "type": "object",
                "allOf": [
                  {
                    "type": "object",
                    "description": "Provides additional information in member/memberOf relationships.",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "a role played by the member in the memberOf group",
                        "enum": [
                          "OrganizationRole"
                        ],
                        "example": "OrganizationRole"
                      },
                      "roleName": {
                        "type": "string",
                        "example": "Owner"
                      },
                      "member": {
                        "description": "member object or id",
                        "x-range": [
                          "Person",
                          "Organization"
                        ],
                        "example": {
                          "type": "Person",
                          "email": "bob@example.com"
                        }
                      },
                      "memberOf": {
                        "description": "reference to the MarketingProgram"
                      },
                      "startDate": {
                        "type": "string",
                        "format": "date-time",
                        "description": "the date the member started the program"
                      },
                      "endDate": {
                        "type": "string",
                        "format": "date-time",
                        "description": "the date the program membership ended"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "an MLS member relationship",
                        "enum": [
                          "MLSMembership"
                        ],
                        "example": "MLSMembership"
                      },
                      "roleName": {
                        "type": "string",
                        "example": "MLSMember"
                      },
                      "memberOf": {
                        "type": "object",
                        "x-range": "MultipleListingService",
                        "example": {
                          "type": "MultipleListingService",
                          "name": "GreatScottMLS"
                        }
                      },
                      "memberId": {
                        "type": "string",
                        "description": "the user's MLSID",
                        "example": "memberid123"
                      }
                    }
                  }
                ]
              },
              "descriptionAsHTML": "<p>An Organization (or ProgramMembership) to which this Person or Organization belongs.</p>\n"
            },
            "permit": {
              "description": "permits issued to the person or organization",
              "type": "array",
              "x-range": [
                "RealEstateLicense"
              ],
              "items": {
                "type": "object",
                "description": "Real estate licenses, authorizations issued by state governments, give agents and brokers the legal ability to represent a home seller or buyer in the process of buying or selling real estate.",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "RealEstateLicense"
                    ],
                    "description": "RealEstateLicense"
                  },
                  "name": {
                    "type": "string",
                    "description": "display value, i.e. 'CA-DRE# 02068375'",
                    "example": "CA-DRE# 02068375"
                  },
                  "issuedBy": {
                    "type": "object",
                    "description": "the issuing organization or service",
                    "x-range": "Organization",
                    "example": {
                      "type": "Organization",
                      "name": "California"
                    }
                  },
                  "issuedThrough": {
                    "x-range": "Service",
                    "description": "The service through with the permit was granted.",
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "example": "Service"
                      },
                      "name": {
                        "type": "string",
                        "example": "California Department of Real Estate"
                      }
                    }
                  },
                  "validIn": {
                    "x-range": [
                      "Place",
                      "AdministrativeArea"
                    ],
                    "description": "The geographic area where the permit is valid.",
                    "type": "object",
                    "example": {
                      "type": "AdministrativeArea",
                      "name": "New York"
                    }
                  },
                  "validFrom": {
                    "type": "string",
                    "format": "date-time",
                    "description": "start date"
                  },
                  "validUntil": {
                    "type": "string",
                    "format": "date-time",
                    "description": "end date"
                  }
                }
              },
              "descriptionAsHTML": "<p>permits issued to the person or organization</p>\n"
            }
          },
          "x-kind": "Organization",
          "x-hasSubclass": [
            "RealEstateOrganization",
            "RealEstateOffice",
            "RealEstateAgent"
          ],
          "x-subClassOf": [
            "https://schema.org/Organization"
          ],
          "description": "A real estate franchisor, broker or business.",
          "generatedExample": "{\n  \"type\": \"RealEstateOrganization\",\n  \"id\": \"http://example.com\",\n  \"name\": \"string\",\n  \"url\": \"http://example.com\",\n  \"telephone\": \"079.706.7065 x6341\",\n  \"faxNumber\": \"(873) 271-4802\",\n  \"email\": \"user@example.com\",\n  \"availableLanguage\": [\n    {\n      \"type\": \"Language\",\n      \"name\": \"English\",\n      \"additionalName\": \"en\"\n    }\n  ],\n  \"branchCode\": \"CA301-001\",\n  \"contactPoint\": [\n    {\n      \"type\": \"ContactPoint\",\n      \"name\": \"Relocation\",\n      \"telephone\": \"1-245-880-8222\",\n      \"faxNumber\": \"958-530-3473\",\n      \"email\": \"relocation@example.com\"\n    }\n  ],\n  \"logo\": [\n    {\n      \"type\": \"DigitalDocument\",\n      \"id\": \"http://user.example.com/public/logo/fileName.zip\",\n      \"name\": \"fileName.zip\",\n      \"url\": \"http://example.com\",\n      \"encodingFormat\": \"application/zip\",\n      \"identifier\": {},\n      \"about\": \"http://user.example.com/profile/card#me\"\n    }\n  ],\n  \"image\": [\n    {\n      \"type\": \"ImageObject\",\n      \"id\": \"http://user.example.com/public/logo/image.jpg\",\n      \"name\": \"image.jpg\",\n      \"url\": \"http://user.example.com/public/profile/image.jpg\",\n      \"encodingFormat\": \"image/jpeg\",\n      \"content\": \"string\",\n      \"about\": \"http://user.example.com/profile/card#me\"\n    }\n  ],\n  \"parentOrganization\": [\n    \"http://example.com\"\n  ],\n  \"address\": {\n    \"type\": \"PostalAddress\",\n    \"streetAddress\": \"1007 Mountain Gate Rd\",\n    \"postOfficeBoxNumber\": \"Box 1234\",\n    \"addressRegion\": \"New Jersey\",\n    \"addressLocality\": \"Gotham City\",\n    \"postalCode\": \"10010\",\n    \"addressCountry\": \"usa\"\n  },\n  \"subOrganization\": [\n    \"http://org.example.com/profile/card#me\"\n  ],\n  \"member\": [\n    {\n      \"type\": \"OrganizationRole\",\n      \"roleName\": \"Owner\",\n      \"member\": {\n        \"type\": \"Person\",\n        \"email\": \"bob@example.com\"\n      },\n      \"memberOf\": null,\n      \"startDate\": \"2019-05-21T01:05:11Z\",\n      \"endDate\": \"2019-05-21T01:05:11Z\"\n    }\n  ],\n  \"memberOf\": [\n    {\n      \"type\": \"MLSMembership\",\n      \"roleName\": \"MLSMember\",\n      \"member\": {\n        \"type\": \"Person\",\n        \"email\": \"bob@example.com\"\n      },\n      \"memberOf\": {\n        \"type\": \"MultipleListingService\",\n        \"name\": \"GreatScottMLS\"\n      },\n      \"startDate\": \"2019-05-21T01:05:11Z\",\n      \"endDate\": \"2019-05-21T01:05:11Z\",\n      \"memberId\": \"memberid123\"\n    }\n  ],\n  \"permit\": [\n    {\n      \"type\": \"RealEstateLicense\",\n      \"name\": \"CA-DRE# 02068375\",\n      \"issuedBy\": {\n        \"type\": \"Organization\",\n        \"name\": \"California\"\n      },\n      \"issuedThrough\": {\n        \"type\": \"Service\",\n        \"name\": \"California Department of Real Estate\"\n      },\n      \"validIn\": {\n        \"type\": \"AdministrativeArea\",\n        \"name\": \"New York\"\n      },\n      \"validFrom\": \"2019-05-21T01:05:11Z\",\n      \"validUntil\": \"2019-05-21T01:05:11Z\"\n    }\n  ]\n}"
        },
        "RealEstateOrganization": {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "description": "RealEstateOrganzation",
              "enum": [
                "RealEstateOrganization",
                "RealEstateOffice",
                "RealEstateAgent"
              ],
              "example": "RealEstateOrganization",
              "descriptionAsHTML": "<p>RealEstateOrganzation</p>\n"
            },
            "id": {
              "type": "string",
              "format": "uri",
              "description": "Linked-Data uri",
              "descriptionAsHTML": "<p>Linked-Data uri</p>\n"
            },
            "name": {
              "type": "string",
              "description": "Name or DBA.",
              "descriptionAsHTML": "<p>Name or DBA.</p>\n"
            },
            "url": {
              "type": "string",
              "format": "uri",
              "description": "primary website/url for the entity.",
              "descriptionAsHTML": "<p>primary website/url for the entity.</p>\n"
            },
            "telephone": {
              "type": "string",
              "description": "Primary phone number.",
              "example": "079.706.7065 x6341",
              "descriptionAsHTML": "<p>Primary phone number.</p>\n"
            },
            "faxNumber": {
              "type": "string",
              "description": "Primary fax number.",
              "example": "(873) 271-4802",
              "descriptionAsHTML": "<p>Primary fax number.</p>\n"
            },
            "email": {
              "type": "string",
              "format": "email",
              "description": "Primary email address.",
              "example": "user@example.com",
              "descriptionAsHTML": "<p>Primary email address.</p>\n"
            },
            "availableLanguage": {
              "description": "A language someone may use with or at the item, service or place. Please use one of the language codes from the IETF BCP 47 standard.",
              "type": "array",
              "x-range": "Language",
              "items": {
                "type": "object",
                "description": "Natural languages such as Spanish, Tamil, Hindi, English, etc. Formal language code tags expressed in BCP 47 can be used via the alternateName property",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "Lanuguage",
                    "enum": [
                      "Language"
                    ]
                  },
                  "name": {
                    "description": "the name of the language",
                    "type": "string",
                    "example": "English"
                  },
                  "additionalName": {
                    "type": "string",
                    "example": "en"
                  }
                }
              },
              "descriptionAsHTML": "<p>A language someone may use with or at the item, service or place. Please use one of the language codes from the IETF BCP 47 standard.</p>\n"
            },
            "branchCode": {
              "description": "A short textual code (also called \"store code\") that uniquely identifies a place of business. The code is typically assigned by the parentOrganization and used in structured URLs.",
              "type": "string",
              "example": "CA301-001",
              "descriptionAsHTML": "<p>A short textual code (also called &quot;store code&quot;) that uniquely identifies a place of business. The code is typically assigned by the parentOrganization and used in structured URLs.</p>\n"
            },
            "contactPoint": {
              "type": "array",
              "description": "Additional contact points. Can be organized by role, location, etc...",
              "items": {
                "type": "object",
                "title": "ContactPoint",
                "description": "A contact point—for example, a Customer Complaints department.",
                "properties": {
                  "type": {
                    "description": "ContactPoint",
                    "type": "string",
                    "enum": [
                      "ContactPoint"
                    ]
                  },
                  "name": {
                    "type": "string",
                    "description": "a label for the contactPoint, i.e. 'Work', or 'Home'",
                    "example": "Work"
                  },
                  "telephone": {
                    "description": "a telephone number",
                    "type": "string",
                    "example": "1-364-127-9618 x20418"
                  },
                  "faxNumber": {
                    "description": "a fax number",
                    "type": "string",
                    "example": "834.320.1602"
                  },
                  "email": {
                    "description": "an email address for the item.",
                    "type": "string",
                    "format": "email",
                    "example": "user@example.com"
                  },
                  "url": {
                    "description": "primary URL for the item.",
                    "type": "string",
                    "format": "uri",
                    "example": "https://www.facebook.com/hallandoates"
                  }
                }
              },
              "descriptionAsHTML": "<p>Additional contact points. Can be organized by role, location, etc...</p>\n"
            },
            "logo": {
              "description": "a logo associated with the organization.",
              "type": "array",
              "x-range": [
                "ImageObject",
                "DigitalDocument"
              ],
              "items": {
                "type": "object",
                "allOf": [
                  {
                    "title": "DigitalDocument",
                    "type": "object",
                    "x-kind": "DigitalDocument",
                    "allOf": [
                      {
                        "type": "object",
                        "required": [
                          "type"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "Linked-Data (@type)"
                          },
                          "id": {
                            "type": "string",
                            "format": "uri",
                            "description": "Linked-Data uri"
                          },
                          "name": {
                            "type": "string",
                            "description": "the name of the item."
                          },
                          "url": {
                            "type": "string",
                            "format": "uri",
                            "description": "a public href that is clearly and uniquely associated with the item."
                          }
                        }
                      },
                      {
                        "description": "an electronic file.",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "DigitalDocument"
                            ]
                          },
                          "id": {
                            "example": "http://user.example.com/public/logo/fileName.zip"
                          },
                          "name": {
                            "type": "string",
                            "description": "the FileName",
                            "example": "fileName.zip"
                          },
                          "encodingFormat": {
                            "type": "string",
                            "description": "the MIME type",
                            "example": "application/zip"
                          },
                          "identifier": {
                            "type": "object",
                            "description": "namespaced identifier"
                          },
                          "about": {
                            "type": "string",
                            "format": "uri",
                            "description": "URI to the subject of the image or logo",
                            "example": "http://user.example.com/profile/card#me"
                          }
                        }
                      }
                    ]
                  },
                  {
                    "type": "object",
                    "description": "an associated logo"
                  }
                ]
              },
              "descriptionAsHTML": "<p>a logo associated with the organization.</p>\n"
            },
            "image": {
              "description": "an ImageObject or URI reference to an image of the entity on the web.",
              "x-range": [
                "ImageObject",
                "URI"
              ],
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "type": "object",
                    "title": "ImageObject",
                    "x-subclassOf": [
                      "MediaObject",
                      "CreativeWork",
                      "Thing"
                    ],
                    "allOf": [
                      {
                        "title": "MediaObject",
                        "description": "an image, video or document availble for download",
                        "x-subclass": [
                          "ImageObject",
                          "DigitalDocument"
                        ],
                        "allOf": [
                          {
                            "type": "object",
                            "required": [
                              "type"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "Linked-Data (@type)"
                              },
                              "id": {
                                "type": "string",
                                "format": "uri",
                                "description": "Linked-Data uri"
                              },
                              "name": {
                                "type": "string",
                                "description": "the name of the item."
                              },
                              "url": {
                                "type": "string",
                                "format": "uri",
                                "description": "a public href that is clearly and uniquely associated with the item."
                              }
                            }
                          },
                          {
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "MediaObject",
                                  "ImageObject",
                                  "DigitalDocument"
                                ]
                              },
                              "id": {
                                "description": "the URL to access the item.",
                                "example": "http://user.example.com/public/logo/fileName.zip"
                              },
                              "name": {
                                "type": "string",
                                "description": "the file name of the object.",
                                "example": "fileName.zip"
                              },
                              "encodingFormat": {
                                "type": "string",
                                "description": "MIME type",
                                "example": "application/zip"
                              },
                              "content": {
                                "type": "string",
                                "description": "base64 encoded content"
                              },
                              "about": {
                                "type": "string",
                                "format": "uri",
                                "description": "URI to the subject of the image or logo",
                                "example": "http://user.example.com/profile/card#me"
                              },
                              "url": {
                                "type": "string",
                                "format": "uri",
                                "description": "URL of the image content",
                                "example": "http://user.example.com/public/profile/image.jpg"
                              }
                            }
                          }
                        ]
                      },
                      {
                        "properties": {
                          "type": {
                            "example": "ImageObject"
                          },
                          "id": {
                            "example": "http://user.example.com/public/logo/image.jpg"
                          },
                          "name": {
                            "example": "image.jpg"
                          },
                          "encodingFormat": {
                            "example": "image/jpeg"
                          }
                        }
                      }
                    ]
                  },
                  {
                    "type": "string",
                    "format": "uri"
                  }
                ]
              },
              "descriptionAsHTML": "<p>an ImageObject or URI reference to an image of the entity on the web.</p>\n"
            },
            "parentOrganization": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uri"
              },
              "x-range": "RealEstateOrganization",
              "description": "A franchisor or affiliate network of which this organization plays a membership role.",
              "descriptionAsHTML": "<p>A franchisor or affiliate network of which this organization plays a membership role.</p>\n"
            },
            "address": {
              "description": "primary address",
              "x-range": "PostalAddress",
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "PostalAddress"
                  ]
                },
                "streetAddress": {
                  "type": "string",
                  "example": "1007 Mountain Gate Rd"
                },
                "postOfficeBoxNumber": {
                  "type": "string",
                  "example": "Box 1234"
                },
                "addressRegion": {
                  "type": "string",
                  "description": "State or Province.",
                  "example": "New Jersey",
                  "descriptionAsHTML": "<p>State or Province.</p>\n"
                },
                "addressLocality": {
                  "type": "string",
                  "description": "City, Township.",
                  "example": "Gotham City",
                  "descriptionAsHTML": "<p>City, Township.</p>\n"
                },
                "postalCode": {
                  "type": "string",
                  "description": "Zip/Post Code",
                  "example": "10010",
                  "descriptionAsHTML": "<p>Zip/Post Code</p>\n"
                },
                "addressCountry": {
                  "type": "string",
                  "description": "country",
                  "example": "usa",
                  "descriptionAsHTML": "<p>country</p>\n"
                }
              },
              "descriptionAsHTML": "<p>primary address</p>\n"
            },
            "subOrganization": {
              "description": "an organization member",
              "x-range": [
                "RealEstateOrganization"
              ],
              "type": "array",
              "items": {
                "type": "string",
                "format": "uri",
                "example": "http://org.example.com/profile/card#me"
              },
              "descriptionAsHTML": "<p>an organization member</p>\n"
            },
            "member": {
              "description": "describes members and roles for this organization.",
              "type": "array",
              "x-range": [
                "OrganizationRole",
                "URI"
              ],
              "items": {
                "anyOf": [
                  {
                    "type": "object",
                    "description": "Provides additional information in member/memberOf relationships.",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "a role played by the member in the memberOf group",
                        "enum": [
                          "OrganizationRole"
                        ],
                        "example": "OrganizationRole"
                      },
                      "roleName": {
                        "type": "string",
                        "example": "Owner"
                      },
                      "member": {
                        "description": "member object or id",
                        "x-range": [
                          "Person",
                          "Organization"
                        ],
                        "example": {
                          "type": "Person",
                          "email": "bob@example.com"
                        }
                      },
                      "memberOf": {
                        "description": "reference to the MarketingProgram"
                      },
                      "startDate": {
                        "type": "string",
                        "format": "date-time",
                        "description": "the date the member started the program"
                      },
                      "endDate": {
                        "type": "string",
                        "format": "date-time",
                        "description": "the date the program membership ended"
                      }
                    }
                  },
                  {
                    "type": "string",
                    "format": "uri"
                  }
                ]
              },
              "descriptionAsHTML": "<p>describes members and roles for this organization.</p>\n"
            },
            "memberOf": {
              "x-range": [
                "OrganizationRole",
                "MLSMembership"
              ],
              "description": "An Organization (or ProgramMembership) to which this Person or Organization belongs.",
              "type": "array",
              "items": {
                "x-title": "MLSMembership",
                "description": "a membership relationship",
                "type": "object",
                "allOf": [
                  {
                    "type": "object",
                    "description": "Provides additional information in member/memberOf relationships.",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "a role played by the member in the memberOf group",
                        "enum": [
                          "OrganizationRole"
                        ],
                        "example": "OrganizationRole"
                      },
                      "roleName": {
                        "type": "string",
                        "example": "Owner"
                      },
                      "member": {
                        "description": "member object or id",
                        "x-range": [
                          "Person",
                          "Organization"
                        ],
                        "example": {
                          "type": "Person",
                          "email": "bob@example.com"
                        }
                      },
                      "memberOf": {
                        "description": "reference to the MarketingProgram"
                      },
                      "startDate": {
                        "type": "string",
                        "format": "date-time",
                        "description": "the date the member started the program"
                      },
                      "endDate": {
                        "type": "string",
                        "format": "date-time",
                        "description": "the date the program membership ended"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "an MLS member relationship",
                        "enum": [
                          "MLSMembership"
                        ],
                        "example": "MLSMembership"
                      },
                      "roleName": {
                        "type": "string",
                        "example": "MLSMember"
                      },
                      "memberOf": {
                        "type": "object",
                        "x-range": "MultipleListingService",
                        "example": {
                          "type": "MultipleListingService",
                          "name": "GreatScottMLS"
                        }
                      },
                      "memberId": {
                        "type": "string",
                        "description": "the user's MLSID",
                        "example": "memberid123"
                      }
                    }
                  }
                ]
              },
              "descriptionAsHTML": "<p>An Organization (or ProgramMembership) to which this Person or Organization belongs.</p>\n"
            },
            "permit": {
              "description": "permits issued to the person or organization",
              "type": "array",
              "x-range": [
                "RealEstateLicense"
              ],
              "items": {
                "type": "object",
                "description": "Real estate licenses, authorizations issued by state governments, give agents and brokers the legal ability to represent a home seller or buyer in the process of buying or selling real estate.",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "RealEstateLicense"
                    ],
                    "description": "RealEstateLicense"
                  },
                  "name": {
                    "type": "string",
                    "description": "display value, i.e. 'CA-DRE# 02068375'",
                    "example": "CA-DRE# 02068375"
                  },
                  "issuedBy": {
                    "type": "object",
                    "description": "the issuing organization or service",
                    "x-range": "Organization",
                    "example": {
                      "type": "Organization",
                      "name": "California"
                    }
                  },
                  "issuedThrough": {
                    "x-range": "Service",
                    "description": "The service through with the permit was granted.",
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "example": "Service"
                      },
                      "name": {
                        "type": "string",
                        "example": "California Department of Real Estate"
                      }
                    }
                  },
                  "validIn": {
                    "x-range": [
                      "Place",
                      "AdministrativeArea"
                    ],
                    "description": "The geographic area where the permit is valid.",
                    "type": "object",
                    "example": {
                      "type": "AdministrativeArea",
                      "name": "New York"
                    }
                  },
                  "validFrom": {
                    "type": "string",
                    "format": "date-time",
                    "description": "start date"
                  },
                  "validUntil": {
                    "type": "string",
                    "format": "date-time",
                    "description": "end date"
                  }
                }
              },
              "descriptionAsHTML": "<p>permits issued to the person or organization</p>\n"
            }
          },
          "x-kind": "Organization",
          "x-hasSubclass": [
            "RealEstateOrganization",
            "RealEstateOffice",
            "RealEstateAgent"
          ],
          "x-subClassOf": [
            "https://schema.org/Organization"
          ],
          "description": "A real estate franchisor, broker or business.",
          "generatedExample": "{\n  \"type\": \"RealEstateOrganization\",\n  \"id\": \"http://example.com\",\n  \"name\": \"string\",\n  \"url\": \"http://example.com\",\n  \"telephone\": \"079.706.7065 x6341\",\n  \"faxNumber\": \"(873) 271-4802\",\n  \"email\": \"user@example.com\",\n  \"availableLanguage\": [\n    {\n      \"type\": \"Language\",\n      \"name\": \"English\",\n      \"additionalName\": \"en\"\n    }\n  ],\n  \"branchCode\": \"CA301-001\",\n  \"contactPoint\": [\n    {\n      \"type\": \"ContactPoint\",\n      \"name\": \"Work\",\n      \"telephone\": \"1-364-127-9618 x20418\",\n      \"faxNumber\": \"834.320.1602\",\n      \"email\": \"user@example.com\",\n      \"url\": \"https://www.facebook.com/hallandoates\"\n    }\n  ],\n  \"logo\": [\n    {\n      \"type\": \"DigitalDocument\",\n      \"id\": \"http://user.example.com/public/logo/fileName.zip\",\n      \"name\": \"fileName.zip\",\n      \"url\": \"http://example.com\",\n      \"encodingFormat\": \"application/zip\",\n      \"identifier\": {},\n      \"about\": \"http://user.example.com/profile/card#me\"\n    }\n  ],\n  \"image\": [\n    {\n      \"type\": \"ImageObject\",\n      \"id\": \"http://user.example.com/public/logo/image.jpg\",\n      \"name\": \"image.jpg\",\n      \"url\": \"http://user.example.com/public/profile/image.jpg\",\n      \"encodingFormat\": \"image/jpeg\",\n      \"content\": \"string\",\n      \"about\": \"http://user.example.com/profile/card#me\"\n    }\n  ],\n  \"parentOrganization\": [\n    \"http://example.com\"\n  ],\n  \"address\": {\n    \"type\": \"PostalAddress\",\n    \"streetAddress\": \"1007 Mountain Gate Rd\",\n    \"postOfficeBoxNumber\": \"Box 1234\",\n    \"addressRegion\": \"New Jersey\",\n    \"addressLocality\": \"Gotham City\",\n    \"postalCode\": \"10010\",\n    \"addressCountry\": \"usa\"\n  },\n  \"subOrganization\": [\n    \"http://org.example.com/profile/card#me\"\n  ],\n  \"member\": [\n    {\n      \"type\": \"OrganizationRole\",\n      \"roleName\": \"Owner\",\n      \"member\": {\n        \"type\": \"Person\",\n        \"email\": \"bob@example.com\"\n      },\n      \"memberOf\": null,\n      \"startDate\": \"2019-05-21T01:05:11Z\",\n      \"endDate\": \"2019-05-21T01:05:11Z\"\n    }\n  ],\n  \"memberOf\": [\n    {\n      \"type\": \"MLSMembership\",\n      \"roleName\": \"MLSMember\",\n      \"member\": {\n        \"type\": \"Person\",\n        \"email\": \"bob@example.com\"\n      },\n      \"memberOf\": {\n        \"type\": \"MultipleListingService\",\n        \"name\": \"GreatScottMLS\"\n      },\n      \"startDate\": \"2019-05-21T01:05:11Z\",\n      \"endDate\": \"2019-05-21T01:05:11Z\",\n      \"memberId\": \"memberid123\"\n    }\n  ],\n  \"permit\": [\n    {\n      \"type\": \"RealEstateLicense\",\n      \"name\": \"CA-DRE# 02068375\",\n      \"issuedBy\": {\n        \"type\": \"Organization\",\n        \"name\": \"California\"\n      },\n      \"issuedThrough\": {\n        \"type\": \"Service\",\n        \"name\": \"California Department of Real Estate\"\n      },\n      \"validIn\": {\n        \"type\": \"AdministrativeArea\",\n        \"name\": \"New York\"\n      },\n      \"validFrom\": \"2019-05-21T01:05:11Z\",\n      \"validUntil\": \"2019-05-21T01:05:11Z\"\n    }\n  ]\n}"
        },
        "RealEstateWebsite": {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "description": "Linked-Data (@type)",
              "enum": [
                "RealEstateWebsite"
              ],
              "descriptionAsHTML": "<p>Linked-Data (@type)</p>\n"
            },
            "id": {
              "type": "string",
              "format": "uri",
              "description": "Linked-Data uri",
              "descriptionAsHTML": "<p>Linked-Data uri</p>\n"
            },
            "name": {
              "type": "string",
              "description": "the name of the item.",
              "descriptionAsHTML": "<p>the name of the item.</p>\n"
            },
            "url": {
              "type": "string",
              "format": "uri",
              "description": "a public href that is clearly and uniquely associated with the item.",
              "example": "https://www.example.com",
              "descriptionAsHTML": "<p>a public href that is clearly and uniquely associated with the item.</p>\n"
            }
          },
          "generatedExample": "{\n  \"type\": \"RealEstateWebsite\",\n  \"id\": \"http://example.com\",\n  \"name\": \"string\",\n  \"url\": \"https://www.example.com\"\n}"
        },
        "Service": {
          "title": "Service",
          "description": "A service provided by an organization.",
          "x-kind": "Service",
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "Service"
              ]
            },
            "name": {
              "type": "string",
              "description": "name of the service.",
              "descriptionAsHTML": "<p>name of the service.</p>\n"
            },
            "areaServed": {
              "type": "object",
              "required": [
                "type"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "description": "Linked-Data (@type)",
                  "descriptionAsHTML": "<p>Linked-Data (@type)</p>\n"
                },
                "id": {
                  "type": "string",
                  "format": "uri",
                  "description": "Linked-Data uri",
                  "descriptionAsHTML": "<p>Linked-Data uri</p>\n"
                },
                "name": {
                  "type": "string",
                  "description": "the name of the item.",
                  "descriptionAsHTML": "<p>the name of the item.</p>\n"
                },
                "url": {
                  "type": "string",
                  "format": "uri",
                  "description": "a public href that is clearly and uniquely associated with the item.",
                  "descriptionAsHTML": "<p>a public href that is clearly and uniquely associated with the item.</p>\n"
                },
                "address": {
                  "type": "object",
                  "x-range": "PostalAddress",
                  "description": "PostalAddress",
                  "descriptionAsHTML": "<p>PostalAddress</p>\n"
                },
                "aggregateRating": {
                  "type": "object",
                  "description": "AggregateRating -- The overall rating, based on a collection of reviews or ratings, of the item.",
                  "descriptionAsHTML": "<p>AggregateRating -- The overall rating, based on a collection of reviews or ratings, of the item.</p>\n"
                },
                "branchCode": {
                  "type": "string",
                  "description": "A short textual code (also called \"store code\") that uniquely identifies a place of business. The code is typically assigned by the parentOrganization and used in structured URLs.",
                  "descriptionAsHTML": "<p>A short textual code (also called &quot;store code&quot;) that uniquely identifies a place of business. The code is typically assigned by the parentOrganization and used in structured URLs.</p>\n"
                },
                "containedInPlace": {
                  "type": "array",
                  "x-kind": "Place",
                  "items": {
                    "type": "string",
                    "format": "uri"
                  },
                  "description": "Place",
                  "descriptionAsHTML": "<p>Place</p>\n"
                },
                "containsPlace": {
                  "type": "array",
                  "x-kind": "Place",
                  "items": {
                    "type": "string",
                    "format": "uri"
                  },
                  "description": "Place",
                  "descriptionAsHTML": "<p>Place</p>\n"
                },
                "geo": {
                  "description": "The geo coordinates of the place.",
                  "oneOf": [
                    {
                      "type": "object",
                      "description": "GeoCoordinates"
                    },
                    {
                      "type": "object",
                      "description": "GeoShape"
                    }
                  ],
                  "descriptionAsHTML": "<p>The geo coordinates of the place.</p>\n"
                },
                "hasMap": {
                  "description": "A URL to a map of the place. Supersedes map, maps.",
                  "oneOf": [
                    {
                      "type": "string",
                      "format": "uri"
                    },
                    {
                      "type": "object",
                      "x-kind": "Map",
                      "description": "Map"
                    }
                  ],
                  "descriptionAsHTML": "<p>A URL to a map of the place. Supersedes map, maps.</p>\n"
                },
                "openingHoursSpecification": {
                  "type": "object",
                  "description": "OpeningHoursSpecification",
                  "descriptionAsHTML": "<p>OpeningHoursSpecification</p>\n"
                },
                "photo": {
                  "description": "A photograph of this place. Supersedes photos.",
                  "type": "array",
                  "x-range": [
                    "ImageObject"
                  ],
                  "items": {
                    "anyOf": [
                      {
                        "type": "string",
                        "format": "uri"
                      },
                      {
                        "type": "object"
                      }
                    ]
                  },
                  "descriptionAsHTML": "<p>A photograph of this place. Supersedes photos.</p>\n"
                },
                "review": {
                  "description": "A review of the item. Supersedes reviews.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Review"
                  },
                  "descriptionAsHTML": "<p>A review of the item. Supersedes reviews.</p>\n"
                },
                "specialOpeningHoursSpecification": {
                  "description": "The special opening hours of a certain place. Use this to explicitly override general opening hours brought in scope by openingHoursSpecification or openingHours.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "OpeningHoursSpecification"
                  },
                  "descriptionAsHTML": "<p>The special opening hours of a certain place. Use this to explicitly override general opening hours brought in scope by openingHoursSpecification or openingHours.</p>\n"
                }
              }
            }
          },
          "generatedExample": "{\n  \"type\": \"Service\",\n  \"name\": \"string\",\n  \"areaServed\": {\n    \"type\": \"string\",\n    \"id\": \"http://example.com\",\n    \"name\": \"string\",\n    \"url\": \"http://example.com\",\n    \"address\": {},\n    \"aggregateRating\": {},\n    \"branchCode\": \"string\",\n    \"containedInPlace\": [\n      \"http://example.com\"\n    ],\n    \"containsPlace\": [\n      \"http://example.com\"\n    ],\n    \"geo\": {},\n    \"hasMap\": \"http://example.com\",\n    \"openingHoursSpecification\": {},\n    \"photo\": [\n      \"http://example.com\"\n    ],\n    \"review\": [\n      {}\n    ],\n    \"specialOpeningHoursSpecification\": [\n      {}\n    ]\n  }\n}"
        },
        "Thing": {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "description": "Linked-Data (@type)",
              "descriptionAsHTML": "<p>Linked-Data (@type)</p>\n"
            },
            "id": {
              "type": "string",
              "format": "uri",
              "description": "Linked-Data uri",
              "descriptionAsHTML": "<p>Linked-Data uri</p>\n"
            },
            "name": {
              "type": "string",
              "description": "the name of the item.",
              "descriptionAsHTML": "<p>the name of the item.</p>\n"
            },
            "url": {
              "type": "string",
              "format": "uri",
              "description": "a public href that is clearly and uniquely associated with the item.",
              "descriptionAsHTML": "<p>a public href that is clearly and uniquely associated with the item.</p>\n"
            }
          },
          "generatedExample": "{\n  \"type\": \"string\",\n  \"id\": \"http://example.com\",\n  \"name\": \"string\",\n  \"url\": \"http://example.com\"\n}"
        },
        "AcceptAction": {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "description": "the action type",
              "type": "string",
              "enum": [
                "AcceptAction"
              ],
              "descriptionAsHTML": "<p>the action type</p>\n"
            },
            "agent": {
              "description": "the direct performer of the action",
              "example": "https://{user}.example.com/profile/card#me",
              "descriptionAsHTML": "<p>the direct performer of the action</p>\n"
            },
            "object": {
              "description": "The object upon which the action is carried out",
              "type": "object",
              "example": {
                "type": "Lead",
                "name": "Lianna Stark"
              },
              "descriptionAsHTML": "<p>The object upon which the action is carried out</p>\n"
            },
            "instrument": {
              "description": "thing used by the agent to perform the action, i.e. an application or website that generated the message.",
              "example": "https://{app}.example.com/profile/card#me",
              "descriptionAsHTML": "<p>thing used by the agent to perform the action, i.e. an application or website that generated the message.</p>\n"
            },
            "actionStatus": {
              "type": "string",
              "description": "disposition of the Action when the event was created",
              "enum": [
                "CompletedActionStatus",
                "FailedActionStatus",
                "ActiveActionStatus"
              ],
              "descriptionAsHTML": "<p>disposition of the Action when the event was created</p>\n"
            }
          },
          "externalDocs": {
            "description": "schema.org/Action",
            "url": "https://schema.org/Action"
          },
          "description": "The act of committing to/adopting an object.",
          "generatedExample": "{\n  \"type\": \"AcceptAction\",\n  \"agent\": \"https://{user}.example.com/profile/card#me\",\n  \"object\": {\n    \"type\": \"Lead\",\n    \"name\": \"Lianna Stark\"\n  },\n  \"instrument\": \"https://{app}.example.com/profile/card#me\",\n  \"actionStatus\": \"CompletedActionStatus\"\n}"
        },
        "Action": {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "description": "the action type",
              "type": "string",
              "descriptionAsHTML": "<p>the action type</p>\n"
            },
            "agent": {
              "description": "the direct performer of the action",
              "descriptionAsHTML": "<p>the direct performer of the action</p>\n"
            },
            "object": {
              "description": "The object upon which the action is carried out",
              "type": "object",
              "descriptionAsHTML": "<p>The object upon which the action is carried out</p>\n"
            },
            "instrument": {
              "description": "thing used by the agent to perform the action, i.e. an application or website that generated the message.",
              "example": "https://{app}.example.com/profile/card#me",
              "descriptionAsHTML": "<p>thing used by the agent to perform the action, i.e. an application or website that generated the message.</p>\n"
            },
            "actionStatus": {
              "type": "string",
              "description": "disposition of the Action when the event was created",
              "enum": [
                "CompletedActionStatus",
                "FailedActionStatus",
                "ActiveActionStatus"
              ],
              "descriptionAsHTML": "<p>disposition of the Action when the event was created</p>\n"
            }
          },
          "externalDocs": {
            "description": "schema.org/Action",
            "url": "https://schema.org/Action"
          },
          "generatedExample": "{\n  \"type\": \"string\",\n  \"agent\": null,\n  \"object\": {},\n  \"instrument\": \"https://{app}.example.com/profile/card#me\",\n  \"actionStatus\": \"CompletedActionStatus\"\n}"
        },
        "AddAction": {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "description": "AddAction",
              "type": "string",
              "enum": [
                "AddAction"
              ],
              "example": "AddAction",
              "descriptionAsHTML": "<p>AddAction</p>\n"
            },
            "agent": {
              "description": "the direct performer of the action",
              "example": "http://{user}.example.com/profile/card#me",
              "descriptionAsHTML": "<p>the direct performer of the action</p>\n"
            },
            "object": {
              "description": "the added item",
              "type": "object",
              "example": {
                "type": "Contact",
                "name": "Adam Addme"
              },
              "descriptionAsHTML": "<p>the added item</p>\n"
            },
            "instrument": {
              "description": "thing used by the agent to perform the action, i.e. an application or website that generated the message.",
              "example": "http://{app}.example.com/profile/card#me",
              "descriptionAsHTML": "<p>thing used by the agent to perform the action, i.e. an application or website that generated the message.</p>\n"
            },
            "actionStatus": {
              "type": "string",
              "description": "disposition of the Action when the event was created",
              "enum": [
                "CompletedActionStatus",
                "FailedActionStatus",
                "ActiveActionStatus"
              ],
              "descriptionAsHTML": "<p>disposition of the Action when the event was created</p>\n"
            },
            "targetCollection": {
              "description": "the collection receiving the added object",
              "example": {
                "type": "Collection",
                "id": "https://{user}.example.com/data/contact/"
              },
              "descriptionAsHTML": "<p>the collection receiving the added object</p>\n"
            }
          },
          "externalDocs": {
            "description": "schema.org/Action",
            "url": "https://schema.org/Action"
          },
          "generatedExample": "{\n  \"type\": \"AddAction\",\n  \"agent\": \"http://{user}.example.com/profile/card#me\",\n  \"object\": {\n    \"type\": \"Contact\",\n    \"name\": \"Adam Addme\"\n  },\n  \"instrument\": \"http://{app}.example.com/profile/card#me\",\n  \"actionStatus\": \"CompletedActionStatus\",\n  \"targetCollection\": {\n    \"type\": \"Collection\",\n    \"id\": \"https://{user}.example.com/data/contact/\"\n  }\n}"
        },
        "OfferAction": {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "description": "OfferAction",
              "type": "string",
              "enum": [
                "OfferAction"
              ],
              "descriptionAsHTML": "<p>OfferAction</p>\n"
            },
            "agent": {
              "description": "the entity making the offer",
              "type": "object",
              "x-range": [
                "Person",
                "Organization"
              ],
              "descriptionAsHTML": "<p>the entity making the offer</p>\n"
            },
            "object": {
              "description": "an agent makes an offer to buy the object",
              "type": "object",
              "required": [
                "type"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "description": "OfferAction",
                  "enum": [
                    "OfferAction"
                  ],
                  "descriptionAsHTML": "<p>OfferAction</p>\n"
                },
                "id": {
                  "type": "string",
                  "format": "uri",
                  "description": "Linked-Data uri",
                  "descriptionAsHTML": "<p>Linked-Data uri</p>\n"
                },
                "name": {
                  "type": "string",
                  "description": "the name of the item.",
                  "descriptionAsHTML": "<p>the name of the item.</p>\n"
                },
                "url": {
                  "type": "string",
                  "format": "uri",
                  "description": "a public href that is clearly and uniquely associated with the item.",
                  "descriptionAsHTML": "<p>a public href that is clearly and uniquely associated with the item.</p>\n"
                },
                "object": {
                  "description": "reference to the item on which the offer is being made",
                  "example": {
                    "type": "RealEstateListing",
                    "id": "http://example.com/12345"
                  },
                  "descriptionAsHTML": "<p>reference to the item on which the offer is being made</p>\n"
                },
                "recipient": {
                  "type": "object",
                  "x-range": [
                    "Person",
                    "Organization"
                  ],
                  "description": "the offer recipient",
                  "example": {
                    "id": "http://user.example.com/profile/card#me"
                  },
                  "descriptionAsHTML": "<p>the offer recipient</p>\n"
                },
                "offerPrice": {
                  "title": "PriceSpecification",
                  "type": "object",
                  "x-range": "PriceSpecification",
                  "description": "a price offered for transfer of ownership of an item",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "PriceSpecification",
                      "enum": [
                        "PriceSpecification"
                      ],
                      "descriptionAsHTML": "<p>PriceSpecification</p>\n"
                    },
                    "minPrice": {
                      "type": "number",
                      "description": "the lowest value if the price is a range",
                      "descriptionAsHTML": "<p>the lowest value if the price is a range</p>\n"
                    },
                    "maxPrice": {
                      "type": "number",
                      "description": "the high price offered if the price is a range",
                      "descriptionAsHTML": "<p>the high price offered if the price is a range</p>\n"
                    },
                    "price": {
                      "type": "number",
                      "description": "the price",
                      "descriptionAsHTML": "<p>the price</p>\n"
                    },
                    "priceCurrency": {
                      "type": "string",
                      "description": "use ISO4217",
                      "example": "USD",
                      "descriptionAsHTML": "<p>use ISO4217</p>\n"
                    }
                  },
                  "descriptionAsHTML": "<p>a price offered for transfer of ownership of an item</p>\n"
                }
              },
              "descriptionAsHTML": "<p>an agent makes an offer to buy the object</p>\n"
            },
            "instrument": {
              "description": "thing used by the agent to perform the action, i.e. an application or website that generated the message.",
              "example": "https://{app}.example.com/profile/card#me",
              "descriptionAsHTML": "<p>thing used by the agent to perform the action, i.e. an application or website that generated the message.</p>\n"
            }
          },
          "externalDocs": {
            "description": "schema.org/Action",
            "url": "https://schema.org/Action"
          },
          "description": "agent makes an offer to buy or sell the object",
          "generatedExample": "{\n  \"type\": \"OfferAction\",\n  \"agent\": {},\n  \"object\": {\n    \"type\": \"OfferAction\",\n    \"id\": \"http://example.com\",\n    \"name\": \"string\",\n    \"url\": \"http://example.com\",\n    \"object\": {\n      \"type\": \"RealEstateListing\",\n      \"id\": \"http://example.com/12345\"\n    },\n    \"recipient\": {\n      \"id\": \"http://user.example.com/profile/card#me\"\n    },\n    \"offerPrice\": {\n      \"type\": \"PriceSpecification\",\n      \"minPrice\": 0,\n      \"maxPrice\": 0,\n      \"price\": 0,\n      \"priceCurrency\": \"USD\"\n    }\n  },\n  \"instrument\": \"https://{app}.example.com/profile/card#me\"\n}"
        },
        "RejectAction": {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "description": "the action type",
              "type": "string",
              "enum": [
                "RejectAction"
              ],
              "descriptionAsHTML": "<p>the action type</p>\n"
            },
            "agent": {
              "description": "the direct performer of the action",
              "descriptionAsHTML": "<p>the direct performer of the action</p>\n"
            },
            "object": {
              "description": "a lead offered or assigned by the agent to one or more recipients",
              "type": "object",
              "title": "Lead",
              "x-kind": "Lead",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "Lead"
                  ],
                  "description": "Lead",
                  "descriptionAsHTML": "<p>Lead</p>\n"
                },
                "object": {
                  "type": "object",
                  "description": "a Contact (Person/Organization)",
                  "example": {
                    "type": "Person",
                    "name": "Larry Lead",
                    "email": "larry@example.com"
                  },
                  "descriptionAsHTML": "<p>a Contact (Person/Organization)</p>\n"
                },
                "recipient": {
                  "description": "the lead recipient",
                  "example": "http://{user}.example.com/profile/card#me",
                  "descriptionAsHTML": "<p>the lead recipient</p>\n"
                },
                "sender": {
                  "description": "the lead provider",
                  "type": "string",
                  "format": "uri",
                  "example": "http://{provider}.example.com/profile/card#me",
                  "descriptionAsHTML": "<p>the lead provider</p>\n"
                },
                "dateSent": {
                  "description": "the date the lead was sent",
                  "type": "string",
                  "format": "date-time",
                  "descriptionAsHTML": "<p>the date the lead was sent</p>\n"
                },
                "activity": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "type": {
                        "description": "the action type",
                        "type": "string"
                      },
                      "agent": {
                        "description": "the direct performer of the action"
                      },
                      "object": {
                        "description": "The object upon which the action is carried out",
                        "type": "object"
                      },
                      "instrument": {
                        "description": "thing used by the agent to perform the action, i.e. an application or website that generated the message.",
                        "example": "https://{app}.example.com/profile/card#me"
                      },
                      "actionStatus": {
                        "type": "string",
                        "description": "disposition of the Action when the event was created",
                        "enum": [
                          "CompletedActionStatus",
                          "FailedActionStatus",
                          "ActiveActionStatus"
                        ]
                      }
                    },
                    "externalDocs": {
                      "description": "schema.org/Action",
                      "url": "https://schema.org/Action"
                    }
                  }
                }
              },
              "descriptionAsHTML": "<p>a lead offered or assigned by the agent to one or more recipients</p>\n"
            },
            "instrument": {
              "description": "thing used by the agent to perform the action, i.e. an application or website that generated the message.",
              "example": "https://{app}.example.com/profile/card#me",
              "descriptionAsHTML": "<p>thing used by the agent to perform the action, i.e. an application or website that generated the message.</p>\n"
            },
            "actionStatus": {
              "type": "string",
              "description": "disposition of the Action when the event was created",
              "enum": [
                "CompletedActionStatus",
                "FailedActionStatus",
                "ActiveActionStatus"
              ],
              "descriptionAsHTML": "<p>disposition of the Action when the event was created</p>\n"
            }
          },
          "externalDocs": {
            "description": "schema.org/Action",
            "url": "https://schema.org/Action"
          },
          "generatedExample": "{\n  \"type\": \"RejectAction\",\n  \"agent\": null,\n  \"object\": {\n    \"type\": \"Lead\",\n    \"object\": {\n      \"type\": \"Person\",\n      \"name\": \"Larry Lead\",\n      \"email\": \"larry@example.com\"\n    },\n    \"recipient\": \"http://{user}.example.com/profile/card#me\",\n    \"sender\": \"http://{provider}.example.com/profile/card#me\",\n    \"dateSent\": \"2019-05-21T01:05:11Z\",\n    \"activity\": [\n      {\n        \"type\": \"string\",\n        \"agent\": null,\n        \"object\": {},\n        \"instrument\": \"https://{app}.example.com/profile/card#me\",\n        \"actionStatus\": \"CompletedActionStatus\"\n      }\n    ]\n  },\n  \"instrument\": \"https://{app}.example.com/profile/card#me\",\n  \"actionStatus\": \"CompletedActionStatus\"\n}"
        },
        "RemoveAction": {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "description": "the action type",
              "type": "string",
              "enum": [
                "RemoveAction"
              ],
              "descriptionAsHTML": "<p>the action type</p>\n"
            },
            "agent": {
              "description": "the direct performer of the action",
              "descriptionAsHTML": "<p>the direct performer of the action</p>\n"
            },
            "object": {
              "description": "the item removed",
              "type": "object",
              "descriptionAsHTML": "<p>the item removed</p>\n"
            },
            "instrument": {
              "description": "thing used by the agent to perform the action, i.e. an application or website that generated the message.",
              "example": "https://{app}.example.com/profile/card#me",
              "descriptionAsHTML": "<p>thing used by the agent to perform the action, i.e. an application or website that generated the message.</p>\n"
            },
            "actionStatus": {
              "type": "string",
              "description": "disposition of the Action when the event was created",
              "enum": [
                "CompletedActionStatus",
                "FailedActionStatus",
                "ActiveActionStatus"
              ],
              "descriptionAsHTML": "<p>disposition of the Action when the event was created</p>\n"
            },
            "targetCollection": {
              "description": "the collection from which the item is being removed",
              "descriptionAsHTML": "<p>the collection from which the item is being removed</p>\n"
            }
          },
          "externalDocs": {
            "description": "schema.org/Action",
            "url": "https://schema.org/Action"
          },
          "generatedExample": "{\n  \"type\": \"RemoveAction\",\n  \"agent\": null,\n  \"object\": {},\n  \"instrument\": \"https://{app}.example.com/profile/card#me\",\n  \"actionStatus\": \"CompletedActionStatus\",\n  \"targetCollection\": null\n}"
        },
        "UpdateAction": {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "description": "UpdateAction",
              "type": "string",
              "enum": [
                "UpdateAction"
              ],
              "descriptionAsHTML": "<p>UpdateAction</p>\n"
            },
            "agent": {
              "description": "the direct performer of the action",
              "descriptionAsHTML": "<p>the direct performer of the action</p>\n"
            },
            "object": {
              "description": "The object upon which the action is carried out",
              "type": "object",
              "descriptionAsHTML": "<p>The object upon which the action is carried out</p>\n"
            },
            "instrument": {
              "description": "thing used by the agent to perform the action, i.e. an application or website that generated the message.",
              "example": "https://{app}.example.com/profile/card#me",
              "descriptionAsHTML": "<p>thing used by the agent to perform the action, i.e. an application or website that generated the message.</p>\n"
            },
            "actionStatus": {
              "type": "string",
              "description": "disposition of the Action when the event was created",
              "enum": [
                "CompletedActionStatus",
                "FailedActionStatus",
                "ActiveActionStatus"
              ],
              "descriptionAsHTML": "<p>disposition of the Action when the event was created</p>\n"
            }
          },
          "externalDocs": {
            "description": "schema.org/Action",
            "url": "https://schema.org/Action"
          },
          "generatedExample": "{\n  \"type\": \"UpdateAction\",\n  \"agent\": null,\n  \"object\": {},\n  \"instrument\": \"https://{app}.example.com/profile/card#me\",\n  \"actionStatus\": \"CompletedActionStatus\"\n}"
        },
        "ApplicationProfile": {
          "type": "object",
          "required": [
            "id",
            "type",
            "inbox",
            "outbox"
          ],
          "properties": {
            "type": {
              "type": "string",
              "description": "Linked-Data (@type)",
              "enum": [
                "PersonalProfileDocument"
              ],
              "example": "SoftwareApplication",
              "descriptionAsHTML": "<p>Linked-Data (@type)</p>\n"
            },
            "id": {
              "type": "string",
              "format": "uri",
              "description": "Linked-Data uri",
              "example": "https://user.example.com/profile/card#me",
              "descriptionAsHTML": "<p>Linked-Data uri</p>\n"
            },
            "name": {
              "type": "string",
              "description": "the name of the item.",
              "descriptionAsHTML": "<p>the name of the item.</p>\n"
            },
            "url": {
              "type": "string",
              "format": "uri",
              "description": "a public href that is clearly and uniquely associated with the item.",
              "descriptionAsHTML": "<p>a public href that is clearly and uniquely associated with the item.</p>\n"
            },
            "primaryTopic": {
              "type": "string",
              "default": "#me"
            },
            "#me": {
              "type": "object",
              "required": [
                "type"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "example": "SoftwareApplication"
                },
                "inbox": {
                  "description": "URI to your Linked-Data-Notifications Inbox",
                  "type": "string",
                  "example": "/inbox/",
                  "default": "/inbox/",
                  "descriptionAsHTML": "<p>URI to your Linked-Data-Notifications Inbox</p>\n"
                },
                "outbox": {
                  "description": "URI to your Linked-Data-Notifications Outbox",
                  "type": "string",
                  "example": "/outbox/",
                  "default": "/outbox/",
                  "descriptionAsHTML": "<p>URI to your Linked-Data-Notifications Outbox</p>\n"
                },
                "storage": {
                  "description": "URI to your storage root.",
                  "type": "string",
                  "example": "/",
                  "default": "/",
                  "descriptionAsHTML": "<p>URI to your storage root.</p>\n"
                },
                "preferencesFile": {
                  "description": "URI to shared application prefs.",
                  "type": "string",
                  "example": "/settings/prefs",
                  "descriptionAsHTML": "<p>URI to shared application prefs.</p>\n"
                },
                "account": {
                  "description": "discoverable solid:account root",
                  "type": "string",
                  "example": "/",
                  "descriptionAsHTML": "<p>discoverable solid:account root</p>\n"
                },
                "privateTypeIndex": {
                  "description": "type index for your private use",
                  "type": "string",
                  "example": "/settings/privateTypeIndex",
                  "descriptionAsHTML": "<p>type index for your private use</p>\n"
                },
                "publicTypeIndex": {
                  "description": "shared, discoverable type index",
                  "type": "string",
                  "example": "/settings/publicTypeIndex",
                  "descriptionAsHTML": "<p>shared, discoverable type index</p>\n"
                },
                "permissions": {
                  "description": "Permissions required by an linked-data application or service.",
                  "x-enumeration": [
                    {
                      "name": "profile:read",
                      "description": "grantee can read the owner's profile data."
                    },
                    {
                      "name": "profile:write",
                      "description": "grantee can modify the owner's profile data."
                    },
                    {
                      "name": "lead",
                      "description": "grantee can read, write and modify leads."
                    },
                    {
                      "name": "contact",
                      "description": "grantee can read, write and modify contacts."
                    },
                    {
                      "name": "website:events",
                      "description": "grantee can read, write and modify website events."
                    }
                  ],
                  "type": "array",
                  "items": {
                    "type": "object",
                    "enum": [
                      "profile:read",
                      "profile:write",
                      "lead",
                      "contact",
                      "website:events"
                    ]
                  },
                  "descriptionAsHTML": "<p>Permissions required by an linked-data application or service.</p>\n"
                }
              }
            },
            "inbox": {
              "description": "discoverable uri to your LDN inbox",
              "type": "string",
              "example": "/inbox/",
              "descriptionAsHTML": "<p>discoverable uri to your LDN inbox</p>\n"
            },
            "outbox": {
              "description": "discoverable uri to your LDN outbox",
              "type": "string",
              "example": "/outbox/",
              "descriptionAsHTML": "<p>discoverable uri to your LDN outbox</p>\n"
            },
            "storage": {
              "description": "uri to your linked-data storage root",
              "type": "string",
              "example": "/",
              "descriptionAsHTML": "<p>uri to your linked-data storage root</p>\n"
            },
            "preferencesFile": {
              "description": "discoverable uri for shared application preferences",
              "type": "string",
              "example": "/settings/prefs",
              "descriptionAsHTML": "<p>discoverable uri for shared application preferences</p>\n"
            },
            "account": {
              "description": "discoverable solid:account root",
              "type": "string",
              "example": "/",
              "descriptionAsHTML": "<p>discoverable solid:account root</p>\n"
            },
            "privateTypeIndex": {
              "description": "type index for your private use",
              "type": "string",
              "example": "/settings/privateTypeIndex",
              "descriptionAsHTML": "<p>type index for your private use</p>\n"
            },
            "publicTypeIndex": {
              "description": "shared, discoverable type index",
              "type": "string",
              "example": "/settings/publicTypeIndex",
              "descriptionAsHTML": "<p>shared, discoverable type index</p>\n"
            },
            "permissions": {
              "description": "the subscription types required by your service.",
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "profile:read",
                  "contact",
                  "lead",
                  "listing"
                ]
              },
              "descriptionAsHTML": "<p>the subscription types required by your service.</p>\n"
            }
          },
          "description": "a solid profile document",
          "generatedExample": "{\n  \"type\": \"SoftwareApplication\",\n  \"id\": \"https://user.example.com/profile/card#me\",\n  \"name\": \"string\",\n  \"url\": \"http://example.com\",\n  \"primaryTopic\": \"#me\",\n  \"#me\": {\n    \"type\": \"SoftwareApplication\",\n    \"inbox\": \"/inbox/\",\n    \"outbox\": \"/outbox/\",\n    \"storage\": \"/\",\n    \"preferencesFile\": \"/settings/prefs\",\n    \"account\": \"/\",\n    \"privateTypeIndex\": \"/settings/privateTypeIndex\",\n    \"publicTypeIndex\": \"/settings/publicTypeIndex\",\n    \"permissions\": [\n      \"profile:read\"\n    ]\n  },\n  \"inbox\": \"/inbox/\",\n  \"outbox\": \"/outbox/\",\n  \"storage\": \"/\",\n  \"preferencesFile\": \"/settings/prefs\",\n  \"account\": \"/\",\n  \"privateTypeIndex\": \"/settings/privateTypeIndex\",\n  \"publicTypeIndex\": \"/settings/publicTypeIndex\",\n  \"permissions\": [\n    \"profile:read\"\n  ]\n}"
        }
      },
      "securitySchemes": {
        "https": {
          "name": "api-key",
          "type": "httpApiKey",
          "in": "header"
        }
      },
      "messages": {}
    },
    "baseTopic": "",
    "subscribeTopics": {
      "contact": {
        "x-title": null,
        "x-summary": "Contact events",
        "subscribe": {
          "oneOf": [
            {
              "x-title": "add",
              "x-scope": "realestate/contact#",
              "summary": "a contact was added/created.",
              "payload": {
                "type": "object",
                "required": [
                  "topic",
                  "source",
                  "data"
                ],
                "properties": {
                  "topic": {
                    "description": "{domain}/{topic}#{event}",
                    "type": "string",
                    "enum": [
                      "realestate/contact#add"
                    ],
                    "descriptionAsHTML": "<p>{domain}/{topic}#{event}</p>\n"
                  },
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "type": {
                        "description": "the action type",
                        "type": "string",
                        "enum": [
                          "AddAction"
                        ],
                        "descriptionAsHTML": "<p>the action type</p>\n"
                      },
                      "agent": {
                        "description": "the direct performer of the action",
                        "descriptionAsHTML": "<p>the direct performer of the action</p>\n"
                      },
                      "object": {
                        "description": "The object upon which the action is carried out",
                        "type": "object",
                        "x-kind": "Contact",
                        "x-range": "Contact",
                        "descriptionAsHTML": "<p>The object upon which the action is carried out</p>\n"
                      },
                      "instrument": {
                        "description": "thing used by the agent to perform the action, i.e. an application or website that generated the message.",
                        "example": "https://{app}.example.com/profile/card#me",
                        "descriptionAsHTML": "<p>thing used by the agent to perform the action, i.e. an application or website that generated the message.</p>\n"
                      }
                    },
                    "externalDocs": {
                      "description": "schema.org/Action",
                      "url": "https://schema.org/Action"
                    }
                  },
                  "source": {
                    "description": "the event origin, typically a user",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{user}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>the event origin, typically a user</p>\n"
                  },
                  "instrument": {
                    "description": "event producer, typically an app or service",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{supercrm}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>event producer, typically an app or service</p>\n"
                  },
                  "time": {
                    "description": "when the event was published",
                    "type": "string",
                    "format": "date-time",
                    "descriptionAsHTML": "<p>when the event was published</p>\n"
                  },
                  "contenttype": {
                    "description": "mimetype of the data property.  default=application/json",
                    "type": "string",
                    "example": "application/json",
                    "descriptionAsHTML": "<p>mimetype of the data property.  default=application/json</p>\n"
                  },
                  "@context": {
                    "description": "message context used for transforming message content",
                    "type": "string",
                    "format": "uri",
                    "example": "http://realestate.yodata.me/context/v1.json",
                    "descriptionAsHTML": "<p>message context used for transforming message content</p>\n"
                  }
                }
              },
              "summaryAsHTML": "<p>a contact was added/created.</p>\n",
              "descriptionAsHTML": "",
              "generatedPayloadExample": "{\n  \"topic\": \"realestate/contact#add\",\n  \"data\": {\n    \"type\": \"AddAction\",\n    \"agent\": null,\n    \"object\": {},\n    \"instrument\": \"https://{app}.example.com/profile/card#me\"\n  },\n  \"source\": \"http://{user}.example.com/profile/card#me\",\n  \"instrument\": \"http://{supercrm}.example.com/profile/card#me\",\n  \"time\": \"2019-05-21T01:05:11Z\",\n  \"contenttype\": \"application/json\",\n  \"@context\": \"http://realestate.yodata.me/context/v1.json\"\n}"
            },
            {
              "x-title": "update",
              "x-scope": "realestate/contact#",
              "summary": "a crm contact was updated",
              "payload": {
                "type": "object",
                "required": [
                  "topic",
                  "source",
                  "data"
                ],
                "properties": {
                  "topic": {
                    "description": "{domain}/{topic}#{event}",
                    "type": "string",
                    "enum": [
                      "realestate/contact#update"
                    ],
                    "descriptionAsHTML": "<p>{domain}/{topic}#{event}</p>\n"
                  },
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "type": {
                        "description": "UpdateAction",
                        "type": "string",
                        "enum": [
                          "UpdateAction"
                        ],
                        "descriptionAsHTML": "<p>UpdateAction</p>\n"
                      },
                      "agent": {
                        "description": "the direct performer of the action",
                        "descriptionAsHTML": "<p>the direct performer of the action</p>\n"
                      },
                      "object": {
                        "description": "The object upon which the action is carried out",
                        "type": "object",
                        "example": {
                          "type": "Contact",
                          "name": "the updated contact"
                        },
                        "descriptionAsHTML": "<p>The object upon which the action is carried out</p>\n"
                      },
                      "instrument": {
                        "description": "thing used by the agent to perform the action, i.e. an application or website that generated the message.",
                        "example": "https://{app}.example.com/profile/card#me",
                        "descriptionAsHTML": "<p>thing used by the agent to perform the action, i.e. an application or website that generated the message.</p>\n"
                      },
                      "actionStatus": {
                        "type": "string",
                        "description": "disposition of the Action when the event was created",
                        "enum": [
                          "CompletedActionStatus",
                          "FailedActionStatus",
                          "ActiveActionStatus"
                        ],
                        "descriptionAsHTML": "<p>disposition of the Action when the event was created</p>\n"
                      },
                      "targetCollection": {
                        "type": "object",
                        "description": "target collection",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "Collection"
                          },
                          "name": {
                            "type": "string",
                            "example": "targetcollection"
                          }
                        },
                        "descriptionAsHTML": "<p>target collection</p>\n"
                      }
                    },
                    "externalDocs": {
                      "description": "schema.org/Action",
                      "url": "https://schema.org/Action"
                    }
                  },
                  "source": {
                    "description": "the event origin, typically a user",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{user}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>the event origin, typically a user</p>\n"
                  },
                  "instrument": {
                    "description": "event producer, typically an app or service",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{supercrm}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>event producer, typically an app or service</p>\n"
                  },
                  "time": {
                    "description": "when the event was published",
                    "type": "string",
                    "format": "date-time",
                    "descriptionAsHTML": "<p>when the event was published</p>\n"
                  },
                  "contenttype": {
                    "description": "mimetype of the data property.  default=application/json",
                    "type": "string",
                    "example": "application/json",
                    "descriptionAsHTML": "<p>mimetype of the data property.  default=application/json</p>\n"
                  },
                  "@context": {
                    "description": "message context used for transforming message content",
                    "type": "string",
                    "format": "uri",
                    "example": "http://realestate.yodata.me/context/v1.json",
                    "descriptionAsHTML": "<p>message context used for transforming message content</p>\n"
                  }
                }
              },
              "summaryAsHTML": "<p>a crm contact was updated</p>\n",
              "descriptionAsHTML": "",
              "generatedPayloadExample": "{\n  \"topic\": \"realestate/contact#update\",\n  \"data\": {\n    \"type\": \"UpdateAction\",\n    \"agent\": null,\n    \"object\": {\n      \"type\": \"Contact\",\n      \"name\": \"the updated contact\"\n    },\n    \"instrument\": \"https://{app}.example.com/profile/card#me\",\n    \"actionStatus\": \"CompletedActionStatus\",\n    \"targetCollection\": {\n      \"type\": \"Collection\",\n      \"name\": \"targetcollection\"\n    }\n  },\n  \"source\": \"http://{user}.example.com/profile/card#me\",\n  \"instrument\": \"http://{supercrm}.example.com/profile/card#me\",\n  \"time\": \"2019-05-21T01:05:11Z\",\n  \"contenttype\": \"application/json\",\n  \"@context\": \"http://realestate.yodata.me/context/v1.json\"\n}"
            }
          ],
          "summaryAsHTML": "",
          "descriptionAsHTML": ""
        }
      },
      "lead": {
        "x-summary": "Lead events",
        "subscribe": {
          "oneOf": [
            {
              "x-title": "accept",
              "x-scope": "realestate/lead#",
              "summary": "a lead (object) was accepted by the agent",
              "payload": {
                "type": "object",
                "required": [
                  "topic",
                  "source",
                  "data"
                ],
                "properties": {
                  "topic": {
                    "description": "realestate/lead#accept",
                    "type": "string",
                    "enum": [
                      "realestate/lead#accept"
                    ],
                    "descriptionAsHTML": "<p>realestate/lead#accept</p>\n"
                  },
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "type": {
                        "description": "the action type",
                        "type": "string",
                        "enum": [
                          "AcceptAction"
                        ],
                        "descriptionAsHTML": "<p>the action type</p>\n"
                      },
                      "agent": {
                        "description": "the direct performer of the action",
                        "example": "https://{user}.example.com/profile/card#me",
                        "descriptionAsHTML": "<p>the direct performer of the action</p>\n"
                      },
                      "object": {
                        "description": "a lead offered or assigned by the agent to one or more recipients",
                        "type": "object",
                        "example": {
                          "type": "Lead",
                          "name": "Lianna Stark"
                        },
                        "title": "Lead",
                        "x-kind": "Lead",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "Lead"
                            ],
                            "description": "Lead",
                            "descriptionAsHTML": "<p>Lead</p>\n"
                          },
                          "object": {
                            "type": "object",
                            "description": "a Contact (Person/Organization)",
                            "example": {
                              "type": "Person",
                              "name": "Larry Lead",
                              "email": "larry@example.com"
                            },
                            "descriptionAsHTML": "<p>a Contact (Person/Organization)</p>\n"
                          },
                          "recipient": {
                            "description": "the lead recipient",
                            "example": "http://{user}.example.com/profile/card#me",
                            "descriptionAsHTML": "<p>the lead recipient</p>\n"
                          },
                          "sender": {
                            "description": "the lead provider",
                            "type": "string",
                            "format": "uri",
                            "example": "http://{provider}.example.com/profile/card#me",
                            "descriptionAsHTML": "<p>the lead provider</p>\n"
                          },
                          "dateSent": {
                            "description": "the date the lead was sent",
                            "type": "string",
                            "format": "date-time",
                            "descriptionAsHTML": "<p>the date the lead was sent</p>\n"
                          },
                          "activity": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type"
                              ],
                              "properties": {
                                "type": {
                                  "description": "the action type",
                                  "type": "string"
                                },
                                "agent": {
                                  "description": "the direct performer of the action"
                                },
                                "object": {
                                  "description": "The object upon which the action is carried out",
                                  "type": "object"
                                },
                                "instrument": {
                                  "description": "thing used by the agent to perform the action, i.e. an application or website that generated the message.",
                                  "example": "https://{app}.example.com/profile/card#me"
                                },
                                "actionStatus": {
                                  "type": "string",
                                  "description": "disposition of the Action when the event was created",
                                  "enum": [
                                    "CompletedActionStatus",
                                    "FailedActionStatus",
                                    "ActiveActionStatus"
                                  ]
                                }
                              },
                              "externalDocs": {
                                "description": "schema.org/Action",
                                "url": "https://schema.org/Action"
                              }
                            }
                          }
                        },
                        "descriptionAsHTML": "<p>a lead offered or assigned by the agent to one or more recipients</p>\n"
                      },
                      "instrument": {
                        "description": "thing used by the agent to perform the action, i.e. an application or website that generated the message.",
                        "example": "https://{app}.example.com/profile/card#me",
                        "descriptionAsHTML": "<p>thing used by the agent to perform the action, i.e. an application or website that generated the message.</p>\n"
                      },
                      "actionStatus": {
                        "type": "string",
                        "description": "disposition of the Action when the event was created",
                        "enum": [
                          "CompletedActionStatus",
                          "FailedActionStatus",
                          "ActiveActionStatus"
                        ],
                        "descriptionAsHTML": "<p>disposition of the Action when the event was created</p>\n"
                      }
                    },
                    "externalDocs": {
                      "description": "schema.org/Action",
                      "url": "https://schema.org/Action"
                    },
                    "description": "The act of committing to/adopting an object.",
                    "descriptionAsHTML": "<p>The act of committing to/adopting an object.</p>\n"
                  },
                  "source": {
                    "description": "the event origin, typically a user",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{user}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>the event origin, typically a user</p>\n"
                  },
                  "instrument": {
                    "description": "event producer, typically an app or service",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{supercrm}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>event producer, typically an app or service</p>\n"
                  },
                  "time": {
                    "description": "when the event was published",
                    "type": "string",
                    "format": "date-time",
                    "descriptionAsHTML": "<p>when the event was published</p>\n"
                  },
                  "contenttype": {
                    "description": "mimetype of the data property.  default=application/json",
                    "type": "string",
                    "example": "application/json",
                    "descriptionAsHTML": "<p>mimetype of the data property.  default=application/json</p>\n"
                  },
                  "@context": {
                    "description": "message context used for transforming message content",
                    "type": "string",
                    "format": "uri",
                    "example": "http://realestate.yodata.me/context/v1.json",
                    "descriptionAsHTML": "<p>message context used for transforming message content</p>\n"
                  }
                }
              },
              "summaryAsHTML": "<p>a lead (object) was accepted by the agent</p>\n",
              "descriptionAsHTML": "",
              "generatedPayloadExample": "{\n  \"topic\": \"realestate/lead#accept\",\n  \"data\": {\n    \"type\": \"AcceptAction\",\n    \"agent\": \"https://{user}.example.com/profile/card#me\",\n    \"object\": {\n      \"type\": \"Lead\",\n      \"name\": \"Lianna Stark\"\n    },\n    \"instrument\": \"https://{app}.example.com/profile/card#me\",\n    \"actionStatus\": \"CompletedActionStatus\"\n  },\n  \"source\": \"http://{user}.example.com/profile/card#me\",\n  \"instrument\": \"http://{supercrm}.example.com/profile/card#me\",\n  \"time\": \"2019-05-21T01:05:11Z\",\n  \"contenttype\": \"application/json\",\n  \"@context\": \"http://realestate.yodata.me/context/v1.json\"\n}"
            },
            {
              "x-title": "add",
              "x-scope": "realestate/lead#",
              "summary": "a crm lead was created",
              "payload": {
                "type": "object",
                "required": [
                  "topic",
                  "source",
                  "data"
                ],
                "properties": {
                  "topic": {
                    "description": "{domain}/{topic}#{event}",
                    "type": "string",
                    "enum": [
                      "realestate/lead#add"
                    ],
                    "descriptionAsHTML": "<p>{domain}/{topic}#{event}</p>\n"
                  },
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "type": {
                        "description": "AddAction",
                        "type": "string",
                        "enum": [
                          "AddAction"
                        ],
                        "example": "AddAction",
                        "descriptionAsHTML": "<p>AddAction</p>\n"
                      },
                      "agent": {
                        "description": "the direct performer of the action",
                        "example": "http://{user}.example.com/profile/card#me",
                        "descriptionAsHTML": "<p>the direct performer of the action</p>\n"
                      },
                      "object": {
                        "description": "the added item",
                        "type": "object",
                        "example": {
                          "type": "Contact",
                          "name": "Adam Addme"
                        },
                        "descriptionAsHTML": "<p>the added item</p>\n"
                      },
                      "instrument": {
                        "description": "thing used by the agent to perform the action, i.e. an application or website that generated the message.",
                        "example": "http://{app}.example.com/profile/card#me",
                        "descriptionAsHTML": "<p>thing used by the agent to perform the action, i.e. an application or website that generated the message.</p>\n"
                      },
                      "actionStatus": {
                        "type": "string",
                        "description": "disposition of the Action when the event was created",
                        "enum": [
                          "CompletedActionStatus",
                          "FailedActionStatus",
                          "ActiveActionStatus"
                        ],
                        "descriptionAsHTML": "<p>disposition of the Action when the event was created</p>\n"
                      },
                      "targetCollection": {
                        "description": "the collection receiving the added object",
                        "example": {
                          "type": "Collection",
                          "id": "https://{user}.example.com/data/contact/"
                        },
                        "descriptionAsHTML": "<p>the collection receiving the added object</p>\n"
                      }
                    },
                    "externalDocs": {
                      "description": "schema.org/Action",
                      "url": "https://schema.org/Action"
                    }
                  },
                  "source": {
                    "description": "the event origin, typically a user",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{user}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>the event origin, typically a user</p>\n"
                  },
                  "instrument": {
                    "description": "event producer, typically an app or service",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{supercrm}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>event producer, typically an app or service</p>\n"
                  },
                  "time": {
                    "description": "when the event was published",
                    "type": "string",
                    "format": "date-time",
                    "descriptionAsHTML": "<p>when the event was published</p>\n"
                  },
                  "contenttype": {
                    "description": "mimetype of the data property.  default=application/json",
                    "type": "string",
                    "example": "application/json",
                    "descriptionAsHTML": "<p>mimetype of the data property.  default=application/json</p>\n"
                  },
                  "@context": {
                    "description": "message context used for transforming message content",
                    "type": "string",
                    "format": "uri",
                    "example": "http://realestate.yodata.me/context/v1.json",
                    "descriptionAsHTML": "<p>message context used for transforming message content</p>\n"
                  }
                }
              },
              "summaryAsHTML": "<p>a crm lead was created</p>\n",
              "descriptionAsHTML": "",
              "generatedPayloadExample": "{\n  \"topic\": \"realestate/lead#add\",\n  \"data\": {\n    \"type\": \"AddAction\",\n    \"agent\": \"http://{user}.example.com/profile/card#me\",\n    \"object\": {\n      \"type\": \"Contact\",\n      \"name\": \"Adam Addme\"\n    },\n    \"instrument\": \"http://{app}.example.com/profile/card#me\",\n    \"actionStatus\": \"CompletedActionStatus\",\n    \"targetCollection\": {\n      \"type\": \"Collection\",\n      \"id\": \"https://{user}.example.com/data/contact/\"\n    }\n  },\n  \"source\": \"http://{user}.example.com/profile/card#me\",\n  \"instrument\": \"http://{supercrm}.example.com/profile/card#me\",\n  \"time\": \"2019-05-21T01:05:11Z\",\n  \"contenttype\": \"application/json\",\n  \"@context\": \"http://realestate.yodata.me/context/v1.json\"\n}"
            },
            {
              "x-title": "asssign",
              "x-scope": "realestate/lead#",
              "summary": "a lead was assigned",
              "payload": {
                "type": "object",
                "required": [
                  "topic",
                  "source",
                  "data"
                ],
                "properties": {
                  "topic": {
                    "description": "{domain}/{topic}#{event}",
                    "type": "string",
                    "enum": [
                      "realestate/lead#assign"
                    ],
                    "descriptionAsHTML": "<p>{domain}/{topic}#{event}</p>\n"
                  },
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "type": {
                        "description": "the action type",
                        "type": "string",
                        "enum": [
                          "AssignAction"
                        ],
                        "example": "AssignAction",
                        "descriptionAsHTML": "<p>the action type</p>\n"
                      },
                      "agent": {
                        "description": "the direct performer of the action",
                        "descriptionAsHTML": "<p>the direct performer of the action</p>\n"
                      },
                      "object": {
                        "description": "The object upon which the action is carried out",
                        "type": "object",
                        "required": [
                          "type"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "Person",
                            "enum": [
                              "Person"
                            ],
                            "descriptionAsHTML": "<p>Person</p>\n"
                          },
                          "id": {
                            "type": "string",
                            "format": "uri",
                            "description": "Linked-Data uri",
                            "descriptionAsHTML": "<p>Linked-Data uri</p>\n"
                          },
                          "name": {
                            "type": "string",
                            "description": "Full name of the person.",
                            "descriptionAsHTML": "<p>Full name of the person.</p>\n"
                          },
                          "url": {
                            "type": "string",
                            "format": "uri",
                            "description": "a public href that is clearly and uniquely associated with the item.",
                            "descriptionAsHTML": "<p>a public href that is clearly and uniquely associated with the item.</p>\n"
                          },
                          "givenName": {
                            "type": "string",
                            "description": "First Name",
                            "example": "Bruce",
                            "descriptionAsHTML": "<p>First Name</p>\n"
                          },
                          "familyName": {
                            "type": "string",
                            "description": "Last Name",
                            "example": "Wayne",
                            "descriptionAsHTML": "<p>Last Name</p>\n"
                          },
                          "jobTitle": {
                            "type": "string",
                            "description": "The Job Title of the person.",
                            "example": "Jefe",
                            "descriptionAsHTML": "<p>The Job Title of the person.</p>\n"
                          },
                          "email": {
                            "type": "string",
                            "description": "Primary email address.",
                            "example": "user@example.com",
                            "descriptionAsHTML": "<p>Primary email address.</p>\n"
                          },
                          "faxNumber": {
                            "description": "Primary fax number.",
                            "type": "string",
                            "example": "(498) 625-6456",
                            "descriptionAsHTML": "<p>Primary fax number.</p>\n"
                          },
                          "telephone": {
                            "description": "Primary phone number.",
                            "type": "string",
                            "example": "1-339-041-0306 x2866",
                            "descriptionAsHTML": "<p>Primary phone number.</p>\n"
                          },
                          "contactPoint": {
                            "x-range": "ContactPoint",
                            "description": "Named and grouped contacts points.",
                            "type": "array",
                            "items": {
                              "title": "ContactPoint",
                              "description": "A contact point—for example, a Customer Complaints department.",
                              "type": "object",
                              "properties": {
                                "type": {
                                  "description": "ContactPoint",
                                  "type": "string",
                                  "enum": [
                                    "ContactPoint"
                                  ]
                                },
                                "name": {
                                  "type": "string",
                                  "description": "a label for the contactPoint, i.e. 'Work', or 'Home'",
                                  "example": "Work"
                                },
                                "telephone": {
                                  "description": "a telephone number",
                                  "type": "string",
                                  "example": "1-364-127-9618 x20418"
                                },
                                "faxNumber": {
                                  "description": "a fax number",
                                  "type": "string",
                                  "example": "834.320.1602"
                                },
                                "email": {
                                  "description": "an email address for the item.",
                                  "type": "string",
                                  "format": "email",
                                  "example": "user@example.com"
                                },
                                "url": {
                                  "description": "primary URL for the item.",
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://www.facebook.com/hallandoates"
                                }
                              }
                            },
                            "descriptionAsHTML": "<p>Named and grouped contacts points.</p>\n"
                          },
                          "address": {
                            "x-range": "PostalAddress",
                            "description": "mailing addresses.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "A physical address.",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "PostalAddress"
                                  ]
                                },
                                "streetAddress": {
                                  "type": "string",
                                  "example": "1007 Mountain Gate Rd"
                                },
                                "postOfficeBoxNumber": {
                                  "type": "string",
                                  "example": "Box 1234"
                                },
                                "addressRegion": {
                                  "type": "string",
                                  "description": "State or Province.",
                                  "example": "New Jersey"
                                },
                                "addressLocality": {
                                  "type": "string",
                                  "description": "City, Township.",
                                  "example": "Gotham City"
                                },
                                "postalCode": {
                                  "type": "string",
                                  "description": "Zip/Post Code",
                                  "example": "10010"
                                },
                                "addressCountry": {
                                  "type": "string",
                                  "description": "country",
                                  "example": "usa"
                                }
                              }
                            },
                            "descriptionAsHTML": "<p>mailing addresses.</p>\n"
                          },
                          "birthDate": {
                            "type": "string",
                            "format": "date",
                            "description": "date of birth.",
                            "descriptionAsHTML": "<p>date of birth.</p>\n"
                          }
                        },
                        "descriptionAsHTML": "<p>The object upon which the action is carried out</p>\n"
                      },
                      "instrument": {
                        "description": "thing used by the agent to perform the action, i.e. an application or website that generated the message.",
                        "example": "https://{app}.example.com/profile/card#me",
                        "descriptionAsHTML": "<p>thing used by the agent to perform the action, i.e. an application or website that generated the message.</p>\n"
                      },
                      "actionStatus": {
                        "type": "string",
                        "description": "disposition of the Action when the event was created",
                        "enum": [
                          "CompletedActionStatus",
                          "FailedActionStatus",
                          "ActiveActionStatus"
                        ],
                        "descriptionAsHTML": "<p>disposition of the Action when the event was created</p>\n"
                      },
                      "targetCollection": {
                        "type": "object",
                        "description": "target collection",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "Collection"
                          },
                          "name": {
                            "type": "string",
                            "example": "targetcollection"
                          }
                        },
                        "descriptionAsHTML": "<p>target collection</p>\n"
                      }
                    },
                    "externalDocs": {
                      "description": "schema.org/Action",
                      "url": "https://schema.org/Action"
                    }
                  },
                  "source": {
                    "description": "the event origin, typically a user",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{user}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>the event origin, typically a user</p>\n"
                  },
                  "instrument": {
                    "description": "event producer, typically an app or service",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{supercrm}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>event producer, typically an app or service</p>\n"
                  },
                  "time": {
                    "description": "when the event was published",
                    "type": "string",
                    "format": "date-time",
                    "descriptionAsHTML": "<p>when the event was published</p>\n"
                  },
                  "contenttype": {
                    "description": "mimetype of the data property.  default=application/json",
                    "type": "string",
                    "example": "application/json",
                    "descriptionAsHTML": "<p>mimetype of the data property.  default=application/json</p>\n"
                  },
                  "@context": {
                    "description": "message context used for transforming message content",
                    "type": "string",
                    "format": "uri",
                    "example": "http://realestate.yodata.me/context/v1.json",
                    "descriptionAsHTML": "<p>message context used for transforming message content</p>\n"
                  }
                }
              },
              "summaryAsHTML": "<p>a lead was assigned</p>\n",
              "descriptionAsHTML": "",
              "generatedPayloadExample": "{\n  \"topic\": \"realestate/lead#assign\",\n  \"data\": {\n    \"type\": \"AssignAction\",\n    \"agent\": null,\n    \"object\": {\n      \"type\": \"Person\",\n      \"id\": \"http://example.com\",\n      \"name\": \"string\",\n      \"url\": \"http://example.com\",\n      \"givenName\": \"Bruce\",\n      \"familyName\": \"Wayne\",\n      \"jobTitle\": \"Jefe\",\n      \"email\": \"user@example.com\",\n      \"faxNumber\": \"(498) 625-6456\",\n      \"telephone\": \"1-339-041-0306 x2866\",\n      \"contactPoint\": [\n        {\n          \"type\": \"ContactPoint\",\n          \"name\": \"Work\",\n          \"telephone\": \"1-364-127-9618 x20418\",\n          \"faxNumber\": \"834.320.1602\",\n          \"email\": \"user@example.com\",\n          \"url\": \"https://www.facebook.com/hallandoates\"\n        }\n      ],\n      \"address\": [\n        {\n          \"type\": \"PostalAddress\",\n          \"streetAddress\": \"1007 Mountain Gate Rd\",\n          \"postOfficeBoxNumber\": \"Box 1234\",\n          \"addressRegion\": \"New Jersey\",\n          \"addressLocality\": \"Gotham City\",\n          \"postalCode\": \"10010\",\n          \"addressCountry\": \"usa\"\n        }\n      ],\n      \"birthDate\": \"2019-05-21\"\n    },\n    \"instrument\": \"https://{app}.example.com/profile/card#me\",\n    \"actionStatus\": \"CompletedActionStatus\",\n    \"targetCollection\": {\n      \"type\": \"Collection\",\n      \"name\": \"targetcollection\"\n    }\n  },\n  \"source\": \"http://{user}.example.com/profile/card#me\",\n  \"instrument\": \"http://{supercrm}.example.com/profile/card#me\",\n  \"time\": \"2019-05-21T01:05:11Z\",\n  \"contenttype\": \"application/json\",\n  \"@context\": \"http://realestate.yodata.me/context/v1.json\"\n}"
            },
            {
              "x-title": "update",
              "x-scope": "realestate/lead#",
              "summary": "a crm lead was updated",
              "payload": {
                "type": "object",
                "required": [
                  "topic",
                  "source",
                  "data"
                ],
                "properties": {
                  "topic": {
                    "description": "{domain}/{topic}#{event}",
                    "type": "string",
                    "enum": [
                      "realestate/lead#update"
                    ],
                    "descriptionAsHTML": "<p>{domain}/{topic}#{event}</p>\n"
                  },
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "type": {
                        "description": "the action type",
                        "type": "string",
                        "enum": [
                          "UpdateAction"
                        ],
                        "example": "UpdateAction",
                        "descriptionAsHTML": "<p>the action type</p>\n"
                      },
                      "agent": {
                        "description": "the direct performer of the action",
                        "descriptionAsHTML": "<p>the direct performer of the action</p>\n"
                      },
                      "object": {
                        "description": "a lead offered or assigned by the agent to one or more recipients",
                        "type": "object",
                        "example": {
                          "type": "Lead"
                        },
                        "title": "Lead",
                        "x-kind": "Lead",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "Lead"
                            ],
                            "description": "Lead",
                            "descriptionAsHTML": "<p>Lead</p>\n"
                          },
                          "object": {
                            "type": "object",
                            "description": "a Contact (Person/Organization)",
                            "example": {
                              "type": "Person",
                              "name": "Larry Lead",
                              "email": "larry@example.com"
                            },
                            "descriptionAsHTML": "<p>a Contact (Person/Organization)</p>\n"
                          },
                          "recipient": {
                            "description": "the lead recipient",
                            "example": "http://{user}.example.com/profile/card#me",
                            "descriptionAsHTML": "<p>the lead recipient</p>\n"
                          },
                          "sender": {
                            "description": "the lead provider",
                            "type": "string",
                            "format": "uri",
                            "example": "http://{provider}.example.com/profile/card#me",
                            "descriptionAsHTML": "<p>the lead provider</p>\n"
                          },
                          "dateSent": {
                            "description": "the date the lead was sent",
                            "type": "string",
                            "format": "date-time",
                            "descriptionAsHTML": "<p>the date the lead was sent</p>\n"
                          },
                          "activity": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type"
                              ],
                              "properties": {
                                "type": {
                                  "description": "the action type",
                                  "type": "string"
                                },
                                "agent": {
                                  "description": "the direct performer of the action"
                                },
                                "object": {
                                  "description": "The object upon which the action is carried out",
                                  "type": "object"
                                },
                                "instrument": {
                                  "description": "thing used by the agent to perform the action, i.e. an application or website that generated the message.",
                                  "example": "https://{app}.example.com/profile/card#me"
                                },
                                "actionStatus": {
                                  "type": "string",
                                  "description": "disposition of the Action when the event was created",
                                  "enum": [
                                    "CompletedActionStatus",
                                    "FailedActionStatus",
                                    "ActiveActionStatus"
                                  ]
                                }
                              },
                              "externalDocs": {
                                "description": "schema.org/Action",
                                "url": "https://schema.org/Action"
                              }
                            }
                          }
                        },
                        "descriptionAsHTML": "<p>a lead offered or assigned by the agent to one or more recipients</p>\n"
                      },
                      "instrument": {
                        "description": "thing used by the agent to perform the action, i.e. an application or website that generated the message.",
                        "example": "https://{app}.example.com/profile/card#me",
                        "descriptionAsHTML": "<p>thing used by the agent to perform the action, i.e. an application or website that generated the message.</p>\n"
                      }
                    },
                    "externalDocs": {
                      "description": "schema.org/Action",
                      "url": "https://schema.org/Action"
                    }
                  },
                  "source": {
                    "description": "the event origin, typically a user",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{user}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>the event origin, typically a user</p>\n"
                  },
                  "instrument": {
                    "description": "event producer, typically an app or service",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{supercrm}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>event producer, typically an app or service</p>\n"
                  },
                  "time": {
                    "description": "when the event was published",
                    "type": "string",
                    "format": "date-time",
                    "descriptionAsHTML": "<p>when the event was published</p>\n"
                  },
                  "contenttype": {
                    "description": "mimetype of the data property.  default=application/json",
                    "type": "string",
                    "example": "application/json",
                    "descriptionAsHTML": "<p>mimetype of the data property.  default=application/json</p>\n"
                  },
                  "@context": {
                    "description": "message context used for transforming message content",
                    "type": "string",
                    "format": "uri",
                    "example": "http://realestate.yodata.me/context/v1.json",
                    "descriptionAsHTML": "<p>message context used for transforming message content</p>\n"
                  }
                }
              },
              "summaryAsHTML": "<p>a crm lead was updated</p>\n",
              "descriptionAsHTML": "",
              "generatedPayloadExample": "{\n  \"topic\": \"realestate/lead#update\",\n  \"data\": {\n    \"type\": \"UpdateAction\",\n    \"agent\": null,\n    \"object\": {\n      \"type\": \"Lead\"\n    },\n    \"instrument\": \"https://{app}.example.com/profile/card#me\"\n  },\n  \"source\": \"http://{user}.example.com/profile/card#me\",\n  \"instrument\": \"http://{supercrm}.example.com/profile/card#me\",\n  \"time\": \"2019-05-21T01:05:11Z\",\n  \"contenttype\": \"application/json\",\n  \"@context\": \"http://realestate.yodata.me/context/v1.json\"\n}"
            },
            {
              "x-title": "reject",
              "x-scope": "realestate/lead#",
              "summary": "a crm lead was accepted",
              "payload": {
                "type": "object",
                "required": [
                  "topic",
                  "source",
                  "data"
                ],
                "properties": {
                  "topic": {
                    "description": "{domain}/{topic}#{event}",
                    "type": "string",
                    "enum": [
                      "realestate/lead#reject"
                    ],
                    "descriptionAsHTML": "<p>{domain}/{topic}#{event}</p>\n"
                  },
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "type": {
                        "description": "the action type",
                        "type": "string",
                        "enum": [
                          "RejectAction"
                        ],
                        "descriptionAsHTML": "<p>the action type</p>\n"
                      },
                      "agent": {
                        "description": "the direct performer of the action",
                        "descriptionAsHTML": "<p>the direct performer of the action</p>\n"
                      },
                      "object": {
                        "description": "a lead offered or assigned by the agent to one or more recipients",
                        "type": "object",
                        "title": "Lead",
                        "x-kind": "Lead",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "Lead"
                            ],
                            "description": "Lead",
                            "descriptionAsHTML": "<p>Lead</p>\n"
                          },
                          "object": {
                            "type": "object",
                            "description": "a Contact (Person/Organization)",
                            "example": {
                              "type": "Person",
                              "name": "Larry Lead",
                              "email": "larry@example.com"
                            },
                            "descriptionAsHTML": "<p>a Contact (Person/Organization)</p>\n"
                          },
                          "recipient": {
                            "description": "the lead recipient",
                            "example": "http://{user}.example.com/profile/card#me",
                            "descriptionAsHTML": "<p>the lead recipient</p>\n"
                          },
                          "sender": {
                            "description": "the lead provider",
                            "type": "string",
                            "format": "uri",
                            "example": "http://{provider}.example.com/profile/card#me",
                            "descriptionAsHTML": "<p>the lead provider</p>\n"
                          },
                          "dateSent": {
                            "description": "the date the lead was sent",
                            "type": "string",
                            "format": "date-time",
                            "descriptionAsHTML": "<p>the date the lead was sent</p>\n"
                          },
                          "activity": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type"
                              ],
                              "properties": {
                                "type": {
                                  "description": "the action type",
                                  "type": "string"
                                },
                                "agent": {
                                  "description": "the direct performer of the action"
                                },
                                "object": {
                                  "description": "The object upon which the action is carried out",
                                  "type": "object"
                                },
                                "instrument": {
                                  "description": "thing used by the agent to perform the action, i.e. an application or website that generated the message.",
                                  "example": "https://{app}.example.com/profile/card#me"
                                },
                                "actionStatus": {
                                  "type": "string",
                                  "description": "disposition of the Action when the event was created",
                                  "enum": [
                                    "CompletedActionStatus",
                                    "FailedActionStatus",
                                    "ActiveActionStatus"
                                  ]
                                }
                              },
                              "externalDocs": {
                                "description": "schema.org/Action",
                                "url": "https://schema.org/Action"
                              }
                            }
                          }
                        },
                        "descriptionAsHTML": "<p>a lead offered or assigned by the agent to one or more recipients</p>\n"
                      },
                      "instrument": {
                        "description": "thing used by the agent to perform the action, i.e. an application or website that generated the message.",
                        "example": "https://{app}.example.com/profile/card#me",
                        "descriptionAsHTML": "<p>thing used by the agent to perform the action, i.e. an application or website that generated the message.</p>\n"
                      },
                      "actionStatus": {
                        "type": "string",
                        "description": "disposition of the Action when the event was created",
                        "enum": [
                          "CompletedActionStatus",
                          "FailedActionStatus",
                          "ActiveActionStatus"
                        ],
                        "descriptionAsHTML": "<p>disposition of the Action when the event was created</p>\n"
                      }
                    },
                    "externalDocs": {
                      "description": "schema.org/Action",
                      "url": "https://schema.org/Action"
                    }
                  },
                  "source": {
                    "description": "the event origin, typically a user",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{user}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>the event origin, typically a user</p>\n"
                  },
                  "instrument": {
                    "description": "event producer, typically an app or service",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{supercrm}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>event producer, typically an app or service</p>\n"
                  },
                  "time": {
                    "description": "when the event was published",
                    "type": "string",
                    "format": "date-time",
                    "descriptionAsHTML": "<p>when the event was published</p>\n"
                  },
                  "contenttype": {
                    "description": "mimetype of the data property.  default=application/json",
                    "type": "string",
                    "example": "application/json",
                    "descriptionAsHTML": "<p>mimetype of the data property.  default=application/json</p>\n"
                  },
                  "@context": {
                    "description": "message context used for transforming message content",
                    "type": "string",
                    "format": "uri",
                    "example": "http://realestate.yodata.me/context/v1.json",
                    "descriptionAsHTML": "<p>message context used for transforming message content</p>\n"
                  }
                }
              },
              "summaryAsHTML": "<p>a crm lead was accepted</p>\n",
              "descriptionAsHTML": "",
              "generatedPayloadExample": "{\n  \"topic\": \"realestate/lead#reject\",\n  \"data\": {\n    \"type\": \"RejectAction\",\n    \"agent\": null,\n    \"object\": {\n      \"type\": \"Lead\",\n      \"object\": {\n        \"type\": \"Person\",\n        \"name\": \"Larry Lead\",\n        \"email\": \"larry@example.com\"\n      },\n      \"recipient\": \"http://{user}.example.com/profile/card#me\",\n      \"sender\": \"http://{provider}.example.com/profile/card#me\",\n      \"dateSent\": \"2019-05-21T01:05:11Z\",\n      \"activity\": [\n        {\n          \"type\": \"string\",\n          \"agent\": null,\n          \"object\": {},\n          \"instrument\": \"https://{app}.example.com/profile/card#me\",\n          \"actionStatus\": \"CompletedActionStatus\"\n        }\n      ]\n    },\n    \"instrument\": \"https://{app}.example.com/profile/card#me\",\n    \"actionStatus\": \"CompletedActionStatus\"\n  },\n  \"source\": \"http://{user}.example.com/profile/card#me\",\n  \"instrument\": \"http://{supercrm}.example.com/profile/card#me\",\n  \"time\": \"2019-05-21T01:05:11Z\",\n  \"contenttype\": \"application/json\",\n  \"@context\": \"http://realestate.yodata.me/context/v1.json\"\n}"
            }
          ],
          "summaryAsHTML": "",
          "descriptionAsHTML": ""
        }
      },
      "marketing": {
        "x-summary": "Marketing events",
        "subscribe": {
          "oneOf": [
            {
              "x-title": "marketingprogram#create",
              "x-scope": "realestate",
              "summary": "a marketing program has been created",
              "payload": {
                "type": "object",
                "required": [
                  "topic",
                  "source",
                  "data"
                ],
                "properties": {
                  "topic": {
                    "description": "{domain}/{topic}#{event}",
                    "type": "string",
                    "enum": [
                      "realestate/marketingprogram#create"
                    ],
                    "descriptionAsHTML": "<p>{domain}/{topic}#{event}</p>\n"
                  },
                  "data": {
                    "description": "the object was created by the agent",
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "type": {
                        "description": "CreateAction",
                        "type": "string",
                        "enum": [
                          "CreateAction"
                        ],
                        "descriptionAsHTML": "<p>CreateAction</p>\n"
                      },
                      "agent": {
                        "description": "the direct performer of the action",
                        "descriptionAsHTML": "<p>the direct performer of the action</p>\n"
                      },
                      "object": {
                        "description": "The object upon which the action is carried out",
                        "type": "object",
                        "descriptionAsHTML": "<p>The object upon which the action is carried out</p>\n"
                      },
                      "instrument": {
                        "description": "thing used by the agent to perform the action, i.e. an application or website that generated the message.",
                        "example": "https://{app}.example.com/profile/card#me",
                        "descriptionAsHTML": "<p>thing used by the agent to perform the action, i.e. an application or website that generated the message.</p>\n"
                      },
                      "actionStatus": {
                        "type": "string",
                        "description": "disposition of the Action when the event was created",
                        "enum": [
                          "CompletedActionStatus",
                          "FailedActionStatus",
                          "ActiveActionStatus"
                        ],
                        "descriptionAsHTML": "<p>disposition of the Action when the event was created</p>\n"
                      }
                    },
                    "externalDocs": {
                      "description": "schema.org/Action",
                      "url": "https://schema.org/Action"
                    },
                    "descriptionAsHTML": "<p>the object was created by the agent</p>\n"
                  },
                  "source": {
                    "description": "the event origin, typically a user",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{user}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>the event origin, typically a user</p>\n"
                  },
                  "instrument": {
                    "description": "event producer, typically an app or service",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{supercrm}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>event producer, typically an app or service</p>\n"
                  },
                  "time": {
                    "description": "when the event was published",
                    "type": "string",
                    "format": "date-time",
                    "descriptionAsHTML": "<p>when the event was published</p>\n"
                  },
                  "contenttype": {
                    "description": "mimetype of the data property.  default=application/json",
                    "type": "string",
                    "example": "application/json",
                    "descriptionAsHTML": "<p>mimetype of the data property.  default=application/json</p>\n"
                  },
                  "@context": {
                    "description": "message context used for transforming message content",
                    "type": "string",
                    "format": "uri",
                    "example": "http://realestate.yodata.me/context/v1.json",
                    "descriptionAsHTML": "<p>message context used for transforming message content</p>\n"
                  }
                }
              },
              "summaryAsHTML": "<p>a marketing program has been created</p>\n",
              "descriptionAsHTML": "",
              "generatedPayloadExample": "{\n  \"topic\": \"realestate/marketingprogram#create\",\n  \"data\": {\n    \"type\": \"CreateAction\",\n    \"agent\": null,\n    \"object\": {},\n    \"instrument\": \"https://{app}.example.com/profile/card#me\",\n    \"actionStatus\": \"CompletedActionStatus\"\n  },\n  \"source\": \"http://{user}.example.com/profile/card#me\",\n  \"instrument\": \"http://{supercrm}.example.com/profile/card#me\",\n  \"time\": \"2019-05-21T01:05:11Z\",\n  \"contenttype\": \"application/json\",\n  \"@context\": \"http://realestate.yodata.me/context/v1.json\"\n}"
            },
            {
              "x-title": "marketingprogram#memberadd",
              "x-scope": "realestate",
              "summary": "a program member was added by the agent (Work In Progress)",
              "payload": {
                "type": "object",
                "required": [
                  "topic",
                  "source",
                  "data"
                ],
                "properties": {
                  "topic": {
                    "description": "{domain}/{topic}#{event}",
                    "type": "string",
                    "enum": [
                      "realestate/marketingprogram#memberadd"
                    ],
                    "descriptionAsHTML": "<p>{domain}/{topic}#{event}</p>\n"
                  },
                  "data": {
                    "description": "the message payload",
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "AddAction"
                        ]
                      },
                      "object": {
                        "x-title": "ProgramMembership",
                        "description": "describes membership relation between a member (Person) and a MarketingProgram",
                        "type": "object",
                        "allOf": [
                          {
                            "type": "object",
                            "description": "Provides additional information in member/memberOf relationships.",
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "a role played by the member in the memberOf group",
                                "enum": [
                                  "OrganizationRole"
                                ],
                                "example": "OrganizationRole"
                              },
                              "roleName": {
                                "type": "string",
                                "example": "Owner"
                              },
                              "member": {
                                "description": "member object or id",
                                "x-range": [
                                  "Person",
                                  "Organization"
                                ],
                                "example": {
                                  "type": "Person",
                                  "email": "bob@example.com"
                                }
                              },
                              "memberOf": {
                                "description": "reference to the MarketingProgram"
                              },
                              "startDate": {
                                "type": "string",
                                "format": "date-time",
                                "description": "the date the member started the program"
                              },
                              "endDate": {
                                "type": "string",
                                "format": "date-time",
                                "description": "the date the program membership ended"
                              }
                            }
                          },
                          {
                            "example": {
                              "type": "ProgramMembership",
                              "roleName": "Owner",
                              "member": {
                                "type": "Person",
                                "email": "bob@example.com"
                              }
                            }
                          }
                        ],
                        "descriptionAsHTML": "<p>describes membership relation between a member (Person) and a MarketingProgram</p>\n"
                      }
                    },
                    "descriptionAsHTML": "<p>the message payload</p>\n"
                  },
                  "source": {
                    "description": "the event origin, typically a user",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{user}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>the event origin, typically a user</p>\n"
                  },
                  "instrument": {
                    "description": "event producer, typically an app or service",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{supercrm}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>event producer, typically an app or service</p>\n"
                  },
                  "time": {
                    "description": "when the event was published",
                    "type": "string",
                    "format": "date-time",
                    "descriptionAsHTML": "<p>when the event was published</p>\n"
                  },
                  "contenttype": {
                    "description": "mimetype of the data property.  default=application/json",
                    "type": "string",
                    "example": "application/json",
                    "descriptionAsHTML": "<p>mimetype of the data property.  default=application/json</p>\n"
                  },
                  "@context": {
                    "description": "message context used for transforming message content",
                    "type": "string",
                    "format": "uri",
                    "example": "http://realestate.yodata.me/context/v1.json",
                    "descriptionAsHTML": "<p>message context used for transforming message content</p>\n"
                  }
                }
              },
              "summaryAsHTML": "<p>a program member was added by the agent (Work In Progress)</p>\n",
              "descriptionAsHTML": "",
              "generatedPayloadExample": "{\n  \"topic\": \"realestate/marketingprogram#memberadd\",\n  \"data\": {\n    \"type\": \"AddAction\",\n    \"object\": {\n      \"type\": \"ProgramMembership\",\n      \"roleName\": \"Owner\",\n      \"member\": {\n        \"type\": \"Person\",\n        \"email\": \"bob@example.com\"\n      },\n      \"memberOf\": null,\n      \"startDate\": \"2019-05-21T01:05:11Z\",\n      \"endDate\": \"2019-05-21T01:05:11Z\"\n    }\n  },\n  \"source\": \"http://{user}.example.com/profile/card#me\",\n  \"instrument\": \"http://{supercrm}.example.com/profile/card#me\",\n  \"time\": \"2019-05-21T01:05:11Z\",\n  \"contenttype\": \"application/json\",\n  \"@context\": \"http://realestate.yodata.me/context/v1.json\"\n}"
            },
            {
              "x-title": "marketingprogram#memberremove",
              "x-scope": "realestate",
              "summary": "a member was removed by the agent",
              "payload": {
                "type": "object",
                "required": [
                  "topic",
                  "source",
                  "data"
                ],
                "properties": {
                  "topic": {
                    "description": "{domain}/{topic}#{event}",
                    "type": "string",
                    "enum": [
                      "realestate/marketingprogram#memberremove"
                    ],
                    "descriptionAsHTML": "<p>{domain}/{topic}#{event}</p>\n"
                  },
                  "data": {
                    "description": "the message payload",
                    "type": "object",
                    "properties": {
                      "type": {
                        "example": "RemoveAction"
                      },
                      "object": {
                        "x-title": "ProgramMembership",
                        "description": "describes membership relation between a member (Person) and a MarketingProgram",
                        "type": "object",
                        "allOf": [
                          {
                            "type": "object",
                            "description": "Provides additional information in member/memberOf relationships.",
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "a role played by the member in the memberOf group",
                                "enum": [
                                  "OrganizationRole"
                                ],
                                "example": "OrganizationRole"
                              },
                              "roleName": {
                                "type": "string",
                                "example": "Owner"
                              },
                              "member": {
                                "description": "member object or id",
                                "x-range": [
                                  "Person",
                                  "Organization"
                                ],
                                "example": {
                                  "type": "Person",
                                  "email": "bob@example.com"
                                }
                              },
                              "memberOf": {
                                "description": "reference to the MarketingProgram"
                              },
                              "startDate": {
                                "type": "string",
                                "format": "date-time",
                                "description": "the date the member started the program"
                              },
                              "endDate": {
                                "type": "string",
                                "format": "date-time",
                                "description": "the date the program membership ended"
                              }
                            }
                          },
                          {
                            "example": {
                              "type": "ProgramMembership",
                              "roleName": "Owner",
                              "member": {
                                "type": "Person",
                                "email": "bob@example.com"
                              }
                            }
                          }
                        ],
                        "descriptionAsHTML": "<p>describes membership relation between a member (Person) and a MarketingProgram</p>\n"
                      },
                      "targetCollection": {
                        "example": {
                          "type": "MarketingProgram",
                          "name": "My Marketing Program"
                        }
                      }
                    },
                    "descriptionAsHTML": "<p>the message payload</p>\n"
                  },
                  "source": {
                    "description": "the event origin, typically a user",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{user}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>the event origin, typically a user</p>\n"
                  },
                  "instrument": {
                    "description": "event producer, typically an app or service",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{supercrm}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>event producer, typically an app or service</p>\n"
                  },
                  "time": {
                    "description": "when the event was published",
                    "type": "string",
                    "format": "date-time",
                    "descriptionAsHTML": "<p>when the event was published</p>\n"
                  },
                  "contenttype": {
                    "description": "mimetype of the data property.  default=application/json",
                    "type": "string",
                    "example": "application/json",
                    "descriptionAsHTML": "<p>mimetype of the data property.  default=application/json</p>\n"
                  },
                  "@context": {
                    "description": "message context used for transforming message content",
                    "type": "string",
                    "format": "uri",
                    "example": "http://realestate.yodata.me/context/v1.json",
                    "descriptionAsHTML": "<p>message context used for transforming message content</p>\n"
                  }
                }
              },
              "summaryAsHTML": "<p>a member was removed by the agent</p>\n",
              "descriptionAsHTML": "",
              "generatedPayloadExample": "{\n  \"topic\": \"realestate/marketingprogram#memberremove\",\n  \"data\": {\n    \"type\": \"RemoveAction\",\n    \"object\": {\n      \"type\": \"ProgramMembership\",\n      \"roleName\": \"Owner\",\n      \"member\": {\n        \"type\": \"Person\",\n        \"email\": \"bob@example.com\"\n      },\n      \"memberOf\": null,\n      \"startDate\": \"2019-05-21T01:05:11Z\",\n      \"endDate\": \"2019-05-21T01:05:11Z\"\n    },\n    \"targetCollection\": {\n      \"type\": \"MarketingProgram\",\n      \"name\": \"My Marketing Program\"\n    }\n  },\n  \"source\": \"http://{user}.example.com/profile/card#me\",\n  \"instrument\": \"http://{supercrm}.example.com/profile/card#me\",\n  \"time\": \"2019-05-21T01:05:11Z\",\n  \"contenttype\": \"application/json\",\n  \"@context\": \"http://realestate.yodata.me/context/v1.json\"\n}"
            }
          ],
          "summaryAsHTML": "",
          "descriptionAsHTML": ""
        }
      },
      "profile": {
        "x-summary": "Affiliate, Office, and Agent profile events",
        "subscribe": {
          "oneOf": [
            {
              "x-title": "profile#add",
              "x-scope": "realestate",
              "summary": "a user profile was updated",
              "payload": {
                "type": "object",
                "required": [
                  "topic",
                  "source",
                  "data"
                ],
                "properties": {
                  "topic": {
                    "description": "realestate/profile#add",
                    "type": "string",
                    "enum": [
                      "realestate/profile#add"
                    ],
                    "descriptionAsHTML": "<p>realestate/profile#add</p>\n"
                  },
                  "data": {
                    "description": "the message payload",
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "AddAction"
                        ],
                        "description": "AddAction",
                        "descriptionAsHTML": "<p>AddAction</p>\n"
                      },
                      "object": {
                        "type": "object",
                        "description": "content of the profile which was added",
                        "x-range": [
                          "RealEstateOrganization",
                          "RealEstateOffice",
                          "RealEstateAgent",
                          "Person"
                        ],
                        "example": {
                          "type": "RealEstateAgent",
                          "name": "Arya Stark"
                        },
                        "descriptionAsHTML": "<p>content of the profile which was added</p>\n"
                      }
                    },
                    "descriptionAsHTML": "<p>the message payload</p>\n"
                  },
                  "source": {
                    "description": "the event origin, typically a user",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{user}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>the event origin, typically a user</p>\n"
                  },
                  "instrument": {
                    "description": "event producer, typically an app or service",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{supercrm}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>event producer, typically an app or service</p>\n"
                  },
                  "time": {
                    "description": "when the event was published",
                    "type": "string",
                    "format": "date-time",
                    "descriptionAsHTML": "<p>when the event was published</p>\n"
                  },
                  "contenttype": {
                    "description": "mimetype of the data property.  default=application/json",
                    "type": "string",
                    "example": "application/json",
                    "descriptionAsHTML": "<p>mimetype of the data property.  default=application/json</p>\n"
                  },
                  "@context": {
                    "description": "message context used for transforming message content",
                    "type": "string",
                    "format": "uri",
                    "example": "http://realestate.yodata.me/context/v1.json",
                    "descriptionAsHTML": "<p>message context used for transforming message content</p>\n"
                  }
                }
              },
              "summaryAsHTML": "<p>a user profile was updated</p>\n",
              "descriptionAsHTML": "",
              "generatedPayloadExample": "{\n  \"topic\": \"realestate/profile#add\",\n  \"data\": {\n    \"type\": \"AddAction\",\n    \"object\": {\n      \"type\": \"RealEstateAgent\",\n      \"name\": \"Arya Stark\"\n    }\n  },\n  \"source\": \"http://{user}.example.com/profile/card#me\",\n  \"instrument\": \"http://{supercrm}.example.com/profile/card#me\",\n  \"time\": \"2019-05-21T01:05:11Z\",\n  \"contenttype\": \"application/json\",\n  \"@context\": \"http://realestate.yodata.me/context/v1.json\"\n}"
            },
            {
              "x-title": "profile#update",
              "x-scope": "realestate",
              "summary": "profile was updated.",
              "payload": {
                "type": "object",
                "required": [
                  "topic",
                  "source",
                  "data"
                ],
                "properties": {
                  "topic": {
                    "description": "{domain}/{topic}#{event}",
                    "type": "string",
                    "descriptionAsHTML": "<p>{domain}/{topic}#{event}</p>\n"
                  },
                  "data": {
                    "description": "the message payload",
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "UpdateAction"
                        ],
                        "description": "UpdateAction",
                        "descriptionAsHTML": "<p>UpdateAction</p>\n"
                      },
                      "object": {
                        "type": "object",
                        "description": "content of the profile which was added",
                        "x-range": [
                          "RealEstateOrganization",
                          "RealEstateOffice",
                          "RealEstateAgent",
                          "Person"
                        ],
                        "example": {
                          "type": "RealEstateAgent",
                          "name": "Arya Stark"
                        },
                        "descriptionAsHTML": "<p>content of the profile which was added</p>\n"
                      }
                    },
                    "descriptionAsHTML": "<p>the message payload</p>\n"
                  },
                  "source": {
                    "description": "the event origin, typically a user",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{user}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>the event origin, typically a user</p>\n"
                  },
                  "instrument": {
                    "description": "event producer, typically an app or service",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{supercrm}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>event producer, typically an app or service</p>\n"
                  },
                  "time": {
                    "description": "when the event was published",
                    "type": "string",
                    "format": "date-time",
                    "descriptionAsHTML": "<p>when the event was published</p>\n"
                  },
                  "contenttype": {
                    "description": "mimetype of the data property.  default=application/json",
                    "type": "string",
                    "example": "application/json",
                    "descriptionAsHTML": "<p>mimetype of the data property.  default=application/json</p>\n"
                  },
                  "@context": {
                    "description": "message context used for transforming message content",
                    "type": "string",
                    "format": "uri",
                    "example": "http://realestate.yodata.me/context/v1.json",
                    "descriptionAsHTML": "<p>message context used for transforming message content</p>\n"
                  }
                }
              },
              "summaryAsHTML": "<p>profile was updated.</p>\n",
              "descriptionAsHTML": "",
              "generatedPayloadExample": "{\n  \"topic\": \"string\",\n  \"data\": {\n    \"type\": \"UpdateAction\",\n    \"object\": {\n      \"type\": \"RealEstateAgent\",\n      \"name\": \"Arya Stark\"\n    }\n  },\n  \"source\": \"http://{user}.example.com/profile/card#me\",\n  \"instrument\": \"http://{supercrm}.example.com/profile/card#me\",\n  \"time\": \"2019-05-21T01:05:11Z\",\n  \"contenttype\": \"application/json\",\n  \"@context\": \"http://realestate.yodata.me/context/v1.json\"\n}"
            }
          ],
          "summaryAsHTML": "",
          "descriptionAsHTML": ""
        }
      },
      "website": {
        "x-summary": "Website events",
        "subscribe": {
          "oneOf": [
            {
              "x-title": "appointmentrequest",
              "x-scope": "realestate/website#",
              "summary": "a website vistor has requested an appointment",
              "payload": {
                "type": "object",
                "required": [
                  "topic",
                  "source",
                  "data"
                ],
                "properties": {
                  "topic": {
                    "description": "realestate/website#appointmentrequest",
                    "type": "string",
                    "enum": [
                      "realestate/website#appointmentrequest"
                    ],
                    "descriptionAsHTML": "<p>realestate/website#appointmentrequest</p>\n"
                  },
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "type": {
                        "description": "the action type",
                        "type": "string",
                        "enum": [
                          "AppointmentRequest"
                        ],
                        "descriptionAsHTML": "<p>the action type</p>\n"
                      },
                      "agent": {
                        "description": "a website user/visitor",
                        "type": "object",
                        "x-range": "Person",
                        "example": {
                          "type": "Person",
                          "name": "Bob",
                          "email": "bob@example.com",
                          "telephone": "1+000-867-5309",
                          "identifier": {
                            "vendornameuserid": "abc123"
                          }
                        },
                        "descriptionAsHTML": "<p>a website user/visitor</p>\n"
                      },
                      "object": {
                        "description": "The object upon which the action is carried out",
                        "type": "object",
                        "allOf": [
                          {
                            "type": "object",
                            "required": [
                              "type"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "Linked-Data (@type)"
                              },
                              "id": {
                                "type": "string",
                                "format": "uri",
                                "description": "Linked-Data uri"
                              },
                              "name": {
                                "type": "string",
                                "description": "the name of the item."
                              },
                              "url": {
                                "type": "string",
                                "format": "uri",
                                "description": "a public href that is clearly and uniquely associated with the item."
                              }
                            }
                          },
                          {
                            "type": "object",
                            "description": "A comment on an item.",
                            "properties": {
                              "type": {
                                "description": "Comment",
                                "type": "string",
                                "enum": [
                                  "Comment"
                                ]
                              },
                              "author": {
                                "type": "object",
                                "x-kind": "Person",
                                "example": {
                                  "type": "Person",
                                  "name": "Paul Person"
                                }
                              },
                              "text": {
                                "description": "the comment content",
                                "type": "string",
                                "example": "Commodi ratione vel qui ullam ea ut."
                              },
                              "about": {
                                "title": "about",
                                "type": "object",
                                "description": "the subject of the item",
                                "example": {
                                  "type": "RealEstateListing",
                                  "id": "https://example.com/listingid"
                                }
                              }
                            },
                            "example": {
                              "type": "Comment",
                              "text": "Winter is coming",
                              "author": {
                                "type": "Person",
                                "email": "user@example.com"
                              },
                              "about": {
                                "type": "RealEstateListing",
                                "id": "http://example.com/listing/1"
                              }
                            }
                          }
                        ],
                        "descriptionAsHTML": "<p>The object upon which the action is carried out</p>\n"
                      },
                      "instrument": {
                        "description": "thing used by the agent to perform the action, i.e. an application or website that generated the message.",
                        "example": "https://{app}.example.com/profile/card#me",
                        "descriptionAsHTML": "<p>thing used by the agent to perform the action, i.e. an application or website that generated the message.</p>\n"
                      },
                      "recipient": {
                        "description": "the request recipient",
                        "x-range": [
                          "Person",
                          "Organization"
                        ],
                        "example": "http://{agent}.example.com/profile/card#me",
                        "descriptionAsHTML": "<p>the request recipient</p>\n"
                      }
                    },
                    "externalDocs": {
                      "description": "schema.org/Action",
                      "url": "https://schema.org/Action"
                    }
                  },
                  "source": {
                    "description": "the event origin, typically a user",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{user}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>the event origin, typically a user</p>\n"
                  },
                  "instrument": {
                    "description": "event producer, typically an app or service",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{supercrm}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>event producer, typically an app or service</p>\n"
                  },
                  "time": {
                    "description": "when the event was published",
                    "type": "string",
                    "format": "date-time",
                    "descriptionAsHTML": "<p>when the event was published</p>\n"
                  },
                  "contenttype": {
                    "description": "mimetype of the data property.  default=application/json",
                    "type": "string",
                    "example": "application/json",
                    "descriptionAsHTML": "<p>mimetype of the data property.  default=application/json</p>\n"
                  },
                  "@context": {
                    "description": "message context used for transforming message content",
                    "type": "string",
                    "format": "uri",
                    "example": "http://realestate.yodata.me/context/v1.json",
                    "descriptionAsHTML": "<p>message context used for transforming message content</p>\n"
                  }
                }
              },
              "summaryAsHTML": "<p>a website vistor has requested an appointment</p>\n",
              "descriptionAsHTML": "",
              "generatedPayloadExample": "{\n  \"topic\": \"realestate/website#appointmentrequest\",\n  \"data\": {\n    \"type\": \"AppointmentRequest\",\n    \"agent\": {\n      \"type\": \"Person\",\n      \"name\": \"Bob\",\n      \"email\": \"bob@example.com\",\n      \"telephone\": \"1+000-867-5309\",\n      \"identifier\": {\n        \"vendornameuserid\": \"abc123\"\n      }\n    },\n    \"object\": {\n      \"type\": \"Comment\",\n      \"id\": \"http://example.com\",\n      \"name\": \"string\",\n      \"url\": \"http://example.com\",\n      \"text\": \"Winter is coming\",\n      \"author\": {\n        \"type\": \"Person\",\n        \"email\": \"user@example.com\"\n      },\n      \"about\": {\n        \"type\": \"RealEstateListing\",\n        \"id\": \"http://example.com/listing/1\"\n      }\n    },\n    \"instrument\": \"https://{app}.example.com/profile/card#me\",\n    \"recipient\": \"http://{agent}.example.com/profile/card#me\"\n  },\n  \"source\": \"http://{user}.example.com/profile/card#me\",\n  \"instrument\": \"http://{supercrm}.example.com/profile/card#me\",\n  \"time\": \"2019-05-21T01:05:11Z\",\n  \"contenttype\": \"application/json\",\n  \"@context\": \"http://realestate.yodata.me/context/v1.json\"\n}"
            },
            {
              "x-title": "propertyoffer",
              "x-scope": "realestate/website#",
              "summary": "website user makes an offer on a property listing",
              "payload": {
                "type": "object",
                "required": [
                  "topic",
                  "source",
                  "data"
                ],
                "properties": {
                  "topic": {
                    "description": "realestate/website#propertyoffer",
                    "type": "string",
                    "enum": [
                      "realestate/website#propertyoffer"
                    ],
                    "descriptionAsHTML": "<p>realestate/website#propertyoffer</p>\n"
                  },
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "type": {
                        "description": "OfferAction",
                        "type": "string",
                        "enum": [
                          "OfferAction"
                        ],
                        "descriptionAsHTML": "<p>OfferAction</p>\n"
                      },
                      "agent": {
                        "description": "a website user/visitor",
                        "type": "object",
                        "x-range": "Person",
                        "example": {
                          "type": "Person",
                          "name": "Bob",
                          "email": "bob@example.com",
                          "telephone": "1+000-867-5309",
                          "identifier": {
                            "vendornameuserid": "abc123"
                          }
                        },
                        "descriptionAsHTML": "<p>a website user/visitor</p>\n"
                      },
                      "object": {
                        "description": "reference to the item on which the offer is being made",
                        "type": "object",
                        "example": {
                          "type": "RealEstateListing",
                          "id": "http://example.com/12345"
                        },
                        "descriptionAsHTML": "<p>reference to the item on which the offer is being made</p>\n"
                      },
                      "instrument": {
                        "description": "thing used by the agent to perform the action, i.e. an application or website that generated the message.",
                        "example": "https://{app}.example.com/profile/card#me",
                        "descriptionAsHTML": "<p>thing used by the agent to perform the action, i.e. an application or website that generated the message.</p>\n"
                      },
                      "id": {
                        "type": "string",
                        "format": "uri",
                        "description": "Linked-Data uri",
                        "descriptionAsHTML": "<p>Linked-Data uri</p>\n"
                      },
                      "name": {
                        "type": "string",
                        "description": "the name of the item.",
                        "descriptionAsHTML": "<p>the name of the item.</p>\n"
                      },
                      "url": {
                        "type": "string",
                        "format": "uri",
                        "description": "a public href that is clearly and uniquely associated with the item.",
                        "descriptionAsHTML": "<p>a public href that is clearly and uniquely associated with the item.</p>\n"
                      },
                      "recipient": {
                        "type": "object",
                        "x-range": [
                          "Person",
                          "Organization"
                        ],
                        "description": "the offer recipient",
                        "example": {
                          "id": "http://user.example.com/profile/card#me"
                        },
                        "descriptionAsHTML": "<p>the offer recipient</p>\n"
                      },
                      "offerPrice": {
                        "title": "PriceSpecification",
                        "type": "object",
                        "x-range": "PriceSpecification",
                        "description": "a price offered for transfer of ownership of an item",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "PriceSpecification",
                            "enum": [
                              "PriceSpecification"
                            ],
                            "descriptionAsHTML": "<p>PriceSpecification</p>\n"
                          },
                          "minPrice": {
                            "type": "number",
                            "description": "the lowest value if the price is a range",
                            "descriptionAsHTML": "<p>the lowest value if the price is a range</p>\n"
                          },
                          "maxPrice": {
                            "type": "number",
                            "description": "the high price offered if the price is a range",
                            "descriptionAsHTML": "<p>the high price offered if the price is a range</p>\n"
                          },
                          "price": {
                            "type": "number",
                            "description": "the price",
                            "descriptionAsHTML": "<p>the price</p>\n"
                          },
                          "priceCurrency": {
                            "type": "string",
                            "description": "use ISO4217",
                            "example": "USD",
                            "descriptionAsHTML": "<p>use ISO4217</p>\n"
                          }
                        },
                        "descriptionAsHTML": "<p>a price offered for transfer of ownership of an item</p>\n"
                      }
                    },
                    "externalDocs": {
                      "description": "schema.org/Action",
                      "url": "https://schema.org/Action"
                    },
                    "description": "an agent makes an offer to buy the object",
                    "descriptionAsHTML": "<p>an agent makes an offer to buy the object</p>\n"
                  },
                  "source": {
                    "description": "the event origin, typically a user",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{user}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>the event origin, typically a user</p>\n"
                  },
                  "instrument": {
                    "description": "event producer, typically an app or service",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{supercrm}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>event producer, typically an app or service</p>\n"
                  },
                  "time": {
                    "description": "when the event was published",
                    "type": "string",
                    "format": "date-time",
                    "descriptionAsHTML": "<p>when the event was published</p>\n"
                  },
                  "contenttype": {
                    "description": "mimetype of the data property.  default=application/json",
                    "type": "string",
                    "example": "application/json",
                    "descriptionAsHTML": "<p>mimetype of the data property.  default=application/json</p>\n"
                  },
                  "@context": {
                    "description": "message context used for transforming message content",
                    "type": "string",
                    "format": "uri",
                    "example": "http://realestate.yodata.me/context/v1.json",
                    "descriptionAsHTML": "<p>message context used for transforming message content</p>\n"
                  }
                }
              },
              "summaryAsHTML": "<p>website user makes an offer on a property listing</p>\n",
              "descriptionAsHTML": "",
              "generatedPayloadExample": "{\n  \"topic\": \"realestate/website#propertyoffer\",\n  \"data\": {\n    \"type\": \"OfferAction\",\n    \"agent\": {\n      \"type\": \"Person\",\n      \"name\": \"Bob\",\n      \"email\": \"bob@example.com\",\n      \"telephone\": \"1+000-867-5309\",\n      \"identifier\": {\n        \"vendornameuserid\": \"abc123\"\n      }\n    },\n    \"object\": {\n      \"type\": \"RealEstateListing\",\n      \"id\": \"http://example.com/12345\"\n    },\n    \"instrument\": \"https://{app}.example.com/profile/card#me\",\n    \"id\": \"http://example.com\",\n    \"name\": \"string\",\n    \"url\": \"http://example.com\",\n    \"recipient\": {\n      \"id\": \"http://user.example.com/profile/card#me\"\n    },\n    \"offerPrice\": {\n      \"type\": \"PriceSpecification\",\n      \"minPrice\": 0,\n      \"maxPrice\": 0,\n      \"price\": 0,\n      \"priceCurrency\": \"USD\"\n    }\n  },\n  \"source\": \"http://{user}.example.com/profile/card#me\",\n  \"instrument\": \"http://{supercrm}.example.com/profile/card#me\",\n  \"time\": \"2019-05-21T01:05:11Z\",\n  \"contenttype\": \"application/json\",\n  \"@context\": \"http://realestate.yodata.me/context/v1.json\"\n}"
            },
            {
              "x-title": "propertysearch",
              "x-scope": "realestate/website#",
              "summary": "website visitor (agent) has searched for properties on",
              "payload": {
                "type": "object",
                "required": [
                  "topic",
                  "source",
                  "data"
                ],
                "properties": {
                  "topic": {
                    "description": "realestate/website#propertysearch",
                    "type": "string",
                    "enum": [
                      "realestate/website#propertysearch"
                    ],
                    "descriptionAsHTML": "<p>realestate/website#propertysearch</p>\n"
                  },
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "type": {
                        "description": "the action type",
                        "type": "string",
                        "enum": [
                          "SearchAction"
                        ],
                        "descriptionAsHTML": "<p>the action type</p>\n"
                      },
                      "agent": {
                        "description": "a website user/visitor",
                        "type": "object",
                        "x-range": "Person",
                        "example": {
                          "type": "Person",
                          "name": "Bob",
                          "email": "bob@example.com",
                          "telephone": "1+000-867-5309",
                          "identifier": {
                            "vendornameuserid": "abc123"
                          }
                        },
                        "descriptionAsHTML": "<p>a website user/visitor</p>\n"
                      },
                      "object": {
                        "description": "The object upon which the action is carried out",
                        "type": "object",
                        "title": "PropertySearchArguments",
                        "x-range": "PropertySearchArguments",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "PropertySearchArguments"
                            ]
                          },
                          "price": {
                            "type": "object",
                            "description": "A point value or interval.",
                            "properties": {
                              "value": {
                                "type": "number"
                              },
                              "minValue": {
                                "type": "number"
                              },
                              "maxValue": {
                                "type": "number"
                              },
                              "unitCode": {
                                "type": "string"
                              },
                              "unitText": {
                                "type": "string"
                              }
                            },
                            "descriptionAsHTML": "<p>A point value or interval.</p>\n"
                          },
                          "bedrooms": {
                            "type": "object",
                            "description": "A point value or interval.",
                            "properties": {
                              "value": {
                                "type": "number"
                              },
                              "minValue": {
                                "type": "number"
                              },
                              "maxValue": {
                                "type": "number"
                              },
                              "unitCode": {
                                "type": "string"
                              },
                              "unitText": {
                                "type": "string"
                              }
                            },
                            "descriptionAsHTML": "<p>A point value or interval.</p>\n"
                          },
                          "bathrooms": {
                            "type": "object",
                            "description": "A point value or interval.",
                            "properties": {
                              "value": {
                                "type": "number"
                              },
                              "minValue": {
                                "type": "number"
                              },
                              "maxValue": {
                                "type": "number"
                              },
                              "unitCode": {
                                "type": "string"
                              },
                              "unitText": {
                                "type": "string"
                              }
                            },
                            "descriptionAsHTML": "<p>A point value or interval.</p>\n"
                          },
                          "location": {
                            "x-range": [
                              "Place",
                              "PostalAddress",
                              "Text"
                            ],
                            "description": "The location of for example where the event is happening, an organization is located, or where an action takes place.",
                            "type": "object",
                            "descriptionAsHTML": "<p>The location of for example where the event is happening, an organization is located, or where an action takes place.</p>\n"
                          }
                        },
                        "descriptionAsHTML": "<p>The object upon which the action is carried out</p>\n"
                      },
                      "instrument": {
                        "description": "thing used by the agent to perform the action, i.e. an application or website that generated the message.",
                        "example": "https://{app}.example.com/profile/card#me",
                        "type": "object",
                        "properties": {
                          "query": {
                            "type": "string",
                            "description": "text search input",
                            "descriptionAsHTML": "<p>text search input</p>\n"
                          }
                        },
                        "descriptionAsHTML": "<p>thing used by the agent to perform the action, i.e. an application or website that generated the message.</p>\n"
                      }
                    },
                    "externalDocs": {
                      "description": "schema.org/Action",
                      "url": "https://schema.org/Action"
                    }
                  },
                  "source": {
                    "description": "the event origin, typically a user",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{user}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>the event origin, typically a user</p>\n"
                  },
                  "instrument": {
                    "description": "event producer, typically an app or service",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{supercrm}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>event producer, typically an app or service</p>\n"
                  },
                  "time": {
                    "description": "when the event was published",
                    "type": "string",
                    "format": "date-time",
                    "descriptionAsHTML": "<p>when the event was published</p>\n"
                  },
                  "contenttype": {
                    "description": "mimetype of the data property.  default=application/json",
                    "type": "string",
                    "example": "application/json",
                    "descriptionAsHTML": "<p>mimetype of the data property.  default=application/json</p>\n"
                  },
                  "@context": {
                    "description": "message context used for transforming message content",
                    "type": "string",
                    "format": "uri",
                    "example": "http://realestate.yodata.me/context/v1.json",
                    "descriptionAsHTML": "<p>message context used for transforming message content</p>\n"
                  }
                }
              },
              "summaryAsHTML": "<p>website visitor (agent) has searched for properties on</p>\n",
              "descriptionAsHTML": "",
              "generatedPayloadExample": "{\n  \"topic\": \"realestate/website#propertysearch\",\n  \"data\": {\n    \"type\": \"SearchAction\",\n    \"agent\": {\n      \"type\": \"Person\",\n      \"name\": \"Bob\",\n      \"email\": \"bob@example.com\",\n      \"telephone\": \"1+000-867-5309\",\n      \"identifier\": {\n        \"vendornameuserid\": \"abc123\"\n      }\n    },\n    \"object\": {\n      \"type\": \"PropertySearchArguments\",\n      \"price\": {\n        \"value\": 0,\n        \"minValue\": 0,\n        \"maxValue\": 0,\n        \"unitCode\": \"string\",\n        \"unitText\": \"string\"\n      },\n      \"bedrooms\": {\n        \"value\": 0,\n        \"minValue\": 0,\n        \"maxValue\": 0,\n        \"unitCode\": \"string\",\n        \"unitText\": \"string\"\n      },\n      \"bathrooms\": {\n        \"value\": 0,\n        \"minValue\": 0,\n        \"maxValue\": 0,\n        \"unitCode\": \"string\",\n        \"unitText\": \"string\"\n      },\n      \"location\": {}\n    },\n    \"instrument\": \"https://{app}.example.com/profile/card#me\"\n  },\n  \"source\": \"http://{user}.example.com/profile/card#me\",\n  \"instrument\": \"http://{supercrm}.example.com/profile/card#me\",\n  \"time\": \"2019-05-21T01:05:11Z\",\n  \"contenttype\": \"application/json\",\n  \"@context\": \"http://realestate.yodata.me/context/v1.json\"\n}"
            },
            {
              "x-title": "propertyshare",
              "x-scope": "realestate/website#",
              "summary": "agent shared object with recipient",
              "payload": {
                "type": "object",
                "required": [
                  "topic",
                  "source",
                  "data"
                ],
                "properties": {
                  "topic": {
                    "description": "realestate/website#propertyshare",
                    "type": "string",
                    "enum": [
                      "realestate/website#propertyshare"
                    ],
                    "descriptionAsHTML": "<p>realestate/website#propertyshare</p>\n"
                  },
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "type": {
                        "description": "the action type",
                        "type": "string",
                        "enum": [
                          "ShareAction"
                        ],
                        "descriptionAsHTML": "<p>the action type</p>\n"
                      },
                      "agent": {
                        "description": "a website user/visitor",
                        "type": "object",
                        "x-range": "Person",
                        "example": {
                          "type": "Person",
                          "name": "Bob",
                          "email": "bob@example.com",
                          "telephone": "1+000-867-5309",
                          "identifier": {
                            "vendornameuserid": "abc123"
                          }
                        },
                        "descriptionAsHTML": "<p>a website user/visitor</p>\n"
                      },
                      "object": {
                        "description": "The object upon which the action is carried out",
                        "type": "object",
                        "descriptionAsHTML": "<p>The object upon which the action is carried out</p>\n"
                      },
                      "instrument": {
                        "description": "thing used by the agent to perform the action, i.e. an application or website that generated the message.",
                        "example": "https://{app}.example.com/profile/card#me",
                        "descriptionAsHTML": "<p>thing used by the agent to perform the action, i.e. an application or website that generated the message.</p>\n"
                      }
                    },
                    "externalDocs": {
                      "description": "schema.org/Action",
                      "url": "https://schema.org/Action"
                    }
                  },
                  "source": {
                    "description": "the event origin, typically a user",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{user}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>the event origin, typically a user</p>\n"
                  },
                  "instrument": {
                    "description": "event producer, typically an app or service",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{supercrm}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>event producer, typically an app or service</p>\n"
                  },
                  "time": {
                    "description": "when the event was published",
                    "type": "string",
                    "format": "date-time",
                    "descriptionAsHTML": "<p>when the event was published</p>\n"
                  },
                  "contenttype": {
                    "description": "mimetype of the data property.  default=application/json",
                    "type": "string",
                    "example": "application/json",
                    "descriptionAsHTML": "<p>mimetype of the data property.  default=application/json</p>\n"
                  },
                  "@context": {
                    "description": "message context used for transforming message content",
                    "type": "string",
                    "format": "uri",
                    "example": "http://realestate.yodata.me/context/v1.json",
                    "descriptionAsHTML": "<p>message context used for transforming message content</p>\n"
                  }
                }
              },
              "summaryAsHTML": "<p>agent shared object with recipient</p>\n",
              "descriptionAsHTML": "",
              "generatedPayloadExample": "{\n  \"topic\": \"realestate/website#propertyshare\",\n  \"data\": {\n    \"type\": \"ShareAction\",\n    \"agent\": {\n      \"type\": \"Person\",\n      \"name\": \"Bob\",\n      \"email\": \"bob@example.com\",\n      \"telephone\": \"1+000-867-5309\",\n      \"identifier\": {\n        \"vendornameuserid\": \"abc123\"\n      }\n    },\n    \"object\": {},\n    \"instrument\": \"https://{app}.example.com/profile/card#me\"\n  },\n  \"source\": \"http://{user}.example.com/profile/card#me\",\n  \"instrument\": \"http://{supercrm}.example.com/profile/card#me\",\n  \"time\": \"2019-05-21T01:05:11Z\",\n  \"contenttype\": \"application/json\",\n  \"@context\": \"http://realestate.yodata.me/context/v1.json\"\n}"
            },
            {
              "x-title": "propertyview",
              "x-scope": "realestate/website#",
              "summary": "website user (agent) viewed an (object) on website (instrument)",
              "payload": {
                "type": "object",
                "required": [
                  "topic",
                  "source",
                  "data"
                ],
                "properties": {
                  "topic": {
                    "description": "realestate/website#propertyview",
                    "type": "string",
                    "enum": [
                      "realestate/website#propertyview"
                    ],
                    "descriptionAsHTML": "<p>realestate/website#propertyview</p>\n"
                  },
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "type": {
                        "description": "the action type",
                        "type": "string",
                        "enum": [
                          "ViewAction"
                        ],
                        "descriptionAsHTML": "<p>the action type</p>\n"
                      },
                      "agent": {
                        "description": "a website user/visitor",
                        "type": "object",
                        "x-range": "Person",
                        "example": {
                          "type": "Person",
                          "name": "Bob",
                          "email": "bob@example.com",
                          "telephone": "1+000-867-5309",
                          "identifier": {
                            "vendornameuserid": "abc123"
                          }
                        },
                        "descriptionAsHTML": "<p>a website user/visitor</p>\n"
                      },
                      "object": {
                        "description": "The object upon which the action is carried out",
                        "type": "object",
                        "descriptionAsHTML": "<p>The object upon which the action is carried out</p>\n"
                      },
                      "instrument": {
                        "description": "thing used by the agent to perform the action, i.e. an application or website that generated the message.",
                        "example": "https://{app}.example.com/profile/card#me",
                        "descriptionAsHTML": "<p>thing used by the agent to perform the action, i.e. an application or website that generated the message.</p>\n"
                      }
                    },
                    "externalDocs": {
                      "description": "schema.org/Action",
                      "url": "https://schema.org/Action"
                    }
                  },
                  "source": {
                    "description": "the event origin, typically a user",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{user}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>the event origin, typically a user</p>\n"
                  },
                  "instrument": {
                    "description": "event producer, typically an app or service",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{supercrm}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>event producer, typically an app or service</p>\n"
                  },
                  "time": {
                    "description": "when the event was published",
                    "type": "string",
                    "format": "date-time",
                    "descriptionAsHTML": "<p>when the event was published</p>\n"
                  },
                  "contenttype": {
                    "description": "mimetype of the data property.  default=application/json",
                    "type": "string",
                    "example": "application/json",
                    "descriptionAsHTML": "<p>mimetype of the data property.  default=application/json</p>\n"
                  },
                  "@context": {
                    "description": "message context used for transforming message content",
                    "type": "string",
                    "format": "uri",
                    "example": "http://realestate.yodata.me/context/v1.json",
                    "descriptionAsHTML": "<p>message context used for transforming message content</p>\n"
                  }
                }
              },
              "summaryAsHTML": "<p>website user (agent) viewed an (object) on website (instrument)</p>\n",
              "descriptionAsHTML": "",
              "generatedPayloadExample": "{\n  \"topic\": \"realestate/website#propertyview\",\n  \"data\": {\n    \"type\": \"ViewAction\",\n    \"agent\": {\n      \"type\": \"Person\",\n      \"name\": \"Bob\",\n      \"email\": \"bob@example.com\",\n      \"telephone\": \"1+000-867-5309\",\n      \"identifier\": {\n        \"vendornameuserid\": \"abc123\"\n      }\n    },\n    \"object\": {},\n    \"instrument\": \"https://{app}.example.com/profile/card#me\"\n  },\n  \"source\": \"http://{user}.example.com/profile/card#me\",\n  \"instrument\": \"http://{supercrm}.example.com/profile/card#me\",\n  \"time\": \"2019-05-21T01:05:11Z\",\n  \"contenttype\": \"application/json\",\n  \"@context\": \"http://realestate.yodata.me/context/v1.json\"\n}"
            },
            {
              "x-title": "question",
              "x-scope": "realestate/website#",
              "summary": "a website visitor has asked a question",
              "payload": {
                "type": "object",
                "required": [
                  "topic",
                  "source",
                  "data"
                ],
                "properties": {
                  "topic": {
                    "description": "{domain}/{topic}#{event}",
                    "type": "string",
                    "enum": [
                      "realestate/website#question"
                    ],
                    "descriptionAsHTML": "<p>{domain}/{topic}#{event}</p>\n"
                  },
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "type": {
                        "description": "the action type",
                        "type": "string",
                        "enum": [
                          "Action"
                        ],
                        "descriptionAsHTML": "<p>the action type</p>\n"
                      },
                      "agent": {
                        "description": "a website user/visitor",
                        "type": "object",
                        "x-range": "Person",
                        "example": {
                          "type": "Person",
                          "name": "Bob",
                          "email": "bob@example.com",
                          "telephone": "1+000-867-5309",
                          "identifier": {
                            "vendornameuserid": "abc123"
                          }
                        },
                        "descriptionAsHTML": "<p>a website user/visitor</p>\n"
                      },
                      "object": {
                        "description": "The object upon which the action is carried out",
                        "type": "object",
                        "descriptionAsHTML": "<p>The object upon which the action is carried out</p>\n"
                      },
                      "instrument": {
                        "description": "thing used by the agent to perform the action, i.e. an application or website that generated the message.",
                        "example": "https://{app}.example.com/profile/card#me",
                        "descriptionAsHTML": "<p>thing used by the agent to perform the action, i.e. an application or website that generated the message.</p>\n"
                      }
                    },
                    "externalDocs": {
                      "description": "schema.org/Action",
                      "url": "https://schema.org/Action"
                    }
                  },
                  "source": {
                    "description": "the event origin, typically a user",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{user}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>the event origin, typically a user</p>\n"
                  },
                  "instrument": {
                    "description": "event producer, typically an app or service",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{supercrm}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>event producer, typically an app or service</p>\n"
                  },
                  "time": {
                    "description": "when the event was published",
                    "type": "string",
                    "format": "date-time",
                    "descriptionAsHTML": "<p>when the event was published</p>\n"
                  },
                  "contenttype": {
                    "description": "mimetype of the data property.  default=application/json",
                    "type": "string",
                    "example": "application/json",
                    "descriptionAsHTML": "<p>mimetype of the data property.  default=application/json</p>\n"
                  },
                  "@context": {
                    "description": "message context used for transforming message content",
                    "type": "string",
                    "format": "uri",
                    "example": "http://realestate.yodata.me/context/v1.json",
                    "descriptionAsHTML": "<p>message context used for transforming message content</p>\n"
                  }
                }
              },
              "summaryAsHTML": "<p>a website visitor has asked a question</p>\n",
              "descriptionAsHTML": "",
              "generatedPayloadExample": "{\n  \"topic\": \"realestate/website#question\",\n  \"data\": {\n    \"type\": \"Action\",\n    \"agent\": {\n      \"type\": \"Person\",\n      \"name\": \"Bob\",\n      \"email\": \"bob@example.com\",\n      \"telephone\": \"1+000-867-5309\",\n      \"identifier\": {\n        \"vendornameuserid\": \"abc123\"\n      }\n    },\n    \"object\": {},\n    \"instrument\": \"https://{app}.example.com/profile/card#me\"\n  },\n  \"source\": \"http://{user}.example.com/profile/card#me\",\n  \"instrument\": \"http://{supercrm}.example.com/profile/card#me\",\n  \"time\": \"2019-05-21T01:05:11Z\",\n  \"contenttype\": \"application/json\",\n  \"@context\": \"http://realestate.yodata.me/context/v1.json\"\n}"
            },
            {
              "x-title": "register",
              "x-scope": "realestate/website#",
              "summary": "a website visitor has registered",
              "payload": {
                "type": "object",
                "required": [
                  "topic",
                  "source",
                  "data"
                ],
                "properties": {
                  "topic": {
                    "description": "{domain}/{topic}#{event}",
                    "type": "string",
                    "enum": [
                      "realestate/website#register"
                    ],
                    "descriptionAsHTML": "<p>{domain}/{topic}#{event}</p>\n"
                  },
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "type": {
                        "description": "the action type",
                        "type": "string",
                        "enum": [
                          "Action"
                        ],
                        "descriptionAsHTML": "<p>the action type</p>\n"
                      },
                      "agent": {
                        "description": "a website user/visitor",
                        "type": "object",
                        "x-range": "Person",
                        "example": {
                          "type": "Person",
                          "name": "Bob",
                          "email": "bob@example.com",
                          "telephone": "1+000-867-5309",
                          "identifier": {
                            "vendornameuserid": "abc123"
                          }
                        },
                        "descriptionAsHTML": "<p>a website user/visitor</p>\n"
                      },
                      "object": {
                        "description": "The object upon which the action is carried out",
                        "type": "object",
                        "descriptionAsHTML": "<p>The object upon which the action is carried out</p>\n"
                      },
                      "instrument": {
                        "description": "thing used by the agent to perform the action, i.e. an application or website that generated the message.",
                        "example": "https://{app}.example.com/profile/card#me",
                        "descriptionAsHTML": "<p>thing used by the agent to perform the action, i.e. an application or website that generated the message.</p>\n"
                      }
                    },
                    "externalDocs": {
                      "description": "schema.org/Action",
                      "url": "https://schema.org/Action"
                    }
                  },
                  "source": {
                    "description": "the event origin, typically a user",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{user}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>the event origin, typically a user</p>\n"
                  },
                  "instrument": {
                    "description": "event producer, typically an app or service",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{supercrm}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>event producer, typically an app or service</p>\n"
                  },
                  "time": {
                    "description": "when the event was published",
                    "type": "string",
                    "format": "date-time",
                    "descriptionAsHTML": "<p>when the event was published</p>\n"
                  },
                  "contenttype": {
                    "description": "mimetype of the data property.  default=application/json",
                    "type": "string",
                    "example": "application/json",
                    "descriptionAsHTML": "<p>mimetype of the data property.  default=application/json</p>\n"
                  },
                  "@context": {
                    "description": "message context used for transforming message content",
                    "type": "string",
                    "format": "uri",
                    "example": "http://realestate.yodata.me/context/v1.json",
                    "descriptionAsHTML": "<p>message context used for transforming message content</p>\n"
                  }
                }
              },
              "summaryAsHTML": "<p>a website visitor has registered</p>\n",
              "descriptionAsHTML": "",
              "generatedPayloadExample": "{\n  \"topic\": \"realestate/website#register\",\n  \"data\": {\n    \"type\": \"Action\",\n    \"agent\": {\n      \"type\": \"Person\",\n      \"name\": \"Bob\",\n      \"email\": \"bob@example.com\",\n      \"telephone\": \"1+000-867-5309\",\n      \"identifier\": {\n        \"vendornameuserid\": \"abc123\"\n      }\n    },\n    \"object\": {},\n    \"instrument\": \"https://{app}.example.com/profile/card#me\"\n  },\n  \"source\": \"http://{user}.example.com/profile/card#me\",\n  \"instrument\": \"http://{supercrm}.example.com/profile/card#me\",\n  \"time\": \"2019-05-21T01:05:11Z\",\n  \"contenttype\": \"application/json\",\n  \"@context\": \"http://realestate.yodata.me/context/v1.json\"\n}"
            },
            {
              "x-title": "showingrequest",
              "x-scope": "realestate/website#",
              "summary": "a website visitor has requested a property showing",
              "payload": {
                "type": "object",
                "required": [
                  "topic",
                  "source",
                  "data"
                ],
                "properties": {
                  "topic": {
                    "description": "{domain}/{topic}#{event}",
                    "type": "string",
                    "enum": [
                      "realestate/website#showingrequest"
                    ],
                    "descriptionAsHTML": "<p>{domain}/{topic}#{event}</p>\n"
                  },
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "type": {
                        "description": "the action type",
                        "type": "string",
                        "enum": [
                          "Action"
                        ],
                        "descriptionAsHTML": "<p>the action type</p>\n"
                      },
                      "agent": {
                        "description": "a website user/visitor",
                        "type": "object",
                        "x-range": "Person",
                        "example": {
                          "type": "Person",
                          "name": "Bob",
                          "email": "bob@example.com",
                          "telephone": "1+000-867-5309",
                          "identifier": {
                            "vendornameuserid": "abc123"
                          }
                        },
                        "descriptionAsHTML": "<p>a website user/visitor</p>\n"
                      },
                      "object": {
                        "description": "The object upon which the action is carried out",
                        "type": "object",
                        "descriptionAsHTML": "<p>The object upon which the action is carried out</p>\n"
                      },
                      "instrument": {
                        "description": "thing used by the agent to perform the action, i.e. an application or website that generated the message.",
                        "example": "https://{app}.example.com/profile/card#me",
                        "descriptionAsHTML": "<p>thing used by the agent to perform the action, i.e. an application or website that generated the message.</p>\n"
                      }
                    },
                    "externalDocs": {
                      "description": "schema.org/Action",
                      "url": "https://schema.org/Action"
                    }
                  },
                  "source": {
                    "description": "the event origin, typically a user",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{user}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>the event origin, typically a user</p>\n"
                  },
                  "instrument": {
                    "description": "event producer, typically an app or service",
                    "type": "string",
                    "format": "uri",
                    "example": "http://{supercrm}.example.com/profile/card#me",
                    "descriptionAsHTML": "<p>event producer, typically an app or service</p>\n"
                  },
                  "time": {
                    "description": "when the event was published",
                    "type": "string",
                    "format": "date-time",
                    "descriptionAsHTML": "<p>when the event was published</p>\n"
                  },
                  "contenttype": {
                    "description": "mimetype of the data property.  default=application/json",
                    "type": "string",
                    "example": "application/json",
                    "descriptionAsHTML": "<p>mimetype of the data property.  default=application/json</p>\n"
                  },
                  "@context": {
                    "description": "message context used for transforming message content",
                    "type": "string",
                    "format": "uri",
                    "example": "http://realestate.yodata.me/context/v1.json",
                    "descriptionAsHTML": "<p>message context used for transforming message content</p>\n"
                  }
                }
              },
              "summaryAsHTML": "<p>a website visitor has requested a property showing</p>\n",
              "descriptionAsHTML": "",
              "generatedPayloadExample": "{\n  \"topic\": \"realestate/website#showingrequest\",\n  \"data\": {\n    \"type\": \"Action\",\n    \"agent\": {\n      \"type\": \"Person\",\n      \"name\": \"Bob\",\n      \"email\": \"bob@example.com\",\n      \"telephone\": \"1+000-867-5309\",\n      \"identifier\": {\n        \"vendornameuserid\": \"abc123\"\n      }\n    },\n    \"object\": {},\n    \"instrument\": \"https://{app}.example.com/profile/card#me\"\n  },\n  \"source\": \"http://{user}.example.com/profile/card#me\",\n  \"instrument\": \"http://{supercrm}.example.com/profile/card#me\",\n  \"time\": \"2019-05-21T01:05:11Z\",\n  \"contenttype\": \"application/json\",\n  \"@context\": \"http://realestate.yodata.me/context/v1.json\"\n}"
            }
          ],
          "summaryAsHTML": "",
          "descriptionAsHTML": ""
        }
      }
    },
    "publishTopics": {},
    "__noMessages": true,
    "__commonPrefix": ""
  },
  "target_dir": "/Users/dave/git/yodata/real-estate/www/src-content/_",
  "template": "docz",
  "templates": "template/docz",
  "package": {
    "name": "lets-integrate-real-estate"
  }
}