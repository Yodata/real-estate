$id: http://realestate.yodata.me/schema/website#saveproperty.yaml
messageId: website#saveproperty
summary: website user (agent) saved a property
externalDocs: null
headers:
  type: object
  properties:
    time:
      type: string
      format: date-time
      description: date & time the event was produced
      x-parser-schema-id: <anonymous-schema-84>
    agent:
      type: string
      format: uri
      description: the user,tema or organization who sent the event
      example: https://agentid.example.com/profile/card#me
      x-parser-schema-id: <anonymous-schema-85>
    instrument:
      type: string
      format: uri
      description: the service which created the event
      example: https://vendorid.example.com/profile/card#me
      x-parser-schema-id: <anonymous-schema-86>
    source:
      type: string
      format: uri
      description: an agent, team or organization who received a copy of the event
      example: https://companyid.example.com/profile/card#me
      x-parser-schema-id: <anonymous-schema-87>
    originalRecipient:
      type: string
      format: uri
      description: the original recipient of the event with this id
      example: https://agentid.example.com/profile/card#me
      x-parser-schema-id: <anonymous-schema-88>
    id:
      type: string
      format: uri
      description: the shared identifier of the event, akd the event id
      example: https://instrumentid.example.com/publish/xxxxxxxxxxxxx
      x-parser-schema-id: <anonymous-schema-89>
    '@id':
      type: string
      format: uri
      description: the url of your instance of the event in your inbox
      example: https://yourpod.example.com/inbox/xxxxxxxxxxxxx
      x-parser-schema-id: <anonymous-schema-90>
    topic:
      type: string
      x-parser-schema-id: <anonymous-schema-83>
      description: '"realestate/website#saveproperty"'
      enum:
        - realestate/website#saveproperty
payload:
  x-parser-schema-id: <anonymous-schema-91>
  type: object
  description: the event payload, typeically a schema.org/Action
  required:
    - type
    - agent
    - object
  properties:
    agent:
      type: object
      description: the website user who performed the action
      x-range:
        - Contact
        - Person
      example:
        type: Contact
        name: Miles Davis
        givenName: Miles
        familyName: Davis
        telephone: 067-419-1230
        email: user@example.com
        identifier:
          hsfconsumerid: 216bf670-0777-43db-9d73-c3377d280fe4
        additionalProperty:
          userPath: xxx
          workingWithAgent: true
    instrument:
      type: object
      description: website or mobile application
      x-range:
        - RealEstateWebsite
        - MobileApplication
        - Thing
      example:
        type: RealEstateWebsite
        url: http://gotham-city-realestate.example.com
    object:
      type: object
    participant:
      x-title: participant
      x-range:
        - Person
        - RealEstateAgent
        - RealEstateTeam
        - RealEstateOrganization
      description: Other co-agents with a direct or indirect interest in the action.
      type: array
      items:
        type: object
        x-parser-schema-id: <anonymous-schema-349>
      example:
        - type: Contact
          name: Bruce Wayne
          email: bruce@example.com
          identifier:
            redContact_GUID: 92d0a096-457e-4643-ace8-fa95b6bdb1c5
    type:
      type: string
      description: The item type (Linked-Data @type)
      x-parser-schema-id: <anonymous-schema-251>
  allOf:
    - allOf:
        - $id: htttp://realestate.yodata.me/schema/Action
          title: Action
          type: object
          description: >-
            An action performed by a direct agent and indirect participants upon
            a direct object. Optionally happens at a location with the help of
            an inanimate instrument. The execution of the action may produce a
            result. Specific action sub-type documentation specifies the exact
            expectation of each argument/role.
          required:
            - type
          properties:
            type:
              description: the action type
              type: string
              x-parser-schema-id: <anonymous-schema-114>
            object:
              description: item on which the action is carried out
              x-parser-schema-id: <anonymous-schema-115>
          externalDocs:
            description: schema.org/Action
            url: https://schema.org/Action
          x-parser-schema-id: Action
        - x-range: SaveAction
          properties:
            type:
              enum:
                - SaveAction
    - properties:
        type:
          enum:
            - SaveAction
        object:
          type: object
          description: the properting that was saved
          x-range: PropertyListing
          required:
            - type
            - originatingSystemName
            - originatingSystemKey
            - listingId
          example:
            type: PropertyListing
            originatingSystemName: GOTHAM-MLS
            originatingSystemKey: '12345'
            url: https://{company-website-url}/{path-to-listing}
            streetAddress: 1007 Mountain Gate Rd
            addressRegion: New Jersey
            addressLocality: Gotham City
            postalCode: '10010'
            addressCountry: USA
            listingPrice:
              type: PriceSpecification
              price: 7500000
              priceCurrency: USD

